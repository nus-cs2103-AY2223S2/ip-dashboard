[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"checkstyle {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":" * The Duke class.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * * Duke constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param filePathName The string representing the path to the file duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    public Duke(String filePathName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        TaskList tasks1;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        this.storage \u003d new Storage(filePathName);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"            tasks1 \u003d new TaskList(this.storage.loadFromFile());","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"            tasks1 \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        this.tasks \u003d tasks1;","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * User input to be passed in.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     * @param input Input string to be parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"     * @return The response string.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"            response \u003d c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"            response \u003d this.ui.showError(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"        return response;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"     * Gets the greeting message when the program is first started.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"     * @return The greeting message.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"        return this.ui.greet();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"    * Creates the localdatetime by parsing the text string.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"    *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"    * @param dateTime The string representation of the local date time.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"    * @return The LocalDateTime object being created.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"    */","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"    public static LocalDateTime createLocalDateTime(String dateTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"        assert !dateTime.equals(\"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime date;","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"            String stringWithNoTrailingWhitespaces \u003d dateTime.trim();","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"            date \u003d LocalDateTime.parse(stringWithNoTrailingWhitespaces, FORMATTER);","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"            date \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"        return date;","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"     * Function that returns the formatter for date time.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"     * @return The date time formatter used in duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"        return FORMATTER;","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":102,"-":2}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" * Command for adding deadlines.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * @param isDone If the task is done or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     * @param endDate End date of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public AddDeadlineCommand(String desc, boolean isDone, boolean isPriority, LocalDateTime endDate) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        this.deadline \u003d new Deadline(desc, isDone, isPriority, endDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        taskList.addItem(this.deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        storage.writeToFile(this.deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        return ui.addItemResponse(this.deadline, taskList.getList());","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     * Checks if this command calls to exit.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"     * @return If the command is exit or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":56}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Command for adding events.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    private final Event event;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param isDone If task is done or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * @param startDate Starting date of event.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     * @param endDate Ending date of event.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public AddEventCommand(String desc, boolean isDone, boolean isPriority,","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"                           LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        this.event \u003d new Event(desc, isDone, isPriority, startDate, endDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        taskList.addItem(this.event);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        storage.writeToFile(this.event);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        return ui.addItemResponse(this.event, taskList.getList());","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":52}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":" * Command for adding todos.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    private Todo todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * @param desc Description of todo.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param isDone If task is done or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public AddTodoCommand(String desc, boolean isDone, boolean isPriority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        this.todo \u003d new Todo(desc, isDone, isPriority);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        taskList.addItem(this.todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        storage.writeToFile(this.todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        return ui.addItemResponse(this.todo, taskList.getList());","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"     * @return If command exits or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":54}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Superclass for all the commands.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    private int targetIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    public Command() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index of the task list to be called on.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    public Command(int targetIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * Gets the target index.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @return Target index.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public int getTargetIndex() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        return this.targetIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"     * @return To be overridden.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":54}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Delete Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index of the task list to be called upon.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    public DeleteCommand(int targetIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        super(targetIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d taskList.deleteItem(super.getTargetIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        storage.deleteFileAndRedo(taskList.getList());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        return ui.deleteItemResponse(t, taskList.getList());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * @return Supposed to return false.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":49}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":" * Exit Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        return \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     * @return True.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":43}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" * Find Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    private String keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param keyword The keyword that is to be searched for.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        ArrayList\u003cTask\u003e matched \u003d taskList.findMatching(this.keyword);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        return ui.showMatchingTasks(matched);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @return False.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":51}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" * List Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"here\");","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getList();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        return ui.showList(allTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * Checks if the command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @return False.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":51}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Mark Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index to be acted upon in the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    public MarkCommand(int targetIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"        super(targetIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d taskList.markTaskInListDone(super.getTargetIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        storage.deleteFileAndRedo(taskList.getList());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        return ui.markResponse(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @return False.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":50}},{"path":"src/main/java/duke/commands/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Delete Command.","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"prioritise\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index of the task list to be called upon.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    public PriorityCommand(int targetIndex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        super(targetIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d taskList.prioritiseTask(super.getTargetIndex());","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        storage.deleteFileAndRedo(taskList.getList());","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        return ui.prioritiseResponse(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits or not.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * @return Supposed to return false.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"germainelee02":49}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Unmark Command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index to be acted on in the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    public UnmarkCommand(int targetIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        super(targetIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d taskList.markTaskInListUndone(super.getTargetIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        storage.deleteFileAndRedo(taskList.getList());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        return ui.unmarkResponse(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * @return False.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"germainelee02":49}},{"path":"src/main/java/duke/commands/UnpriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" * Delete Command.","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"public class UnpriorityCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static final String COMMAND_WORD \u003d \"unprioritise\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex Index of the task list to be called upon.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    public UnpriorityCommand(int targetIndex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        super(targetIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * Executes the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * @param taskList Respective task list.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     * @param ui Respective Ui.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param storage Respective storage.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @return String response.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d taskList.unprioritiseTask(super.getTargetIndex());","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        storage.deleteFileAndRedo(taskList.getList());","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        return ui.unprioritiseResponse(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     * Checks if command exits or not.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * @return Supposed to return false.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"germainelee02":49}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":" * DukeException class that handles exceptions that Duke has.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"     * duke.exceptions.DukeException constructor. passes on errorMessage into superclass.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * @param errorMessage The description of the duke exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":" * Dialog Box that contains the pictures and texts.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":61}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":" * Launcher.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * Main function.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     * @param args Input arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":17}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":" * Main class.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    private Duke dk \u003d new Duke(\".\" + File.separator + \"src\" + File.separator","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"            + \"main\" + File.separator + \"data\" + File.separator + \"duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    public Main() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"            controller.setDuke(dk);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"            controller.greet();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":40}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * Sets duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     * @param d The duke that is being set.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     * Greets the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public void greet() {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        String greeting \u003d duke.getGreetingMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":67}},{"path":"src/main/java/duke/taskers/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":" * Deadline class for when the Task is a deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    public static final String TASK_TYPE \u003d \"deadline\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER_FOR_STRING_ONLY \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu h.mma\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * duke.taskers.Deadline constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * @param desc Description of what the deadline is.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param isDone True if the deadline is done. false if the deadline is not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * @param end Date the deadline is due.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    public Deadline(String desc, boolean isDone, boolean isPriority, LocalDateTime end) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        super(desc, isDone, isPriority);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * Returns the string to be inserted into the duke file for storage.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @return The deadline string.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public String formatStringForFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"DEADLINE / %s / %s\", super.helpFormatString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"                this.end.format(FORMATTER));","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"     * Overriding the toString function to contain the type of task being created.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * @return String of the deadline being created.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.end.format(FORMATTER_FOR_STRING_ONLY) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":48}},{"path":"src/main/java/duke/taskers/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":" * Event class for when a Task is an event.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    public static final String TASK_TYPE \u003d \"event\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER_FOR_STRING_ONLY \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu h.mma\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * duke.taskers.Event constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     * @param desc Description of what the event is.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"     * @param isDone True if event is done, false if event is not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * @param start Starting date of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @param end Ending date of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public Event(String desc, boolean isDone, boolean isPriority,","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"                 LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        super(desc, isDone, isPriority);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * Formats string before inserting into duke storage file.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @return Formatted string to be inserted into duke storage file.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    public String formatStringForFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"EVENT / %s / %s / %s\", super.helpFormatString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"                this.start.format(FORMATTER), this.end.format(FORMATTER));","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * Returns the string of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @return The string of  the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"                + this.start.format(FORMATTER_FOR_STRING_ONLY) + \" to: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"                + this.end.format(FORMATTER_FOR_STRING_ONLY) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":52}},{"path":"src/main/java/duke/taskers/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":" * Task class.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    private final String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    private boolean isPriority;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     * Constructor for that Task class.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * @param isDone Boolean to show if the task is done or not.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    public Task(String description, boolean isDone, boolean isPriority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        this.isPriority \u003d isPriority;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     * Makes the item prioritised.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    public void prioritise() {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        this.isPriority \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    public void unprioritise() {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"        this.isPriority \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     * Gets the description from the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     * @return The description string from the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        return this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"     * Unmarks the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"     * Helps to format the string for file input.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"     * @return A partially formatted string.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"    public String helpFormatString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"        String doneStr \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"        String isPrior \u003d this.isPriority ? \"1\" : \"0\";","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"        return doneStr + \" / \" + isPrior + \" / \" + this.description.trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"    public abstract String formatStringForFile();","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"     * Formats for the task string.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"     * @return The string representing the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"        String doneStr \u003d this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"        String isPrior \u003d this.isPriority ? \"[!!!]\" : \"[ ]\";","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"        return doneStr + isPrior + this.description;","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":84}},{"path":"src/main/java/duke/taskers/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":" * The Todo class when a Task is a todo.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public class Todo extends duke.taskers.Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    public static final String TASK_TYPE \u003d \"todo\";","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     * Constructor of todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"     * @param description Description of what the todo task is.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"     * @param isDone True if todo is done, false if todo is not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    public Todo(String description, boolean isDone, boolean isPriority) {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        super(description, isDone, isPriority);","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * Formats the string before being added to the duke storage file.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     * @return The formatted string to be added to the duke storage file.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    public String formatStringForFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"TODO / %s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"                super.helpFormatString());","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * String representation of the todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     * @return Todo string.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":41}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.utils;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"import duke.commands.PriorityCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"import duke.commands.UnpriorityCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":" * Parser class to help understand the input lines.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * Gets the index that is the second argument for certain commands.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * @param str The string to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     * @return The index that we want.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException When the string does not contain a number.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    public static int returnIndexFromString(String str) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        String trimmedStr \u003d str.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        if (!trimmedStr.chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Wrong format!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"        return Integer.parseInt(trimmedStr) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"     * Prepares the Command for todo.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"     * @param args Arguments to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"     * @return The AddTodoCommand.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"    public static AddTodoCommand prepareAddTodo(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"        return new AddTodoCommand(args, false, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"     * Prepares the Command for deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"     * @param args The arguments to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"     * @return The AddDeadlineCommand.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException When the input string is in the wrong format.","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"    public static AddDeadlineCommand prepareAddDeadline(String args) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"        final String[] arr \u003d args.split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Wrong format. Correct format: \u0027deadline {do something} /by {end date time}.\u0027\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"            endDate \u003d LocalDateTime.parse(arr[1], FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"            endDate \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Datetime format is wrong. Please format as \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"        return new AddDeadlineCommand(arr[0], false, false, endDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"     * Prepares the Command for event.","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"     * @param args String to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"     * @return The AddEventCommand.","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException When the input string is not in the correct format.","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"    public static AddEventCommand prepareAddEvent(String args) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"        final String[] firstHalf \u003d args.split(\" /from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"        if (firstHalf.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Wrong format. Correct format: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"                    + \"\u0027event {some event} /from {start date time} /to {end date time}\u0027\");","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"        final String[] secondHalf \u003d firstHalf[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"        if (secondHalf.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Wrong format. Correct format: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"                    + \"\u0027event {some event} /from {start date time} /to {end date time}\u0027\");","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime startDate \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime endDate \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"            startDate \u003d LocalDateTime.parse(secondHalf[0], FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"            endDate \u003d LocalDateTime.parse(secondHalf[1], FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"            startDate \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"            endDate \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"        if (startDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"DateTime format is wrong. Please format as \u0027yyyy-MM-dd HH:mm\u0027.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"        return new AddEventCommand(firstHalf[0], false, false, startDate, endDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"     * Parses the whole user input at first.","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"     * @return The Command being called.","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException If the formatting is not right.","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Sorry, I don\u0027t understand you!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"germainelee02"},"content":"        String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"germainelee02"},"content":"        String args \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"germainelee02"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"germainelee02"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"germainelee02"},"content":"            return prepareAddTodo(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"germainelee02"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"germainelee02"},"content":"            return prepareAddDeadline(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"germainelee02"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"germainelee02"},"content":"            return prepareAddEvent(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"germainelee02"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"germainelee02"},"content":"            return new DeleteCommand(returnIndexFromString(args));","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"germainelee02"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"germainelee02"},"content":"            return new MarkCommand(returnIndexFromString(args));","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"germainelee02"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"germainelee02"},"content":"            return new UnmarkCommand(returnIndexFromString(args));","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"germainelee02"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"germainelee02"},"content":"            return new FindCommand(args.trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"germainelee02"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"germainelee02"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"germainelee02"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"germainelee02"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"germainelee02"},"content":"        case PriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-06"},{"lineNumber":176,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-02-06"},{"lineNumber":178,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"germainelee02"},"content":"            return new PriorityCommand(returnIndexFromString(args));","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"germainelee02"},"content":"        case UnpriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"germainelee02"},"content":"            if (args.equals(\"\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Argument cannot be empty\");","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":184,"author":{"gitId":"germainelee02"},"content":"            return new UnpriorityCommand(returnIndexFromString(args));","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"germainelee02"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Sorry, I don\u0027t understand you.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":190}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.utils;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":" * Storage class the stores data into a file.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    private String dirPath;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    private File dukeFile;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @param filePath The path to the duke file.","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        int lastIndexOfSlash \u003d this.filePath.lastIndexOf(File.separator);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        this.dirPath \u003d this.filePath.substring(0, lastIndexOfSlash);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        this.dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"     * The function that formats the task to store into the duke file.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @param t The task to be appended to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     * @return The string representation to be appended to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public static String taskStringFormatter(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return t.formatStringForFile();","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"     * Writes the tasks to the duke file.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"     * @param item The task that is inserted into the duke file.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"    public void writeToFile(Task item) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"            String fileInputString \u003d taskStringFormatter(item);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"            fw.write(fileInputString + System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"     * Loads all the items from the duke file.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"            Files.createDirectories(Paths.get(this.dirPath));","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"            Scanner sc \u003d new Scanner(this.dukeFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"                String[] valueArr \u003d str.split(\"/\");","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"                Task thisTask \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"                String doneOrNotStr \u003d valueArr[1].trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"                assert doneOrNotStr.equals(\"1\") || doneOrNotStr.equals(\"0\");","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"                boolean doneOrNot \u003d doneOrNotStr.equals(\"1\");","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"                boolean priorityOrNot \u003d valueArr[2].trim().equals(\"1\");","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"                String type \u003d valueArr[0].toLowerCase().trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"                switch (type) {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"                case Todo.TASK_TYPE:","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Todo(valueArr[3], doneOrNot, priorityOrNot);","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"                case Deadline.TASK_TYPE:","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime end \u003d Duke.createLocalDateTime(valueArr[4]);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Deadline(valueArr[3], doneOrNot, priorityOrNot, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"                case Event.TASK_TYPE:","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime startDate \u003d Duke.createLocalDateTime(valueArr[4]);","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime endDate \u003d Duke.createLocalDateTime(valueArr[5]);","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Event(valueArr[3], doneOrNot, priorityOrNot, startDate, endDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"                    throw new DukeException(\"Something went wrong\");","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"                loadedTasks.add(thisTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"            // do nothing","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"        return loadedTasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"     * The function that deletes the file and redoes it.","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"     * @param listOfThings Array of Tasks to be inside the new file.","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"    public void deleteFileAndRedo(ArrayList\u003cTask\u003e listOfThings) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"        if (this.dukeFile.delete()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"            for (Task item : listOfThings) {","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"                writeToFile(item);","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"            System.out.println(\"File deletion failed\");","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":129}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.utils;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":" * The task list that tracks all the items in the list.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    private ArrayList\u003cTask\u003e listOfThings;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * Constructor for task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     * @param loadedTasks","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings \u003d loadedTasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * Marks the task inside the list as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * @param index The index in the array of the task we want marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @return The task that is marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public Task markTaskInListDone(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        if (index \u003c 0 || index \u003e\u003d this.listOfThings.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Index out of bounds.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.get(index).markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * Prioritises the task in the list. Marks it as prioritised and bumps it","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * up the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex The index to be prioritised.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"     * @return The task that is prioritised.","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException Array index out of bounds.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    public Task prioritiseTask(int targetIndex) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"        if (targetIndex \u003c 0 || targetIndex \u003e\u003d this.listOfThings.size()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Index out of bounds.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d this.listOfThings.remove(targetIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"        t.prioritise();","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.add(0, t);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"        return t;","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"     * Unprioritises the task in the list. Marks it as unprioritised and pushes it","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"     * up the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"     * @param targetIndex The index to be unprioritised.","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"     * @return The task that is unprioritised.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException Array index out of bounds.","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"    public Task unprioritiseTask(int targetIndex) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"        if (targetIndex \u003c 0 || targetIndex \u003e\u003d this.listOfThings.size()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Index out of bounds.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"        Task t \u003d this.listOfThings.remove(targetIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"        t.unprioritise();","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.add(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"        return t;","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"     * Marks the task inside the list as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"     * @param index The index in the array of the task we want unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"     * @return The task we just unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"    public Task markTaskInListUndone(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"        if (index \u003c 0 || index \u003e\u003d this.listOfThings.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Index out of bounds.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.get(index).markUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"     * Adds an item to the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"     * Finds the matching duke.taskers.Task with respect to the keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"     * @param keyword The keyword string.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"     * @return An array of Tasks that contain that matching keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"    public ArrayList\u003cTask\u003e findMatching(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"        ArrayList\u003cTask\u003e matchingWords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"        String betterKeyword \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"        assert betterKeyword.chars().allMatch(Character::isLowerCase);","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"        for (Task listOfThing : this.listOfThings) {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"            if (listOfThing.getDescription().contains(betterKeyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"                matchingWords.add(listOfThing);","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"        return matchingWords;","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"     * Deletes the item from the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"     * @return The task that is deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"    public Task deleteItem(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"        if (index \u003c 0 || index \u003e\u003d this.listOfThings.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Index out of bounds.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.remove(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":133}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.utils;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":" * UI class the handles the user interaction.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    private Scanner in;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    private PrintStream out;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"     * Constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * @param in Input.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @param out Output.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     * Prints out the matching tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"     * @param arrList Array of matching tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e arrList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"        String totalString \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"        totalString +\u003d \"     Here are the matching tasks in your list:\";","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"        for (int i \u003d 0; i \u003c arrList.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"            totalString +\u003d \"\\n     \" + (i + 1) + \".\" + arrList.get(i).toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return totalString;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"     * Shows the list in the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"     * @param arrList The array of tasks to be shown.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"    public String showList(ArrayList\u003cTask\u003e arrList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"        String totalString \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"        totalString +\u003d \"     Here are the tasks in your list:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"        for (int j \u003d 0; j \u003c arrList.size(); j++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"            totalString +\u003d \"\\n     \" + (j + 1) + \".\" + arrList.get(j).toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"        return totalString;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"     * Duke greets when the program first starts.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"    public String greet() {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"        return \"     Hello! I am Duke!\\n     What can I do for you today?\";","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"     * Response when task is marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"     * @param t duke.taskers.Task to be marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"    public String markResponse(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"     Nice! I\u0027ve marked this task as done!:\\n      \" + t.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"        return str;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"     * Response when task is unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"     * @param t duke.taskers.Task to be unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"    public String unmarkResponse(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"     OK, I\u0027ve marked this task as not done yet:\\n      \"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"                + t.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"        return str;","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"     * Response when item is added.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"     * @param t duke.Task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"     * @param arr Array for the task to be added to.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"    public String addItemResponse(Task t, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"  \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"        str \u003d \"     Got it. I\u0027ve added this task:\\n    \" + str;","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"        return str + listUpdate(arr);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"     * Replies after prioritising.","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"     * @param t The task to be prioritised","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"     * @return The string response","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"    public String prioritiseResponse(Task t) {","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"  \" + t.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"        str \u003d \"     Got it. I\u0027ve prioritised this task:\\n    \" + str;","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"        return str;","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"     * Replies after unprioritising.","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"     * @param t The task to be unprioritised","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"     * @return The string response","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"    public String unprioritiseResponse(Task t) {","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"  \" + t.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"        str \u003d \"     Got it. I\u0027ve unprioritised this task:\\n    \" + str;","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"        return str;","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"germainelee02"},"content":"     * Printing out the special error when the Duke Exception is thrown.","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"germainelee02"},"content":"     * @param e The duke exception that is being thrown.","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"germainelee02"},"content":"    public String showError(DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"germainelee02"},"content":"        return \"     Duke Exception: OOPS! \" + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"germainelee02"},"content":"     * Replies when the item is deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"germainelee02"},"content":"     * @param t The task to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"germainelee02"},"content":"     * @param arr The array from the task to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"germainelee02"},"content":"    public String deleteItemResponse(Task t, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"     Noted. I\u0027m removing this task:\\n      \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"germainelee02"},"content":"        return str + listUpdate(arr);","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":152,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":153,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"germainelee02"},"content":"     * Says goodbye when the program ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"germainelee02"},"content":"    public void sayGoodBye() {","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"germainelee02"},"content":"        this.out.println(\"     Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"germainelee02"},"content":"     * Updates the list.","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"germainelee02"},"content":"     * @param arr The array that is remaining after something is done.","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"germainelee02"},"content":"     * @return The string reply.","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"germainelee02"},"content":"    public String listUpdate(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"germainelee02"},"content":"        String plural \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"germainelee02"},"content":"        if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"germainelee02"},"content":"            plural \u003d \"s\";","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"germainelee02"},"content":"        return \"\\n     Now you have \" + arr.size()","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"germainelee02"},"content":"                + \" task\" + plural + \" in the list.\";","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":175}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"germainelee02":19}},{"path":"src/test/java/duke/taskers/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    public void testStringPrint1() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        String s \u003d \"2002-02-02 12:30\";","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s, Duke.getFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        Deadline d \u003d new Deadline(\"do homework\", false, false, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[D][ ][ ]do homework (by: 2 Feb 2002 12.30pm)\", d.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public void testStringPrint2() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        String s \u003d \"2001-01-01 13:34\";","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s, Duke.getFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        Deadline d \u003d new Deadline(\"get birthday present\", true, false, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[D][X][ ]get birthday present (by: 1 Jan 2001 1.34pm)\", d.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public void testStatusTrueString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        String s \u003d \"2022-03-04 03:30\";","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s, Duke.getFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        Deadline d \u003d new Deadline(\"anything\", false, false, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"DEADLINE / 0 / 0 / anything / \" + s, d.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    public void testStatusFalseString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        String s \u003d \"2021-04-04 02:55\";","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s, Duke.getFormatter());","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"        Deadline d \u003d new Deadline(\"reunion dinner prep\", true, false, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"DEADLINE / 1 / 0 / reunion dinner prep / \" + s, d.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"germainelee02":48}},{"path":"src/test/java/duke/taskers/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"public class EventTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    public void testString1() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        String s1 \u003d \"2023-09-09 18:55\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        String s2 \u003d \"2021-09-18 19:20\";","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(s1, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s2, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        Event e \u003d new Event(\"mark show\", false, false, start, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[E][ ][ ]mark show (from: 9 Sep 2023 6.55pm to: 18 Sep 2021 7.20pm)\", e.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    public void testString2() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        String s1 \u003d \"2023-02-03 23:59\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        String s2 \u003d \"2021-09-30 00:00\";","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(s1, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s2, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        Event e \u003d new Event(\"mark show\", true, false, start, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[E][X][ ]mark show (from: 3 Feb 2023 11.59pm to: 30 Sep 2021 12.00am)\", e.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    public void testStatusTrueString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        String s1 \u003d \"2000-01-01 01:01\";","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        String s2 \u003d \"2001-02-02 02:30\";","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(s1, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s2, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        Event e \u003d new Event(\"hug loved ones\", true, false, start, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"EVENT / 1 / 0 / hug loved ones / \" + s1 + \" / \" + s2, e.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    public void testStatusFalseString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"        String s1 \u003d \"2000-01-11 22:01\";","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        String s2 \u003d \"2001-11-08 16:30\";","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(s1, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(s2, FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        Event e \u003d new Event(\"exam\", false, false, start, end);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"EVENT / 0 / 0 / exam / \" + s1 + \" / \" + s2, e.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"germainelee02":52}},{"path":"src/test/java/duke/taskers/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    public void testStringPrint1() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"        Todo t \u003d new Todo(\"complete tutorial\", false, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[T][ ][ ]complete tutorial\", t.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    public void testStringPrint2() {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"        Todo t \u003d new Todo(\"do something\", true, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"[T][X][ ]do something\", t.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    public void testStatusTrueString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"        Todo t \u003d new Todo(\"eat mooncakes\", true, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"TODO / 1 / 0 / eat mooncakes\", t.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    public void testStatusFalseString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        Todo t \u003d new Todo(\"run a marathon\", false, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"        assertEquals(\"TODO / 0 / 0 / run a marathon\", t.formatStringForFile());","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"germainelee02":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"event read book /from 2005-06-13 08:00 /to 2011-04-27 13:52","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"deadline submit book report /by 2011-05-21 11:26","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"mark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"mark 3","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"todo return book","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"mark 4","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"unmark 4","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"unmark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"deadline get chinese new year clothes /by 2017-01-05 10:32","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"event chinese new year! /from 2008-01-01 03:43 /to 2010-03-22 11:39","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"delete 3","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"deadline get productive /by 2019-06-25 12:52","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"find chinese","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"find book","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"bye","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/taskers/*.java ../src/main/java/duke/utils/*.java ../src/main/java/duke/commands/*.java","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"java -classpath ../bin/ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":3,"-":31}}]
