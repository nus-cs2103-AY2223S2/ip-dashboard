[{"path":"src/main/java/AddCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public enum AddCommands {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"    TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    EVENT;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    public static boolean contains(String str) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"        for (AddCommands ac:values()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"            if (ac.name().equals(str.toUpperCase())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"germainelee02":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"    private String end;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    public Deadline(String desc, String end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"        super(desc);","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * overriding the toString function to contain the type of task being created","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     * @return string of the deadline being created","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    // array that contains all the tasks thus far","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"    private static ArrayList\u003cTask\u003e listOfThings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"     * prints out the text with lines on top and below","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * @param text","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static void printWithLines(String text) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    \" + text);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * @return the string that updates the number of elements left in the string","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public static String listUpdate() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        String plural \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        if (listOfThings.size() \u003e 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"            plural \u003d \"s\";","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        return \"\\n       Now you have \" + listOfThings.size() + \" task\" + plural + \" in the list.\";","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param text the text containing the information of the command","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @param add type of add command use","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException when the format is wrong","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    public static void addItem(String text, AddCommands add) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        Task addedItem \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        if (add.equals(AddCommands.TODO)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"            String contents \u003d text.substring(4);","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"            if (contents.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"            addedItem \u003d new Todo(contents);","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        } else if (add.equals(AddCommands.DEADLINE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"            String contents \u003d text.substring(8);","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"            String[] arr \u003d contents.split(\"/by\");","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"            if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027deadline [do something] /by [date]\");","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"            addedItem \u003d new Deadline(arr[0], arr[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"            String contents \u003d text.substring(5);","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"            String[] arr1 \u003d contents.split(\"/from\");","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"            if (arr1.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027event [do something] /from [start date] /to [end date]\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"            String[] arr2 \u003d arr1[1].split(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"            if (arr2.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027event [do something] /from [start date] /to [end date]\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"            addedItem \u003d new Event(arr1[0], arr2[0], arr2[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"        listOfThings.add(addedItem);","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"  \" + addedItem.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"        str \u003d \" Got it. I\u0027ve added this task:\\n     \" + str;","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"        printWithLines(str + listUpdate());","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"     * iterates through the arraylist and prints out the elements inside","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"    public static void printList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"        String totalString \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"        totalString +\u003d \" Here are the tasks in your list:\";","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"        for (int i \u003d 0; i \u003c listOfThings.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"            totalString +\u003d \"\\n     \" + (i+1) + \".\" + listOfThings.get(i).toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"        printWithLines(totalString);","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"     * removes the item in the list","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"     * @param index the index of the item to be removed","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"    public static void removeItem(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" Noted. I\u0027m removing this task:\\n       \" + listOfThings.get(index).toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"        listOfThings.remove(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"        printWithLines(str + listUpdate());","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"        printWithLines(\" Hello! I\u0027m Duke!\\n     What can I do for you today?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"                String line \u003d input.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"                String upperLine \u003d line.toUpperCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"                String command \u003d upperLine.split(\" \")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"                if (StartingCommands.contains(command)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"                    StartingCommands sc \u003d StartingCommands.valueOf(command);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"                    if (sc.equals(StartingCommands.BYE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"                        if (upperLine.replaceFirst(\"BYE\", \"\").equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"                        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Did you mean to say bye? Type \u0027bye\u0027 to quit the program.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"                    } else if (sc.equals(StartingCommands.LIST)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"                        if (upperLine.replaceFirst(\"LIST\", \"\").equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"                            printList();","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"                        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"No argument in list allowed.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"                    } else if (sc.equals(StartingCommands.MARK)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"                        String[] arr \u003d upperLine.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"                        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Wrong format. Format it as \u0027mark [index]\u0027\");","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"                        if (!arr[1].chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Index should be a number\");","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"germainelee02"},"content":"                        int idx \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"germainelee02"},"content":"                        if (idx \u003e\u003d listOfThings.size() || idx \u003c 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"germainelee02"},"content":"                        Task thisTask \u003d listOfThings.get(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"germainelee02"},"content":"                        thisTask.markDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"germainelee02"},"content":"                    } else if (sc.equals(StartingCommands.UNMARK)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"germainelee02"},"content":"                        String[] arr \u003d upperLine.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"germainelee02"},"content":"                        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Wrong format. Format it as \u0027mark [index]\u0027\");","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"germainelee02"},"content":"                        if (!arr[1].chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Index should be a number\");","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"germainelee02"},"content":"                        int idx \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"germainelee02"},"content":"                        if (idx \u003e\u003d listOfThings.size() || idx \u003c 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"germainelee02"},"content":"                        Task thisTask \u003d listOfThings.get(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"germainelee02"},"content":"                        thisTask.markUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"germainelee02"},"content":"                    } else if (sc.equals(StartingCommands.DELETE)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"germainelee02"},"content":"                        String[] arr \u003d upperLine.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"germainelee02"},"content":"                        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Only one argument for delete allowed\");","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"germainelee02"},"content":"                        String idxStr \u003d arr[1];","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"germainelee02"},"content":"                        if (!idxStr.chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"Argument must be a digit\");","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"germainelee02"},"content":"                        int idx \u003d Integer.parseInt(idxStr) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"germainelee02"},"content":"                        if (idx \u003e\u003d listOfThings.size() || idx \u003c 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"germainelee02"},"content":"                            throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"germainelee02"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"germainelee02"},"content":"                        removeItem(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"germainelee02"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"germainelee02"},"content":"                else {","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"germainelee02"},"content":"                    if (AddCommands.contains(command)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"germainelee02"},"content":"                        addItem(line, AddCommands.valueOf(command));","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"germainelee02"},"content":"                    } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"I\u0027m sorry. I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":174,"author":{"gitId":"germainelee02"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"germainelee02"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"germainelee02"},"content":"                printWithLines(\" \" + e.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"germainelee02"},"content":"        printWithLines(\" Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"germainelee02":178,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"        return \"Duke Exception: OOPS! \" + super.getMessage();","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"    private String start;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    private String end;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    public Event(String desc, String start, String end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"        super(desc);","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     * returns the string of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"     * @return the string of  the event","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + this.start + \"to:\" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":20}},{"path":"src/main/java/StartingCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public enum StartingCommands {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"    BYE,","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"    LIST,","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    MARK,","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    UNMARK,","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    DELETE;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"     * checks if the enum contains the string being passed inside","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"     * @param str the string to be compared to the items in the enum","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * @return boolean if the string is a valid enum","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static boolean contains(String str) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        for (StartingCommands command:values()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"            if (command.name().equals(str.toUpperCase())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"germainelee02":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     * marks the task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" Nice! I\u0027ve marked this task as done!:\\n\" + \"       \" + this.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        Duke.printWithLines(str);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * unmarks the tast","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" + this.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        Duke.printWithLines(str);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"     * format for the task string","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"     * @return the string representing the task","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\") + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"     * string representation of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"     * @return todo string","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"event read book /from sunday /to monday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"deadline submit book report /by monday 2359","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"todo return book","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"unmark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"deadline get chinese new year clothes /by tomorrow","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"event chinese new year! /from tomorrow /to next sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"delete 3","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"deadline get productive /by friday","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"bye","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":1,"-":33}}]
