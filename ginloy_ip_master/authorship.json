[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ginloy":1,"-":40}},{"path":"launch.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"if [ ! -d \"./bin\" ]","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"    mkdir ./bin","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"if ! javac -cp ./src/main/java -Xlint:none -d ./bin ./src/main/java/Duke.java","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    exit 1","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"# run the program","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"java -cp ./bin Duke","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"import command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"import command.Error;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    private final Storage\u003cTaskList\u003e storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public Duke(String filename) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        this.storage \u003d Storage.of(TaskList.class, filename);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        this.taskList \u003d this.storage.load().match(","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"                taskList -\u003e taskList,","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                error -\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                    switch (error) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                        case FILE_NOT_FOUND:","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                            return new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                        case IO_ERROR:","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                        case CAST_ERROR:","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                            Ui.showReply(\"Error loading tasks, tasks have been reset.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                            return new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                            return new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                });","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(\"Current Tasks: \" + this.taskList.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    private void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        while (!this.isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            String input \u003d Ui.getInput();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            Command command \u003d Command.parser().parse(input).match(","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"                pr -\u003e pr.first(),","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"                msg -\u003e Error.of(msg)","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            command.execute(this.taskList, this.storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            this.isExit \u003d command.isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        } ","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        Duke duke \u003d new Duke(\"taskList.ser\");","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        duke.run();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ginloy":44,"-":5}},{"path":"src/main/java/command/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Util;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"public class Add implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private final Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task added: %s\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final String TODO_FORMAT \u003d \"todo \u0027description\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private static final String DEADLINE_FORMAT \u003d \"deadline \u0027description\u0027 /by \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private static final String EVENT_FORMAT \u003d \"event \u0027description\u0027 /from \u0027YYYY-MM-DD\u0027 /to \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private Add(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(String.format(SUCCESS, taskList.getLast()));","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e todoParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"todo\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.nextLine())","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e Util.cleanup(s))","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.retn(new Todo(s)))","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(TODO_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e deadlineParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"deadline\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strUntil(Parser.strParserIgnoreCase(\"/by\")))","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.dateParser().bind(","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"                        d -\u003e Parser.retn(new Deadline(s, d))))","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(DEADLINE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e eventParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"event\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strUntil(Parser.strParserIgnoreCase(\"/from\")))","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.dateParser().thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"                        .thenIgnore(Parser.strParserIgnoreCase(\"/to\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                        .thenIgnore(Parser.skipSpace()).bind(","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                                df -\u003e Parser.dateParser().bind(","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"                                        dt -\u003e Parser.retn(new Event(s, df, dt)))))","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(EVENT_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        return todoParser()","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                .or(deadlineParser())","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"                .or(eventParser())","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"                .map(t -\u003e new Add(t));","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":75}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"public interface Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList duke, Storage\u003cTaskList\u003e storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    default boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        return Add.parser()","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                .or(Mark.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                .or(Unmark.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                .or(List.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                .or(FindByDate.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                .or(Delete.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                .or(Exit.parser());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":23}},{"path":"src/main/java/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class Delete implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task %d has been deleted.\\nTasks remaining: %s\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"delete \u0027task number\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    private Delete(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            Ui.showReply(ERROR);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        taskList.deleteTask(this.taskNum);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(String.format(SUCCESS, this.taskNum, taskList.toString()));","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"delete\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(x -\u003e new Delete(x))","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":37}},{"path":"src/main/java/command/Error.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"public class Error implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    private final String msg;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private Error(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static Error of(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        return new Error(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":21}},{"path":"src/main/java/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class Exit implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"bye\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(s -\u003e new Exit())","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        String reply \u003d storage.save(taskList).match(","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                ok -\u003e \"Tasks saved successfully.\\nBye.\",","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                err -\u003e \"Failed to save tasks.\\nBye.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(reply);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":31}},{"path":"src/main/java/command/FindByDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"public class FindByDate implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"findbydate \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private FindByDate(LocalDate date) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(taskList.findByDate(this.date));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"findbydate\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.dateParser())","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(d -\u003e new FindByDate(d))","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":30}},{"path":"src/main/java/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class List implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"list\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(\"Tasks: \" + taskList.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"list\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(ok -\u003e new List())","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":21}},{"path":"src/main/java/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class Mark implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task has been marked.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"mark \u0027task number\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private Mark(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            Ui.showReply(ERROR);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        taskList.markTask(this.taskNum);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(SUCCESS + taskList.get(this.taskNum));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return Parser.strParserIgnoreCase(\"mark\")","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(x -\u003e new Mark(x))","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":35}},{"path":"src/main/java/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class Unmark implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task has been unmarked.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"mark \u0027task number\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private Unmark(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            Ui.showReply(ERROR);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        taskList.unmarkTask(this.taskNum);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        Ui.showReply(SUCCESS + taskList.get(this.taskNum));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"unmark\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(x -\u003e new Unmark(x))","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":36}},{"path":"src/main/java/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Either;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"public class Storage\u003cT extends Serializable\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private final static String DIR \u003d \"./data\"; ","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private final String filepath;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static enum StorageError { ","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        FILE_NOT_FOUND,","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        IO_ERROR,","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        CAST_ERROR","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    private Storage(Class\u003cT\u003e type,  String filepath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public static \u003cT extends Serializable\u003e Storage\u003cT\u003e of(Class\u003cT\u003e type, String filename) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        String filepath \u003d DIR + \u0027/\u0027 + filename;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        return new Storage\u003c\u003e(type, filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    public Either\u003cT, StorageError\u003e load() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        ObjectInputStream inputStream \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        ","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            inputStream \u003d new ObjectInputStream(new FileInputStream(filepath));","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                Object output \u003d inputStream.readObject();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"                inputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"                if (type.isInstance(output)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"                    return Either.left(type.cast(output));","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                return Either.right(StorageError.CAST_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"            } catch (ClassNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                inputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"                return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.FILE_NOT_FOUND);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    public Either\u003cString, StorageError\u003e save(T object) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        ObjectOutputStream outputStream \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        ","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            outputStream \u003d new ObjectOutputStream(new FileOutputStream(this.filepath));","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"            outputStream.writeObject(object);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            outputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"            return Either.left(\"File saved successfully.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.FILE_NOT_FOUND); ","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ginloy":72}},{"path":"src/main/java/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"        private static final int MAX_LINE_LENGTH \u003d 69;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        private static final String OUTPUT_FORMAT \u003d \"%4s %s\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"                        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        public static void showReply(String msg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                System.out.println();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                List\u003cString\u003e lst \u003d msg.lines()","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                                .flatMap(s -\u003e split(s))","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                IntStream.range(0, lst.size())","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                                .mapToObj(i -\u003e (i \u003d\u003d 0 ? String.format(OUTPUT_FORMAT, \"D:  \", lst.get(i))","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                                                : String.format(OUTPUT_FORMAT, \" \", lst.get(i))))","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                                .forEach(System.out::println);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                System.out.println();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        public static void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                System.out.println(LOGO);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        private static Stream\u003cString\u003e split(String line) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"                return line.length() \u003c MAX_LINE_LENGTH ? Stream.of(line)","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                                : Stream.concat(Stream.of(line.substring(0, MAX_LINE_LENGTH + 1)),","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                                                split(line.substring(MAX_LINE_LENGTH + 1)));","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        public static String getInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"                return scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ginloy":45}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM YY\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private Deadline(String desc, boolean done, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public Deadline(String desc, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        this(desc, false, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.end.format(DATE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        return this.end.isEqual(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public Deadline markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return new Deadline(this.desc, true, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    public Deadline markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        return new Deadline(this.desc, false, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":38}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM YY\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private Event(String desc, boolean done, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public Event(String desc, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        this(desc, false, start, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.start.format(DATE_FORMAT),","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                this.end.format(DATE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return this.start.isEqual(date) || this.end.isEqual(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public Event markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        return new Event(this.desc, true, this.start, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public Event markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new Event(this.desc, false, this.start, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":42}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    protected final String desc;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    protected final boolean done;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    ","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    protected Task(String desc, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        char mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        if (done) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[%c] %s\", mark, this.desc);","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public abstract boolean hasDate(LocalDate date);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public abstract Task markDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public abstract Task markNotDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":31}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private final List\u003cTask\u003e lst;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public int size() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"        return lst.size();","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        return this.size() \u003d\u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public String get(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        return String.format(\"\\n\\t%d) %s\", number, this.lst.get(index));","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public String getLast() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        return this.get(this.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public void markTask(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        this.lst.set(index, this.lst.get(index).markDone());","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public void unmarkTask(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        this.lst.set(index, this.lst.get(index).markNotDone());","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    public void deleteTask(int number) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        this.lst.remove(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public String findByDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        String res \u003d IntStream.range(0, this.size())","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                .filter(i -\u003e this.lst.get(i).hasDate(date))","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e String.format(\"\\n\\t%d) %s\", i + 1, this.lst.get(i)))","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        if (res.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        if (this.lst.isEmpty()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            return \"You have no tasks.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        return IntStream.range(0, this.size())","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e String.format(\"\\n\\t%d) %s\", i + 1, this.lst.get(i)))","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"ginloy":73}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"    private Todo(String desc, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        this(desc, false);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public Todo markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        return new Todo(this.desc, true);","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public Todo markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return new Todo(this.desc, false);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":33}},{"path":"src/main/java/util/Either.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public interface Either\u003cL, R\u003e {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    default public boolean isLeft() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"        return !isRight();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    default public boolean isRight() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        return !isLeft();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    };","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public L fromLeft(L def);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public R fromRight(R def);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public static \u003cL, R\u003e Either\u003cL, R\u003e left(L l) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        return new Either\u003cL, R\u003e() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            private final L left \u003d l;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Left(%s)\", this.left.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            public boolean isLeft() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"                return this.left;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                return Either.left(f.apply(this.left));","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                return f.apply(this.left).match(","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                    left -\u003e Either.left(left),","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                    right -\u003e Either.right(right)","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                );","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"                return tester.test(this.left) ? this : Either.right(failRes);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                return l.apply(this.left);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    public static \u003cL, R\u003e Either\u003cL, R\u003e right(R r) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        return new Either\u003cL, R\u003e() {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"            private final R right \u003d r;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Right(%s)\", this.right.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"            public boolean isRight() {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"                return this.right; ","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"                return Either.\u003cT, R\u003eright(this.right);","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"                return Either.\u003cT, R\u003eright(this.right);","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"                return this; ","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"                return r.apply(this.right);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ginloy":121}},{"path":"src/main/java/util/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"    private final T first;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"    private final U second;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public T first() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        return this.first;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public U second() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"        return this.second;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        return String.format(\"\u003c%s, %s\u003e\", this.first.toString(), this.second.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":24}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Parser\u003cT\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private final Function\u003cString, Result\u003cT\u003e\u003e fn;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027, \u0027\\n\u0027, \u0027\\t\u0027, \u0027\\r\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public Parser(Function\u003cString, Result\u003cT\u003e\u003e fn) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"        this.fn \u003d fn;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e parse(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        return fn.apply(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e bind(Function\u003cT, Parser\u003cU\u003e\u003e f) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003cU\u003e(inp -\u003e this.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                pr -\u003e f.apply(pr.first()).parse(pr.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                msg -\u003e Result.error(msg)));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e ignoreThen(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                pr -\u003e p.parse(pr.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                msg -\u003e Result.error(msg)));","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cT\u003e thenIgnore(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                pr -\u003e p.parse(pr.second()).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                        pr2 -\u003e Result.ok(pr.first(), pr2.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e Result.error(msg)),","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                msg -\u003e Result.error(msg)));","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e or(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"                msg -\u003e p.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"                        msg2 -\u003e Result.error(msg + \u0027\\n\u0027 + msg2))));","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e many() {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                return parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                            Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                            return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                        },","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e Result.ok(Stream.\u003cT\u003eof(), inp));","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp).map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e manyUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"                return p.parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e Result.ok(Stream.of(), pr.second()),","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"                        e -\u003e parse(inp).match(","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"                                pr -\u003e {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"                                    Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"                                    return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"                                },","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"                                msg -\u003e Result.error(String.format(\"Ending Flag: %s\", e))));","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp).map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e some() {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        return many().satisfy(s -\u003e !s.isEmpty()).overrideMsg(\"Less than 1 parse successful.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e someUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"        return manyUntil(p).satisfy(s -\u003e !s.isEmpty());","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp).overrideMsg(errorMsg));","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e satisfy(Predicate\u003cT\u003e condition) {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp).filter(condition));","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"            return this.parse(inp).map(f);","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e take(int amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"            if (inp.length() \u003c amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"Input size too low.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.substring(0, amt), inp.substring(amt));","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"    public static \u003cU\u003e Parser\u003cString\u003e takeWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"                .satisfy(pred)","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"                .map(l -\u003e Util.listToString(l));","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e takeTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"                .satisfy(pred.negate())","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"                .map(l -\u003e Util.listToString(l));","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skip(int amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"        return take(amt).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"    public static \u003cU\u003e Parser\u003cVoid\u003e skipWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"        return takeWhile(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"        return takeTill(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"    public static \u003cU\u003e Parser\u003cU\u003e retn(U res) {","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e Result.ok(res, inp));","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e anyChar() {","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"End of input.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.charAt(0), inp.substring(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e charParser(char c) {","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"        return anyChar().satisfy(x -\u003e x \u003d\u003d c).overrideMsg(String.format(\"Character %s not found.\", c));","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParser(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfy(s -\u003e s.equals(str))","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(String.format(\"String %s not found.\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParserIgnoreCase(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfy(s -\u003e s.toLowerCase().equals(str.toLowerCase()))","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(String.format(\"String %s not found. (case ignored)\", str));","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextStr() {","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"        return skipSpace()","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(takeTill(c -\u003e WS.contains(c)));","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"    public static \u003cT\u003e Parser\u003cString\u003e strUntil(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"                .someUntil(p)","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"                .map(l -\u003e Util.listToString(l))","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e Util.cleanup(s));","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"                .someUntil(endOfLine())","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e Util.listToString(s))","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"End of input.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e positiveDecimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"        return takeWhile(c -\u003e c \u003e\u003d 48 \u0026\u0026 c \u003c 58)","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e Integer.parseInt(s))","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse unsigned integer.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e negativeDecimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"        return charParser(\u0027-\u0027)","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(positiveDecimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"                .map(x -\u003e -x)","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse signed integer.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e decimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"        return positiveDecimal()","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"                .or(negativeDecimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse integer\");","lastModifiedDate":"2023-01-30"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipSpace() {","lastModifiedDate":"2023-01-28"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"        return skipWhile(c -\u003e WS.contains(c));","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e endOfLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp);","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"            if (inp.charAt(0) \u003d\u003d \u0027\\n\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp.substring(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"            return Result.error(\"Not EOL yet.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cLocalDate\u003e dateParser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e take(10).parse(inp).match(","lastModifiedDate":"2023-02-01"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"                pr -\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"                    try {","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"                        return Result.ok(LocalDate.parse(pr.first()), pr.second());","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"                    } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"                        return Result.error(\"Failed to parse date.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"                },","lastModifiedDate":"2023-01-31"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"                msg -\u003e Result.error(msg)));","lastModifiedDate":"2023-01-31"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ginloy":234}},{"path":"src/main/java/util/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public class Result\u003cT\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    private final Either\u003cPair\u003cT, String\u003e, String\u003e result;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    private Result(Either\u003cPair\u003cT, String\u003e, String\u003e result) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"        this.result \u003d result;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e ok(T res, String remain) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.left(new Pair\u003c\u003e(res, remain)));","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e error(String error) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.right(error));","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e filter(Predicate\u003cT\u003e condition) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                pr -\u003e condition.test(pr.first()) ? this","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                        : error(String.format(\"%s failed to satisfy condition.\", pr.first())),","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                errorMsg -\u003e this);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                pr -\u003e this,","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                msg -\u003e error(errorMsg));","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public boolean isOk() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return this.result.isLeft();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public boolean isError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return this.result.isRight();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    // public T getRes() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    // return this.result.fromLeft(null).first();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    // }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    // public String getRemainInp() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    // return this.result.fromLeft(null).second();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    // }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    // public String getErrorMsg() {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    // return this.result.fromRight(null);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    // }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e U match(Function\u003c? super Pair\u003c? extends T, ? extends String\u003e, ? extends U\u003e okFunction,","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            Function\u003c? super String, ? extends U\u003e errorFunction) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        return this.result.match(okFunction, errorFunction);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Result\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(this.result.map(pr -\u003e new Pair\u003c\u003e(f.apply(pr.first()), pr.second())));","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        return this.result.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ginloy":67}},{"path":"src/main/java/util/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public class Util {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027, \u0027\\n\u0027, \u0027\\t\u0027, \u0027\\r\u0027);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private Util() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static List\u003cString\u003e splitWhitespace(String str) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        for (int i \u003d 0; i \u003c str.length(); ++i) {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"            char c \u003d str.charAt(i);","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"            if (WS.contains(c) \u0026\u0026 !temp.isEmpty()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                res.add(temp);","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                temp \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            } else if (!WS.contains(c)) {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                temp +\u003d c;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        if (!temp.isEmpty()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            res.add(temp);","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    public static String cleanup(String str) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int start \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int end \u003d str.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        while (start \u003c str.length() \u0026\u0026 WS.contains(str.charAt(start))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            ++start;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        while (end \u003e 0 \u0026\u0026 WS.contains(str.charAt(end - 1))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            --end;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        if (start \u003e end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            return \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        return str.substring(start, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    public static String listToString(List\u003cCharacter\u003e s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        return s.stream().map(c -\u003e c.toString()).reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":50}},{"path":"src/test/java/util/EitherTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"public class EitherTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"    ","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":5}},{"path":"src/test/java/util/UtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class UtilTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public void listToStringNormalString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"Hello\",","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"                Util.listToString(List.of(\u0027H\u0027, \u0027e\u0027, \u0027l\u0027, \u0027l\u0027, \u0027o\u0027)));","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public void listToStringEmptyList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"\", Util.listToString(List.of()));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public void cleanupEmptyString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"\", Util.cleanup(\"\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public void cleanupStringWithSpaceBothEnds() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"  rawr  \");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"rawr\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    void cleanupStringWithSpaceFront() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"  test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"test\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void cleanupStringWithSpaceBack() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"test   \");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"test\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    public void splitWsNormalString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"My name is Ginloy.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"My\", \"name\", \"is\", \"Ginloy.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    public void splitWsEmptyString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    public void splitWsNoWs() {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"test.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"test.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    public void splitWsWsAtEdges() {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"  test  \");","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"todo meal prep","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"mark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"unmark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"deadline ","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"fasd","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"sdafsad","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"sadfasd","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"unmark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"deadline eat me /by","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"event /from tt /to","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"event party /from /to","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"deadline /by time","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"delete 3","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":40}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ginloy":3,"-":35}}]
