[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"# D","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"## Simple Task Tracking ChatBot","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"![Welcome](docs/Ui.png)","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"### User Guide in `docs/` folder","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ginloy":4,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"checkstyle {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    mainClassName \u003d \"app.Main\"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    archiveBaseName \u003d \"App\"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ginloy":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"### Task Tracking","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"Add different categories of tasks to the list. ","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"Tasks can be marked, unmarked, or deleted.","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"Find tasks by keywords or date.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"ChatBot will remember tasks next time app is opened.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"![](Tasks.png)","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"### Sort Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"Tasks with date info can be sorted in ascending order. Tasks without date info will remain in the same spot.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"![](Sort.png)","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"### `help` ","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"Prompts bot to provide more info about commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"`help \u0027command\u0027`","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"`help all`","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"`help`","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"![](Help.png)","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"All details and formats for other commands could be obtained using `help`","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"## Installation","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"1. Download latest jar file from [here](https://github.com/ginloy/ip/releases).","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"2. Put jar file in empty directory.","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"3. Double click jar file.","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"### If double clicking doesn\u0027t work:","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"- `cd` into directory with jar file on terminal","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"- type and enter `java -jar \"filename\".jar`","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ginloy":27,"-":20}},{"path":"launch.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"if [ ! -d \"./bin\" ]","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"    mkdir ./bin","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"if ! javac -cp ./src/main/java -Xlint:none -d ./bin ./src/main/java/Duke.java","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    exit 1","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"# run the program","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"java -cp ./bin Duke","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":17}},{"path":"src/main/java/app/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package app;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.gui.Gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":" * Main class","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public class Main {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"     * Main function","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        Gui.launch(args);","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ginloy":14,"-":1}},{"path":"src/main/java/command/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import task.Event;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import task.Todo;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Util;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Manages the adding of tasks into the taskList","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class Add implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task added: %s\";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final String TODO_FORMAT \u003d \"todo \u0027description\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG_TODO \u003d \"Adds todo task to the list.\\nFormat: \" + TODO_FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private static final String DEADLINE_FORMAT \u003d \"deadline \u0027description\u0027 /by \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG_DEADLINE \u003d \"Adds deadline task to the list.\\nFormat: \" + DEADLINE_FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private static final String EVENT_FORMAT \u003d \"event \u0027description\u0027 /from \u0027YYYY-MM-DD\u0027 /to \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG_EVENT \u003d \"Adds event task to the list.\\nFormat: \" + EVENT_FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    private final Task task;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private Add(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse todo tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @see Todo","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e todoParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"todo\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.nextLine())","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                .map(Util::cleanup)","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.retn(new Todo(s)))","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(TODO_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse deadline tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @see Deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e deadlineParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"deadline\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strUntil(Parser.strParserIgnoreCase(\"/by\")))","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.dateParser()","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                        .bind(d -\u003e Parser.retn(new Deadline(s, d))))","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(DEADLINE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse event tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     * @see Event","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    private static Parser\u003cTask\u003e eventParser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"event\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strUntil(Parser.strParserIgnoreCase(\"/from\")))","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"                .\u003cTask\u003ebind(s -\u003e Parser.dateParser()","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"                        .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"                        .thenIgnore(Parser.strParserIgnoreCase(\"/to\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"                        .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"                        .bind(df -\u003e Parser.dateParser()","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"                                .bind(dt -\u003e Parser.retn(new Event(s, df, dt)))))","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(EVENT_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the add command.","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     * @see Add","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"        return todoParser().or(deadlineParser())","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"                .or(eventParser())","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"                .map(Add::new);","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"        ui.showReply(String.format(SUCCESS, taskList.getLast()));","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":101}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Interface for how a command will interact with data and output.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public interface Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    String ERROR \u003d \"Sorry I did not understand. \"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"            + \"Type [help \u0027command\u0027] to get help for command or \"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"            + \"[help all] to see list of commands available.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse input string and turn it into a command.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        return Add.parser()","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                .or(Mark.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                .or(Unmark.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                .or(List.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                .or(FindByDate.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                .or(Delete.parser())","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                .or(Exit.parser())","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                .or(Find.parser())","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                .or(Sort.parser())","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .or(Help.parser())","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(ERROR);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * Interacts with inputs to produce required side effects.","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * @param taskList TaskList to be modified.","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * @param storage  Tells storage to store/extract data if command requires it.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * @see TaskList","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @see Storage","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * @return true if app.Duke should exit after executing this command.","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    default boolean isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":50}},{"path":"src/main/java/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages deletion of tasks from tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Delete implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task %d has been deleted.\\nTasks remaining: %s\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"delete \u0027task number\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Deletes task from list.\\nFormat: \" + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private Delete(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the delete command.","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"delete\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(Delete::new)","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"            ui.showError(ERROR);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        taskList.deleteTask(this.taskNum);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        ui.showReply(String.format(SUCCESS, this.taskNum, taskList));","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":48}},{"path":"src/main/java/command/Error.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Manages the error message to be shown in the UI.","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"public class Error implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private final String msg;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private Error(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @param msg Error message to be shown.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * @return Error command.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public static Error of(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        return new Error(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        ui.showError(msg);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":31}},{"path":"src/main/java/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages bye command","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Exit implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Saves all tasks and exits app.\\nFormat: bye\";","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the bye command.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"bye\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(s -\u003e new Exit())","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return true;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        String reply \u003d storage.save(taskList).match(","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                ok -\u003e \"Tasks saved successfully.\\nBye.\",","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                err -\u003e \"Failed to save tasks.\\nBye.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        ui.showReply(reply);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":44}},{"path":"src/main/java/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * Manages finding tasks via keywords","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public class Find implements Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"find \u0027keywords\u0027\";","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Finds tasks from list with matching keywords.\\nFormat: \"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"            + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Tasks found: %s\";","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    final List\u003cString\u003e keywords;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private Find(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses find command input","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"find\"))","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.nextStr()","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                        .many())","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .map(lst -\u003e lst.stream()","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"                        .map(String::toLowerCase)","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                        .collect(Collectors.toList()))","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(Find::new)","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        ui.showReply(String.format(SUCCESS, taskList.findByKeywords(this.keywords)));","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"ginloy":47}},{"path":"src/main/java/command/FindByDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * Manages finding tasks by date","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"public class FindByDate implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"findbydate \u0027YYYY-MM-DD\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Finds tasks from list with matching date.\\nFormat: \"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"            + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private FindByDate(LocalDate date) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the findbydate command.","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"findbydate\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.dateParser())","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(FindByDate::new)","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        ui.showReply(taskList.findByDate(this.date));","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":43}},{"path":"src/main/java/command/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import util.Util;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" * Manages help command","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"public class Help implements Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String COMMAND_LST \u003d","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"            Util.join(\"\\n\",","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"                    \"todo\",","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                    \"deadline\",","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                    \"event\",","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                    \"delete\",","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"                    \"find\",","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                    \"findbydate\",","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                    \"list\",","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                    \"mark\",","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                    \"unmark\",","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"                    \"sort\",","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                    \"bye\");","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Command does not exist.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private final String command;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    private Help(String command) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses help command.","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"help\"))","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.nextStr().or(Parser.strParser(\"\")))","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                .map(Help::new);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        switch (command) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Add.HELP_MSG_TODO);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Add.HELP_MSG_DEADLINE);","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        case \"event\":","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Add.HELP_MSG_EVENT);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Delete.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Exit.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        case \"find\":","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Find.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        case \"findbydate\":","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"            ui.showReply(FindByDate.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        case \"list\":","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"            ui.showReply(List.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Mark.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Unmark.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"        case \"sort\":","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"            ui.showReply(Sort.HELP_MSG);","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        case \"all\":","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        case \"\":","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"            ui.showReply(COMMAND_LST);","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"            ui.showError(ERROR);","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ginloy":91}},{"path":"src/main/java/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages listing of tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class List implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"list\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Lists all tasks.\\nFormat: \" + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the bye command.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"list\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(ok -\u003e new List())","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        ui.showReply(\"Tasks: \" + taskList.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":32}},{"path":"src/main/java/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages mark command","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Mark implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task has been marked.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"mark \u0027task number\u0027\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Mark specific task as done.\\nFormat: \" + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private Mark(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the mark command.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        return Parser.strParserIgnoreCase(\"mark\")","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(Mark::new)","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            ui.showError(ERROR);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        taskList.markTask(this.taskNum);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        ui.showReply(SUCCESS + taskList.get(this.taskNum));","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":46}},{"path":"src/main/java/command/Sort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages sorting of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Sort implements Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public static final String FORMAT \u003d \"sort\";","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static final String ERROR \u003d \"You have no tasks to sort.\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final String SUCCESS \u003d \"Tasks sorted by date. Current tasks: %s\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Sorts tasks by date. Tasks with no dates remain in the same position.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"            + \"Format: \" + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private Sort() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse sort command.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"sort\"))","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(str -\u003e new Sort())","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            ui.showError(ERROR);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        taskList.sort();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        ui.showReply(String.format(SUCCESS, taskList));","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ginloy":42}},{"path":"src/main/java/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import parsing.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * Manages unmarking tasks in the taskList.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"public class Unmark implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final String ERROR \u003d \"Task not in list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private static final String SUCCESS \u003d \"Task has been unmarked.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private static final String FORMAT \u003d \"unmark \u0027task number\u0027\";","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String HELP_MSG \u003d \"Unmark specific task.\\nFormat: \" + FORMAT;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private Unmark(int taskNum) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse the unmark command.","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCommand\u003e parser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        return Parser.skipSpace()","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.strParserIgnoreCase(\"unmark\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                .thenIgnore(Parser.skipSpace())","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(Parser.decimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                .\u003cCommand\u003emap(Unmark::new)","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        if (this.taskNum \u003c 1 || this.taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"            ui.showError(ERROR);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        taskList.unmarkTask(this.taskNum);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        ui.showReply(SUCCESS + taskList.get(this.taskNum));","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":48}},{"path":"src/main/java/io/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import command.Command;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import command.Error;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import util.Pair;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * User interface (Command line).","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class Cli implements Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final int MAX_LINE_LENGTH \u003d 69;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private static final String OUTPUT_FORMAT \u003d \"%4s %s\";","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private static final String LOGO \u003d \"██████╗\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + \"██╔══██╗\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + \"██║  ██║\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + \"██║  ██║\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + \"██████╔╝\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + \"╚═════╝\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + \"___                                                            \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + \" |  _.  _ |    _|_ ._ _.  _ |  o ._   _     _ |_   _. _|_ |_   _ _|_\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + \" | (_| _\u003e |\u003c    |_ | (_| (_ |\u003c | | | (_|   (_ | | (_|  |_ |_) (_) |_\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            + \"                                      _|                             \";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    private final Storage\u003cTaskList\u003e storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * @param storage taskList storage object","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    private Cli(Storage\u003cTaskList\u003e storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        this.taskList \u003d this.storage.load()","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                        lst -\u003e lst,","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"                        error -\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                            switch (error) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"                            case IO_ERROR:","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"                            case CAST_ERROR:","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"                                showReply(\"Error loading tasks, tasks have been reset.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"                                return new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                            default:","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                                return new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                            }","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                        });","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        this.showReply(String.format(\"Current tasks: %s\", this.taskList.toString()));","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"     * Entry point into app","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    public static void launch(String... args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        Cli cli \u003d new Cli(Storage.of(TaskList.class, \"taskList.ser\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        cli.run();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * Splits large strings into lines below a max line length.","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     * @param line string to be split.","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"     * @return Stream of lines.","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    private static Stream\u003cString\u003e split(String line) {","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"        return line.length() \u003c\u003d MAX_LINE_LENGTH ? Stream.of(line) : Stream.concat(","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"                Stream.of(line.substring(0, MAX_LINE_LENGTH + 1)),","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"                split(line.substring(MAX_LINE_LENGTH + 1)));","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    public void showReply(String msg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e lst \u003d msg.lines()","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                .flatMap(Cli::split)","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"        IntStream.range(0, lst.size())","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e (i \u003d\u003d 0 ? String.format(OUTPUT_FORMAT, \"D:  \", lst.get(i))","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"                        : String.format(OUTPUT_FORMAT,","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                        \" \", lst.get(i))))","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                .forEach(System.out::println);","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"        System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        showReply(errorMsg);","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"     * Main run loop","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"    private void run() {","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"            Command command \u003d Command.parser()","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"                    .parse(userInput)","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"                    .match(Pair::first, Error::of);","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"            command.execute(taskList, this, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"ginloy":119}},{"path":"src/main/java/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import util.Either;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Manages storing of objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Object to be stored.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" * @see Serializable","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"public class Storage\u003cT extends Serializable\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private static final String DIR \u003d \"./data\";","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final String filepath;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private Storage(Class\u003cT\u003e type, String filepath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        // Checks if directory exists and if not, creates it.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        File directory \u003d new File(DIR);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            directory.mkdir();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e      Type of object to store.","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @param type     class object for type parameter.","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * @param filename filename for storage file.","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * @return Storage object.","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public static \u003cT extends Serializable\u003e Storage\u003cT\u003e of(Class\u003cT\u003e type, String filename) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        String filepath \u003d DIR + \u0027/\u0027 + filename;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        return new Storage\u003c\u003e(type, filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return Either the object or a StorageError.","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @see Either","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     * @see StorageError","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public Either\u003cT, StorageError\u003e load() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        ObjectInputStream inputStream;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            inputStream \u003d new ObjectInputStream(new FileInputStream(filepath));","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                Object output \u003d inputStream.readObject();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                inputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"                if (type.isInstance(output)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                    return Either.left(type.cast(output));","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"                return Either.right(StorageError.CAST_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            } catch (ClassNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"                inputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.FILE_NOT_FOUND);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * Saves object into the file.","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * @param object Object to be saved.","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     * @return Either a success message or a StorageError.","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * @see Either","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * @see StorageError","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    public Either\u003cString, StorageError\u003e save(T object) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        ObjectOutputStream outputStream;","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"            outputStream \u003d new ObjectOutputStream(new FileOutputStream(this.filepath));","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"            outputStream.writeObject(object);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"            outputStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            return Either.left(\"File saved successfully.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.FILE_NOT_FOUND);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            return Either.right(StorageError.IO_ERROR);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"     * Errors that could occur during storage","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"    public enum StorageError {","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"        FILE_NOT_FOUND,","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"        IO_ERROR,","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"        CAST_ERROR","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ginloy":108}},{"path":"src/main/java/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":" * User Interface","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public interface Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"     * Manages formatting and output of reply to the ui","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"     * @param reply Message to reply with","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    void showReply(String reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"     * Manages formatting and output of error messages to the ui","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    void showError(String errorMsg);","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ginloy":20}},{"path":"src/main/java/io/gui/DialogueBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":" * Dialogue box for user inputs and duke outputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"public class DialogueBox extends HBox {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    private Label dialogue;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @param text display text","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @param img  Image of dialogue source.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    private DialogueBox(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogueBox.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        dialogue.setText(text);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        HBox.setHgrow(dialogue, Priority.ALWAYS);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        double radius \u003d displayPicture.getFitHeight() / 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        Circle circleClip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     * Get dialogue box with formatting specialized for user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * @param text Text content of dialogue","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     * @param img  User profile image","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    public static DialogueBox getUserDialogue(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return new DialogueBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"     * Get dialogue box with formatting specialized for chatbot reply.","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"     * @param text Text content of dialogue","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     * @param img  Chatbot profile image","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    public static DialogueBox getBotDialogue(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        var db \u003d new DialogueBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        db.flip();","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        db.dialogue.getStyleClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                .add(\"label-bot\");","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"        return db;","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    public static DialogueBox getErrorDialogue(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"        var db \u003d getBotDialogue(text, img);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        db.dialogue.getStyleClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"                .add(\"label-error\");","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"        return db;","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * Reverses all children of dialogue box so that it is","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     * aligned to the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"        Insets previousPadding \u003d getPadding();","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"        setPadding(new Insets(previousPadding.getTop(),","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"                previousPadding.getLeft(),","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                previousPadding.getBottom(),","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                previousPadding.getRight()));","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"        setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ginloy":97}},{"path":"src/main/java/io/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import io.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Graphical User Interface","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private static final double MIN_HEIGHT \u003d 300.0;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final double MIN_WIDTH \u003d 300.0;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private Storage\u003cTaskList\u003e storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private FXMLLoader fxmlLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * Entry point into app","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public static void launch(String... args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * Actions to perform when Application is launched.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * Loads children, formats scene and sets the MainWindow gui property.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            fxmlLoader \u003d new FXMLLoader(this.getClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                    .getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            AnchorPane mainWindow \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController()","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"                    .setGui(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"            stage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"            stage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"            stage.setTitle(\"D\");","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"            stage.getIcons().add(fxmlLoader.\u003cMainWindow\u003egetController().getDImg());","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            stage.show();","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            loadTasks();","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController()","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                    .showReply(String.format(\"Current tasks: %s\", taskList.toString()));","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            // Check if properties were initialized.","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            assert (storage !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            assert (taskList !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            assert (fxmlLoader !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * Attempts to save tasks if window is closed.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    public void stop() {","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"     * Attempts to load previous tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    private void loadTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        storage \u003d Storage.of(TaskList.class, \"taskList.ser\");","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"        taskList \u003d storage.load()","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"                .match(lst -\u003e lst, error -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"                    switch (error) {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"                    case IO_ERROR:","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"                    case CAST_ERROR:","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"                        fxmlLoader.\u003cMainWindow\u003egetController()","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"                                .showReply(\"Error loading tasks, tasks have been reset\");","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"                        return new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"                    default:","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                        return new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                    }","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"                });","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"     * @return Task list of app","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"    TaskList getTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"     * @return Storage class of app","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"    Storage\u003cTaskList\u003e getStorage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        return this.storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ginloy":105}},{"path":"src/main/java/io/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package io.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import command.Command;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import command.Error;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import io.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import util.Pair;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"public class MainWindow extends AnchorPane implements Ui {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private static final String WELCOME \u003d \"Hello. My name is D.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + \"I am a simple task manager, designed to serve humanity.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private final Image userImg \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            .getResourceAsStream(\"/images/default_user_pic.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Image dImg \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            .getResourceAsStream(\"/images/cyborg_girl.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    private VBox dialogueContainer;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    private Gui gui;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * Setup of tasks and storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        // Check that child nodes were initialized","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        assert (scrollPane !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        assert (dialogueContainer !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        assert (userInput !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        assert (sendButton !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        dialogueContainer.heightProperty()","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                .addListener(observable -\u003e scrollPane.setVvalue(scrollPane.getVmax()));","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        showReply(WELCOME);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     * Obtains user input, creates appropriate command which is executed.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * User input added to the dialogueContainer as a DialogueBox.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        // Checks that gui properties have been successfully initialized.","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        assert (gui !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        assert (gui.getTaskList() !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        assert (gui.getStorage() !\u003d null);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        if (userText.isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        dialogueContainer.getChildren()","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                .addAll(DialogueBox.getUserDialogue(userText, userImg));","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"        Command command \u003d Command.parser()","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"                .parse(userText)","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"                .match(Pair::first, Error::of);","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        command.execute(gui.getTaskList(), this, gui.getStorage());","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"        if (command.isExit()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}}","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    public void showReply(String msg) {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        dialogueContainer.getChildren()","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                .addAll(DialogueBox.getBotDialogue(msg, dImg));","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"        dialogueContainer.getChildren()","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                .addAll(DialogueBox.getErrorDialogue(errorMsg, dImg));","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"     * Sets gui property which allows MainWindow to modify gui properties.","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"     * @param gui Gui object","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    void setGui(Gui gui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"     * @return Image used by D","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"    Image getDImg() {","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"        return dImg;","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ginloy":111}},{"path":"src/main/java/parsing/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package parsing;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Util;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Wrapper around a function from a string input to a","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * parsed object plus remaining input, or if parsing fails,","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * an error message.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Type of parsed object","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" * @see Result","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"public class Parser\u003cT\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027, \u0027\\n\u0027, \u0027\\t\u0027, \u0027\\r\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final Function\u003cString, Result\u003cT\u003e\u003e fn;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @param fn Function from string to Result","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * @see Result","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public Parser(Function\u003cString, Result\u003cT\u003e\u003e fn) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        this.fn \u003d fn;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @param amt Number of characters to parse","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of a certain number of characters","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e take(int amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            if (inp.length() \u003c amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"Input size too low.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.substring(0, amt), inp.substring(amt));","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that characters must satisfy","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of characters that satisfy a condition","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e takeWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(pred, \"\")","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                .map(Util::listToString);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"     * @param pred Ending condition","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of characters until an ending condition is satisfied","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e takeTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(pred.negate(), \"\")","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"                .map(Util::listToString);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     * @param amt Number of characters to skip","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over input. Result must be ignored.","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skip(int amt) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        return take(amt).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that characters must satisfy","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over characters while characters satisfy condition.","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        return takeWhile(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that ends the parsing","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over characters until condition is satisfied.","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"        return takeTill(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"     * @param res Result to be returned","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"     * @return Parser that returns a fixed value, regardless of input.","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"     *         Does not consume input.","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"    public static \u003cU\u003e Parser\u003cU\u003e retn(U res) {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e Result.ok(res, inp));","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse any character","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e anyChar() {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"End of input.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.charAt(0), inp.substring(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"     * @param c Character to be parsed","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a certain character","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e charParser(char c) {","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"        return anyChar().satisfyOrElse(x -\u003e x \u003d\u003d c, String.format(\"Character %s not found.\", c));","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"     * @param str String to be parsed","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a certain string","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParser(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfyOrElse(s -\u003e s.equals(str), String.format(\"String %s not found.\", str));","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"     * @return strParser except case is ignored","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"     * @see #strParser(String)","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParserIgnoreCase(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfyOrElse(s -\u003e s.equalsIgnoreCase(str),","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"                String.format(\"String %s not found. (case ignored).\", str));","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses the next string without spaces","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextStr() {","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"        return skipSpace()","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(takeTill(WS::contains))","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(s -\u003e !s.isEmpty(), \"No next string found.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"     * @param p Parser to compare against","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string before another parse succeeds","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"    public static \u003cT\u003e Parser\u003cString\u003e strUntil(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"                .someUntil(p)","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"                .map(Util::listToString)","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"                .map(Util::cleanup);","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses until EOL","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"                .someUntil(endOfLine())","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"                .map(Util::listToString)","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"End of input.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses an unsigned integer","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e positiveDecimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"        return takeWhile(c -\u003e c \u003e\u003d 48 \u0026\u0026 c \u003c 58)","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(s -\u003e !s.isEmpty(), \"No parsable integers.\")","lastModifiedDate":"2023-02-14"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"                .map(Integer::parseInt)","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse unsigned integer.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a negative integer","lastModifiedDate":"2023-02-05"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e negativeDecimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"        return charParser(\u0027-\u0027)","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(positiveDecimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"                .map(x -\u003e -x)","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse signed integer.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a signed integer","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e decimal() {","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"        return positiveDecimal()","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"                .or(negativeDecimal())","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse integer\");","lastModifiedDate":"2023-01-30"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over spaces.","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-05"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipSpace() {","lastModifiedDate":"2023-01-28"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"        return skipWhile(WS::contains);","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"     * @return Parser that succeeds if input is at EOL.","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-05"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e endOfLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp);","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"            if (inp.charAt(0) \u003d\u003d \u0027\\n\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp.substring(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"            return Result.error(\"Not EOL yet.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse dates","lastModifiedDate":"2023-02-05"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cLocalDate\u003e dateParser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e take(10).parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"                            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"                                return Result.ok(LocalDate.parse(pr.first()), pr.second());","lastModifiedDate":"2023-01-31"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"                            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"                                return Result.error(\"Failed to parse date.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"                            }","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"ginloy"},"content":"                        },","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-15"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"     * Parses input string","lastModifiedDate":"2023-02-16"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"     * @param input Input string","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"     * @return Result of parse","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e parse(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"        return fn.apply(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":247,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":248,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"     * Chain multiple parsers together, while keeping","lastModifiedDate":"2023-02-16"},{"lineNumber":251,"author":{"gitId":"ginloy"},"content":"     * parse result within scope","lastModifiedDate":"2023-02-16"},{"lineNumber":252,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":253,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of new object to parse","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"     * @param f   Function from original parse result to new parser","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-16"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e bind(Function\u003cT, Parser\u003cU\u003e\u003e f) {","lastModifiedDate":"2023-02-16"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e f.apply(pr.first())","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"ginloy"},"content":"                                .parse(pr.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-16"},{"lineNumber":263,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":264,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":265,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":266,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, ignoring result from first parse.","lastModifiedDate":"2023-02-16"},{"lineNumber":267,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":268,"author":{"gitId":"ginloy"},"content":"     * @param p Next parser in chain","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-16"},{"lineNumber":270,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":271,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e ignoreThen(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-16"},{"lineNumber":272,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":273,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":274,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e p.parse(pr.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":275,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-16"},{"lineNumber":276,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":277,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":278,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":279,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, ignoring result form second parse.","lastModifiedDate":"2023-02-16"},{"lineNumber":280,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":281,"author":{"gitId":"ginloy"},"content":"     * @param p Next Parser in chain","lastModifiedDate":"2023-02-16"},{"lineNumber":282,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-16"},{"lineNumber":283,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cT\u003e thenIgnore(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-16"},{"lineNumber":285,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":286,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":287,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e p.parse(pr.second())","lastModifiedDate":"2023-02-16"},{"lineNumber":288,"author":{"gitId":"ginloy"},"content":"                                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":289,"author":{"gitId":"ginloy"},"content":"                                        pr2 -\u003e Result.ok(pr.first(), pr2.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":290,"author":{"gitId":"ginloy"},"content":"                                        Result::error),","lastModifiedDate":"2023-02-16"},{"lineNumber":291,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-16"},{"lineNumber":292,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":293,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":294,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":295,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, result will be whichever parser succeeds first.","lastModifiedDate":"2023-02-16"},{"lineNumber":296,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":297,"author":{"gitId":"ginloy"},"content":"     * @param p Other parser to try","lastModifiedDate":"2023-02-16"},{"lineNumber":298,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-16"},{"lineNumber":299,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":300,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e or(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-02-16"},{"lineNumber":301,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":302,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":303,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":304,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e p.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":305,"author":{"gitId":"ginloy"},"content":"                                .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":306,"author":{"gitId":"ginloy"},"content":"                                        pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":307,"author":{"gitId":"ginloy"},"content":"                                        msg2 -\u003e Result.error(msg + \u0027\\n\u0027 + msg2))));","lastModifiedDate":"2023-02-16"},{"lineNumber":308,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":309,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":310,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":311,"author":{"gitId":"ginloy"},"content":"     * Tries this parser as many times as possible","lastModifiedDate":"2023-02-16"},{"lineNumber":312,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":313,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a list of the original type.","lastModifiedDate":"2023-02-16"},{"lineNumber":314,"author":{"gitId":"ginloy"},"content":"     *         Empty list returned if no parse succeeds.","lastModifiedDate":"2023-02-16"},{"lineNumber":315,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":316,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e many() {","lastModifiedDate":"2023-02-16"},{"lineNumber":317,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-02-16"},{"lineNumber":318,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":319,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-02-16"},{"lineNumber":320,"author":{"gitId":"ginloy"},"content":"                return parse(inp).match(","lastModifiedDate":"2023-02-16"},{"lineNumber":321,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":322,"author":{"gitId":"ginloy"},"content":"                            Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-02-16"},{"lineNumber":323,"author":{"gitId":"ginloy"},"content":"                            return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-02-16"},{"lineNumber":324,"author":{"gitId":"ginloy"},"content":"                        },","lastModifiedDate":"2023-02-16"},{"lineNumber":325,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e Result.ok(Stream.of(), inp));","lastModifiedDate":"2023-02-16"},{"lineNumber":326,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":327,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-16"},{"lineNumber":328,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":329,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-16"},{"lineNumber":330,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":331,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":332,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":333,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":334,"author":{"gitId":"ginloy"},"content":"     * Many until another parser succeeds. Other parser result ignored.","lastModifiedDate":"2023-02-16"},{"lineNumber":335,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":336,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of other parser","lastModifiedDate":"2023-02-16"},{"lineNumber":337,"author":{"gitId":"ginloy"},"content":"     * @param p   Other parser that ends attempt to parse","lastModifiedDate":"2023-02-16"},{"lineNumber":338,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-16"},{"lineNumber":339,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":340,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e manyUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-16"},{"lineNumber":341,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-02-16"},{"lineNumber":342,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":343,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-02-16"},{"lineNumber":344,"author":{"gitId":"ginloy"},"content":"                return p.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":345,"author":{"gitId":"ginloy"},"content":"                        .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":346,"author":{"gitId":"ginloy"},"content":"                                pr -\u003e Result.ok(Stream.of(), pr.second()),","lastModifiedDate":"2023-02-16"},{"lineNumber":347,"author":{"gitId":"ginloy"},"content":"                                e -\u003e parse(inp).match(","lastModifiedDate":"2023-02-16"},{"lineNumber":348,"author":{"gitId":"ginloy"},"content":"                                        pr -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":349,"author":{"gitId":"ginloy"},"content":"                                            Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-02-16"},{"lineNumber":350,"author":{"gitId":"ginloy"},"content":"                                            return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-02-16"},{"lineNumber":351,"author":{"gitId":"ginloy"},"content":"                                        },","lastModifiedDate":"2023-02-16"},{"lineNumber":352,"author":{"gitId":"ginloy"},"content":"                                        msg -\u003e Result.error(String.format(\"Ending Flag: %s\", e))));","lastModifiedDate":"2023-02-16"},{"lineNumber":353,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":354,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-16"},{"lineNumber":355,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":356,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-16"},{"lineNumber":357,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":358,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":359,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":360,"author":{"gitId":"ginloy"},"content":"     * Same as many except that result must have at least 1 element.","lastModifiedDate":"2023-02-16"},{"lineNumber":361,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":362,"author":{"gitId":"ginloy"},"content":"     * @see #many()","lastModifiedDate":"2023-02-16"},{"lineNumber":363,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":364,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e some() {","lastModifiedDate":"2023-02-16"},{"lineNumber":365,"author":{"gitId":"ginloy"},"content":"        return many().satisfyOrElse(s -\u003e !s.isEmpty(), \"some: Less than 1 parse successful.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":366,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":367,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":368,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":369,"author":{"gitId":"ginloy"},"content":"     * Same as manyUntil except that result must have at least 1 element.","lastModifiedDate":"2023-02-16"},{"lineNumber":370,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":371,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of other parser","lastModifiedDate":"2023-02-16"},{"lineNumber":372,"author":{"gitId":"ginloy"},"content":"     * @param p   Other parser that ends attempt to parse","lastModifiedDate":"2023-02-16"},{"lineNumber":373,"author":{"gitId":"ginloy"},"content":"     * @see #manyUntil(Parser)","lastModifiedDate":"2023-02-16"},{"lineNumber":374,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":375,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e someUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-16"},{"lineNumber":376,"author":{"gitId":"ginloy"},"content":"        return manyUntil(p).satisfyOrElse(s -\u003e !s.isEmpty(), \"some: Less than 1 parse successful.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":377,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":378,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":379,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":380,"author":{"gitId":"ginloy"},"content":"     * Replaces error message if result is an error.","lastModifiedDate":"2023-02-16"},{"lineNumber":381,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":382,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg Message to replace with","lastModifiedDate":"2023-02-16"},{"lineNumber":383,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":384,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-02-16"},{"lineNumber":385,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":386,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(errorMsg));","lastModifiedDate":"2023-02-16"},{"lineNumber":387,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":388,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":389,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":390,"author":{"gitId":"ginloy"},"content":"     * Parser fails if result does not satisfy condition","lastModifiedDate":"2023-02-16"},{"lineNumber":391,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":392,"author":{"gitId":"ginloy"},"content":"     * @see Result#filterOrElse(Predicate, String)","lastModifiedDate":"2023-02-16"},{"lineNumber":393,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":394,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e satisfyOrElse(Predicate\u003cT\u003e condition, String failMsg) {","lastModifiedDate":"2023-02-16"},{"lineNumber":395,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":396,"author":{"gitId":"ginloy"},"content":"                .filterOrElse(condition, failMsg));","lastModifiedDate":"2023-02-16"},{"lineNumber":397,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":398,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":399,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":400,"author":{"gitId":"ginloy"},"content":"     * Maps parser to new parser of new type","lastModifiedDate":"2023-02-16"},{"lineNumber":401,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":402,"author":{"gitId":"ginloy"},"content":"     * @see Result#map(Function)","lastModifiedDate":"2023-02-16"},{"lineNumber":403,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":404,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-02-16"},{"lineNumber":405,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-16"},{"lineNumber":406,"author":{"gitId":"ginloy"},"content":"                .map(f));","lastModifiedDate":"2023-02-16"},{"lineNumber":407,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":408,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ginloy":408}},{"path":"src/main/java/parsing/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package parsing;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import util.Either;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import util.Pair;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" * Result of a parse by a Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Wrapped type","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * @see Parser","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class Result\u003cT\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    private final Either\u003cPair\u003cT, String\u003e, String\u003e result;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private Result(Either\u003cPair\u003cT, String\u003e, String\u003e result) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        this.result \u003d result;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @param res    Parse result","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @param remain Remaining input after parse","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * @return Ok result","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e ok(T res, String remain) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.left(new Pair\u003c\u003e(res, remain)));","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param error Error message","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return Error result","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e error(String error) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.right(error));","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * Checks if wrapped object satisfies condition","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * @param condition Condition to test","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg  Error message if condition unsatisfied","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     * @return New filtered result","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e filterOrElse(Predicate\u003c? super T\u003e condition, String errorMsg) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(this.result.filterOrElse(pr -\u003e condition.test(pr.first()), errorMsg));","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * Overrides message if this is Error","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg Message to override with","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * @return New result","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                pr -\u003e this,","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                msg -\u003e error(errorMsg));","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     * @return true if this is ok","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    public boolean isOk() {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        return this.result.isLeft();","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * @return true if this is error","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    public boolean isError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        return this.result.isRight();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"     * Converts result to new object based on 2 mapping functions","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e           Type of new object","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * @param okFunction    Function to convert pair of (parsedObject, remainingInput)","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     *                      to new object if this is ok","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * @param errorFunction Function to convert error message to new object if this","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     *                      is error","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     * @return New object","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e U match(Function\u003c? super Pair\u003c? extends T, ? extends String\u003e, ? extends U\u003e okFunction,","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                       Function\u003c? super String, ? extends U\u003e errorFunction) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"        return this.result.match(okFunction, errorFunction);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"     * Maps parsed object to new wrapped object if this is ok","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"     * @param f Mapping function","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"     * @return New result","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Result\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(this.result.map(pr -\u003e new Pair\u003c\u003e(f.apply(pr.first()), pr.second())));","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"                pr -\u003e String.format(\"Ok(%s, %s)\", pr.first(), pr.second()),","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"                msg -\u003e String.format(\"Error(%s)\", msg));","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ginloy":107}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Deadline task","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     * @param desc Task description","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @param done Task completed info","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @param end  Task due date","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * @see LocalDate","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private Deadline(String desc, boolean done, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * @param desc Description of task","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * @param end  Due date of task","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     * @see LocalDate","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    public Deadline(String desc, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        this(desc, false, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.end.format(DATE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return this.end.isEqual(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public Deadline markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        return new Deadline(this.desc, true, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    public Deadline markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        return new Deadline(this.desc, false, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        return Optional.of(this.end);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":71}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Event task","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * @param desc  Task description","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @param done  Task completed info","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * @param start Task start date","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @param end   Task end date","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private Event(String desc, boolean done, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public Event(String desc, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        this(desc, false, start, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.start.format(DATE_FORMAT),","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                this.end.format(DATE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        return this.start.isEqual(date) || this.end.isEqual(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public Event markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new Event(this.desc, true, this.start, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    public Event markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        return new Event(this.desc, false, this.start, this.end);","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return Optional.of(this.start);","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":60}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Util;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * General Task abstract class","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * @see Serializable","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    protected final String desc;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    protected final boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @param desc   Task description","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @param isDone Task completed info","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    protected Task(String desc, boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        char mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        return String.format(\"[%c] %s\", mark, this.desc);","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * @return true if task has date, false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * @see LocalDate","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    public abstract boolean hasDate(LocalDate date);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * Checks if task description contains keywords","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @param keywords List of keywords","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public boolean hasKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        Set\u003cString\u003e descKeywords \u003d Util.splitWhitespace(desc)","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                .stream()","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                .collect(Collectors.toCollection(HashSet::new));","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        return keywords.stream()","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                .map(descKeywords::contains)","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                .reduce(true, (a, b) -\u003e a \u0026\u0026 b);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     * Get date of task. If task has no date,","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * Empty optional returned.","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    public abstract Optional\u003cLocalDate\u003e getDate();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @return new task that is marked as done.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    public abstract Task markDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"     * @return new task that is marked as not done.","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"    public abstract Task markNotDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":79}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import util.Pair;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * List of tasks with formatting methods","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * @see Serializable","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" * @see Task","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private final List\u003cTask\u003e lst;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * Empty tasklist","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @return Number of tasks in list","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    public int size() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        return lst.size();","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * @return true if tasklist is empty, false otherwise","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        return this.size() \u003d\u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     * @param number Number of task in the list","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * @return Task description with formatting applied","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    public String get(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        return String.format(\"\\n\\t%d) %s\", number, this.lst.get(index));","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     * @return Description of last task in list with formatting applied","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    public String getLast() {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        return this.get(this.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"     * Adds task to list","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     * Marks task as completed","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @param number Number of task in the list","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    public void markTask(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"        this.lst.set(index, this.lst.get(index)","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"                .markDone());","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * Unmarks task","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * @param number Number of task in the list","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    public void unmarkTask(int number) {","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"        this.lst.set(index, this.lst.get(index)","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                .markNotDone());","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"     * Deletes task","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"     * @param number Number of task in the list","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"    public void deleteTask(int number) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"        this.lst.remove(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"     * Finds tasks in the list via date","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"     * @param date Date to compare with","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"     * @return Task descriptions with formatting applied","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"     * @see LocalDate","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    public String findByDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"        String res \u003d IntStream.range(0, this.size())","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"                .filter(i -\u003e this.lst.get(i)","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"                        .hasDate(date))","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e String.format(\"\\n\\t%d) %s\", i + 1, this.lst.get(i)))","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"        if (res.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"     * Finds tasks in list via keywords","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"     * @param keywords List of keywords","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"     * @return Task descriptions with formatting applied","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"    public String findByKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"        String res \u003d IntStream.range(0, this.size())","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"                .filter(i -\u003e this.lst.get(i)","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"                        .hasKeywords(keywords))","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e String.format(\"\\n\\t%d) %s\", i + 1, this.lst.get(i)))","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"        if (res.isEmpty()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"     * Sorts all tasks with dates, leaving other tasks in the same position","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    public void sort() {","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"        List\u003cInteger\u003e indexesToSort \u003d IntStream.range(0, this.size())","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e new Pair\u003c\u003e(i, this.lst.get(i)))","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"                .filter(pr -\u003e pr.second()","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"                        .getDate()","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"                        .isPresent())","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"                .map(Pair::first)","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"        List\u003cTask\u003e sortedFilteredTasks \u003d this.lst.stream()","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"                .filter(task -\u003e task.getDate()","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"                        .isPresent())","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"                .sorted(Comparator.comparing(a -\u003e a.getDate()","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"                        .get()))","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"        IntStream.range(0, indexesToSort.size())","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e new Pair\u003c\u003e(indexesToSort.get(i), sortedFilteredTasks.get(i)))","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"                .forEach(pr -\u003e this.lst.set(pr.first(), pr.second()));","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"        if (this.lst.isEmpty()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"            return \"You have no tasks.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"        return IntStream.range(0, this.size())","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"                .mapToObj(i -\u003e String.format(\"\\n\\t%d) %s\", i + 1, this.lst.get(i)))","lastModifiedDate":"2023-01-15"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"ginloy":172}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" * Todo task","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private Todo(String desc, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"     * @param desc Task description","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        this(desc, false);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}}","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public boolean hasDate(LocalDate date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public Todo markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new Todo(this.desc, true);","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    public Todo markNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        return new Todo(this.desc, false);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        return Optional.empty();","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":57}},{"path":"src/main/java/util/Either.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" * Algebraic sum data type.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Can be either a valid left result","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * or an invalid right error.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * @param \u003cL\u003e Type of valid result","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * @param \u003cR\u003e Type of invalid result","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public interface Either\u003cL, R\u003e {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     * Construct left object","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @param \u003cL\u003e Type of left object","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * @param \u003cR\u003e Type of right object","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @param l   Wrapped object","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * @return Left(l)","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    static \u003cL, R\u003e Either\u003cL, R\u003e left(L l) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        return new Either\u003c\u003e() {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            private final L left \u003d l;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Left(%s)\",","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                        this.left.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            public boolean isLeft() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                return this.left;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"                return Either.left(f.apply(this.left));","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                return f.apply(this.left)","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                        .match(","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"                                Either::left,","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                                Either::right);","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                return tester.test(this.left) ? this : Either.right(failRes);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                return l.apply(this.left);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"     * Construct right object","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"     * @param \u003cL\u003e Type of left object","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"     * @param \u003cR\u003e Type of right object","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * @param r   Inner object","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     * @return Right(r)","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"    static \u003cL, R\u003e Either\u003cL, R\u003e right(R r) {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        return new Either\u003c\u003e() {","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"            private final R right \u003d r;","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Right(%s)\",","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                        this.right.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            public boolean isRight() {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"                return this.right;","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"                return Either.right(this.right);","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"                return Either.right(this.right);","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"                return this;","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"                return r.apply(this.right);","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"    default boolean isLeft() {","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"        return !isRight();","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"    default boolean isRight() {","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"        return !isLeft();","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"     * Extracts the left value if it is left, otherwise returns default value","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"     * @param def Default value","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    L fromLeft(L def);","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"     * Extracts the right value if it is right, otherwise returns default value","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"     * @param def Default value","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"    R fromRight(R def);","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"     * If isLeft, maps the function over the wrapped object, otherwise returns","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     * original right object","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e Left type of resultant Either","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"     * @param f   Mapping function","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"     * @return new Either object","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f);","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     * Allows user to chain multiple methods that return Either objects.","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"     * If right object is returned within the chain, chaining will stop and right","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"     * object will be","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"     * returned at the end.","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e left type of resultant Either","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"     * @param f   Function that accepts left object and returns another Either","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"     *            object","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f);","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"     * Checks if left object satisfies predicate","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"     * @param tester  Predicate to test left object","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"     * @param failRes Object if left object fails predicate","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"     * @return Left if original left object satisfies predicate, Right(failRes) if","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"     *         not and the original right object if Either is originally right","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes);","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"     * Matches the appropriate function to produce new output","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e Type of the new object","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"     * @param l   Function to match if this is left","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"     * @param r   Function to match if this is right","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"     * @return new object","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r);","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ginloy":191}},{"path":"src/main/java/util/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":" * Pair of 2 objects","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Type of first object","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" * @param \u003cU\u003e Type of second object","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private final T first;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private final U second;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"     * @param first  First object","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"     * @param second Second object","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @return First object","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public T first() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        return this.first;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @return Second object","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    public U second() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        return this.second;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        return String.format(\"\u003c%s, %s\u003e\",","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                this.first.toString(),","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                this.second.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":42}},{"path":"src/main/java/util/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Static utility functions not tied to any class","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"public class Util {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027,","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"            \u0027\\n\u0027,","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"            \u0027\\t\u0027,","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"            \u0027\\r\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private Util() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * Splits string into list of strings by whitespace.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @param str String to be split","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @return List of strings","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public static List\u003cString\u003e splitWhitespace(String str) {","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        for (int i \u003d 0; i \u003c str.length(); ++i) {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            char c \u003d str.charAt(i);","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            if (WS.contains(c) \u0026\u0026 !temp.isEmpty()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                res.add(temp);","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                temp \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            } else if (!WS.contains(c)) {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                temp +\u003d c;","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (!temp.isEmpty()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            res.add(temp);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * Clears whitespace at beginning and end of string","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * @param str String to process","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @return Resultant string","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    public static String cleanup(String str) {","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        int start \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        int end \u003d str.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        while (start \u003c str.length() \u0026\u0026 WS.contains(str.charAt(start))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            ++start;","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        while (end \u003e 0 \u0026\u0026 WS.contains(str.charAt(end - 1))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            --end;","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        if (start \u003e end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"            return \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        return str.substring(start,","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                end);","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     * Fuses list of characters into a single string","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * @param s List of characters","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @return Resultant string","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    public static String listToString(List\u003cCharacter\u003e s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        return s.stream()","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"                .map(Object::toString)","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * Joins strings using a specified delimiter","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     * @param delimiter Delimiter string","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * @param lines     Strings to join","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     * @return Joined string","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"    public static String join(String delimiter, String... lines) {","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        return Stream.of(lines)","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + delimiter + b)","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"                .substring(delimiter.length());","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"ginloy":92}},{"path":"src/main/resources/view/DialogueBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" fillHeight\u003d\"false\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" spacing\u003d\"20.0\" stylesheets\u003d\"@styles.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        \u003cLabel fx:id\u003d\"dialogue\" style\u003d\"-fx-border-color: silver; -fx-border-radius: 10; -fx-border-insets: -10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"                \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"20.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ginloy":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"            prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" stylesheets\u003d\"@styles.css\"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"            xmlns\u003d\"http://javafx.com/javafx/19\" fx:controller\u003d\"io.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"                   onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"323.0\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"77.0\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"326.0\" layoutY\u003d\"558.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"\u0026gt;\u0026gt;\u0026gt;\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" prefHeight\u003d\"573.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"                    AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                \u003cVBox fx:id\u003d\"dialogueContainer\"/\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ginloy":30}},{"path":"src/test/java/command/FindTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class FindTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    public void testParserNormal() {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        String actual \u003d Find.parser().parse(\"find book\").match(","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"                pr -\u003e ((Find) pr.first()).keywords.toString(),","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"                error -\u003e \"oops\");","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        String expected \u003d Set.of(\"book\").toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"ginloy":18}},{"path":"src/test/java/util/EitherTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class EitherTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    public void testLeft() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"        var left \u003d Either.left(\"test\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        var right \u003d Either.right(\"oops\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        assertTrue(left.isLeft());","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        assertFalse(right.isLeft());","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public void testRight() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        var left \u003d Either.left(69);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        var right \u003d Either.right(\"error\");","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        assertFalse(left.isRight());","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        assertTrue(right.isRight());","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public void mapLeft() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        var left \u003d Either.\u003cInteger, String\u003eleft(69);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        assertEquals(Either.left(70).toString(), left.map(x -\u003e x + 1).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public void mapRight() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        var right \u003d Either.\u003cInteger, String\u003eright(\"Random error\");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        assertEquals(Either.right(\"Random error\").toString(), right.map(x -\u003e x + 1).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    public void flatMapLeftSuccess() {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        var actual \u003d Either.left(20).flatMap(x -\u003e Either.left(x + 20));","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        var expected \u003d Either.left(40);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    public void flatMapLeftFail() {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        var actual \u003d Either.left(20).flatMap(x -\u003e Either.right(\"Error\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        var expected \u003d Either.right(\"Error\");","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    public void flatMapRightSuccess() {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        var actual \u003d Either.right(\"original error\").flatMap(x -\u003e Either.left(20));","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        var expected \u003d Either.right(\"original error\");","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    public void flatMapRightFail() {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        var actual \u003d Either.right(\"original error\").flatMap(x -\u003e Either.right(\"new error\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        var expected \u003d Either.right(\"original error\");","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":66}},{"path":"src/test/java/util/UtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class UtilTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public void listToStringNormalString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"Hello\",","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"                Util.listToString(List.of(\u0027H\u0027, \u0027e\u0027, \u0027l\u0027, \u0027l\u0027, \u0027o\u0027)));","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public void listToStringEmptyList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"\", Util.listToString(List.of()));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public void cleanupEmptyString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"\", Util.cleanup(\"\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public void cleanupStringWithSpaceBothEnds() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"  rawr  \");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"rawr\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    void cleanupStringWithSpaceFront() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"  test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"test\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public void cleanupStringWithSpaceBack() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        String output \u003d Util.cleanup(\"test   \");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        assertEquals(\"test\", output);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    public void splitWsNormalString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"My name is Ginloy.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"My\", \"name\", \"is\", \"Ginloy.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    public void splitWsEmptyString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    public void splitWsNoWs() {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"test.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"test.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    public void splitWsWsAtEdges() {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e actual \u003d Util.splitWhitespace(\"  test  \");","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e expected \u003d List.of(\"test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ginloy":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"todo meal prep","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"mark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"unmark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"deadline ","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"fasd","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"sdafsad","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"sadfasd","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"unmark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"deadline eat me /by","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"event /from tt /to","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"event party /from /to","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"deadline /by time","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"delete 3","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ginloy":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"java -classpath ..\\bin app.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ginloy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ginloy":3,"-":35}}]
