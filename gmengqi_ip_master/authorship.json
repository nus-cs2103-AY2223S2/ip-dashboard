[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a \")) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"gmengqi":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    public static void splitCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"        String[] arr;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"        if (command.contains(\"/\")) {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"            String[] temp2;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"            String[] temp \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            if (temp[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"                temp2 \u003d temp[1].split(\"/\", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"            }  else {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"                temp2 \u003d temp[1].split(\"/\");","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"            temp2[1] \u003d temp2[1].replace(\"/\", \"-\");","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"            arr \u003d new String[temp.length + temp2.length -1];","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"            arr[0] \u003d temp[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"            System.arraycopy(temp2, 0, arr, temp.length-1, temp2.length);","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"            arr \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"        echo(arr);","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"    public static void echo(String[] arr) throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"        switch (arr[0]) {","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"                sc.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"            case \"list\":","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                int counter \u003d 1;","lastModifiedDate":"2023-01-12"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"                for (Task element : tasks) {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"                    System.out.println(counter + \".\" + element.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    counter++;","lastModifiedDate":"2023-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-01-12"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"                int taskNum \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"                Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                task.markAsIncomplete();","lastModifiedDate":"2023-01-12"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"                int numTask \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"                Task markedTask \u003d tasks.get(numTask - 1);","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"                markedTask.markAsDone();","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"                int getTaskNum \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"                Task taskDesc \u003d tasks.get(getTaskNum - 1);","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"                tasks.remove(getTaskNum - 1);","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"gmengqi"},"content":"                System.out.println(\" Noted. I\u0027ve removed this task:\\n  \" + taskDesc + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\" );","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"                    Todo toDo \u003d new Todo(arr[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"                    tasks.add(toDo);","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + toDo + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"                    throw new DukeException(arr[0]);","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"                } finally {","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"gmengqi"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"gmengqi"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"gmengqi"},"content":"                    LocalDateTime dueDate \u003d LocalDateTime.parse(arr[2].substring(3), formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"gmengqi"},"content":"                    Deadline deadline \u003d new Deadline(arr[1], dueDate);","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"gmengqi"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"gmengqi"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + deadline + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"gmengqi"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"                    throw new DukeException(arr[0]);","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"gmengqi"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"                    System.out.println(\"ERROR!! Please key in valid date format: dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"                } finally {","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"gmengqi"},"content":"            case \"event\":","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"gmengqi"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"gmengqi"},"content":"                    Event event \u003d new Event(arr[1], arr[2].substring(5), arr[3].substring(3));","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + event + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"                    throw new DukeException(arr[0]);","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"                } finally {","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"                    break;","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"            default:","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"                } finally {","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"gmengqi"},"content":"                    break;","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void exit() {","lastModifiedDate":"2023-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        greet();","lastModifiedDate":"2023-01-12"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-12"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"                splitCommand(sc.nextLine());","lastModifiedDate":"2023-01-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-12"},{"lineNumber":130,"author":{"gitId":"gmengqi"},"content":"            exit();","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"gmengqi"},"content":"        } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"gmengqi"},"content":"            Storage storer \u003d new Storage();","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"gmengqi"},"content":"            storer.store(tasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gmengqi":100,"-":36}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"        System.out.println(\"☹ OOPS!!! The description of a \" + message + \" cannot be empty.\");","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"gmengqi":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"    String from;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"    String to;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"gmengqi":15}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"//check if the file and directory exists","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"// write to file","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"public class Storage {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"    public void store(ArrayList\u003cTask\u003e task) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"        Path dataDir \u003d Paths.get(\"ip/data\");","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"        Path dataFile \u003d Paths.get(\"ip/data/Duke.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"        // directory does not exists","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"        if (! Files.isDirectory(dataDir)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"            Files.createDirectory(dataDir);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"            Files.createFile(dataFile);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"            // if directory exist, check if duke.txt exists","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"            if (! Files.exists(dataFile)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"                Files.createFile(dataFile);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"        FileWriter writer \u003d new FileWriter(\"ip/data/Duke.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        int length \u003d task.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"        String finalTasks \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        while (i \u003c length) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"            String taskInfo \u003d task.get(i).toString().replace(\"[ ]\", \" | 0 |\").replace(\"[X]\", \"| 1 |\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"            taskInfo \u003d taskInfo.replace(\"[\", \"\").replace(\"]\", \"\");","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"            finalTasks \u003d finalTasks + taskInfo + \"\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"            i++;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"        writer.write(finalTasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"        writer.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"gmengqi":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2023-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2023-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n [\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2023-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"Ok, I\u0027ve marked this as not done yet:\\n [\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"}],"authorContributionMap":{"gmengqi":5,"-":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"    public Todo (String description ) {","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"gmengqi":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"todo borrow book","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"gmengqi":4}}]
