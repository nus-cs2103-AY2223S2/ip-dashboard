[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":" * Duke command line tool that helps to track tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    /** Whether the duke is running or has been commanded to stop running */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    /** Storage to load and save tasks on disk */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /** Task list to store tasks in memory */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    /** Ui to handle user interface */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a duke.","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    public Duke() {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"        isRunning \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"            tasks.load(storage.getScanner());","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"            ui.printStorageLoadFailure();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     * Entry point to start and run duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        duke.run();","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"     * Runs the duke.","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"    public void run() {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        isRunning \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        ui.printPrompt();","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        while (isRunning) {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"                execute(Parser.parse(ui.readCommand()));","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"                ui.printBadCommandMessage(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        exit();","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"     * Executes a command.","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to execute.","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"    private void execute(Command command) {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"        case NO_OP:","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"        case BYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"            isRunning \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"        case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"            // FallThrough","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"            // FallThrough","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"        case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"            ui.printAddTaskSuccessMessage(tasks.execute(command));","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"        case LIST:","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"            System.out.println(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"        case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"            Task task \u003d tasks.execute(command);","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"            ui.printMarkTaskSuccessMessage(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"        case DELETE:","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"            ui.printDeleteTaskSuccessMessage(tasks.execute(command));","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"     * Cleans up the duke to exit.","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"     * Save tasks to the disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"    private void exit() {","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"            tasks.save(storage.getFileWriter());","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"            ui.printStorageSaveFailure();","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"        ui.printFareWell();","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"        ui.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gohyongjing":117,"-":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * Command containing its arguments and their values.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * Types of command arguments.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    public enum Argument {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        BYE,","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        BY,","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        EVENT,","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        FROM,","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        TO,","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        LIST,","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        MARK,","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        DELETE,","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        NO_OP","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    /** Arguments of the command */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    private final LinkedHashMap\u003cArgument, String\u003e arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new command.","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     * The first param is the name of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     * @param arguments Arguments of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    public Command(LinkedHashMap\u003cArgument, String\u003e arguments) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     * Returns the name of command.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     * @return Name of command.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"    public Argument getName() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"        return arguments.entrySet().iterator().next().getKey();","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"     * Returns the value of an argument.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to retrieve value of.","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     * @return Value of the argument.","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"    public String getArgumentValue(Argument arg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        return arguments.get(arg);","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     * Parses the argument string and returns the argument enumeration.","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     * Input string is case-insensitive and empty string represents","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     * the NO-OP command.","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument in string.","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"     * @return Argument in enumeration.","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException if input string is not a valid enum.","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"    public static Argument parseArgument(String arg)","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"        if (arg.equals(\"\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"            return Argument.NO_OP;","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"            return Argument.valueOf(arg.toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Command \"","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"                    + arg + \" not recognised\");","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"     * Checks if the command contains an argument key.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"     * @return true if the argument exists, false otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"    public boolean hasArg(Argument arg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        return arguments.containsKey(arg);","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a specific argument in command has a value.","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * @return true if argument exists and value is a non-empty string,","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"    public boolean hasValue(Argument arg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"        return arguments.containsKey(arg) \u0026\u0026 !arguments.get(arg).equals(\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":101}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" * Parser to parse strings into commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     * Parses a string into a command.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input string to parse into command.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"     * @return Parsed command.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    public static Command parse(String input)","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e arguments \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        for (String term : input.strip().split(\" /\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"            int firstSpace \u003d term.indexOf(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"            Command.Argument argument \u003d Command.parseArgument((firstSpace \u003d\u003d -1","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"                    ? term","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"                    : term.substring(0, firstSpace)));","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"            String value \u003d (firstSpace \u003d\u003d -1","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"                    ? \"\"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"                    : term.substring(firstSpace + 1));","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"            arguments.put(argument, value);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        Command command \u003d new Command(arguments);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        checkArguments(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     * Checks if the Command\u0027s arguments are valid.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException if arguments are invalid.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    private static void checkArguments(Command command)","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        ArrayList\u003cCommand.Argument\u003e requiredArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        ArrayList\u003cCommand.Argument\u003e requiredValues \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"            case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"                // Fallthrough","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"            case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"            case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.MARK);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"            case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.DELETE);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"            case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.TODO);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"                requiredArgs.add(Command.Argument.BY);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.DEADLINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.BY);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"            case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"                requiredArgs.add(Command.Argument.FROM);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"                requiredArgs.add(Command.Argument.TO);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.EVENT);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.FROM);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"                requiredValues.add(Command.Argument.TO);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"        checkHasArgs(command, requiredArgs);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        checkHasValues(command, requiredValues);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a command contains all the specified arguments.","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"     * @param args Required arguments.","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException if any of the required arguments are not in","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"     *                                  the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"    private static void checkHasArgs(Command command, ArrayList\u003cCommand.Argument\u003e args)","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"        for (Command.Argument arg : args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"            if (!command.hasArg(arg)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"                throw new IllegalArgumentException(\"Command \" + command.getName()","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"                        + \" requires argument \" + arg + \" but was not given\");","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a command\u0027s arguments contain non-empty values.","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     * @param args Arguments with required values.","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException if any of the arguments  are not in the","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     *                                  command or have empty values.","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    private static void checkHasValues(Command command, ArrayList\u003cCommand.Argument\u003e args)","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"        for (Command.Argument arg : args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"            if (!command.hasValue(arg)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"                throw new IllegalArgumentException(\"Command \" + command.getName()","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"                        + \" requires argument \" + arg + \" but was not given\");","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":110}},{"path":"src/main/java/duke/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class DateTime {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     * date of the instance","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    public LocalDate date;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     * time of the instance","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    public LocalTime time;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"     * An instance of date and time.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input of date and time in \"YYYY-MM-DD TTTT\".","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException When input is not of correct format.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    public DateTime(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        if (splitInput.length !\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for date and time, \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"                    \"expected: \\\"YYYY-MM-DD TTTT\\\" actual: \" + input);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        date \u003d parseDate(splitInput[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        time \u003d parseTime(splitInput[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG))","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"                + \" \" + time;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"    private LocalDate parseDate(String date) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for date, \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"                    \"expected: \\\"YYYY-MM-DD\\\" actual: \" + date);","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    private LocalTime parseTime(String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"        if (!time.contains(\":\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"            time \u003d time.substring(0, 2) + \":\"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"                    + time.substring(2);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for time, \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"                    \"expected: \\\"TTTT\\\" actual: \" + time);","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"gohyongjing":65}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":" * Storage to save and load tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    /** File path of storage */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new storage","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * @param filePath File path to store tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     * Returns a scanner that reads from disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"     * @return Scanner to read from.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * @throws FileNotFoundException if file is not found.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    public Scanner getScanner() throws FileNotFoundException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        return new Scanner(new File(filePath));","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     * Returns a file writer to write to disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     * @return File writer to write to.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * @throws IOException If an exception occurred when writing to disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    public FileWriter getFileWriter() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        return new FileWriter(file);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * A task with a deadline.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime by;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new deadline.","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"deadline \" + description + \" /by \" + by;","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * A task with a starting and ending date and time.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /** Starting date and time of event */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime from;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    /** Ending date and time of event */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime to;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new event.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * @param from Starting date and time of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     * @param to Ending date and time of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        this.from \u003d new DateTime(from);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        this.to \u003d new DateTime(to);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"event \" + description + \" /from \"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"                + from + \" /to \" + to;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":" * Task containing their relevant information and completion status.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    /** Description of the task */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /** Whether the task is done */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task.","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    /** Returns whether the task is completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        return isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     * Returns the command(s) required to recreate the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"     * @param id Identifier of the task, usually assigned by task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     * @return the command(s).","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    public abstract String getRecreateCommand(int id);","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":51}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":" * Task List to manage tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /** ArrayList of tasks */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     * Loads task list with tasks from a scanner.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"     * @param scanner Scanner to read saved tasks from.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    public void load(Scanner scanner) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"            parseTask(scanner.nextLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * Parses a string read from disk to reconstruct tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input string.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    private void parseTask(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"            execute(Parser.parse(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"            System.out.println(\"Task list on disk corrupted!\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"                    \" Some tasks might be missing or incorrect.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     * Executes a given command.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to be executed.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     * @return The task involved in the command.","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"    public Task execute(Command command) {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"            case TODO:","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"                task \u003d new Todo(","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.TODO));","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"                task \u003d new Deadline(","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.DEADLINE),","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.BY));","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"            case EVENT:","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"                task \u003d new Event(","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.EVENT),","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.FROM),","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.TO));","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"            case MARK:","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"                task \u003d tasks.get(Integer.parseInt(command.getArgumentValue(","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"                        Command.Argument.MARK)));","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"                task.toggleDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"            case DELETE:","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"                task \u003d tasks.get(Integer.parseInt(","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"                        command.getArgumentValue(Command.Argument.DELETE)));","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"                tasks.remove(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"        return task;","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"     * Saves the task list to disk.","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * @throws IOException when there is an exception when writing to file or directory.","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"    public void save(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"            fileWriter.write(tasks.get(i).getRecreateCommand(i));","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"            fileWriter.write(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"            result.append(i);","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"            result.append(\". \");","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"            result.append(tasks.get(i));","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"        return result.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"gohyongjing":118}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":" * A simple todo task.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"todo \" + description;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":29}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" * User interface to scan inputs and print to console.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /** Scanner to scan input from user */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    Scanner scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new user interface.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"     * Reads one line of command from the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"     * @return Command from the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     * Closes and cleans up resources used by the user interface.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    public void close() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        scanner.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * Greets the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Hello!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    public void printFareWell() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Good bye!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     * Prompts user to start giving commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"    public void printPrompt() {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Awaiting commands...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that the command given is invalid.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     * @param message Message to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"    public void printBadCommandMessage(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully added to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"     * @param task Added task.","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"    public void printAddTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Added task: \" + task);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully marked as read or unread.","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * @param task Marked task.","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"    public void printMarkTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Marked task: \" + task + \" as \" + (task.getIsDone() ? \"\" : \"not \") + \"done\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully deleted from the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"     * @param task Deleted task.","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"    public void printDeleteTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Deleted task: \" + task);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that an error occurred when loading the task list from disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"    public void printStorageLoadFailure() {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Task list not found on disk, creating empty task list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that an error occurred when attempting to save the task list on disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"    public void printStorageSaveFailure() {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"        System.out.println(\"Error saving tasks to disk!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":107}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"todo task1","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"todo task2","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"deadline task3 /by 2022-01-20 1200","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"event task4 /from 2022-01-22 0800 /to 2022-01-22 1300","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"todo task5","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"invalidCmd","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"todo /invalidArg","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"deadline task6","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"deadline task7 /by","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"deadline task8 /by 6th May","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"event task9 /by 2pm","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"event task10 /from 7th July 5am /to","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"event task11 /from 2022-06-20 /to 7th July 10am","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"delete 3","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"delete 2","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"delete 1","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"delete 0","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":36}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"if [ -e \"./data/\" ]","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"then","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    rm ./data/tasks.txt","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    rm -r ./data","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"fi","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/*/*.java","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gohyongjing":8,"-":37}}]
