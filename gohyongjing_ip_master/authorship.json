[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gohyongjing":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"A basic todo list to store your todos, deadlines and events.","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"### Add tasks to do, deadlines and events","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"Track your tasks by adding them into our task list!","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"### Find and view all your tasks easily","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"See all your todos, deadlines and events in one place, or even find a task with keywords!","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"### Delete tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"Made a mistake? Delete the task from the task list easily!","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"### Port your tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"Need to bring your tasks into another computer? simply copy over the data files!","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"### Duplicate detection","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"Automatically detects duplicate tasks and stops them from cluttering up the task list!","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"## Command Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"### `todo`: Add a task to do.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"Adds a basic task to do into the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"See the added task using the `list` command.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage: ","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"`todo buy groceries`","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"`todo clean up store room`","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"The todo is added to the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"Added task: [T][] \u003cdescription\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"### `deadline`: Add a deadline.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"Adds a task with a deadline into the task list. Dates should be in the format `yyyy-mm-dd tttt`.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"See the added task using the `list` command.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"`deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"`deadline complete project proposal /by 2023-02-13 2359`","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"`deadline pay rent /by 2023-04-30 2359`","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"The deadline is added to the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"Added task: [D][] \u003cdescription\u003e (by: \u003cdate\u003e)","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"### `event`: Add an event.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"Adds a task with start and end dates into the task list. Dates should be in the format `yyyy-mm-dd tttt`.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"See the added task using the `list` command.","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"`event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"`event dentist appointment /from 2023-06-15 0900 /to 2023-06-15 1000`","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"`event NASA job interview /from 2023-04-02 1200 /to 2023-04-02 1300`","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"The event is added to the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"Added task: [E][] \u003cdescription\u003e (from: \u003cstart date\u003e to: \u003cend date\u003e)","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"### `list`: List all events.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"Lists down all added todos, deadlines and events.","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"Each task is numbered in the order they are added, starting from 0.","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"This is followed by 2 brackets showing the task type and its completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"##### Task types","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"`[T]` todos","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"`[D]` deadlines","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"`[E]` events","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"#### Completion status","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"`[]` not completed","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"`[X]` completed","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"This is followed by the description of the task and any relevant dates.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"`list`","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"gohyongjing"},"content":"`list`","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"gohyongjing"},"content":"The list of todos, deadlines and events are displayed.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"gohyongjing"},"content":"If there are no tasks, Duke shows an empty response.","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"gohyongjing"},"content":"0. [T][] \u003cdescription1\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"gohyongjing"},"content":"1. [D][] \u003cdescription2\u003e (by: \u003cdate\u003e)","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"gohyongjing"},"content":"2. [E][] \u003cdescription3\u003e (from: \u003cstart date\u003e to: \u003cend date\u003e)","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"gohyongjing"},"content":"3. [T][X] \u003cdescription4\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"### `mark`: Mark a task as completed or not completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"gohyongjing"},"content":"Marks a task at a particular index as completed or not completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"gohyongjing"},"content":"See the index of a task using the `list` command.","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"gohyongjing"},"content":"Index must be larger than 0 and smaller than number of items in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"gohyongjing"},"content":"`mark \u003cindex\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"gohyongjing"},"content":"`mark 0`","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"gohyongjing"},"content":"`mark 5`","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"gohyongjing"},"content":"If the task is previously incomplete, marks the task as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"gohyongjing"},"content":"Marked task \u003ctask\u003e as done","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"gohyongjing"},"content":"Otherwise, mark the task as incomplete.","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"gohyongjing"},"content":"Marked task \u003ctask\u003e as not done","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"gohyongjing"},"content":"### `delete`: Deletes a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"gohyongjing"},"content":"Deletes a task at a particular index from the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"gohyongjing"},"content":"See the index of a task using the `list` command.","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"gohyongjing"},"content":"Index must be larger than 0 and smaller than number of items in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"gohyongjing"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"gohyongjing"},"content":"`delete 0`","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"gohyongjing"},"content":"`delete 3`","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"gohyongjing"},"content":"Task is deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"gohyongjing"},"content":"Deleted task \u003ctask\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"gohyongjing"},"content":"### `find`: Find tasks using key phrases.","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"gohyongjing"},"content":"Find tasks in task list that contains key phrases in the description.","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":198,"author":{"gitId":"gohyongjing"},"content":"Tasks found will only contain the full key phrases in the same order.","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"gohyongjing"},"content":"Each task is shown in the order they are added, skipping tasks that do not contain the keyphrase.","lastModifiedDate":"2023-02-12"},{"lineNumber":200,"author":{"gitId":"gohyongjing"},"content":"This is followed by 2 brackets showing the task type and its completion status.","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"gohyongjing"},"content":"##### Task types","lastModifiedDate":"2023-02-12"},{"lineNumber":203,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"gohyongjing"},"content":"`[T]` todos","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"gohyongjing"},"content":"`[D]` deadlines","lastModifiedDate":"2023-02-12"},{"lineNumber":207,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"gohyongjing"},"content":"`[E]` events","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":210,"author":{"gitId":"gohyongjing"},"content":"#### Completion status","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"gohyongjing"},"content":"`[]` not completed","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"gohyongjing"},"content":"`[X]` completed","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"gohyongjing"},"content":"This is followed by the description of the task and any relevant dates.","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"gohyongjing"},"content":"`find \u003ckey phrases\u003e`","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"gohyongjing"},"content":"`find birthday`","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"gohyongjing"},"content":"`find assignment 4`","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"gohyongjing"},"content":"The list of todos, deadlines and events containing the key phrases are displayed.","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"gohyongjing"},"content":"If there are no tasks, Duke shows an empty response.","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":234,"author":{"gitId":"gohyongjing"},"content":"0. [T][] \u003cdescription1\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"gohyongjing"},"content":"1. [D][] \u003cdescription2\u003e (by: \u003cdate\u003e)","lastModifiedDate":"2023-02-12"},{"lineNumber":236,"author":{"gitId":"gohyongjing"},"content":"3. [T][X] \u003cdescription4\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":237,"author":{"gitId":"gohyongjing"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":239,"author":{"gitId":"gohyongjing"},"content":"### `bye`: Exits the Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"gohyongjing"},"content":"Saves the task list to disk and exits.","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":242,"author":{"gitId":"gohyongjing"},"content":"#### Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"gohyongjing"},"content":"`bye`","lastModifiedDate":"2023-02-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":246,"author":{"gitId":"gohyongjing"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"gohyongjing"},"content":"`bye`","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"gohyongjing"},"content":"#### Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"gohyongjing"},"content":"Duke saves the task to the disk and exits.","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"gohyongjing"},"content":"The task list is restored from disk when the app is run again.","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":256,"author":{"gitId":"gohyongjing"},"content":"Good bye!","lastModifiedDate":"2023-02-12"},{"lineNumber":257,"author":{"gitId":"gohyongjing"},"content":"Closing in 5 seconds...","lastModifiedDate":"2023-02-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"gohyongjing":241,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":" * Graphical user interface app for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    /** Storage to load and save tasks on disk */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    /** Task list to store tasks in memory */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    /** Graphical user interface stage */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    private Stage stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    /** Graphical user interface main window controller */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    private MainWindow controller;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a duke.","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    public Duke() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"        storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     * Starts the app.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"     * @param stage the primary stage for this application,","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     *      onto which the application scene can be set.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     *      Applications may create other stages, if needed,","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"     *      but they will not be primary stages.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        stage.setOnCloseRequest(event -\u003e exit());","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"            stage.setScene(new Scene(fxmlLoader.load()));","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"            controller \u003d fxmlLoader.getController();","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"            controller.setDuke(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"            stage.show();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        controller.showGreeting();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"            tasks.load(storage.getScanner());","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"            controller.showStorageLoadFailure();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"            controller.showStorageCorrupted(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        controller.showPrompt();","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * Handles user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"    public void handleUserInput(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"            execute(Parser.parse(input));","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"        } catch (IllegalArgumentException | IllegalStateException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"            controller.showBadCommandMessage(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"     * Executes a command.","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to execute.","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    private void execute(Command command) {","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"        case NO_OP:","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"        case BYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"            exit();","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"        case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"            // FallThrough","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"            // FallThrough","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"        case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"            controller.showAddTaskSuccessMessage(tasks.execute(command));","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"        case LIST:","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"            controller.showAllTasks(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"        case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"            controller.showTasksWithKeyword(tasks.findAll(","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.FIND)));","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"        case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"            Task task \u003d tasks.execute(command);","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"            controller.showMarkTaskSuccessMessage(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"gohyongjing"},"content":"        case DELETE:","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"            controller.showDeleteTaskSuccessMessage(tasks.execute(command));","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"            assert false : \"Unhandled command: \" + command;","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"gohyongjing"},"content":"     * Cleans up the duke to exit.","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"     * Save tasks to the disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"gohyongjing"},"content":"    private void exit() {","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"gohyongjing"},"content":"            tasks.save(storage.getFileWriter());","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"gohyongjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"gohyongjing"},"content":"            controller.showStorageSaveFailure();","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"gohyongjing"},"content":"        controller.showFarewellMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"gohyongjing"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"        delay.setOnFinished((event) -\u003e stage.close());","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"        delay.play();","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gohyongjing":141,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Launcher {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * Launches the graphical user interface app for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"gohyongjing":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * Command containing its arguments and their values.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * Types of command arguments.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    public enum Argument {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        BYE,","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        BY,","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        EVENT,","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        FROM,","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        TO,","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        LIST,","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        MARK,","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        FIND,","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        DELETE,","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        NO_OP","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    /** Arguments of the command */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    private final LinkedHashMap\u003cArgument, String\u003e arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new command.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     * The first param is the name of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     * @param arguments Arguments of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    public Command(LinkedHashMap\u003cArgument, String\u003e arguments) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"     * Returns the name of command.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     * @return Name of command.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    public Argument getName() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        return arguments.entrySet().iterator().next().getKey();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     * Returns the value of an argument.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to retrieve value of.","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * @return Value of the argument.","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"    public String getArgumentValue(Argument arg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"        return arguments.get(arg);","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     * Parses the argument string and returns the argument enumeration.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     * Input string is case-insensitive and empty string represents","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"     * the NO-OP command.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument in string.","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"     * @return Argument in enumeration.","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException If input string is not a valid enum.","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"    public static Argument parseArgument(String arg)","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        if (arg.equals(\"\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"            return Argument.NO_OP;","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"            return Argument.valueOf(arg.toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Command \"","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"                    + arg + \" not recognised\");","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     * Checks if the command contains an argument key.","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"     * @return true If the argument exists, false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"    public boolean hasArg(Argument arg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"        return arguments.containsKey(arg);","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a specific argument in command has a value.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * @param arg Argument to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     * @return true If argument exists and value is a non-empty string,","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"    public boolean hasValue(Argument arg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"        return arguments.containsKey(arg) \u0026\u0026 !arguments.get(arg).equals(\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":102}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" * Parser to parse strings into commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     * Parses a string into a command.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input string to parse into command.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"     * @return Parsed command.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    public static Command parse(String input)","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e arguments \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        for (String term : input.strip().split(\" /\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"            int firstSpace \u003d term.indexOf(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"            Command.Argument argument \u003d Command.parseArgument((firstSpace \u003d\u003d -1)","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"                    ? term","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"                    : term.substring(0, firstSpace));","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"            String value \u003d (firstSpace \u003d\u003d -1)","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"                    ? \"\"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"                    : term.substring(firstSpace + 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"            arguments.put(argument, value);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        Command command \u003d new Command(arguments);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        checkArguments(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     * Checks if the Command\u0027s arguments are valid.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException If arguments are invalid.","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    private static void checkArguments(Command command)","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        ArrayList\u003cCommand.Argument\u003e requiredArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        ArrayList\u003cCommand.Argument\u003e requiredValues \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"        case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"            // Fallthrough","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.MARK);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"        case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.DELETE);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.TODO);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"            requiredArgs.add(Command.Argument.BY);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.DEADLINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.BY);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"            requiredArgs.add(Command.Argument.FROM);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"            requiredArgs.add(Command.Argument.TO);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.EVENT);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.FROM);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"            requiredValues.add(Command.Argument.TO);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"            assert false : \"Unhandled command: \" + command;","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"        checkHasArgs(command, requiredArgs);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"        checkHasValues(command, requiredValues);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a command contains all the specified arguments.","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"     * @param args Required arguments.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException If any of the required arguments are not in","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     *                                  the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"    private static void checkHasArgs(Command command, ArrayList\u003cCommand.Argument\u003e args)","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        for (Command.Argument arg : args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"            if (!command.hasArg(arg)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"                throw new IllegalArgumentException(\"Command \" + command.getName()","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"                        + \" requires argument \" + arg + \" but was not given\");","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     * Checks if a command\u0027s arguments contain non-empty values.","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to check.","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     * @param args Arguments with required values.","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException If any of the arguments  are not in the","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"     *                                  command or have empty values.","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"    private static void checkHasValues(Command command, ArrayList\u003cCommand.Argument\u003e args)","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"        for (Command.Argument arg : args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"            if (!command.hasValue(arg)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"                throw new IllegalArgumentException(\"Command \" + command.getName()","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"                        + \" requires argument \" + arg + \" but was not given\");","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":112}},{"path":"src/main/java/duke/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":" * Date and time representing a particular instant.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"public class DateTime {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    /** Raw date time */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    private final String raw;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /** Date of the instance */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    /** Time of the instance */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"     * An instance of date and time.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input of date and time in \"YYYY-MM-DD TTTT\".","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalArgumentException When input is not of correct format.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    public DateTime(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        raw \u003d input;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        if (splitInput.length !\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for date and time, \"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"                    + \"expected: \\\"YYYY-MM-DD TTTT\\\" actual: \" + input);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        date \u003d parseDate(splitInput[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        time \u003d parseTime(splitInput[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * Returns the raw date time passed into the constructor of this datetime instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"     * @return Raw date time of this datetime instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"    public String getRaw() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        return raw;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of this datetime instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of datetime.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MM yyyy\"))","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"                + \" \" + time;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     * Parses date in String to LocalDate.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     * @param date Date to parse.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"     * @return Parsed LocalDate.","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    private LocalDate parseDate(String date) {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for date, \"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"                    + \"expected: \\\"YYYY-MM-DD\\\" actual: \" + date);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"     * Parses time in String to LocalTime.","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * @param time Time to parse.","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     * @return Parsed LocalTime.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"    private LocalTime parseTime(String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"        if (!time.contains(\":\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"            time \u003d time.substring(0, 2) + \":\"","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"                    + time.substring(2);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid format for time, \"","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"                    + \"expected: \\\"TTTT\\\" actual: \" + time);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether this datetime represents the same date and time as another datetime.","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     * @param other Other object.","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     * @return true if other object is a datetime and represents the same date and time","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     *         as this datetime.","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"        if (!(other instanceof DateTime)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"            return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"        DateTime dateTime \u003d (DateTime) other;","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"        return toString().equals(dateTime.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"gohyongjing":108}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":" * Storage to save and load tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    /** File path of storage */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new storage","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * @param filePath File path to store tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     * Returns a scanner that reads from disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"     * @return Scanner to read from.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * @throws FileNotFoundException if file is not found.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    public Scanner getScanner() throws FileNotFoundException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        return new Scanner(new File(filePath));","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     * Returns a file writer to write to disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     * @return File writer to write to.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * @throws IOException If an exception occurred when writing to disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    public FileWriter getFileWriter() throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"            if (!parentDirectory.mkdirs()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"                throw new IOException(\"Failed to create required directories\");","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        return new FileWriter(file);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":52}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * A task with a deadline.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime by;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new deadline.","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     * Returns the command(s) required to recreate the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"     * @param id Identifier of the task, usually assigned by task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * @return the command(s).","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"deadline \" + description + \" /by \" + by.getRaw();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether this deadline have the same description and deadline as another deadline.","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * @param other Other object.","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     * @return true if other object is a deadline and has the same description and deadline,","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        if (!(super.equals(other) \u0026\u0026 (other instanceof Deadline))) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"            return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        Deadline deadline \u003d (Deadline) other;","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        return by.equals(deadline.by);","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":66}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * A task with a starting and ending date and time.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    /** Starting date and time of event */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime from;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    /** Ending date and time of event */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    protected DateTime to;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new event.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * @param from Starting date and time of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     * @param to Ending date and time of the event.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        this.from \u003d new DateTime(from);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        this.to \u003d new DateTime(to);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * Returns the command(s) required to recreate the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     * @param id Identifier of the task, usually assigned by task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     * @return the command(s).","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"event \" + description + \" /from \"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"                + from.getRaw() + \" /to \" + to.getRaw();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether this event have the same description, start and end datetime as another event.","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"     * @param other Other object.","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"     * @return true if other object is an event and has the same description, start and end datetime,","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        if (!(super.equals(other) \u0026\u0026 (other instanceof Event))) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"            return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"        Event event \u003d (Event) other;","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"        return from.equals(event.from) \u0026\u0026 to.equals(event.to);","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":" * Task containing their relevant information and completion status.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    /** Description of the task */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /** Whether the task is done */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task.","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        return isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     * Checks if task description contains a keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     * @param keyword Keyword to check.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     * @return true if task description contains the keyword, false otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"     * Returns the command(s) required to recreate the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     * @param id Identifier of the task, usually assigned by task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * @return the command(s).","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"    public abstract String getRecreateCommand(int id);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether this task have the same description as another task.","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"     * @param other Other object.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"     * @return true if other object is a task and has the same description,","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"            return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"        Task task \u003d (Task) other;","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"        return description.equals(task.description);","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":83}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":" * Task List to manage tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    /** ArrayList of tasks */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"     * Loads task list with tasks from a scanner.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"     * @param scanner Scanner to read saved tasks from.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    public void load(Scanner scanner) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"            parseTask(scanner.nextLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * Parses a string read from disk to reconstruct tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input string.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    private void parseTask(String input) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"            execute(Parser.parse(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"            throw new IOException(\"Task list on disk corrupted!\"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"                    + \" Some tasks might be missing or incorrect.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"     * Executes a given command.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * @param command Command to be executed.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     * @return Task involved in the command.","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"    public Task execute(Command command) {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        int index;","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        switch (command.getName()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"        case TODO:","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"            task \u003d new Todo(","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.TODO));","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"            addTask(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"            task \u003d new Deadline(","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.DEADLINE),","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.BY));","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"            addTask(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"        case EVENT:","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"            task \u003d new Event(","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.EVENT),","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.FROM),","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.TO));","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"            addTask(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"        case MARK:","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"            index \u003d parseIndex(command.getArgumentValue(","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"                    Command.Argument.MARK));","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"            task \u003d getTask(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"            task.toggleDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"        case DELETE:","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"            index \u003d parseIndex(","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"                    command.getArgumentValue(Command.Argument.DELETE));","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"            task \u003d getTask(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"            tasks.remove(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"            assert false : \"Unhandled command: \" + command;","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"        assert task !\u003d null : \"task not assigned\";","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"        return task;","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     * Parses an index from a string.","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"     * @param input Input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"     * @return Index.","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"    private int parseIndex(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"Invalid index \u0027\" + input + \"\u0027. Please enter an integer.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"     * Adds a task that does not already exist in the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"        if (tasks.contains(task)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalStateException(\"Task \" + task","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"                    + \" already exists\");","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves a task based on its index in the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"gohyongjing"},"content":"     * @return task at the particular index.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"gohyongjing"},"content":"    private Task getTask(int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"gohyongjing"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalArgumentException(\"index \" + index","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"gohyongjing"},"content":"                    + \" does not exist for task list with \" + tasks.size() + \" items\");","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"gohyongjing"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"     * Saves the task list to disk.","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"gohyongjing"},"content":"     * @throws IOException When there is an exception when writing to file or directory.","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"gohyongjing"},"content":"    public void save(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"gohyongjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"gohyongjing"},"content":"            fileWriter.write(tasks.get(i).getRecreateCommand(i));","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"gohyongjing"},"content":"            fileWriter.write(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"gohyongjing"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"gohyongjing"},"content":"     * Finds tasks that match a keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"gohyongjing"},"content":"     * @param keyword Keyword to match.","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of list of matched tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"gohyongjing"},"content":"    public String findAll(String keyword) {","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"gohyongjing"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"gohyongjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"gohyongjing"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"gohyongjing"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"gohyongjing"},"content":"                result.append(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"gohyongjing"},"content":"                result.append(\". \");","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"gohyongjing"},"content":"                result.append(tasks.get(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"gohyongjing"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"gohyongjing"},"content":"                    result.append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"gohyongjing"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"gohyongjing"},"content":"        return result.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"gohyongjing"},"content":"     * Contains string representation of every task.","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":183,"author":{"gitId":"gohyongjing"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"gohyongjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":185,"author":{"gitId":"gohyongjing"},"content":"            result.append(i);","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"gohyongjing"},"content":"            result.append(\". \");","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"gohyongjing"},"content":"            result.append(tasks.get(i));","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"gohyongjing"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":189,"author":{"gitId":"gohyongjing"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":190,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":191,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":192,"author":{"gitId":"gohyongjing"},"content":"        return result.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":193,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":194,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"gohyongjing":194}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":" * A simple todo task.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new task.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"     * Returns the command(s) required to recreate the todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * @param id Identifier of the task, usually assigned by task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     * @return the command(s).","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        String result \u003d \"todo \" + description;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"            result +\u003d \"\\nmark \" + id;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     * @return String representation of the todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     * Returns whether this todo have the same description as another todo.","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     * @param other Other object.","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"     * @return true if other object is a todo and has the same description,","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     *         false otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        return super.equals(other) \u0026\u0026 (other instanceof Todo);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gohyongjing":54}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":" * Controller for DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":" * Dialog box consists of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    /** Label containing text for dialog */","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    private Text dialog \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    /** ImageView containing the display picture for the dialog */","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    private ImageView displayPicture \u003d null;","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     * Dialog boxes should be constructed using the public factory methods.","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"     * @param text Text to display inside DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"     * @param img Display image for the DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"        assert dialog !\u003d null : \"dialog Label not set up properly in fxml file\";","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        assert displayPicture !\u003d null : \"displayPicture ImageView not set up properly in fxml file\";","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    private void flip() {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"     * Creates a new dialog box for the user.","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"     * @param text Text to display inside DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"     * @param img Display image for the DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"     * @return Dialog box for the user.","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * Creates a new dialog box for the duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"     * @param text Text to display inside DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"     * @param img Display image for the DialogBox.","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     * @return Dialog box for the duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"        db.flip();","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        return db;","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"gohyongjing":90}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":" * Controller for MainWindow.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":" * Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    /** Scroll pane for the window */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    /** Dialog container for dialog and user\u0027s icon */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    /** Text field for user input */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    /** Button to send entered command */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"    /** Duke to control app logic */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    /** User\u0027s icon */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    /** Duke\u0027s icon */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     * Initialises the app","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"     * Sets the duke used for the app\u0027s logic.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"     * @param duke Duke used.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"     * Greets the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Hello!\\nRetrieving tasks from storage...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that task list is not found on disk.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"    public void showStorageLoadFailure() {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Task list not found on disk, creating empty task list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that task list on disk is corrupted.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"    public void showStorageCorrupted(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"     * Prompts user to start giving commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"    public void showPrompt() {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Task list is now ready! Awaiting commands...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that the command given is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"     * @param message Message to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    public void showBadCommandMessage(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully added to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"     * @param task Added task.","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"    public void showAddTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Added task: \" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully marked as read or unread.","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"     * @param task Marked task.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"    public void showMarkTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Marked task: \" + task + \" as \" + (task.getIsDone() ? \"\" : \"not \") + \"done\");","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that a given task is successfully deleted from the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"gohyongjing"},"content":"     * @param task Deleted task.","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"    public void showDeleteTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Deleted task: \" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"gohyongjing"},"content":"     * Displays the full list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"gohyongjing"},"content":"     * @param tasks Tasks to display.","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"gohyongjing"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(tasks.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"gohyongjing"},"content":"     * Displays tasks containing a certain keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"gohyongjing"},"content":"     * @param tasks String representation of filtered tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"    public void showTasksWithKeyword(String tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"gohyongjing"},"content":"     * Informs user that an error occurred when attempting to save the task list on disk.","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"gohyongjing"},"content":"    public void showStorageSaveFailure() {","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Error saving tasks to disk!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"gohyongjing"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"gohyongjing"},"content":"    public void showFarewellMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"gohyongjing"},"content":"        showDukeDialog(\"Good bye!\\nClosing in 5 seconds...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"gohyongjing"},"content":"     * Handles the user input and responds to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"gohyongjing"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"gohyongjing"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"gohyongjing"},"content":"        showUserDialog(userInput.getText());","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"gohyongjing"},"content":"        duke.handleUserInput(userInput.getText());","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"gohyongjing"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"gohyongjing"},"content":"     * Creates and shows the duke\u0027s dialog box.","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"gohyongjing"},"content":"     * @param text Text to show.","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"gohyongjing"},"content":"    private void showDukeDialog(String text) {","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"        assert dukeImage !\u003d null : \"duke icon not found\";","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"gohyongjing"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"gohyongjing"},"content":"                DialogBox.getDukeDialog(text, dukeImage)","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"gohyongjing"},"content":"        );","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"gohyongjing"},"content":"     * Creates the user\u0027s dialog box echoing the user\u0027s input.","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"gohyongjing"},"content":"     * @param text Text to show.","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"gohyongjing"},"content":"    private void showUserDialog(String text) {","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"gohyongjing"},"content":"        assert userImage !\u003d null : \"user icon not found\";","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"gohyongjing"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"gohyongjing"},"content":"                DialogBox.getUserDialog(text, userImage)","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"gohyongjing"},"content":"        );","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"gohyongjing":191}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    \u003cText fx:id\u003d\"dialog\" wrappingWidth\u003d\"250\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"gohyongjing":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"gohyongjing":23}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    public void parser_todoEmptyDescription_exceptionThrown() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"        Throwable exception \u003d assertThrows(IllegalArgumentException.class, ((","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"                ) -\u003e Parser.parse(\"todo \")));","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(\"Command TODO requires argument TODO but was not given\",","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"                exception.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":16}},{"path":"src/test/java/duke/datetime/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"    public void dateTime() {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"        DateTime dateTime \u003d new DateTime(\"2022-01-02 0800\");","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(\"02 01 2022 08:00\", dateTime.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":13}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    public void deadline_compareEquals() {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"        Deadline deadline1 \u003d new Deadline(\"Do project\", \"2000-01-04 2359\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        Deadline deadline2 \u003d new Deadline(\"Do project\", \"2000-04-01 2359\");","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        Deadline deadline3 \u003d new Deadline(\"Do assignment project\", \"2000-01-04 2359\");","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        Deadline deadline4 \u003d new Deadline(\"Do project\", \"2000-01-04 2359\");","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(deadline1, deadline2);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(deadline1, deadline3);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(deadline1, deadline4);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(deadline2, deadline3);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(deadline3, deadline4);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    public void deadline_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Deadline(","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"                \"Do thing\", \"2020-06-11\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Deadline(","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"                \"Do thing\", \"2359\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Deadline(","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"                \"Do thing\", \"2020-13-02 1500\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"gohyongjing":33}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class EventTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    public void event_compareEquals() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"        Event event1 \u003d new Event(\"Attend birthday\", \"2000-01-04 2000\", \"2000-01-04 2300\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"        Event event2 \u003d new Event(\"Attend birthday\", \"2000-04-01 2000\", \"2000-01-04 2300\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        Event event3 \u003d new Event(\"Yearly carnival\", \"2000-01-04 2000\", \"2000-01-04 2300\");","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        Event event4 \u003d new Event(\"Attend birthday\", \"2000-01-04 2000\", \"2000-01-04 2200\");","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        Event event5 \u003d new Event(\"Attend birthday\", \"2000-01-04 2000\", \"2000-01-04 2300\");","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event1, event2);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event1, event3);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event1, event4);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(event1, event5);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event2, event3);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event2, event4);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(event3, event4);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    public void event_incorrectFormat_exceptionThrown() {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Event(","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"                \"Attend talk\", \"2020-06-11 0900\", \"2020-06-11\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Event(","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"                \"Attend talk\", \"1800\", \"2020-07-11 2000\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Event(","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"                \"Attend talk\", \"2020-06-11\", \"2020-06-11 2300\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Event(","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"                \"Attend talk\", \"2020-07-11 1800\", \"2020-07-11\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e new Event(","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"                \"Attend talk\", \"2020-13-02 1500\", \"2020-13-02 1700\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"gohyongjing":39}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    public void taskList_indexOutOfBounds_raisesException() {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args1 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        args1.put(Command.Argument.TODO, \"task with kword\");","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"        Command command1 \u003d new Command(args1);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args2 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.DEADLINE, \"another task\");","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.BY, \"2000-01-01 1000\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        Command command2 \u003d new Command(args2);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args3 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.MARK, \"2\");","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        Command markCommand \u003d new Command(args3);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args4 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        args4.put(Command.Argument.DELETE, \"2\");","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        Command deleteCommand \u003d new Command(args4);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        tasks.execute(command1);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        tasks.execute(command2);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e tasks.execute(markCommand)));","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(IllegalArgumentException.class, (() -\u003e tasks.execute(deleteCommand)));","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    public void findAll() {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args1 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        args1.put(Command.Argument.TODO, \"task with kword\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        Command command1 \u003d new Command(args1);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args2 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.DEADLINE, \"another task\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.BY, \"2000-01-01 1000\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"        Command command2 \u003d new Command(args2);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args3 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.DEADLINE, \"another kword task\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.BY, \"2000-01-01 1000\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"        Command command3 \u003d new Command(args3);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        Task task1 \u003d tasks.execute(command1);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        tasks.execute(command2);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"        Task task3 \u003d tasks.execute(command3);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        String[] results \u003d tasks.findAll(\"kword\").split(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(\"0. \" + task1, results[0]);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(2, results.length);","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(\"2. \" + task3, results[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"    public void addTask_givenDuplicate_rejectsCommand() {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args1 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"        args1.put(Command.Argument.TODO, \"todo task\");","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"        Command command1 \u003d new Command(args1);","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args2 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.DEADLINE, \"deadline task\");","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"        args2.put(Command.Argument.BY, \"2001-05-06 1200\");","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"        Command command2 \u003d new Command(args2);","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"        LinkedHashMap\u003cCommand.Argument, String\u003e args3 \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.EVENT, \"event task\");","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.FROM, \"2003-12-30 2030\");","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"        args3.put(Command.Argument.TO, \"2003-12-31 2359\");","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"        Command command3 \u003d new Command(args3);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"        Task task1 \u003d tasks.execute(command1);","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"        Task task2 \u003d tasks.execute(command2);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"        Task task3 \u003d tasks.execute(command3);","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"        Exception exception1 \u003d assertThrows(","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"                IllegalStateException.class, () -\u003e tasks.execute(command1));","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"        String expectedMessage1 \u003d \"Task \" + task1 + \" already exists\";","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"        assertTrue(exception1.getMessage().contains(expectedMessage1));","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"        Exception exception2 \u003d assertThrows(","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"                IllegalStateException.class, () -\u003e tasks.execute(command2));","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        String expectedMessage2 \u003d \"Task \" + task2 + \" already exists\";","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"        assertTrue(exception2.getMessage().contains(expectedMessage2));","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"        Exception exception3 \u003d assertThrows(","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"                IllegalStateException.class, () -\u003e tasks.execute(command3));","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"        String expectedMessage3 \u003d \"Task \" + task3 + \" already exists\";","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"        assertTrue(exception3.getMessage().contains(expectedMessage3));","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"gohyongjing":99}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"    public Task getTaskStub(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"        return new Task(description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"            @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"            public String getRecreateCommand(int id) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"                return \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        };","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public void task_markAsDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        Task task1 \u003d getTaskStub(\"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        Task task2 \u003d getTaskStub(\"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"        task2.toggleDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"        assertTrue(task2.getIsDone());","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        task2.toggleDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        assertFalse(task2.getIsDone());","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    public void task_containsKeyword() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        Task task \u003d getTaskStub(\"Task with certain keyword\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(true, task.contains(\"keyword\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(false, task.contains(\"notKeyword\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    public void task_compareEquals() {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"        Task task1 \u003d getTaskStub(\"Do homework\");","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        Task task2 \u003d getTaskStub(\"Sweep the floor\");","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        Task task3 \u003d getTaskStub(\"Do homework\");","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(task1, task2);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(task1, task3);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(task2, task1);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(task2, task3);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"gohyongjing":51}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    public void todo_compareEquals() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"        Todo todo1 \u003d new Todo(\"Do homework\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"        Todo todo2 \u003d new Todo(\"Sweep the floor\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        Todo todo3 \u003d new Todo(\"Do homework\");","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(todo1, todo2);","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(todo1, todo3);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(todo2, todo1);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"        assertNotEquals(todo2, todo3);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"gohyongjing":21}}]
