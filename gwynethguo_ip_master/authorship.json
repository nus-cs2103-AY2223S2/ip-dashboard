[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gwynethguo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gwynethguo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gwynethguo"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gwynethguo":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"    String lines \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"    boolean exit \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"    String msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"    Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"    int num_tasks \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"    public static void main(String[] args) throws DukeException, NumberFormatException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"gwynethguo"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gwynethguo"},"content":"        System.out.println(duke.welcome_msg());","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gwynethguo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gwynethguo"},"content":"        while(!duke.exit) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gwynethguo"},"content":"            String inp \u003d scanner.next();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gwynethguo"},"content":"            int idx \u003d -1;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gwynethguo"},"content":"            String desc \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gwynethguo"},"content":"            if (inp.equals(\"mark\") || inp.equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"gwynethguo"},"content":"                String tmp;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"gwynethguo"},"content":"                tmp \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"gwynethguo"},"content":"                if (!tmp.equals(\"\")) idx \u003d Integer.parseInt(tmp.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"gwynethguo"},"content":"                if (tmp.equals(\"\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"gwynethguo"},"content":"                    idx \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"gwynethguo"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"gwynethguo"},"content":"            else {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"gwynethguo"},"content":"                desc \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"gwynethguo"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"gwynethguo"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"gwynethguo"},"content":"            if (inp.equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"gwynethguo"},"content":"                String[] temp \u003d desc.split(\" /by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"gwynethguo"},"content":"                desc \u003d temp[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"gwynethguo"},"content":"                by \u003d temp[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"gwynethguo"},"content":"            if (inp.equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"gwynethguo"},"content":"                String[] temp \u003d desc.split(\" /from |\\\\ /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"gwynethguo"},"content":"                desc \u003d temp[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"gwynethguo"},"content":"                from \u003d temp[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"gwynethguo"},"content":"                by \u003d temp[2];","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"gwynethguo"},"content":"//                System.out.println(temp[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"gwynethguo"},"content":"//                System.out.println(temp[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"gwynethguo"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"gwynethguo"},"content":"                duke.check_msg(inp, idx, desc, by, from);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"gwynethguo"},"content":"                System.out.println(duke.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"gwynethguo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"gwynethguo"},"content":"                System.out.println(duke.msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"gwynethguo"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"gwynethguo"},"content":"    String welcome_msg() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"gwynethguo"},"content":"        return this.add_lines(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"gwynethguo"},"content":"    void check_msg(String inp, int idx, String desc, String by, String from) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"gwynethguo"},"content":"        if (inp.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"gwynethguo"},"content":"            this.exit \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"gwynethguo"},"content":"        } else if (inp.equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"gwynethguo"},"content":"            for(int i \u003d 0; i \u003c num_tasks; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"gwynethguo"},"content":"                Task cur \u003d this.tasks[i];","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"gwynethguo"},"content":"                this.msg +\u003d Integer.toString(i + 1) + \". \" + cur + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(this.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"gwynethguo"},"content":"        } else if ((inp.equals(\"mark\") || inp.equals(\"unmark\"))){","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"gwynethguo"},"content":"            if (idx \u003d\u003d -1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d this.add_lines(\" ☹ OOPS!!! The description of a mark / unmark cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"gwynethguo"},"content":"                throw new DukeException(\"No Description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"gwynethguo"},"content":"            Task cur \u003d this.tasks[idx - 1];","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"gwynethguo"},"content":"            if (inp.equals(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"gwynethguo"},"content":"                cur.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"gwynethguo"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"gwynethguo"},"content":"                cur.unmark();","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"gwynethguo"},"content":"            this.msg +\u003d cur + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(this.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"gwynethguo"},"content":"        } else if (inp.equals(\"todo\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"gwynethguo"},"content":"            if (desc.equals(\"\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d this.add_lines(\" ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"gwynethguo"},"content":"                throw new DukeException(\"No Description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"gwynethguo"},"content":"            Todo cur \u003d new Todo(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"gwynethguo"},"content":"            tasks[num_tasks] \u003d cur;","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"gwynethguo"},"content":"            num_tasks \u003d num_tasks + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d \"Got it. I\u0027ve added this task:\\n\" + cur + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"gwynethguo"},"content":"            this.msg +\u003d \"Now you have \" + this.num_tasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(this.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"gwynethguo"},"content":"        } else if (inp.equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"gwynethguo"},"content":"            if(desc.equals(\"\") || by.equals(\"\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d this.add_lines(\" ☹ OOPS!!! The description / deadline of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"gwynethguo"},"content":"                throw new DukeException(\"No Description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"gwynethguo"},"content":"                // haven\u0027t handle the string split exception","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"gwynethguo"},"content":"            Deadline cur \u003d new Deadline(desc, by);","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"gwynethguo"},"content":"            tasks[num_tasks] \u003d cur;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"gwynethguo"},"content":"            num_tasks \u003d num_tasks + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d \"Got it. I\u0027ve added this task:\\n\" + cur + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"gwynethguo"},"content":"            this.msg +\u003d \"Now you have \" + this.num_tasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(this.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"gwynethguo"},"content":"        } else if (inp.equals(\"event\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"gwynethguo"},"content":"            if(desc.equals(\"\") || by.equals(\"\") || from.equals(\"\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"gwynethguo"},"content":"                this.msg \u003d this.add_lines(\" ☹ OOPS!!! The description / start / end of an event cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"gwynethguo"},"content":"                throw new DukeException(\"No Description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"gwynethguo"},"content":"                // haven\u0027t handle the split string exception","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"gwynethguo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"gwynethguo"},"content":"            Event cur \u003d new Event(desc, by, from);","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"gwynethguo"},"content":"            tasks[num_tasks] \u003d cur;","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"gwynethguo"},"content":"            num_tasks \u003d num_tasks + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d \"Got it. I\u0027ve added this task:\\n\" + cur + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"gwynethguo"},"content":"            this.msg +\u003d \"Now you have \" + this.num_tasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(this.msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"gwynethguo"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"gwynethguo"},"content":"            this.msg \u003d this.add_lines(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"gwynethguo"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"gwynethguo"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"gwynethguo"},"content":"    String add_lines(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"gwynethguo"},"content":"        return this.lines + msg + this.lines;","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gwynethguo":122,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gwynethguo":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"    public Event(String description, String by, String from) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gwynethguo"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gwynethguo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gwynethguo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gwynethguo"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gwynethguo":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gwynethguo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"gwynethguo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"gwynethguo"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"gwynethguo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"gwynethguo"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"gwynethguo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"gwynethguo"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"gwynethguo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"gwynethguo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"gwynethguo"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gwynethguo":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"gwynethguo"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"gwynethguo":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gwynethguo"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"gwynethguo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"gwynethguo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"gwynethguo"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"gwynethguo"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"gwynethguo"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"gwynethguo"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"gwynethguo"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"gwynethguo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gwynethguo":9}}]
