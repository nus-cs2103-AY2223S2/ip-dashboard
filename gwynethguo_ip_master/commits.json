{"authorDailyContributionsMap":{"gwynethguo":[{"date":"2023-01-18","commitResults":[{"hash":"09fbcf64bc4ccb0c83f077d397c1744f115f877f","messageTitle":"Add main features: Greet, Echo, Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"4b42a44135380c2e12ddcae7cbb7aca22cdd6276","messageTitle":"Add features: Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"00990041699bdb63a9b69c1462d280e4dbc0ac58","messageTitle":"Add feature: Mark As Done","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":7}}},{"hash":"ed16ea1cc26a3e9d302f6ad1dd76c093b653fbaa","messageTitle":"Add feature: Todo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":11}}},{"hash":"f9d85a9406e19c1c86acec23386c697f54ff484e","messageTitle":"Add feature: Deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":2}}},{"hash":"e63fe0a171d5f986339df334dcf69cc0fcd2fe4f","messageTitle":"Add feature: Event","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":2}}}]},{"date":"2023-01-19","commitResults":[{"hash":"6359086798c104b3894f8a499411ba1eaa39773c","messageTitle":"Automated Text UI Testing: todo, deadline, event, mark, unmark, bye","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}},{"hash":"510dd2b2b495020f1e7a8171e7df70145603d97a","messageTitle":"Handle errors: todo, mark, unmark, wrong commands","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":9}}},{"hash":"bd88c191df8e150466f30bc03dc3dbcead376cd3","messageTitle":"Add feature: Delete","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":8}}}]},{"date":"2023-01-26","commitResults":[{"hash":"1b3676c032e7024d9a40e56d8a17d4330f5df1a7","messageTitle":"Add Save Feature","messageBody":"Duke can receive commands (e.g. todo, deadline, event, bye, mark, etc.)\nand save the tasks in a single session.\n\nHowever, the tasks are not saved after exiting a session (entering\nthe command \"bye\").\n\nAdding this feature allows the user to recall the tasks saved before\nthe current session, by saving the data into the user\u0027s hard disk.\n","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":1}}},{"hash":"b345b2ffe3335672d75eee59a9c85b6016f5f85a","messageTitle":"Add Dates Feature","messageBody":"Duke can store the deadline dates as strings for a deadline task.\n\nTo make the dates more meaningful, the dates should be stored as dates.\n\nThe dates are passed as strings, then it is parsed as date (using\njava\u0027s LocalDate).\n\nInput from user must be in the format of yyyy-mm-dd. Otherwise, it will\nbe invalid. Times of the deadline are not yet included in this feature.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"a106ce1dc52adecd7547ca295e412098d8050f6b","messageTitle":"Fix bugs for Level-8 combined with Level-7","messageBody":"While getting the data from the saved file, a bug will occur if the\ntype of task is a deadline. This is because the date format in the\nsaved file is MM dd yyyy instead of yyyy-mm-dd. This will cause the\nconstructor of the Deadline class to accept MM dd yyyy instead of\nyyyy-mm-dd which will cause an error in the constructor.\n\nTo fix the error, we should change the date format in the constructor\nthat is being used to obtain the data from the saved file.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"7c244e657f085df55e88f64d2ee82562d2a772cf","messageTitle":"Reconstruct files to make the code more OOP","messageBody":"The logic of the application is in the Duke.java file, so this does not\nfollow the OOP Principles: abstraction, encapsulation, polymorphism,\nand inheritance.\n\nTo follow those principles, we must make separate files and designate\neach class to have a specific function (e.g. Parse -\u003e to parse the\nuser\u0027s commands, Ui -\u003e to deal with user interactions, Command -\u003e to\nexecute the command that the user enters, etc.)\n\nThe new classes made are: Ui, Parse, Storage, TaskList, Command\n(abstract class), AddCommand, DeleteCommand, ListCommand, MarkCommand,\nUnmarkCommand, ExitCommand, CommandType (enum class)\n\nEach class have different functions and the command types are separated\ninto different classes so as to make the code clear and provide\nencapsulation.\n\nUsed the enum class for CommandType because there is a finite number\nof commands that a user can enter (which makes it suitable according\nto the textbook)\n","tags":["A-MoreOOP","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":425,"deletions":159}}},{"hash":"d77a531fd426ca10794a5d8d752c1ca2e8e05b04","messageTitle":"Organize classes into packages to make it easier to find the files for myself and the collaborator (if a collaborator exists)","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":8},"md":{"insertions":2,"deletions":2}}},{"hash":"c395ffdabd1133ba714dedb42090b68c4190f4a2","messageTitle":"Add Gradle Support","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}}]},{"date":"2023-01-27","commitResults":[{"hash":"778106bc2db3043f96f61b2d1fd2653fe7f3e45b","messageTitle":"Add JUnit tests","messageBody":"Add JUnit tests to test the behavior of the code.\n\nAdd TodoTest and TaskListTest, 2 methods each for unit testing.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}},{"hash":"8696759a534f2b42cc769cb9402afece4e3d4f57","messageTitle":"Add Javadoc to enable other people to read the code easily.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":383,"deletions":2}}}]},{"date":"2023-01-28","commitResults":[{"hash":"67e88a380b7312b95c7fcc34e4803ca33a2f0ec5","messageTitle":"Comply with the Coding Standard","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":144,"deletions":145}}},{"hash":"96e4996de2dfba1c0457f52096c31cd56a85144d","messageTitle":"Add find keyword feature","messageBody":"Users can add, delete, mark, etc. the current tasks.\n\nHowever, if there are too many tasks, the user will not be able to\nfind the task that they are searching for.\n\nThe find feature allows the user to search for keywords and obtain the\ntasks which have the keyword in their description.\n\nThis is done by adding find command (class FindCommand) and filter\nmethod in the TaskList class in order to obtain the TaskList that has\nbeen filtered by the keyword.\n","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}}]},{"date":"2023-01-29","commitResults":[{"hash":"33f64bc3be3b1bf92d261561555c7501ea58d9d8","messageTitle":"Add changed file: TaskList.java (changes not included in the commit before)","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2023-01-31","commitResults":[{"hash":"a68f92c9ec64ca4d0f38d3d465b39fa58f201754","messageTitle":"Change Duke to Kuromi.","messageBody":"Change packages, class names to Kuromi (new product name).\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":95,"deletions":95},"md":{"insertions":2,"deletions":2}}},{"hash":"7487fbd380cea38bf7658df614038e5f5821eadb","messageTitle":"Change some JavaDoc from Duke to Kuromi.","messageBody":"No changes in checkstyle because already imported checkstyle in Week 3.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":9}}}]},{"date":"2023-02-01","commitResults":[{"hash":"5be6ce0c7673b5c2d11cfba72e9505c5ad0535a3","messageTitle":"Add DialogBox, Launcher, Main, MainWindow for GUI.","messageBody":"There are still some errors occuring for the current commit.\n","fileTypesAndContributionMap":{"fxml":{"insertions":19,"deletions":0},"java":{"insertions":8,"deletions":0}}},{"hash":"e7f04788e69266d8a7fc1754c26329d8a3fefe55","messageTitle":"Edit Commands and DialogBox.","messageBody":"Still have some errors occuring\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":16,"deletions":0},"java":{"insertions":194,"deletions":46}}},{"hash":"26b6803180504a683e870c99418da0e747a8ca8b","messageTitle":"Add GUI to Kuromi","messageBody":"To ease users in viewing the chat with Kuromi, a GUI is added.\n\nGUI is added using JavaFX (FXML)\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":50,"deletions":34}}},{"hash":"60edd2cd525579ec844cf2bbe293dd6457dd5584","messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2023-02-06","commitResults":[{"hash":"125321cb17ab61ac5e041430743df4ea5ab8e57c","messageTitle":"Add welcome message to GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}}]},{"date":"2023-02-10","commitResults":[{"hash":"ed709833e72396d7092268d0cf20cd28e9333eb1","messageTitle":"Add assertions","messageBody":"Kuromi is able to add, delete, get data from storage.\n\nHowever, there are invariants that should be followed by the\napplication.\n\nTo check if the application follows the invariants, we can add\nassertions to ensure that the app follows the rule (e.g. adding a task\nincreases the task list size by 1, deleting a task decreases the task\nlist size by 1, and the task list size of a user obtaining tasks from\nthe storage is the same as the number of tasks in the storage file.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":8,"deletions":0}}},{"hash":"0c172478dd565c60918d235506028c251f92724a","messageTitle":"Align with the Code Quality guidelines","messageBody":"The Parser class contains only one method (parse) that contains the\nprocesses to split the input into description, deadline, etc. for\neach command.\n\nThis makes the method to be too long (more than 30 lines).\n\nTherefore, I made a method for each command to separate the processes.\nThe event command might be still too long (around 40 lines), I didn\u0027t\nfind a way to shorten the number of lines for the method.\n\nFurthermore, I changed the execute method for every child classes of\nCommand class, so that it aligns with SLAP. I also changed the code\nin parser method to align with SLAP\n","fileTypesAndContributionMap":{"java":{"insertions":212,"deletions":196}}},{"hash":"ac912f7f8d54b4b74239851e305a01f5ba60284c","messageTitle":"Use Java Streams for find method in TaskList class (for FindCommand)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"efc34a84e6305e95c81c8453823009f1bf9105d5","messageTitle":"Checkstyle issues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":14}}},{"hash":"799f54815721cf2ebb2dcc6dfc82e7a65dcc50e4","messageTitle":"Checkstyle for Assertions Issues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]}]},"authorFileTypeContributionMap":{"gwynethguo":{"java":1374,"md":3,"fxml":35,"sh":0,"bat":0,"gradle":23,"txt":9}},"authorContributionVariance":{"gwynethguo":38066.023},"authorDisplayNameMap":{"gwynethguo":"CS2103-W17-1 GWYN..LING"}}
