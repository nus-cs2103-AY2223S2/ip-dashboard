[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gyulong1":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gyulong1":20,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"Duke Task Manager is a **desktop application for managing your tasks via a Command Lind Interface** (CLI) with a simple ","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"Graphical User Interface (GUI) for users that are not familiar with Terminal.","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"***","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"## Quick Start","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"1. Ensure you have Java 11 or above installed in your computer, you can install it from [here]","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"   (https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"2. Download the latest duke.Duke.jar from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"4. Open a command terminal. `cd` into the folder you put the jar file in, and use the `java -jar duke.Duke.jar` command to run the application. A GUI similar to the below should appear in a few seconds. ","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"\u003cbr /\u003e  \u003cbr /\u003e  ![start](images/start.png)","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"5. Type the command in the input box and press `Enter`.    Some example commands you can try:","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"* `list` : Lists all tasks.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"* `todo Buy Bread` : Adds a task to `Buy bread` to the Task Manager.","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"* `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"* `mark 3` :  Marks the 3rd task shown as done in the current list.","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"* `find bread` : Lists all tasks with the keyword bread.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"* `undo` : Undos the most recent command if possible.","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"* `bye` : Exits the app.","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"6. Refer to the below for details of each command.","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"***","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"## Features","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"### Show all tasks: list","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"Displays all tasks.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"Format: `list`","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"### Adding a to do task: `todo`","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"Adds a to do task.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"Format: `todo [task]`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"- `todo Buy Bread`","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"Adds a task with a deadline.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"Format: `deadline [task] /by [YYYY-MM-DD]`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"- `deadline do math homework book /by 2023-03-01`","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"### Adding an event task: `event`","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"Adds an event task.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"Format: `event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"- `event math camp /from 2023-03-01 /to 2023-03-04`","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"### Marking/unmarking a task: `mark` or `unmark`","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"Marks/unmarks a task as done.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"Format: `mark [index]`\u003cbr /\u003e `unmark [index]` \u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"- Marks/unmarks the task at the specified `index`. The index refers to the index number shown in the task list. ","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"  Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"- `mark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"- `unmark 2`","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"### Searching for tasks: `find`","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"Find tasks whose description contains the keyword. Search is case-insensitive\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"Format: `find [keyword]`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"  Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"- `find bread` returns `[T][ ] Buy Bread`","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"  \u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"Deletes the task at the specified index.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"Format: `delete [index]`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"- Deletes the task at the specified `index`. The index refers to the index number shown in the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"gyulong1"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"gyulong1"},"content":"  Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"gyulong1"},"content":"- `delete 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"gyulong1"},"content":"  \u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"gyulong1"},"content":"### Undo a task: `undo`","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"gyulong1"},"content":"Undo the most recent task.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"gyulong1"},"content":"Format: `undo`\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"gyulong1"},"content":"- Reverses a task, eg, adds a task back to the list or unmarks a task that was previously marked.","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"gyulong1"},"content":"- If task is one that cannot be undo-ed, eg list, find, bye, an error message will be shown.","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"gyulong1"},"content":"  Examples:","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"gyulong1"},"content":"- `undo`","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"gyulong1"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"gyulong1"},"content":"Exits the program.\u003cbr /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"gyulong1"},"content":"Format: `bye`","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"gyulong1"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gyulong1":72,"-":11}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":" * Represents a duke chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * Returns duke object.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param filePath path for backup file.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"        assert filePath !\u003d \"\" : \"filePath is non empty\";","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"            tasks \u003d storage.readArray();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"     * Runs the duke chatbot.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"    public String greet() {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"        return ui.greet();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"    public String bye() {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"        return ui.bye();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"            Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"            String output \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"            tasks.setLastCommand(command.inverseCommand(tasks));","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"            return output;","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"        return \"I do not understand your command, please try again.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gyulong1":52,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":" * Represents a duke exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"public class DukeException","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"        extends RuntimeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"            stage.setTitle(\"Duke Task Manager\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"                DialogBox.getDukeDialog(duke.greet(), userImage));","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"        if (response.equals(duke.bye())) {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"                Thread.sleep(1000);","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandBye;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandDelete;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandError;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandFind;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandMark;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandTask;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"import duke.command.CommandUndo;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":" * Represents a parser for input text.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * Returns the command object that the input line represents.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @param fullCommand full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     * @return command","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        String[] parts \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        switch (parts[0].toLowerCase()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"            return new CommandBye(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"        case \"list\":","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"            return new CommandList(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"        case \"undo\":","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"            return new CommandUndo(fullCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"                System.out.println(\"invalid\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"                return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"            if (parts[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"                return new CommandMark(fullCommand, index, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"            } else if (parts[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"                return new CommandMark(fullCommand, index, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"            } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"                return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"                System.out.println(\"invalid\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"                return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"            index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"            return new CommandDelete(fullCommand, index);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"        case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"                System.out.println(\"invalid\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"                return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"            return new CommandFind(fullCommand, parts[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"            Task t \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"gyulong1"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"gyulong1"},"content":"                if (parts[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"gyulong1"},"content":"                    if (fullCommand.length() \u003d\u003d 5) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"gyulong1"},"content":"                        return new CommandError(fullCommand, \"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"gyulong1"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"gyulong1"},"content":"                    t \u003d new Todo(fullCommand.substring(5));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"gyulong1"},"content":"                } else if (parts[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"gyulong1"},"content":"                    index \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"gyulong1"},"content":"                    if (index !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"gyulong1"},"content":"                        t \u003d new Deadline(fullCommand.substring(9, index), fullCommand.substring(index + 4));","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"gyulong1"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"gyulong1"},"content":"                        return new CommandError(fullCommand, \"OOPS!!! Can\u0027t find a /by time for a deadline.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"gyulong1"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"gyulong1"},"content":"                } else if ((parts[0].equalsIgnoreCase(\"event\"))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"gyulong1"},"content":"                    int indexFrom \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"gyulong1"},"content":"                    int indexTo \u003d fullCommand.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"gyulong1"},"content":"                    if (indexFrom !\u003d -1 \u0026\u0026 indexTo !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"gyulong1"},"content":"                        t \u003d new Event(fullCommand.substring(6, indexFrom),","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"gyulong1"},"content":"                                fullCommand.substring(indexFrom + 6, indexTo - 1),","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"gyulong1"},"content":"                                fullCommand.substring(indexTo + 4));","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"gyulong1"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"gyulong1"},"content":"                        return new CommandError(fullCommand, \"OOPS!!! Can\u0027t find a /from or /to time for an event.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"gyulong1"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"gyulong1"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"gyulong1"},"content":"                    return new CommandError(fullCommand, \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"gyulong1"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"gyulong1"},"content":"                return new CommandTask(fullCommand, t);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"gyulong1"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"gyulong1"},"content":"                System.out.println(ex);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"gyulong1"},"content":"        return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":" * Represents a storage object for backup.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    private final Path backupPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * Returns a storage object.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * @param filepath path of backup file.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        Path path \u003d java.nio.file.Paths.get(home, \"src\", \"main\", \"data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"        if (!directoryExists) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"            boolean createDirSuccess \u003d new File(path.toUri()).mkdirs();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"            if (!createDirSuccess) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"                System.out.println(\"Could not create /data directory.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"        this.backupPath \u003d Path.of(path + \"/\" + filepath);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"     * Loads entire task list into the backup file.","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"     * @param arr task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"    public void writeArray(TaskList arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"        File file \u003d new File(backupPath.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"            boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"            for (int i \u003d 0; i \u003c arr.getLength(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"                fileWriter.write(arr.getTask(i).toBackup());","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"     * Reads backup file and converts into task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"     * @return task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"    public TaskList readArray() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"        TaskList arr \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"gyulong1"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"gyulong1"},"content":"            File file \u003d new File(backupPath.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"gyulong1"},"content":"            System.out.println(backupPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"gyulong1"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"gyulong1"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"gyulong1"},"content":"                String[] line \u003d myReader.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"gyulong1"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"gyulong1"},"content":"                line[0] \u003d line[0].strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"gyulong1"},"content":"                assert Pattern.compile(\"[TDE]\").matcher(line[0]).matches() : \"should be one of 3 types\";","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"gyulong1"},"content":"                switch (line[0]) {","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"gyulong1"},"content":"                case \"T\":","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"gyulong1"},"content":"                    task \u003d new Todo(line[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"gyulong1"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"gyulong1"},"content":"                case \"D\":","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"gyulong1"},"content":"                    task \u003d new Deadline(line[2], line[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"gyulong1"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"gyulong1"},"content":"                case \"E\":","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"gyulong1"},"content":"                    task \u003d new Event(line[2], line[3], line[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"gyulong1"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"gyulong1"},"content":"                default:","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"gyulong1"},"content":"                    break;","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"gyulong1"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"gyulong1"},"content":"                if (line[1].strip().equals(\"1\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"gyulong1"},"content":"                    assert task !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"gyulong1"},"content":"                    task.setStatus(true);","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"gyulong1"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"gyulong1"},"content":"                arr.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"gyulong1"},"content":"            myReader.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"gyulong1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"gyulong1"},"content":"            System.out.println(\"An error occurred while reading the backup file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"gyulong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"gyulong1"},"content":"        return arr;","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"gyulong1":108}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" * Represents a tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    private ArrayList\u003cTask\u003e array;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    private Command lastCommand \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * Returns an empty task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"        array \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        array.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"     * Deletes a task from an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to delete.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"        array.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"     * Marks a task at an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to mark.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"     * @param mark final status of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"    public void markTask(int index, boolean mark) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"        assert index \u003c array.size() : \"index cannot be out of bounds\";","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"        this.getTask(index).setStatus(mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"     * Returns task at index.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to return.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"     * @return task at index.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"        if (index \u003c array.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"            return array.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"            return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"     * Returns length of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"     * @return length of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"    public int getLength() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"        return array.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"gyulong1"},"content":"     * Returns the last command.","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"gyulong1"},"content":"     * @return last command.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"gyulong1"},"content":"    public Command getLastCommand() {","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"gyulong1"},"content":"        return this.lastCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"gyulong1"},"content":"     * Stores the last command.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"gyulong1"},"content":"    public void setLastCommand(Command command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"gyulong1"},"content":"        this.lastCommand \u003d command;","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":83}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":" * Represents an ui object for interaction with user.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"     * Greets the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"    public String greet() {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"        String name \u003d \"Duke\";","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"        return \"Hello from \" + name + \", what can I do for you?\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"     * Says goodbye to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    public String bye() {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     * Returns the next input line.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"     * @return input.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents an executable command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    private final String fullCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * Returns a Command object.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    public Command(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"        fullCommand \u003d command;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * Returns full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @return command.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    public String getFullCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"        return fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"     * @param ui       deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"     * @param storage  deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"     * Returns the inverse of the command for undo. By default, returns itself if command has no inverse.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"     * @return new command that will undo the previous command.","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"    public Command inverseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"        return this;","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"    };","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"     * Returns whether command is a bye command.","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"     * @return false by default.","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":55}},{"path":"src/main/java/duke/command/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents a bye command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"     * Returns a bye command.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    public CommandBye(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"     * Sends goodbye message to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        return ui.bye();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"     * Returns whether command is a bye command.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"     * @return true.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":38}},{"path":"src/main/java/duke/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" * Represents a delete command.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    private Task deletedTask;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * Returns a delete command.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    public CommandDelete(String command, int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     * Altenative constructor for a delete command.","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"    public CommandDelete(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        super(\"\");","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     * Deletes the specified task from the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"        String headerString \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"        String taskString \u003d taskList.getTask(index).toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"        this.deletedTask \u003d taskList.getTask(index);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"        String len \u003d (taskList.getLength() \u003d\u003d 1 ? taskList.getLength() + \" task\" : taskList.getLength() + \" tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"        String lengthString \u003d \"Now you have \" + len + \" in the list.\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"        storage.writeArray(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"        return headerString + taskString + lengthString;","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"     * Returns a task command to ask a task back into the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"     * @return task command with the deleted task.","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"    public Command inverseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"        if (this.deletedTask !\u003d null) {","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"            return new CommandTask(this.deletedTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"            return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":66}},{"path":"src/main/java/duke/command/CommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents an error command.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandError extends Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    private final String output;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"     * Returns a bye command.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"    public CommandError(String command, String output) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"        this.output \u003d output;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * Sends error message to the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        return this.output;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"gyulong1":31}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents a find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    private String word;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * returns a find command.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param word keyword to find.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    public CommandFind(String command, String word) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     * Prints the tasks that contain the keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        String retString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"        for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"            boolean containsKeyword \u003d taskList.getTask(i).getDesc().contains(word);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"            if (containsKeyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"                retString +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.getTask(i).toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"        return retString;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"gyulong1":40}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents a list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandList extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"     * Returns a list command.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    public CommandList(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"     * Prints the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"        for (int i \u003d 0; i \u003c taskList.getLength(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"            returnString +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.getTask(i).toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        return returnString;","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":33}},{"path":"src/main/java/duke/command/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents a mark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    private final boolean isMarked;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * Returns a mark/unmark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     * @param index index of task to be marked/unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"     * @param mark whether to mark or unmark.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    public CommandMark(String command, int index, boolean mark) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"        this.isMarked \u003d mark;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     * Marks the specified task in the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"        taskList.markTask(index, isMarked);","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"        String markedString \u003d (isMarked)","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"        String taskString \u003d (taskList.getTask(index).toString() + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"        storage.writeArray(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"        return markedString + taskString;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"     * Returns an inverse command to mark/unmark a task.","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"     * @return inverse task command.","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"    public Command inverseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"        return new CommandMark(this.getFullCommand(), index, !isMarked);","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":52}},{"path":"src/main/java/duke/command/CommandTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"public class CommandTask extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    private final Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * Returns a task command.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    public CommandTask(String command, Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * Alternate constructor for undo commands.","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    public CommandTask(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        super(\"\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"     * Adds task to task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"        String addedString \u003d (\"added: \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"        String len \u003d (taskList.getLength() \u003d\u003d 1 ? taskList.getLength() + \" task\" : taskList.getLength() + \" tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"        String lengthString \u003d (\"Now you have \" + len + \" in the list.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"        storage.writeArray(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"        return addedString + lengthString;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"     * Returns a delete command to delete a command.","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"     * @return task command with the deleted task.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"    public Command inverseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"        int index \u003d taskList.getLength() - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"        return new CommandDelete(index);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"gyulong1":59}},{"path":"src/main/java/duke/command/CommandUndo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" * Represents an undo command.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class CommandUndo extends Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"     * Returns an undo command.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"     * @param command full unparsed command.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    public CommandUndo(String command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"        super(command);","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"     * Find previous task and undo the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"     * @param ui deals with interactions with the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"     * @param storage deals with loading and saving tasks from file.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"        Command lastCommand \u003d taskList.getLastCommand();","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"        if (lastCommand !\u003d null) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"            return lastCommand.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        storage.writeArray(taskList);","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     * Returns an Error command.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"     * @param taskList contains the task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"     * @return error command.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"    public Command inverseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"        return new CommandError(\"\", \"You cannot undo an undo command.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"gyulong1":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * Returns deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * @param description description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param by deadline of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"     * Returns format of task for printing to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        String byStr \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byStr + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     * Return format of task for backup.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"    public String toBackup() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"        return \"D | \" + super.toBackup() + \" | \" + by + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":" * Represents an event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * Returns event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * @param description description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     * @param from start time of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"     * @param to end time of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"        this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"        this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     * Returns format of task for printing to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"        String fromStr \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"        String toStr \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + fromStr + \" to: \" + toStr + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"     * Return format of task for backup.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"    public String toBackup() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"        return \"D | \" + super.toBackup() + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":" * Represents a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"    protected String desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    protected final int id;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"     * Returns a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"     * @param description description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"        this.desc \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        Task.count +\u003d 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        this.id \u003d Task.count;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     * @return description","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"        return this.desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"gyulong1"},"content":"     * Sets the status of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"gyulong1"},"content":"     * @param isDone final status of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"gyulong1"},"content":"    public void setStatus(Boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"gyulong1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"gyulong1"},"content":"     * Returns status icon depending on whether task is marked.","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"gyulong1"},"content":"     * @return X for marked, empty if unmarked,","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"gyulong1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"gyulong1"},"content":"        return (isDone) ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"gyulong1"},"content":"     * Returns unique id for task.","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"gyulong1"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"gyulong1"},"content":"     * @return task id","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"gyulong1"},"content":"    public int getId() {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"gyulong1"},"content":"        return this.id;","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"gyulong1"},"content":"     * Returns format of task for printing to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"gyulong1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"gyulong1"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.desc);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"gyulong1"},"content":"     * Returns format of task for backup.","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"gyulong1"},"content":"    public String toBackup() {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"gyulong1"},"content":"        return String.format(\"%s | %s\", (isDone) ? \"1\" : \"0\", this.desc);","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":74}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":" * Represents a todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"     * Returns todo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"     * @param description description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"     * Returns format of task for printing to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"gyulong1"},"content":"     * Return format of task for backup.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"gyulong1"},"content":"     * @return string format.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"gyulong1"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"gyulong1"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"gyulong1"},"content":"    public String toBackup() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"gyulong1"},"content":"        return \"T | \" + super.toBackup() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"gyulong1":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"gyulong1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"gyulong1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"gyulong1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"gyulong1"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"gyulong1"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"gyulong1"},"content":"    public void parseCommand_todoCommand() {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"gyulong1"},"content":"        Command command \u003d Parser.parse(\"todo buy bread /by 2023-02-01\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"gyulong1"},"content":"        assertEquals(\"todo buy bread /by 2023-02-01\", command.getFullCommand());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"gyulong1"},"content":"    public void parseCommand_byeCommand() {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"gyulong1"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"gyulong1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"gyulong1"},"content":"        assertEquals(true, command.isExit());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"gyulong1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"gyulong1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"gyulong1":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gyulong1"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"gyulong1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gyulong1"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gyulong1":1,"-":20}}]
