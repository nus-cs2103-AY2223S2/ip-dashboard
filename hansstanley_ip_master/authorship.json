[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"# Jarvis project template","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"4. After that, locate the `src/main/java/jarvis/Jarvis.java` file, right-click it, and choose `Run jarvis.Jarvis.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"## Coding standards","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"- Variable names use lower camel case","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"- Class, enum and interface names use upper camel case","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":11,"-":18}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    // GUI requirements","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    mainClassName \u003d \"jarvis.Launcher\"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    archiveBaseName \u003d \"jarvis\"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":22,"-":39}},{"path":"src/main/java/jarvis/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.Command;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidActionException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.parser.Parser;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * Jarvis class to run the program.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class Jarvis {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final String BOT_NAME \u003d Jarvis.class.getSimpleName();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * Constructor for Jarvis.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public Jarvis() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        this.ui \u003d new Ui(BOT_NAME);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        this.taskList \u003d new TaskList(storage.readTasks());","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * Runs Jarvis.","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public void run() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        this.ui.printLogo();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        this.ui.printStandard(Ui.Response.INTRO);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        while (!isExit \u0026\u0026 scanner.hasNextLine()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"            this.handleUserInput(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        this.handleUserInput(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        return this.ui.dumpResponses();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    private void handleUserInput(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            this.ui.printUserPrompt();","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        Command command;","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"            command \u003d Parser.parse(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        } catch (InvalidActionException e) {","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"            this.ui.printStandard(Ui.Response.CONFUSED);","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        command.execute(this.ui, this.taskList, this.storage);","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        isExit \u003d command.isExit();","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":71}},{"path":"src/main/java/jarvis/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":" * Launcher for the Jarvis GUI.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"public class Launcher {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":12}},{"path":"src/main/java/jarvis/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.layout.MainWindow;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * GUI class for Jarvis using FXML.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private final Jarvis jarvis \u003d new Jarvis();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            scene.getStylesheets().add(\"/style/styles.css\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            primaryStage.setMinWidth(400.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"            primaryStage.setMinHeight(600.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJarvis(jarvis);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            primaryStage.show();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":34}},{"path":"src/main/java/jarvis/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.TaskIoException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" * Command class to exit the bot.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"        super(Action.BYE, null);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        } catch (TaskIoException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        ui.printStandard(Ui.Response.GOODBYE);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":32}},{"path":"src/main/java/jarvis/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidActionException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" * Abstract command class.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * Enum of command actions with their associated keywords.","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public enum Action {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        INTRO(\"hi\", \"hello\", \"hey\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        BYE(\"bye\", \"goodbye\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        LIST(\"list\", \"find\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        MARK_DONE(\"mark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        MARK_UNDONE(\"unmark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        CREATE_TODO(\"todo\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        CREATE_DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        CREATE_EVENT(\"event\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        CREATE_TIMED(\"timed\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        DELETE_TASK(\"delete\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        DEADLINE_BY(\"by\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        EVENT_FROM(\"from\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        EVENT_TO(\"to\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        DURATION_DAYS(\"day\", \"days\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        DURATION_HOURS(\"hour\", \"hours\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        DURATION_MINUTES(\"minute\", \"minutes\", \"min\", \"mins\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        private final String[] keywords;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        Action(String ...keywords) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"            this.keywords \u003d keywords;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // @@author hansstanley-reused","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/604424","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // with minor modifications.","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         * Converts a string into an Action.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * @param str Raw string.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * @return The matching Action, if any.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * @throws InvalidActionException If the raw string does not match any Action.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        public static Action fromString(String str) throws InvalidActionException {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (str \u003d\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new InvalidActionException(\"Action string cannot be null\");","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            str \u003d str.trim().toLowerCase();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            for (Action action : Action.values()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                if (List.of(action.keywords).contains(str)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    return action;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            // String does not match any keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new InvalidActionException(\"Invalid action string\");","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Action action;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final String body;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private final Map\u003cAction, Command\u003e commandMap;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Constructor for a command without subcommands.","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param action Determines the nature of the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param body Supplementary information for the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Command(Action action, String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert action !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.body \u003d body;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Constructor for a command.","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param action Determines the nature of the command.","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param body Supplementary information for the command.","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param subCommands Secondary commands as additional parameters.","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Command(Action action, String body, List\u003cCommand\u003e subCommands) {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this(action, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (Command command : subCommands) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.commandMap.put(command.action, command);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Determines whether the given command has a body.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param command Command of interest.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return Whether the command has a body.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static boolean hasBody(Command command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return command !\u003d null","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 command.body !\u003d null","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 !command.body.isBlank();","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @param ui Ui object.","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @param storage Storage object.","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @return Whether the command should exit the bot.","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @return The body of the command, if any.","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String getBody() {","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return this.body;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int getBodyAsInt() throws CommandParseException {","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return Integer.parseInt(body);","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new CommandParseException(","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    \"Cannot convert body to int\",","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    String.format(\"\u0027%s\u0027 is not an integer.\", body)","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param actions Actions to check against.","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @return Whether this command is of the given actions\u0027 natures.","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean hasAction(Action ...actions) {","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assert actions !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (Action action : actions) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            if (this.action \u003d\u003d action) {","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns the subcommand with the first matching action, if any.","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @param actions Arrays of actions.","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @return Command with the first matching action.","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public Command getSubCommand(Action ...actions) {","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (Action action : actions) {","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            Command subCommand \u003d this.commandMap.getOrDefault(action, null);","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (subCommand !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                return subCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":44,"-":135}},{"path":"src/main/java/jarvis/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * Command class to create deadline tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public DeadlineCommand(String body, List\u003cCommand\u003e subCommands) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        super(Action.CREATE_DEADLINE, body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        Command byCommand \u003d this.getSubCommand(Action.DEADLINE_BY);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        if (!Command.hasBody(byCommand)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            ui.printError(\"The deadline (\u0027/by ...\u0027) is missing.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.addTask(new DeadlineTask(this.getBody(), byCommand.getBody())));","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":35}},{"path":"src/main/java/jarvis/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" * Command class to delete tasks.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    private final int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a command that deletes a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * @param body String 1-based index of the task to delete.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    public DeleteCommand(String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        super(Action.DELETE_TASK, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            index \u003d Integer.parseInt(body);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        } catch (NumberFormatException ignored) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            index \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.deleteTask(this.index));","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        } catch (MissingParameterException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":39}},{"path":"src/main/java/jarvis/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.EventTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * Command class to create event tasks.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public EventCommand(String body, List\u003cCommand\u003e subCommands) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        super(Action.CREATE_EVENT, body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        Command fromCommand \u003d this.getSubCommand(Action.EVENT_FROM);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        Command toCommand \u003d this.getSubCommand(Action.EVENT_TO);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        String fromDate \u003d Command.hasBody(fromCommand)","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                ? fromCommand.getBody()","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                : null;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        String toDate \u003d Command.hasBody(toCommand)","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                ? toCommand.getBody()","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"                : null;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.addTask(new EventTask(this.getBody(), fromDate, toDate)));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":37}},{"path":"src/main/java/jarvis/command/IntroCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":" * Command class for a Jarvis intro.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"public class IntroCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public IntroCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        super(Action.INTRO, null);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        ui.printLogo();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        ui.printStandard(Ui.Response.INTRO);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":20}},{"path":"src/main/java/jarvis/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskFilter;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * Command class to list and filter tasks.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private TaskFilter filter;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a list command.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * @param body Keywords to search for.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * @param subCommands Supplementary commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    public ListCommand(String body, List\u003cCommand\u003e subCommands) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        super(Action.LIST, body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        Command fromCommand \u003d this.getSubCommand(Action.EVENT_FROM);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        Command toCommand \u003d this.getSubCommand(Action.DEADLINE_BY, Action.EVENT_TO);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        String afterDate \u003d Command.hasBody(fromCommand)","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                ? fromCommand.getBody()","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                : null;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        String beforeDate \u003d Command.hasBody(toCommand)","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                ? toCommand.getBody()","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                : null;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"            this.filter \u003d new TaskFilter()","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"                    .setAfterDate(afterDate)","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                    .setBeforeDate(beforeDate)","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"                    .addKeywords(body);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        } catch (InvalidParameterException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"            this.filter \u003d new TaskFilter();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        ui.print(taskList.getTasksForPrint(this.filter));","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":50}},{"path":"src/main/java/jarvis/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" * Command class to mark tasks as done or undone.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    private final int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a command to mark tasks as done or undone.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     * @param body String 1-based index of the target task.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is to be marked as done or undone.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public MarkCommand(String body, boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        super(isDone ? Action.MARK_DONE : Action.MARK_UNDONE, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            index \u003d Integer.parseInt(body);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        } catch (NumberFormatException ignored) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            index \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.setTaskDone(this.index, this.isDone));","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        } catch (InvalidParameterException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":42}},{"path":"src/main/java/jarvis/command/TimedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.duration.Duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TimedTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" * Command class to create timed (fixed-duration) tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"public class TimedCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public TimedCommand(String body, List\u003cCommand\u003e subCommands) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        super(Action.CREATE_TIMED, body, subCommands);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        Duration duration \u003d new Duration();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        Command daysCommand \u003d getSubCommand(Action.DURATION_DAYS);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        Command hoursCommand \u003d getSubCommand(Action.DURATION_HOURS);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        Command minutesCommand \u003d getSubCommand(Action.DURATION_MINUTES);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            if (daysCommand !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                duration.setDays(daysCommand.getBodyAsInt());","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"            if (hoursCommand !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                duration.setHours(hoursCommand.getBodyAsInt());","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            if (minutesCommand !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                duration.setMinutes(minutesCommand.getBodyAsInt());","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"            System.out.println(duration);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.addTask(new TimedTask(getBody(), duration)));","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        } catch (MissingParameterException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"hansstanley":50}},{"path":"src/main/java/jarvis/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.ToDoTask;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * Command class for creating a todo task.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    public ToDoCommand(String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"        super(Action.CREATE_TODO, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            ui.print(taskList.addTask(new ToDoTask(this.getBody())));","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        } catch (MissingParameterException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            ui.printError(e.getFriendlyMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":27}},{"path":"src/main/java/jarvis/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":" * Command class for an unrecognised command.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public UnknownCommand() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"        super(null, null);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        ui.printStandard(Ui.Response.CONFUSED);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":21}},{"path":"src/main/java/jarvis/command/subcommand/ByCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command.subcommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Subcommand representing a deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class ByCommand extends SubCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public ByCommand(String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(Action.DEADLINE_BY, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/java/jarvis/command/subcommand/DurationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command.subcommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Subcommand representing a duration.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class DurationCommand extends SubCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public DurationCommand(Action action, String body) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(action, body);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/java/jarvis/command/subcommand/FromCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command.subcommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Subcommand representing a start date.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class FromCommand extends SubCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public FromCommand(String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(Action.EVENT_FROM, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/java/jarvis/command/subcommand/SubCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command.subcommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":" * Command class representing secondary commands (of format \u0027/command ...\u0027).","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"public abstract class SubCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    public SubCommand(Action action, String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"        super(action, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        // Subcommands do nothing when executed, as they only carry data.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":20}},{"path":"src/main/java/jarvis/command/subcommand/ToCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.command.subcommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Subcommand representing an end date.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class ToCommand extends SubCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public ToCommand(String body) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(Action.EVENT_TO, body);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/java/jarvis/duration/Duration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" * Container class representing duration.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"public class Duration {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    private int days \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    private int hours \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private int minutes \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public Duration setDays(int days) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"        this.days \u003d Math.max(0, days);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    public Duration setHours(int hours) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        this.hours \u003d Math.max(0, hours);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    public Duration setMinutes(int minutes) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        this.minutes \u003d Math.max(0, minutes);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        return days \u003d\u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * Serializes this duration into a string.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * @return Serialized string.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        String[] parts \u003d {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"                String.valueOf(days),","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"                String.valueOf(hours),","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"                String.valueOf(minutes)","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        };","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        return String.join(\" \", parts);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"     * Deserializes a string into a Duration object.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"     * @param str Serialized string.","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"     * @return Deserialized Duration object.","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    public static Duration deserialize(String str) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        Duration duration \u003d new Duration();","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        if (str \u003d\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"            return duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        String[] parts \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        switch (parts.length) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        case 3:","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"            duration.setMinutes(Integer.parseInt(parts[2]));","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"            // Fallthrough","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        case 2:","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"            duration.setHours(Integer.parseInt(parts[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"            // Fallthrough","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        case 1:","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"            duration.setDays(Integer.parseInt(parts[0]));","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"            // Fallthrough","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"            // Do nothing","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"        return duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"        if (isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"            return \"None\";","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"        List\u003cString\u003e parts \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        if (days \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"            parts.add(days + \" days\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        if (hours \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"            parts.add(hours + \" hours\");","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"        if (minutes \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"            parts.add(minutes + \" minutes\");","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        return String.join(\", \", parts);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"hansstanley":93}},{"path":"src/main/java/jarvis/exception/CommandParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Exception from parsing a command.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class CommandParseException extends JarvisException {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public CommandParseException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(message, \"That\u0027s Greek to me.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public CommandParseException(String message, String friendlyMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        super(message, friendlyMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":14}},{"path":"src/main/java/jarvis/exception/InvalidActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Exception from commands with invalid action verbs.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class InvalidActionException extends CommandParseException {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public InvalidActionException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(message, \"I don\u0027t understand what to do, please try again.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/java/jarvis/exception/InvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Exception from commands with invalid or unknown parameters.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class InvalidParameterException extends CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public InvalidParameterException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(message, \"I don\u0027t understand the given information, please try again.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public InvalidParameterException(String message, String friendlyMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        super(message, friendlyMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":14}},{"path":"src/main/java/jarvis/exception/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Base exception from Jarvis.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    private final String friendlyMessage;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a Jarvis exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public JarvisException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"        this.friendlyMessage \u003d null;","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a Jarvis exception, with a friendly message.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * @param friendlyMessage User-facing friendly message.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    public JarvisException(String message, String friendlyMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        this.friendlyMessage \u003d friendlyMessage;","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    public String getFriendlyMessage() {","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        return this.friendlyMessage \u003d\u003d null || this.friendlyMessage.isBlank()","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                ? this.getMessage()","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                : this.friendlyMessage;","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":35}},{"path":"src/main/java/jarvis/exception/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Exception from commands with insufficient parameters or information.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class MissingParameterException extends CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public MissingParameterException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(message, \"I\u0027m missing some information, could you please repeat?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public MissingParameterException(String message, String friendlyMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        super(message, friendlyMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":14}},{"path":"src/main/java/jarvis/exception/TaskIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Exception from saving tasks to or retrieving tasks from local storage.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public class TaskIoException extends JarvisException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    public TaskIoException(String message, String friendlyMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"        super(message, friendlyMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public TaskIoException(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        super(message, \"I\u0027m afraid the tasks could not be saved.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":14}},{"path":"src/main/java/jarvis/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.parser;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.ByeCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.DeadlineCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.DeleteCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.EventCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.IntroCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.ListCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.MarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.TimedCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.ToDoCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.UnknownCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.subcommand.ByCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.subcommand.DurationCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.subcommand.FromCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"import jarvis.command.subcommand.ToCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidActionException;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":" * Parser class for user commands.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * Parses a command string.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * @param commandLine User input string.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     * @return Parsed command.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * @throws InvalidActionException If command keyword is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public static Command parse(String commandLine) throws InvalidActionException {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        assert commandLine !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        return Parser.parse(new Scanner(commandLine));","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     * Parses a command from a Scanner.","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"     * @param scanner Scanner containing user input.","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"     * @return Parsed command.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"     * @throws InvalidActionException If command keyword is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    public static Command parse(Scanner scanner) throws InvalidActionException {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        assert scanner !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        Command.Action action \u003d Command.Action.fromString(scanner.hasNext() ? scanner.next() : null);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        String body \u003d Objects.toString(scanner.skip(\"\\\\s*\").findInLine(\"[^/]*\"), \"\").trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        List\u003cCommand\u003e subCommands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        scanner.skip(\"[^/]*\").useDelimiter(\"\\\\s*/\\\\s*\");","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        while (scanner.skip(\"\\\\s*\").hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"            subCommands.add(Parser.parse(new Scanner(scanner.next())));","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        switch (action) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        case INTRO:","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"            return new IntroCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        case BYE:","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        case LIST:","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"            return new ListCommand(body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        case MARK_DONE:","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"            return new MarkCommand(body, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        case MARK_UNDONE:","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"            return new MarkCommand(body, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        case DELETE_TASK:","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"            return new DeleteCommand(body);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"        case CREATE_TODO:","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"            return new ToDoCommand(body);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"        case CREATE_DEADLINE:","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"            return new DeadlineCommand(body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        case CREATE_EVENT:","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"            return new EventCommand(body, subCommands);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"        case CREATE_TIMED:","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"            return new TimedCommand(body, subCommands);","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        case DEADLINE_BY:","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"            return new ByCommand(body);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        case EVENT_FROM:","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"            return new FromCommand(body);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"        case EVENT_TO:","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"            return new ToCommand(body);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"        case DURATION_DAYS:","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        case DURATION_HOURS:","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        case DURATION_MINUTES:","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"            return new DurationCommand(action, body);","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"        default:","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":97}},{"path":"src/main/java/jarvis/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.TaskIoException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import jarvis.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":" * Storage class to handle local storage of tasks.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"public class Storage {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public static final String DATA_PATH \u003d \"data\";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    public static final String TASKS_PATH \u003d DATA_PATH + \"/tasks.txt\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * Reads tasks from local storage.","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * @return List of tasks (can be empty).","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public List\u003cTask\u003e readTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        List\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        Scanner scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            scanner \u003d new Scanner(this.getFile());","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        } catch (FileNotFoundException | TaskIoException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"            return tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"            Task task \u003d Task.deserialize(scanner.nextLine());","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        return tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"     * Saves the given list of tasks to local storage.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"     * @param tasks List of tasks to save.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"     * @throws TaskIoException If the tasks cannot be saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws TaskIoException {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"            FileWriter writer \u003d new FileWriter(this.getFile());","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"                writer.write(task.serialize());","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"                writer.write(\u0027\\n\u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"            writer.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"            throw new TaskIoException(\"Unable to save tasks\");","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"     * Creates the folder and file to save tasks, if necessary.","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"     * @return The created file.","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"     * @throws TaskIoException If the folder or file cannot be created or accessed.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    private File getFile() throws TaskIoException {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        File folder \u003d new File(DATA_PATH);","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        File file \u003d new File(TASKS_PATH);","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"            folder.mkdir();","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"            throw new TaskIoException(","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"                    \"Unable to create tasks file\",","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"                    \"There\u0027s something wrong in my head.\"","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        return file;","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":88}},{"path":"src/main/java/jarvis/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * Task class representing a deadline task","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * with \u0027by\u0027 information.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    public static final String ID \u003d \"D\";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a deadline task, marked as undone.","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * @param deadline Date string of the deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * @throws CommandParseException If the description or deadline is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public DeadlineTask(String description, String deadline) throws CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        this(description, deadline, false);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * @param deadline Date string of the deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * @throws CommandParseException If the description or deadline is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public DeadlineTask(String description, String deadline, boolean isDone) throws CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        if (deadline \u003d\u003d null || deadline.isBlank()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"            throw new MissingParameterException(\"Missing deadline\", \"A deadline (\u0027/by ...\u0027) is needed.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(\"Invalid deadline\", \"I don\u0027t understand the given date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    public boolean satisfies(TaskFilter filter) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        if (!super.satisfies(filter)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        boolean isAfter \u003d filter.getAfterDate() \u003d\u003d null || !filter.getAfterDate().isAfter(this.deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        boolean isBefore \u003d filter.getBeforeDate() \u003d\u003d null || !filter.getBeforeDate().isBefore(this.deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        return isAfter \u0026\u0026 isBefore;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        String[] data \u003d {ID, String.valueOf(this.isDone()), this.getDescription(), String.valueOf(this.deadline)};","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        return String.join(\" / \", data);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        return String.format(\"[%s]%s (by: %s)\", ID, super.toString(), this.deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":70}},{"path":"src/main/java/jarvis/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * Task class representing an event task","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * with \u0027from\u0027 and \u0027to\u0027 information.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    public static final String ID \u003d \"E\";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * Constructor of an event task, marked as undone.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * @param fromDate Date string when the event starts.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * @param toDate Date string when the event ends.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"     * @throws CommandParseException If description, fromDate or toDate is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    public EventTask(","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            String description,","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"            String fromDate,","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            String toDate","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    ) throws CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        this(description, fromDate, toDate, false);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     * Constructor of an event task.","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"     * @param fromDate Date string when the event starts.","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"     * @param toDate Date string when the event ends.","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the event is to be marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"     * @throws CommandParseException If description, fromDate or toDate is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    public EventTask(String description, String fromDate, String toDate, boolean isDone) throws CommandParseException {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        if (fromDate \u003d\u003d null || toDate \u003d\u003d null || fromDate.isBlank() || toDate.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"            throw new MissingParameterException(","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"                    \"Missing fromDateTime or toDateTime\",","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"                    \"Start (\u0027/from ...\u0027) and end (\u0027/to ...\u0027) markers are needed.\"","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"            this.fromDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"                    \"Invalid fromDate\",","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"                    \"I don\u0027t understand the date provided after /from.\"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"            this.toDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"                    \"Invalid toDate\",","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"                    \"I don\u0027t understand the date provided after /to.\"","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"        if (this.fromDate.isAfter(this.toDate)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"                    \"fromDate should be before toDate\",","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"                    \"The start marker (\u0027/from ...\u0027) should be earlier than the end marker (\u0027/to ...\u0027).\"","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    public boolean satisfies(TaskFilter filter) {","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        if (!super.satisfies(filter)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        boolean isBefore \u003d filter.getBeforeDate() \u003d\u003d null || !filter.getBeforeDate().isBefore(this.fromDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        boolean isAfter \u003d filter.getAfterDate() \u003d\u003d null || !filter.getAfterDate().isAfter(this.toDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        return isBefore \u0026\u0026 isAfter;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        String[] data \u003d {","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"            ID,","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"            String.valueOf(this.isDone()),","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"            this.getDescription(),","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"            String.valueOf(this.fromDate),","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"            String.valueOf(this.toDate)","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        };","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"        return String.join(\" / \", data);","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"        return String.format(","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"                \"[%s]%s (from: %s, to: %s)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"                ID,","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"                super.toString(),","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"                this.fromDate,","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"                this.toDate","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":110}},{"path":"src/main/java/jarvis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.duration.Duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":" * Abstract task class.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private final String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a task, marked as undone.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException If description is null or blank.","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    public Task(String description) throws MissingParameterException {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        if (description \u003d\u003d null || description.isBlank()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            throw new MissingParameterException(\"Missing description\", \"A task description is needed.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException If description is null or blank.","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public Task(String description, boolean isDone) throws MissingParameterException {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        this(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     * Serializes a task for storage.","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"     * @return Serial string.","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"     * Creates a task from the given serial string.","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"     * @param serial Serial string.","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"     * @return Created task.","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    public static Task deserialize(String serial) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        if (serial \u003d\u003d null || serial.isBlank()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"            return null;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        Scanner scanner \u003d new Scanner(serial).useDelimiter(\"\\\\s*/\\\\s*\");","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        String type \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        String description \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        String deadline \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        String fromDateTime \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        String toDateTime \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        String duration \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"        if (scanner.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"            type \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        if (scanner.hasNextBoolean()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"            isDone \u003d scanner.nextBoolean();","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        if (scanner.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"            description \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"            switch (type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"            case ToDoTask.ID:","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"                return new ToDoTask(description, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"            case DeadlineTask.ID:","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"                    deadline \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"                return new DeadlineTask(description, deadline, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"            case EventTask.ID:","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"                    fromDateTime \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"                    toDateTime \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"                return new EventTask(description, fromDateTime, toDateTime, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"            case TimedTask.ID:","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"                    duration \u003d scanner.next();","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"                return new TimedTask(description, Duration.deserialize(duration));","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"            default:","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"                return null;","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"            return null;","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is to be marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-13"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-13"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"     * @return Task description.","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"     * Returns whether the task satisfies the given filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"     * @param filter Task filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"     * @return Whether the task satisfies the given filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"    public boolean satisfies(TaskFilter filter) {","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"        if (filter \u003d\u003d null || filter.isEmpty() || filter.hasNoKeywords()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"        String lowerDescription \u003d this.description.toLowerCase();","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"        for (String keyword: filter.getKeywords()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"hansstanley"},"content":"            if (lowerDescription.contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":149,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":150,"author":{"gitId":"hansstanley"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-01-15"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":152,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"hansstanley":152}},{"path":"src/main/java/jarvis/task/TaskFilter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * Container class for task filtering information.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class TaskFilter {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private LocalDate afterDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private LocalDate beforeDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a task filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public TaskFilter() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        this.afterDate \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        this.beforeDate \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        this.keywords \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"     * @return True if the filter has no information;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     *         False otherwise","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        return this.hasNoDates() \u0026\u0026 this.hasNoKeywords();","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"     * @return True if the filter has no keywords;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"     *         False otherwise","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public boolean hasNoKeywords() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        return this.keywords.isEmpty();","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"     * @return True if the filter has no afterDate or beforeDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"     *         False otherwise","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    public boolean hasNoDates() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        return this.afterDate \u003d\u003d null \u0026\u0026 this.beforeDate \u003d\u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"     * @return The date to search from.","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    public LocalDate getAfterDate() {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        return afterDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"     * @return The date to search until.","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"    public LocalDate getBeforeDate() {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        return beforeDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"     * @return List of search keywords.","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        return keywords;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"     * @param afterDate Date string to search from.","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"     * @return This filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"     * @throws InvalidParameterException If afterDate is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    public TaskFilter setAfterDate(String afterDate) throws InvalidParameterException {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"            this.afterDate \u003d afterDate \u003d\u003d null ? null : LocalDate.parse(afterDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(\"Invalid afterDate\", \"I don\u0027t understand the start date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"     * @param beforeDate Date string to search until.","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"     * @return This filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"     * @throws InvalidParameterException If beforeDate is invalid.","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"    public TaskFilter setBeforeDate(String beforeDate) throws InvalidParameterException {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"            this.beforeDate \u003d beforeDate \u003d\u003d null ? null : LocalDate.parse(beforeDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(\"Invalid beforeDate\", \"I don\u0027t understand the end date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"     * Splits the given line into individual words and","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"     * adds them to the list of keywords.","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"     * @param fromLine String of search words.","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"     * @return This filter.","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"    public TaskFilter addKeywords(String fromLine) {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"        if (fromLine \u003d\u003d null || fromLine.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"            return this;","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"        List\u003cString\u003e words \u003d Arrays.stream(fromLine.split(\"\\\\s\"))","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"                .filter(s -\u003e !s.isBlank()) // Remove empty and whitespace strings","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"        this.keywords.addAll(words);","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":120}},{"path":"src/main/java/jarvis/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * Container class for tasks and their corresponding operations.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class TaskList {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     * Constructor for an empty task list.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a task list populated with the given tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"     * @param tasks Tasks to populate the list with.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e addTask(Task task) {","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        return List.of(","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"                String.format(\"Got it! I\u0027ve added task %d to the list.\", this.tasks.size()),","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"                \"\\t\" + task","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"     * Deletes a task from the list at the given index.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"     * @param index Index of the task to delete.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException If the index to delete is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e deleteTask(int index) throws MissingParameterException {","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        if (index \u003c\u003d 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            throw new MissingParameterException(","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"                    \"Invalid index\",","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"                    String.format(\"Please provide an index from %d to %d.\", 1, this.tasks.size())","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        Task task \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        return List.of(String.format(\"Got it, I\u0027ve removed task %d.\", index), \"\\t\" + task);","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"     * Marks a task as done or undone as given.","lastModifiedDate":"2023-01-13"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"     * @param index 1-based index of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2023-01-13"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-13"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e setTaskDone(int index, boolean isDone) throws InvalidParameterException {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-01-13"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"            return List.of(\"There are no tasks to mark, please add a task first.\");","lastModifiedDate":"2023-01-13"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        if (index \u003c\u003d 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-01-13"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"            throw new InvalidParameterException(","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"                    \"Invalid index\",","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"                    String.format(\"Please provide an index from %d to %d.\", 1, this.tasks.size())","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"            );","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-01-13"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        return List.of(","lastModifiedDate":"2023-01-13"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"                String.format(\"Got it! I\u0027ve marked task %d as %s.\", index, isDone ? \"done\" : \"undone\"),","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"                \"\\t\" + task","lastModifiedDate":"2023-01-13"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-13"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"     * Returns a list of response lines to display the task list.","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e getTasksForPrint() {","lastModifiedDate":"2023-01-13"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"        return this.getTasksForPrint(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"     * Returns a list of response lines to display the task list, after applying the given filter.","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"     * @param filter List filter.","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"    public List\u003cString\u003e getTasksForPrint(TaskFilter filter) {","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"        // List of tasks after applying the filter","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"                .stream()","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"                .filter(task -\u003e task.satisfies(filter))","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        return this.getTasksForPrint(filteredTasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"     * Returns a list of response lines to display the given tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"     * @return List of response lines.","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"    private List\u003cString\u003e getTasksForPrint(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-13"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"            return List.of(\"No tasks, you\u0027re good for the day!\");","lastModifiedDate":"2023-01-13"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"        List\u003cString\u003e res \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"        res.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-13"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-13"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"            res.add(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-01-13"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"        return res;","lastModifiedDate":"2023-01-13"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"hansstanley":139}},{"path":"src/main/java/jarvis/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.duration.Duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" * Task class representing a timed (fixed-duration) task.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"public class TimedTask extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    public static final String ID \u003d \"TM\";","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private final Duration duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public TimedTask(String description, Duration duration) throws MissingParameterException {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"        this(description, duration, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a timed task.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * @param duration Duration the task takes.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException Not thrown.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public TimedTask(String description, Duration duration, boolean isDone) throws MissingParameterException {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        String[] data \u003d {ID, String.valueOf(this.isDone()), this.getDescription(), this.duration.serialize()};","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        return String.join(\" / \", data);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        return String.format(\"[%s]%s (duration: %s)\", ID, super.toString(), this.duration);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"hansstanley":41}},{"path":"src/main/java/jarvis/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":" * Task class representing a todo task.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    public static final String ID \u003d \"T\";","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"     * Constructor of a todo task, marked as undone.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException If description is null or blank.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public ToDoTask(String description) throws MissingParameterException {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * Constructor of a todo task.","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * @param isDone Whether the task is to be marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"     * @throws MissingParameterException If description is null or blank.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    public ToDoTask(String description, boolean isDone) throws MissingParameterException {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    public boolean satisfies(TaskFilter filter) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        if (!super.satisfies(filter)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        return filter.hasNoDates();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        String[] data \u003d {ID, String.valueOf(this.isDone()), this.getDescription()};","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        return String.join(\" / \", data);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        return String.format(\"[%s]%s\", ID, super.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":50}},{"path":"src/main/java/jarvis/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" * Ui class to present a text-based interface.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    private static final String LOGO \u003d \"     _   _    ______     _____ ____  \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"            + \"    | | / \\\\  |  _ \\\\ \\\\   / /_ _/ ___| \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"            + \" _  | |/ _ \\\\ | |_) \\\\ \\\\ / / | |\\\\___ \\\\ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"            + \"| |_| / ___ \\\\|  _ \u003c \\\\ V /  | | ___) |\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"            + \" \\\\___/_/   \\\\_\\\\_| \\\\_\\\\ \\\\_/  |___|____/\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * Types of standard responses.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    public enum Response {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        INTRO,","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        GOODBYE,","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        CONFUSED,","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        REJECT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private final String name;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private final List\u003cString\u003e responses;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * @param name Name of the bot.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        this.responses \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"     * Dumps the accumulated responses.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"     * @return String dump.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    public String dumpResponses() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        String dump \u003d String.join(\"\\n\", this.responses);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        this.responses.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        return dump;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"     * Formats and prints the given lines of response.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"     * @param lines Array of response lines.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    public void print(String ...lines) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        assert lines !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        this.print(List.of(lines));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"     * Formats and prints the given lines of response.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"     * @param lines List of response lines.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"    public void print(List\u003cString\u003e lines) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        assert lines !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        // Print bot name","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        System.out.printf(\"| %s:%n\", name);","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"        // Print lines","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"            System.out.println(\"| \\t\" + line);","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        this.printUserPrompt();","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        this.responses.addAll(lines);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"     * Prints one of the predefined responses.","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"     * @param response Type of response.","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"    public void printStandard(Response response) {","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        assert response !\u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        String standard;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"        switch (response) {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"        case INTRO:","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"            standard \u003d String.format(\"Hello, I\u0027m %s, how may I help you?\", this.name);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        case GOODBYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"            standard \u003d \"Goodbye, and see you again!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        case CONFUSED:","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"            standard \u003d \"I don\u0027t quite understand, please try again.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"        case REJECT:","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"            standard \u003d \"Sorry, I can\u0027t handle that right now.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"        default:","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"            standard \u003d \"I\u0027m most definitely a teapot.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"        print(standard);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"     * Prints an error response.","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"    public void printError(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"        print(String.format(\"I\u0027ve a problem! %s\", message));","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"     * Prints an arrow to prompt for user input.","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"    public void printUserPrompt() {","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"     * Prints the bot logo.","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"    public void printLogo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"hansstanley":128}},{"path":"src/main/java/jarvis/ui/layout/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.ui.layout;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.Jarvis;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.message.MessageBox;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":" * Controller class for MainWindow.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    private VBox chatContainer;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private Jarvis jarvis;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            .getClass()","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"            .getResourceAsStream(\"/images/User.jpg\")));","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    private final Image jarvisImage \u003d new Image(Objects.requireNonNull(this","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            .getClass()","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            .getResourceAsStream(\"/images/Jarvis.jpg\")));","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"     * Initialises MainWindow.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        scrollPane.vvalueProperty().bind(chatContainer.heightProperty());","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        sendButton.getStyleClass().add(\"button\");","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    public void setJarvis(Jarvis jarvis) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        this.jarvis \u003d jarvis;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        this.userInput.setText(\"Hi\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        this.handleUserInput();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        if (userInput.getText().isBlank() || jarvis \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        String inputText \u003d userInput.getText();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        String jarvisText \u003d jarvis.getResponse(inputText);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        chatContainer.getChildren().addAll(","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"                new MessageBox(inputText, userImage),","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"                new MessageBox(jarvisText, jarvisImage).flip()","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":68}},{"path":"src/main/java/jarvis/ui/message/MessageBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.ui.message;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import jarvis.ui.layout.MainWindow;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":" * Container class for a chat message.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"public class MessageBox extends HBox {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private VBox messageChat;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private Label messageText;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private Circle displayPicture;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     * Constructor for a message box.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     * @param message Message to display.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * @param image Display picture.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    public MessageBox(String message, Image image) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MessageBox.fxml\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        messageText.setText(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        displayPicture.setFill(new ImagePattern(image));","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"     * Initialises MessageBox.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        this.getStyleClass().add(\"message-box\");","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        messageChat.getStyleClass().add(\"message-chat\");","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"     * Flips the rtl direction.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"     * @return This message box.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    public MessageBox flip() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        this.setAlignment(this.getAlignment() \u003d\u003d Pos.TOP_RIGHT ? Pos.TOP_LEFT : Pos.TOP_RIGHT);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        ObservableList\u003cNode\u003e nodes \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        FXCollections.reverse(nodes);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        this.getChildren().setAll(nodes);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        return this;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":71}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"80.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"            fx:controller\u003d\"jarvis.ui.layout.MainWindow\"\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox fx:id\u003d\"chatContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"380.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"320.0\"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            prefHeight\u003d\"40.0\" prefWidth\u003d\"80.0\" text\u003d\"Enter\"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"            AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":20}},{"path":"src/main/resources/view/MessageBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.paint.ImagePattern?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"380.0\"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox fx:id\u003d\"messageChat\" minWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"messageText\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"25.0\"/\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"hansstanley":25}},{"path":"src/test/java/jarvis/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.InvalidParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final String BODY \u003d \"a deadline test\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private static final LocalDate DEADLINE \u003d LocalDate.now();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private DeadlineTask task;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public DeadlineTaskTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d new DeadlineTask(BODY, DEADLINE.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    public void filterTest() throws InvalidParameterException {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        TaskFilter earlyFilter \u003d new TaskFilter().setBeforeDate(DEADLINE.minusDays(1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        TaskFilter lateFilter \u003d new TaskFilter().setAfterDate(DEADLINE.plusDays(1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        TaskFilter validFilter \u003d new TaskFilter()","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"                .setAfterDate(DEADLINE.minusDays(1).toString())","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                .setBeforeDate(DEADLINE.plusDays(1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        assertFalse(task.satisfies(earlyFilter));","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        assertFalse(task.satisfies(lateFilter));","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        assertTrue(task.satisfies(validFilter));","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    public void serializeTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"                String.format(\"D / %b / %s / %s\", task.isDone(), BODY, DEADLINE),","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"                task.serialize()","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"                String.format(\"[D][%s] %s (by: %s)\", task.isDone() ? \"X\" : \" \", BODY, DEADLINE),","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"                task.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":59}},{"path":"src/test/java/jarvis/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.CommandParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private static final String BODY \u003d \"an event test\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    private static final LocalDate FROM_DATE \u003d LocalDate.now();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private static final LocalDate TO_DATE \u003d LocalDate.now().plusMonths(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private EventTask task;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public EventTaskTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d new EventTask(BODY, FROM_DATE.toString(), TO_DATE.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        } catch (CommandParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public void serializeTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                String.format(\"E / %b / %s / %s / %s\", task.isDone(), BODY, FROM_DATE, TO_DATE),","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                task.serialize()","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                String.format(\"[E][%s] %s (from: %s, to: %s)\", task.isDone() ? \"X\" : \" \", BODY, FROM_DATE, TO_DATE),","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"                task.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":43}},{"path":"src/test/java/jarvis/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package jarvis.task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import jarvis.exception.MissingParameterException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    private static final String BODY \u003d \"a todo task\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private ToDoTask task;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public ToDoTaskTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d new ToDoTask(BODY);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        } catch (MissingParameterException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            this.task \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public void serializeTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                String.format(\"T / %b / %s\", task.isDone(), BODY),","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                task.serialize()","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        assertEquals(","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"                String.format(\"[T][%s] %s\", task.isDone() ? \"X\" : \" \", BODY),","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                task.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"hansstanley":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"todo abc","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"todo abc","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"deadline def /by 123","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"event ghi /from 456 /to 789","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"unmark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"delete 1","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"hello","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"todo","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"deadline def","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"deadline","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"event ghi /from","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"event ghi /to","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"event ghi","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"event","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"mark 0","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"mark 4","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"mark abc","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"mark","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"unmark 0","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"unmark 4","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"unmark abc","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"unmark","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"delete 0","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"delete 4","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"delete abc","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"delete","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"hansstanley":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"java -classpath ..\\bin jarvis.Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hansstanley":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"java -classpath ../bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hansstanley":1,"-":37}}]
