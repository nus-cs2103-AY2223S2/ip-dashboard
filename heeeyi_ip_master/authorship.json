[{"path":"src/main/java/dukes/engine/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"class DeadLine extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"    String deadline;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"    DeadLine(String taskName, String deadline) {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"        super(taskName);","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"        this.tag \u003d \"deadline\";","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"                this.deadline + \")\";","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":17}},{"path":"src/main/java/dukes/engine/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import dukes.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import java.util.*;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"        DukeEngine mainEngine \u003d new DukeEngine();","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"        mainEngine.greet();","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"            mainEngine.printLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"                mainEngine.listTask();","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"            } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"                String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"                // Here in input.txt, empty line is seen as last situation","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"                if (splited.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"                    System.out.println(\"Oops, you have key in nothing!\");","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"                    // 0 \u003d markDone, 1 \u003d markUnDone, 2 \u003d delete","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateMark(command, 0);","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateMark(command, 1);","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateMark(command, 2);","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateToDo(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateDeadLine(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"                    // mainEngine.handleDeadLine(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"                } else if (splited[0].equals(\"event\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"                    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"                        mainEngine.validateEvent(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"                    } catch (DukeException ex) {","lastModifiedDate":"2023-01-14"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"                    // mainEngine.handleEvent(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"                } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"                    // mainEngine.addTask(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":62,"author":{"gitId":"heeeyi"},"content":"                    System.out.println(\"Sorry, but I don\u0027t know what you means.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"                }","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"            // mainEngine.echo(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":66,"author":{"gitId":"heeeyi"},"content":"            mainEngine.printLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"heeeyi"},"content":"        mainEngine.goodbye();","lastModifiedDate":"2023-01-14"},{"lineNumber":70,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"heeeyi":68,"-":4}},{"path":"src/main/java/dukes/engine/DukeEngine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import dukes.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import java.util.*;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"public class DukeEngine {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"    public static final String divisionLine \u003d \"________________________________________\";","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"    public static final String logo \u003d","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    public static final String greetWord \u003d \"It\u0027s a pleasure to serve you!\";","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    public static final String byeWord \u003d \"Goodbye. Hope you have a nice day!\";","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"    public static final String markDoneWord \u003d","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"            \"Nice! You have completed this task: \";","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"    public static final String markUnDoneWord \u003d","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"            \"Well, you have not finished this task yet: \";","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"    public static final String listWord \u003d \"Here are all of your tasks: \";","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"    public static final String addWord \u003d \"This task is added to your list: \";","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"    public static final String deleteWord \u003d \"Ok, I will remove this task for you: \";","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"    public List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"     * Print the greeting line and horizontal lines for the chat engine. Returns nothing.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    public void greet() {","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"        // String divisionLine \u003d \"________________________________________\";","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"        System.out.println(greetWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"     * Print an echoing copy of the command string. Returns nothing.","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be echoed.","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"    public void echo(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"        System.out.println(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"     * (deprecated) add the command task into the taskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be added to the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"    public void addTask(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d new Task(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"        taskList.add(theTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"added: \" + command);","lastModifiedDate":"2023-01-14"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"     * Validate if the ToDo command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"     * If valid, continue to handle the ToDo task; otherwise, throw a DukeException","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"     * of empty content of ToDo.","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be validated.","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"     * @throws DukeException if command.length \u003c 2 (i.e. have no content).","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"    void validateToDo(String command) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":66,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"        if (splited.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"OOPS!!! Description of todo not found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":69,"author":{"gitId":"heeeyi"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":70,"author":{"gitId":"heeeyi"},"content":"            handleToDo(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":73,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":74,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"heeeyi"},"content":"     * Interpret the ToDo command, add the content into the taskList,","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"heeeyi"},"content":"     * and display the number of items in list.","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be interpreted. Assumed to be valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"heeeyi"},"content":"    public void handleToDo(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":81,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":82,"author":{"gitId":"heeeyi"},"content":"        for (int i \u003d 1; i \u003c splited.length; i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"heeeyi"},"content":"            sb.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":85,"author":{"gitId":"heeeyi"},"content":"        sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"heeeyi"},"content":"        String taskName \u003d sb.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":88,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-14"},{"lineNumber":89,"author":{"gitId":"heeeyi"},"content":"        taskList.add(theTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":90,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":91,"author":{"gitId":"heeeyi"},"content":"        System.out.println(addWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":92,"author":{"gitId":"heeeyi"},"content":"        System.out.println(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":93,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"Now you have \" + taskList.size() +","lastModifiedDate":"2023-01-14"},{"lineNumber":94,"author":{"gitId":"heeeyi"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":95,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":96,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":97,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"heeeyi"},"content":"     * Validate if the DeadLine command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"heeeyi"},"content":"     * If valid, continue to handle the DeadLine task; otherwise, throw a DukeException.","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be validated.","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"heeeyi"},"content":"     * @throws DukeException if","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"heeeyi"},"content":"     * command.length \u003c 2 (i.e. have no task content); OR","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"heeeyi"},"content":"     * the timestamp after \"/by\" is empty.","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"heeeyi"},"content":"    void validateDeadLine(String command) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":106,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":107,"author":{"gitId":"heeeyi"},"content":"        if (splited.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":108,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"OOPS!!! Description of deadline not found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":109,"author":{"gitId":"heeeyi"},"content":"        } else if (!Arrays.asList(splited).contains(\"/by\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":110,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"Deadline of the task not specified.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":111,"author":{"gitId":"heeeyi"},"content":"        } else if (splited[splited.length - 1].equals(\"/by\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":112,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"No valid deadline specified.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":113,"author":{"gitId":"heeeyi"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":114,"author":{"gitId":"heeeyi"},"content":"            handleDeadLine(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":115,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":116,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":117,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":118,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"heeeyi"},"content":"     * Interpret the DeadLine command, add the content into the taskList,","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"heeeyi"},"content":"     * and display the number of items in list.","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be interpreted. Assumed to be valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"heeeyi"},"content":"    public void handleDeadLine(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":124,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":126,"author":{"gitId":"heeeyi"},"content":"        StringBuilder time \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":127,"author":{"gitId":"heeeyi"},"content":"        boolean isTime \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":128,"author":{"gitId":"heeeyi"},"content":"        for (int i \u003d 1; i \u003c splited.length; i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":129,"author":{"gitId":"heeeyi"},"content":"            if (splited[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":130,"author":{"gitId":"heeeyi"},"content":"                isTime \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":131,"author":{"gitId":"heeeyi"},"content":"            } else if (!isTime) {","lastModifiedDate":"2023-01-14"},{"lineNumber":132,"author":{"gitId":"heeeyi"},"content":"                sb.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":133,"author":{"gitId":"heeeyi"},"content":"            } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":134,"author":{"gitId":"heeeyi"},"content":"                time.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":135,"author":{"gitId":"heeeyi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":136,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":137,"author":{"gitId":"heeeyi"},"content":"        sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":138,"author":{"gitId":"heeeyi"},"content":"        time.deleteCharAt(time.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":139,"author":{"gitId":"heeeyi"},"content":"        String taskName \u003d sb.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":140,"author":{"gitId":"heeeyi"},"content":"        String deadline \u003d time.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":141,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":142,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d new DeadLine(taskName, deadline);","lastModifiedDate":"2023-01-14"},{"lineNumber":143,"author":{"gitId":"heeeyi"},"content":"        taskList.add(theTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":144,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":145,"author":{"gitId":"heeeyi"},"content":"        System.out.println(addWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":146,"author":{"gitId":"heeeyi"},"content":"        System.out.println(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"Now you have \" + taskList.size() +","lastModifiedDate":"2023-01-14"},{"lineNumber":148,"author":{"gitId":"heeeyi"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":149,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":151,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"heeeyi"},"content":"     * Validate if the Event command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"heeeyi"},"content":"     * If valid, continue to handle the Event task; otherwise, throw a DukeException.","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"heeeyi"},"content":"     * @command the command to be validated.","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"heeeyi"},"content":"     * @throws DukeException if","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"heeeyi"},"content":"     * command.length \u003c 2 (i.e. have no event content); OR","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"heeeyi"},"content":"     * the timestamp after \"/by\" is empty.","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"heeeyi"},"content":"    void validateEvent(String command) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":160,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":161,"author":{"gitId":"heeeyi"},"content":"        if (splited.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":162,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"OOPS!!! Description of event not found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":163,"author":{"gitId":"heeeyi"},"content":"        } else if (!Arrays.asList(splited).contains(\"/from\") ||","lastModifiedDate":"2023-01-14"},{"lineNumber":164,"author":{"gitId":"heeeyi"},"content":"                !Arrays.asList(splited).contains(\"/to\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":165,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"Event time not specified completely.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":166,"author":{"gitId":"heeeyi"},"content":"        } else if (splited[splited.length - 1].equals(\"/to\") ||","lastModifiedDate":"2023-01-14"},{"lineNumber":167,"author":{"gitId":"heeeyi"},"content":"                Arrays.asList(splited).indexOf(\"/from\") \u003d\u003d","lastModifiedDate":"2023-01-14"},{"lineNumber":168,"author":{"gitId":"heeeyi"},"content":"                        Arrays.asList(splited).indexOf(\"/to\") - 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":169,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"No valid event time specified.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":170,"author":{"gitId":"heeeyi"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":171,"author":{"gitId":"heeeyi"},"content":"            handleEvent(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":172,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":173,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":174,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":175,"author":{"gitId":"heeeyi"},"content":"    public void handleEvent(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":176,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":177,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":178,"author":{"gitId":"heeeyi"},"content":"        StringBuilder start \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":179,"author":{"gitId":"heeeyi"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":180,"author":{"gitId":"heeeyi"},"content":"        boolean isStart \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":181,"author":{"gitId":"heeeyi"},"content":"        boolean isEnd \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":182,"author":{"gitId":"heeeyi"},"content":"        for (int i \u003d 1; i \u003c splited.length; i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":183,"author":{"gitId":"heeeyi"},"content":"            if (splited[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":184,"author":{"gitId":"heeeyi"},"content":"                isStart \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":185,"author":{"gitId":"heeeyi"},"content":"            } else if (splited[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":186,"author":{"gitId":"heeeyi"},"content":"                isStart \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":187,"author":{"gitId":"heeeyi"},"content":"                isEnd \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":188,"author":{"gitId":"heeeyi"},"content":"            } else if (!isStart \u0026\u0026 !isEnd) {","lastModifiedDate":"2023-01-14"},{"lineNumber":189,"author":{"gitId":"heeeyi"},"content":"                sb.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":190,"author":{"gitId":"heeeyi"},"content":"            } else if (isStart) {","lastModifiedDate":"2023-01-14"},{"lineNumber":191,"author":{"gitId":"heeeyi"},"content":"                start.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":192,"author":{"gitId":"heeeyi"},"content":"            } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":193,"author":{"gitId":"heeeyi"},"content":"                end.append(splited[i]).append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":194,"author":{"gitId":"heeeyi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":195,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":196,"author":{"gitId":"heeeyi"},"content":"        sb.deleteCharAt(sb.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":197,"author":{"gitId":"heeeyi"},"content":"        start.deleteCharAt(start.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":198,"author":{"gitId":"heeeyi"},"content":"        end.deleteCharAt(end.length()-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":199,"author":{"gitId":"heeeyi"},"content":"        String taskName \u003d sb.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":200,"author":{"gitId":"heeeyi"},"content":"        String startTime \u003d start.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":201,"author":{"gitId":"heeeyi"},"content":"        String endTime \u003d end.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":202,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":203,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-01-14"},{"lineNumber":204,"author":{"gitId":"heeeyi"},"content":"        taskList.add(theTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":205,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":206,"author":{"gitId":"heeeyi"},"content":"        System.out.println(addWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":207,"author":{"gitId":"heeeyi"},"content":"        System.out.println(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":208,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"Now you have \" + taskList.size() +","lastModifiedDate":"2023-01-14"},{"lineNumber":209,"author":{"gitId":"heeeyi"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":210,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":211,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":212,"author":{"gitId":"heeeyi"},"content":"    public void listTask() {","lastModifiedDate":"2023-01-14"},{"lineNumber":213,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":214,"author":{"gitId":"heeeyi"},"content":"        sb.append(listWord).append(\"\\n\");","lastModifiedDate":"2023-01-14"},{"lineNumber":215,"author":{"gitId":"heeeyi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":216,"author":{"gitId":"heeeyi"},"content":"            sb.append(i+1).append(\". \");","lastModifiedDate":"2023-01-14"},{"lineNumber":217,"author":{"gitId":"heeeyi"},"content":"            sb.append(taskList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-01-14"},{"lineNumber":218,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":219,"author":{"gitId":"heeeyi"},"content":"        if (sb.length() !\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":220,"author":{"gitId":"heeeyi"},"content":"            sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2023-01-14"},{"lineNumber":221,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":222,"author":{"gitId":"heeeyi"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":223,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":224,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":225,"author":{"gitId":"heeeyi"},"content":"    void validateMark(String command, int action) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":226,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":227,"author":{"gitId":"heeeyi"},"content":"        if (splited.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":228,"author":{"gitId":"heeeyi"},"content":"            throw new DukeException(\"You have not specified the index of the marking.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":229,"author":{"gitId":"heeeyi"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":230,"author":{"gitId":"heeeyi"},"content":"            int index \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":231,"author":{"gitId":"heeeyi"},"content":"            if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2023-01-14"},{"lineNumber":232,"author":{"gitId":"heeeyi"},"content":"                throw new DukeException(\"You are referring to an invalid index.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":233,"author":{"gitId":"heeeyi"},"content":"            } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":234,"author":{"gitId":"heeeyi"},"content":"                if (action \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":235,"author":{"gitId":"heeeyi"},"content":"                    markDone(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":236,"author":{"gitId":"heeeyi"},"content":"                } else if (action \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":237,"author":{"gitId":"heeeyi"},"content":"                    markUnDone(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":238,"author":{"gitId":"heeeyi"},"content":"                } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":239,"author":{"gitId":"heeeyi"},"content":"                    delete(command);","lastModifiedDate":"2023-01-14"},{"lineNumber":240,"author":{"gitId":"heeeyi"},"content":"                }","lastModifiedDate":"2023-01-14"},{"lineNumber":241,"author":{"gitId":"heeeyi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":242,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":243,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":244,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":245,"author":{"gitId":"heeeyi"},"content":"    public void markDone(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":246,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":247,"author":{"gitId":"heeeyi"},"content":"        int index \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":248,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":249,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-14"},{"lineNumber":250,"author":{"gitId":"heeeyi"},"content":"        theTask.setDone();","lastModifiedDate":"2023-01-14"},{"lineNumber":251,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":252,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":253,"author":{"gitId":"heeeyi"},"content":"        sb.append(markDoneWord).append(\"\\n\").append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":254,"author":{"gitId":"heeeyi"},"content":"        sb.append(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":255,"author":{"gitId":"heeeyi"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":256,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":257,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":258,"author":{"gitId":"heeeyi"},"content":"    public void markUnDone(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":259,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":260,"author":{"gitId":"heeeyi"},"content":"        int index \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":261,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":262,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-14"},{"lineNumber":263,"author":{"gitId":"heeeyi"},"content":"        theTask.setUnDone();","lastModifiedDate":"2023-01-14"},{"lineNumber":264,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":265,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":266,"author":{"gitId":"heeeyi"},"content":"        sb.append(markUnDoneWord).append(\"\\n\").append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":267,"author":{"gitId":"heeeyi"},"content":"        sb.append(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":268,"author":{"gitId":"heeeyi"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":269,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":270,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":271,"author":{"gitId":"heeeyi"},"content":"    public void delete(String command) {","lastModifiedDate":"2023-01-14"},{"lineNumber":272,"author":{"gitId":"heeeyi"},"content":"        String[] splited \u003d command.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":273,"author":{"gitId":"heeeyi"},"content":"        int index \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":274,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":275,"author":{"gitId":"heeeyi"},"content":"        Task theTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2023-01-14"},{"lineNumber":276,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":277,"author":{"gitId":"heeeyi"},"content":"        System.out.println(deleteWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":278,"author":{"gitId":"heeeyi"},"content":"        System.out.println(theTask.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":279,"author":{"gitId":"heeeyi"},"content":"        System.out.println(\"Now you have \" + taskList.size() +","lastModifiedDate":"2023-01-14"},{"lineNumber":280,"author":{"gitId":"heeeyi"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":281,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":282,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":283,"author":{"gitId":"heeeyi"},"content":"    public void goodbye() {","lastModifiedDate":"2023-01-14"},{"lineNumber":284,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":285,"author":{"gitId":"heeeyi"},"content":"        System.out.println(byeWord);","lastModifiedDate":"2023-01-14"},{"lineNumber":286,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":287,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":288,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":289,"author":{"gitId":"heeeyi"},"content":"    public void printLine() {","lastModifiedDate":"2023-01-14"},{"lineNumber":290,"author":{"gitId":"heeeyi"},"content":"        System.out.println(divisionLine);","lastModifiedDate":"2023-01-14"},{"lineNumber":291,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":292,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":293,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":293}},{"path":"src/main/java/dukes/engine/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"    String start;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"    String end;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"    Event(String taskName, String start, String end) {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"        super(taskName);","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"        this.tag \u003d \"event\";","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"                this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":19}},{"path":"src/main/java/dukes/engine/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"    protected String tag;","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"        this.tag \u003d \"\";","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"    void setDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"    void setUnDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"    public String getTag() { return this.tag; }","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"        sb.append(\"[\");","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"            sb.append(\"X\");","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"            sb.append(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"        sb.append(\"] \").append(this.taskName);","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":35}},{"path":"src/main/java/dukes/engine/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.engine;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"    ToDo(String taskName) {","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"        super(taskName);","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"        this.tag \u003d \"todo\";","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":13}},{"path":"src/main/java/dukes/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.util;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"    public DukeException(String str) {","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"        super(str);","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":7}},{"path":"test/dukes/testing/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package dukes.testing;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import dukes.engine.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import dukes.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"class TaskTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"    void getTag() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"        Task newTask \u003d new Task(\"trial\");","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"        assertEquals(\"\", newTask.getTag());","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"    void testToString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"        Task newTask \u003d new Task(\"trial\");","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"        assertEquals(\"[ ] trial\", newTask.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"heeeyi":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"todo play games","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"deadline do homework /by Monday evening 11pm","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"event group project /from Sept 2nd 10am /to 12pm","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"event module registration /from Monday 10am /to Wednesday 12pm","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"mark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"mark 3","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"unmark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"todo sleep","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"deadline codecrunch /by Sunday","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"mark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"todo","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"deadline","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"event","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"blahh blah","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"deadline do something","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"deadline do something /by","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"event do something","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"event do something /from A","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"event something /from A /to","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"event something /from /to BBB","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"mark","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"unmark 100","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"mark -3","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"delete 3","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"delete -100","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"PAUSE","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"heeeyi":1,"-":21}}]
