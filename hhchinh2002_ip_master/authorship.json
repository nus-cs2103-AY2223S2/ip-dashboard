[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"# Duke Chatbot","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"- text-based","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"- easy to learn","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"All you need to do is,","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"1. download it from [here](https://nus-cs2103-ay2223s2.github.io/website/schedule/week4/project.html)","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"2. double-click it","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"3. add your task","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"4. let it manage your tasks for you :sunglasses:","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"And it is **FREE!**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"Features:","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"```javascript","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"public class Main {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"   public static void main(String[] args) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"      Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"   }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    archiveBaseName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":7,"-":39}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * Class DeadLine is a subclass of duke.Task, encapsulate details","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * about a type of user\u0027s tasks which has a deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    //The deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.Deadline task with given description and deadline time","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the task","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        return this.by;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"            Deadline target \u003d (Deadline) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription())","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getDeadline().equals(this.getDeadline());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.Duke implements a chatbot encapsulates user\u0027s tasks and show it","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * to the user later by processing the inputs.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     * Initialize a duke.Duke object with the corresponding object from other supporting classes.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    public Duke() {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    public void run() {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"        ui.start();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        taskList.readTasksFile(storage.readFile());","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        boolean isEnd \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        while (!isEnd) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"                command \u003d input.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"                isEnd \u003d parser.handleInput(command, taskList);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"                Ui.reply(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        Ui.displayOutro();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"        input.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hhchinh2002":47,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.DukeException is a subclass of Exception,","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * encapsulates a string describes a checked exception","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" * that a duke.Duke object encounters.","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.DukeException object with given exception description.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the exception from duke.Duke.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hhchinh2002":21}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.Event is a subclass of duke.Task, encapsulate details","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * about a type of user\u0027s tasks which happen during a period","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" * of time.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    // The starting time of the duke.Event","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate start;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    //The ending time of the duke.Event","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * Creates an duke.Event task object with given description and starting, ending time","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the duke.Event task","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @param start The starting time of the duke.Event","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     * @param end The ending time fo the duke.Event","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        return this.start;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        return this.end;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"            Event target \u003d (Event) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription())","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getStartTime().equals(this.getStartTime())","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getEndTime().equals(this.getEndTime());","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"                + \" (from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"                + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * duke.Parser class encapsulates the logic implementation of the chatbot.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    public Parser() {}","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"     * Handles the input from the user and do the corresponding actions.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * Checks for some incorrect input format.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"     * @param command The input from user.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     * @param taskList A duke.TaskList object encapsulate all tasks\u0027 information.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     * @return Returns true if the input is bot terminating command (\"bye\"), false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * @throws DukeException If the user input is not in the right format.","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    public boolean handleInput(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"            return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"            Ui.displayTasks(taskList);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"            taskList.mark(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"            taskList.unmark(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"            taskList.delete(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"            return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"find \")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"            taskList.find(command);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"            return false;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        String description \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        Task newTask \u003d new Task(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"        String exceptionMessage \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"            if (description.length() \u003c\u003d 5) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"                exceptionMessage \u003d \"The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"                throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d new ToDo(description.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"            if (description.length() \u003c\u003d 9) {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"                exceptionMessage \u003d \"The description of a deadline cannot be empty.\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"                throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"            LocalDate by \u003d LocalDate.parse(description.substring(description.indexOf(\" /by \") + 5),","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"            description \u003d description.substring(9, description.indexOf(\" /by \"));","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"            if (description.length() \u003c\u003d 6) {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"                exceptionMessage \u003d \"The description of an event cannot be empty:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"                throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"            LocalDate start \u003d LocalDate.parse(description.substring(description.indexOf(\" /from \") + 7,","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"                    description.indexOf(\" /to \")), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"            LocalDate end \u003d LocalDate.parse(description.substring(description.indexOf(\" /to \") + 5),","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"            description \u003d description.substring(6, description.indexOf(\" /from \"));","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"            exceptionMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"            throw new DukeException(exceptionMessage);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"        if (!taskList.contains(newTask)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":" * duke.Storage class encapsulates the whole storing, reading process of chatbot.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    /** Path Object represents the default storing file path in hard disk */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    private static final Path STORING_FILE_PATH \u003d Paths.get(\".\", \".\", \".\", \"data\", \"duke.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    /** Path Object represents the temporary storing file path in the hard disk */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    private static final Path TEMPORARY_STORING_FILE_PATH \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"            Paths.get(\".\", \".\", \".\", \"data\", \"temp_duke.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     * Initializes a new duke.Storage object and try to read the storing file in hard disk, if there is not","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     * a file existed then create a new one.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public Storage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"            Files.createFile(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"            readFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"     * Save the tasks\u0027 information to the hard disk file","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     * @param tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        Scanner reader \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"            Files.deleteIfExists(TEMPORARY_STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"            Files.createFile(TEMPORARY_STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"                text +\u003d tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"            Files.writeString(TEMPORARY_STORING_FILE_PATH, text);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"            Files.deleteIfExists(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"            Files.move(TEMPORARY_STORING_FILE_PATH, STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        } finally {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"            if (reader !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"                reader.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"     * Return an ArrayList of duke.Task encapsulting the tasks\u0027 information stored in hard disk file.","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"     * @return Tasks list stored in hard disk","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        Scanner reader \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"            reader \u003d new Scanner(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"        if (reader !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"            String pointer;","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"            String description;","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"            Task newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"            while (reader.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"                pointer \u003d reader.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"                //checks which kinds of task is stored in this current line","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"                if (pointer.startsWith(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"                    description \u003d pointer.substring(7);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"                    newTask \u003d new ToDo(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"                } else if (pointer.startsWith(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"                    description \u003d pointer.substring(7, pointer.indexOf(\"(from: \") - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"                    LocalDate start \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"                            pointer.substring(pointer.indexOf(\"(from: \") + 7, pointer.indexOf(\" to:\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"                    LocalDate end \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"                            pointer.substring(pointer.indexOf(\"to: \") + 4, pointer.lastIndexOf(\")\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"                    newTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"                } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"                    description \u003d pointer.substring(7, pointer.indexOf(\"(by: \") - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"                    LocalDate by \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"                            pointer.substring(pointer.indexOf(\"(by: \") + 5, pointer.lastIndexOf(\")\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"                    newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"                //checks whether this tasks is marked as done or not","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"                if (pointer.substring(3).startsWith(\"[X]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"                    newTask.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"            reader.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"        return tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":114}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class Tasks encapsulate details","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * about a user\u0027s task in stored in a duke.Duke object.","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.Task object with given description","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the task","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    public void mark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     * Unmarks the current task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"            return ((Task) o).getDescription().equals(this.getDescription());","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"hhchinh2002":57}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * duke.TaskList class encapsulates the information of the tasks keyed in the chatbot by the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     * Returns true if the task argument is in the task list and false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * @param task a duke.Task object encapsulate the task we are checking.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     * @return Returns true if the task argument is in the task list and false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        return this.tasks.contains(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"     * Read the tasks\u0027 information stored in the hard disk file.","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"     * @param tasks an ArrayList of duke.Task Object encapsulating the tasks list from hard disk file.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    public void readTasksFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"     * Add the task argument into the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"     * @param newTask a duke.Task object encapsulating the new task being added.","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        Ui.getAddTaskMessage(newTask, size);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"     * Mark the task specified in the input of user to task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to mark.","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"    public void mark(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(5)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"        target.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"        Ui.getMarkTaskMessage(target);","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"     * Unmark the task specified in the input of user to task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to unmark.","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"    public void unmark(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(7)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"        target.unmark();","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        Ui.getUnmarkTaskMessage(target);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"     * Delete the task specified in the input of user from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to delete.","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"    public void delete(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(7)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"        Ui.getDeleteTaskMessage(target, size);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"     * Find the task specified in the input of the user from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task keyword to find.","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"    public void find(String command) {","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"        String keyWord \u003d command.substring(5);","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"        Predicate\u003cTask\u003e keyWordFilter \u003d task -\u003e (task.getDescription().contains(keyWord));","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"        Stream\u003cTask\u003e resultedTasks \u003d tasks.stream().filter(keyWordFilter);","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"        Ui.getFindTaskMessage(resultedTasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":103}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.ToDo is a subclass of duke.Task, encapsulate details","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * about a task that the user need to do.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.ToDo task object with given description","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the duke.ToDo task","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof ToDo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"            ToDo target \u003d (ToDo) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * duke.Ui class represents User interface when using the chatbox.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    private static final String DIVIDER_LINE \u003d \"____________________________________________________\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    public Ui() {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"     * Prints the welcoming message.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    public void start() {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Hello! I\u0027m duke.Duke\\n What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public static void displayOutro() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Bye. Hope to see you again soon!\" + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"     * Returns an UI formatted message from the string argument.","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"     * @param command A string message need to put in the write UI formatted message.","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    public static void reply(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        System.out.println(DIVIDER_LINE + command + DIVIDER_LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"     * Prints the tasks list stored in the bot.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"     * @param taskList A duke.TaskList Object encapsulating the all tasks in the chatbot.","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    public static void displayTasks(TaskList taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        String tasksList \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        Task currentTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"            currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"            tasksList +\u003d i + 1 + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Here are the tasks in your list:\\n\" + tasksList);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the adding action of argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"     * @param newTask The new task being added.","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"     * @param size The current size of task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"    public static void getAddTaskMessage(Task newTask, int size) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"                + newTask","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the marking action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The task being marked.","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"    public static void getMarkTaskMessage(Task target) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Nice! I\u0027ve marked this task as above:\\n  \" + target + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the unmarking action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The task being unmarked.","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"    public static void getUnmarkTaskMessage(Task target) {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + target + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the deleting action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The duke.Task being deleted from the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"     * @param size The current size of task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"    public static void getDeleteTaskMessage(Task target, int size) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"                + target + \"\\nNow you have \" + size + \" task(s) in the list\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the finding action with the list of task found.","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"     * @param resultedTasks An Stream of Task object encapsulating all tasks found.","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"    public static void getFindTaskMessage(Stream\u003cTask\u003e resultedTasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"        Stream\u003cString\u003e searchResult \u003d resultedTasks.map((task) -\u003e task.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"        String listingResultMessage \u003d searchResult.reduce(\"\", (result, element) -\u003e result + element + \"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"        reply(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"                + listingResultMessage);","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":104}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"public class EventTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventOneStart \u003d LocalDate.parse(\"2023-03-04\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventOneEnd \u003d LocalDate.parse(\"2023-03-06\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventTwoStart \u003d eventOneStart;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventTwoEnd \u003d eventOneEnd;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventThreeStart \u003d eventOneStart;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventThreeEnd \u003d LocalDate.parse(\"2023-03-07\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of Event.equals().","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public void equals() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        Event eventOne \u003d new Event(\"festival\", eventOneStart, eventOneEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        Event eventTwo \u003d new Event(\"concert\", eventTwoStart, eventTwoEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        Event eventThree \u003d new Event(\"festival\", eventThreeStart, eventThreeEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        ToDo toDo \u003d new ToDo(\"festival\");","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventOne.equals(eventTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.equals(eventOne), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventTwo.equals(eventTwo), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.equals(toDo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of Event.toString().","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    public void toString_checkMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        Event eventOne \u003d new Event(\"festival\", eventOneStart, eventOneEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        Event eventTwo \u003d new Event(\"concert\", eventTwoStart, eventTwoEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        Event eventThree \u003d new Event(\"festival\", eventThreeStart, eventThreeEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventOne.toString(), \"[E][ ] festival (from: Mar 4 2023 to: Mar 6 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventTwo.toString(), \"[E][ ] concert (from: Mar 4 2023 to: Mar 6 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.toString(), \"[E][ ] festival (from: Mar 4 2023 to: Mar 7 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":45}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoOne \u003d new ToDo(\"work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoTwo \u003d new ToDo(\"homework\");","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoThree \u003d new ToDo(null);","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoFour \u003d new ToDo(\"work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of ToDo.equals().","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    public void equals() {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.equals(toDoTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoTwo.equals(toDoTwo), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.equals(toDoFour), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoThree.equals(toDoTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the message from ToDo.toString().","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    public void toString_checkMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.toString(), \"[T][ ] work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoTwo.toString(), \"[T][ ] homework\");","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"todo borrow book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"java -classpath ..\\bin duke\\Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":1,"-":20}}]
