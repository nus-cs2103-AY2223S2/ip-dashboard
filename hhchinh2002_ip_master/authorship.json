[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"# Duke Chatbot","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"- text-based","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"- easy to learn","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"All you need to do is,","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"1. download it from [here](https://nus-cs2103-ay2223s2.github.io/website/schedule/week4/project.html)","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"2. double-click it","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"3. add your task","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"4. let it manage your tasks for you :sunglasses:","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"And it is **FREE!**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"Features:","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"```javascript","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"public class Main {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"   public static void main(String[] args) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"      Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"   }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"    archiveBaseName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":21,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"Duke is an **simple interactive application for managing your to-do list, tasks, schedules, etc**","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"### Adding a ToDo task","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"Adds a To do task to your list in chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"Format: `todo [task name]`","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"- `todo homework`","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"- `todo personal project`","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"### Adding a Deadline task","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"Adds a Deadline task to your list in chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"Format: `deadline [task name] /by [yyyy-MM-dd]`","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"- `deadline CS2103T week 3 quizz /by 2023-01-17`","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"- `deadline CA1 essay /by 2023-03-12`","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"## Adding an Event task","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"Adds an Event task to your list in chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"Format: `event [task name] /from [yyyy-MM-dd] /to [yyyy-MM-dd]`","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"- `event CS carrer fair /from 2023-02-14 /to 2023-02-17`","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"### Viewing the current tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"Views all the tasks have been added.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"Format: `list`","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"### Delete a task","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"Format: `delete [task number]`","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"- `delete 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"- `delete 3`","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"### Mark a task","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"Mark a task in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"Format: `mark [task number]`","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"- `mark 2`","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"- `mark 4`","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"### Unmark a task","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"Unmarks a task in the list","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"Format: `unmark [task number]`","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"- `unmark 5`","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"- `unmark 13`","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"### Find tasks by keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"Finds task by keyword keyed in from user.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"Format: `find [keyword]`","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"- `find project`","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"- `find work`","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"### Seeing all features in application","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"Sees all the features listed in the app.","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"Format: `help`","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"### Ending the application","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"Ends the application.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"Format: `bye`","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"hhchinh2002":67,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import duke.data.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.Duke implements a chatbot encapsulates user\u0027s tasks and show it","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":" * to the user later by processing the inputs.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"     * Initialize a duke.Duke object with the corresponding object from other supporting classes.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    public Duke() {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        this.storage \u003d new Storage(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        new Duke().start(new Stage());","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        VBox dialogContainer \u003d ui.getDialogContainer();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        ScrollPane scrollPane \u003d ui.getScrollPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"        Button sendButton \u003d ui.getSendButton();","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        ui.displayIntro();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"        //set up the UI","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"        ui.setStage(stage);","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"        ui.setScrollPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"        //Deal with user input","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        ui.setAnchorPane(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        ui.manageGuiEchoing(userInput, parser);","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hhchinh2002":73,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" * A launcher class to launch the chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"public class Launcher {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hhchinh2002":12}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.data;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":" * duke.storage.Storage class encapsulates the whole storing, reading process of chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    /** Path Object represents the default storing file path in hard disk */","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    private static final Path STORING_FILE_PATH \u003d Paths.get(\".\", \".\", \".\", \"data\", \"duke.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    /** Path Object represents the temporary storing file path in the hard disk */","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    private static final Path TEMPORARY_STORING_FILE_PATH \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"            Paths.get(\".\", \".\", \".\", \"data\", \"temp_duke.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"     * Initializes a new duke.storage.Storage object and try to read the storing file in hard disk, if there is not","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"     * a file existed then create a new one.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"            Files.createFile(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"            readFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"     * Save the tasks\u0027 information to the hard disk file.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"     * @param tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"        Scanner reader \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"            Files.deleteIfExists(TEMPORARY_STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"            Files.createFile(TEMPORARY_STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"                text +\u003d tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"            Files.writeString(TEMPORARY_STORING_FILE_PATH, text);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"            Files.deleteIfExists(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"            Files.move(TEMPORARY_STORING_FILE_PATH, STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"        } finally {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"            if (reader !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"                reader.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"     * Read the stored tasks\u0027 information and write it onto the TaskList object of the running chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"    public void readFile() {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        Scanner reader \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"            reader \u003d new Scanner(STORING_FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"        if (reader !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"            String pointer;","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"            Task storedTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"            while (reader.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"                pointer \u003d reader.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"                storedTask \u003d readLineInStorageFile(pointer);","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"                taskList.addTask(storedTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"            reader.close();","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"    private Task readLineInStorageFile(String pointer) {","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"        Task storedTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"        //checks which kinds of task is stored in this current line","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"        if (pointer.startsWith(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"            storedTask \u003d readToDoTask(pointer);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"        } else if (pointer.startsWith(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"            storedTask \u003d readEventTask(pointer);","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"            storedTask \u003d readDeadlineTask(pointer);","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"        //checks the task is marked or not","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"        if (pointer.substring(3).startsWith(\"[X]\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"            storedTask.mark();","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"        return storedTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"    private Task readToDoTask(String pointer) {","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"        String description \u003d pointer.substring(7);","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"hhchinh2002"},"content":"    private Task readEventTask(String pointer) {","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"hhchinh2002"},"content":"        String description \u003d pointer.substring(7, pointer.indexOf(\"(from: \") - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate start \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"hhchinh2002"},"content":"                pointer.substring(pointer.indexOf(\"(from: \") + 7, pointer.indexOf(\" to:\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"hhchinh2002"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate end \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"hhchinh2002"},"content":"                pointer.substring(pointer.indexOf(\"to: \") + 4, pointer.lastIndexOf(\")\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"hhchinh2002"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"hhchinh2002"},"content":"        return new Event(description, start, end);","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"hhchinh2002"},"content":"    private Task readDeadlineTask(String pointer) {","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"hhchinh2002"},"content":"        String description \u003d pointer.substring(7, pointer.indexOf(\"(by: \") - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate by \u003d LocalDate.parse(","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"hhchinh2002"},"content":"                pointer.substring(pointer.indexOf(\"(by: \") + 5, pointer.lastIndexOf(\")\")),","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"hhchinh2002"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"hhchinh2002"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":135}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.data;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" * duke.data.TaskList class encapsulates the information of the tasks keyed in the chatbot by the user.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     * Returns true if the task argument is in the task list and false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @param task a duke.task.Task object encapsulate the task we are checking.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     * @return Returns true if the task argument is in the task list and false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        return this.tasks.contains(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     * Add the task argument into the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     * @param newTask a duke.task.Task object encapsulating the new task being added.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        return Ui.getAddTaskMessage(newTask, size + 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"     * Mark the task specified in the input of user to task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to mark.","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    public String mark(String command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(5)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        assert target !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        target.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"        return Ui.getMarkTaskMessage(target);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"     * Unmark the task specified in the input of user to task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to unmark.","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"    public String unmark(String command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(7)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"        assert target !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"        target.unmark();","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"        return Ui.getUnmarkTaskMessage(target);","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"     * Delete the task specified in the input of user from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task to delete.","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"    public String delete(String command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d Integer.valueOf(command.substring(7)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"        Task target \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"        assert target !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        return Ui.getDeleteTaskMessage(target, size - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"     * Find the task specified in the input of the user from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"     * @param command User input specifying which task keyword to find.","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"    public String find(String command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"        String keyWord \u003d command.substring(5);","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"        Predicate\u003cTask\u003e keyWordFilter \u003d task -\u003e (task.getDescription().contains(keyWord));","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"        Stream\u003cTask\u003e resultedTasks \u003d tasks.stream().filter(keyWordFilter);","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"        return Ui.getFindTaskMessage(resultedTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":103}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.exception.DukeException is a subclass of Exception,","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * encapsulates a string describes a checked exception","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" * that a duke.Duke object encounters.","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.exception.DukeException object with given exception description.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the exception from duke.Duke.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hhchinh2002":21}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":" * duke.parser.Parser class encapsulates the logic implementation of the chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     * Initializes a Parser object referring to a TaskList argument object containing the list of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"     * using on chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"     * @param taskList TaskList object encapsulate all tasks\u0027 information.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"     * Handle the user input and display it back to the dialogContainer.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"     * @param userInput The input user typed in.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     * @param dialogContainer The dialog container.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     * @param dukeImg The image represents duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"     * @param userImg The image represnets user.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    public void handleUserInput(TextField userInput, VBox dialogContainer, ImageView dukeImg, ImageView userImg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"        String responseMessage \u003d \"\";","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"            responseMessage \u003d doAndGetResponse(userInput.getText());","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"            responseMessage \u003d e.getMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        Label dukeText \u003d new Label(responseMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"                DialogBox.getUserDialog(userText, dukeImg),","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"                DialogBox.getDukeDialog(dukeText, userImg)","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"     * Handles the input from the user, do the corresponding actions and return the response.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"     * @param command The input from user.","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"     * @return Returns A message responsed by chatbot for the argument user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"     * @throws DukeException If the user input is not in the right format.","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"    public String doAndGetResponse(String command) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        //1st check for 2 most general command","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"            return Ui.getOutroMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"            return Ui.getTaskListMessage(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"            return Ui.getHelpResponse();","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"        //2nd check for interactive command related to task","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"        if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"            return taskList.mark(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"            return taskList.unmark(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"            return taskList.delete(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"find \")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"            return taskList.find(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        //3rd check for adding task command","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"        return getAddingTaskResponse(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"    private String getAddingTaskResponse(String command) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"        String description \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"        Task newTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"        String responseMessage \u003d \"\";","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d parseToDo(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d parseDeadline(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"            newTask \u003d parseEvent(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"            responseMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"            throw new DukeException(responseMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"        boolean isAlreadyExisted \u003d taskList.contains(newTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"        if (!isAlreadyExisted) {","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"            responseMessage \u003d taskList.addTask(newTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"            responseMessage \u003d \"This task is already existed.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"hhchinh2002"},"content":"        return responseMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"hhchinh2002"},"content":"    private Task parseToDo(String description) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"hhchinh2002"},"content":"        if (description.length() \u003c\u003d 5) {","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"hhchinh2002"},"content":"            String responseMessage \u003d \"The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"hhchinh2002"},"content":"            throw new DukeException(responseMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"hhchinh2002"},"content":"        return new ToDo(description.substring(5));","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"hhchinh2002"},"content":"    private Task parseDeadline(String description) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"hhchinh2002"},"content":"        if (description.length() \u003c\u003d 9) {","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"hhchinh2002"},"content":"            String responseMessage \u003d \"The description of a deadline cannot be empty.\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"hhchinh2002"},"content":"            throw new DukeException(responseMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate by \u003d LocalDate.parse(description.substring(description.indexOf(\" /by \") + 5),","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"hhchinh2002"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"hhchinh2002"},"content":"        description \u003d description.substring(9, description.indexOf(\" /by \"));","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"hhchinh2002"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"hhchinh2002"},"content":"    private Task parseEvent(String description) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"hhchinh2002"},"content":"        if (description.length() \u003c\u003d 6) {","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"hhchinh2002"},"content":"            String responseMessage \u003d \"The description of an event cannot be empty:\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"hhchinh2002"},"content":"            throw new DukeException(responseMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate start \u003d LocalDate.parse(description.substring(description.indexOf(\" /from \") + 7,","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"hhchinh2002"},"content":"                description.indexOf(\" /to \")), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"hhchinh2002"},"content":"        LocalDate end \u003d LocalDate.parse(description.substring(description.indexOf(\" /to \") + 5),","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"hhchinh2002"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"hhchinh2002"},"content":"        description \u003d description.substring(6, description.indexOf(\" /from \"));","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"hhchinh2002"},"content":"        return new Event(description, start, end);","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":150}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * Class DeadLine is a subclass of duke.task.Task, encapsulate details","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * about a type of user\u0027s tasks which has a deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    //The deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.task.Deadline task with given description and deadline time","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the task","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * @param by The deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        return this.by;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"            Deadline target \u003d (Deadline) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription())","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getDeadline().equals(this.getDeadline());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.task.Event is a subclass of duke.task.Task, encapsulate details","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" * about a type of user\u0027s tasks which happen during a period","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" * of time.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    // The starting time of the duke.task.Event","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate start;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    //The ending time of the duke.task.Event","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * Creates an duke.task.Event task object with given description and starting, ending time","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the duke.task.Event task","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @param start The starting time of the duke.task.Event","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     * @param end The ending time fo the duke.task.Event","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        return this.start;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        return this.end;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"            Event target \u003d (Event) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription())","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getStartTime().equals(this.getStartTime())","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"                    \u0026\u0026 target.getEndTime().equals(this.getEndTime());","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"                + \" (from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"                + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class Tasks encapsulate details","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * about a user\u0027s task in stored in a duke.Duke object.","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.task.Task object with given description","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the task","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    public void mark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     * Unmarks the current task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"            return ((Task) o).getDescription().equals(this.getDescription());","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"hhchinh2002":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":" * Class duke.task.ToDo is a subclass of duke.task.Task, encapsulate details","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":" * about a task that the user need to do.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":" * @author hhchinh2002","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a duke.task.ToDo task object with given description","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"     * @param description The description for the duke.task.ToDo task","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"        if (o instanceof ToDo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"            ToDo target \u003d (ToDo) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"            return target.getDescription().equals(this.getDescription());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":32}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":" * DiaglogBox class encapsulates an Image represents chatbot or the user with a Label containing the message inside.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private Label text;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * Initialize a DialogBox object encapsulate with a Label and an ImageView.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     * @param l The Label object encapsulating a text.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * @param iv The ImageView encapsulating an image represents user/chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    private void flip() {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"     * Returns DiaglogBox represents User\u0027s input in the GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"     * @param l The Label of user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"     * @param iv The image represents user.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"     * @return A DialogBox with user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"     * Returns DialogBox represents Duke\u0027s response in the GUI","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"     * @param l The label of duke response.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"     * @param iv The image represents Duke chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"     * @return A DialogBox with Duke response","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"        db.flip();","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"        return db;","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hhchinh2002":69}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":" * duke.ui.Ui class represents User interface when using the chatbox.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"     * Initializes an Ui object represent the user interface.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public Ui() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        this.sendButton \u003d new Button();","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        this.dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"     * Display the intro of chatbot","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    public void displayIntro() {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        String introMessage \u003d \"Hello! I\u0027m Duke\\n What can I do for you?\";","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        Label intro \u003d new Label(introMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"                DialogBox.getDukeDialog(intro, new ImageView(duke))","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"     * Display a in-app help page.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"     * @return The response message for the help command.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"    public static String getHelpResponse() {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        String helpResponse \u003d \"This is a list of my features and commands that you can use:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"                + \"1. todo [task name]: add a To Do task to the list.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"                + \"2. deadline [task name] \\\\by [yyyy-MM-dd] : add a Deadline task to the list.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"                + \"3. event [task name] \\\\from [yyyy-MM-dd] \\\\to [yyyy-MM-dd] : add an event task to the list.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"                + \"4. list : to display the task list currently in order.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"                + \"5. mark [task number] : to mark a task with the number from the list order.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"                + \"6. unmark [task number] : to unmark a task with the number from the list order.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"                + \"7. delete [task number] : to delete a task with the number from the list order.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"                + \"8. find [keyword] : find any tasks contain that keyword.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"                + \"9. bye : to end our sweet sweet conversation \u003c3.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"                + \"10. help : to see a list of commands which you are seeing right neowwwww.\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"        return helpResponse;","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"     * Returns the outro message of the chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"     * @return The outro message of the chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"    public static String getOutroMessage() {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"     * Prints the tasks list stored in the bot.","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"     * @param taskList A duke.data.TaskList Object encapsulating the all tasks in the chatbot.","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message of the chatbot to list all tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"    public static String getTaskListMessage(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"            return \"You currently don\u0027t have any task in my list.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        String tasksList \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"        Task currentTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"            currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"            tasksList +\u003d i + 1 + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"        return \"Here are the tasks in your list:\\n\" + tasksList;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the adding action of argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"     * @param newTask The new task being added.","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"     * @param size    The size of task list after adding.","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message from chatbot after adding a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"    public static String getAddTaskMessage(Task newTask, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"                + newTask","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list\";","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the marking action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The task being marked.","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message of the chatbot after marking a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"hhchinh2002"},"content":"    public static String getMarkTaskMessage(Task target) {","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"hhchinh2002"},"content":"        return \"Nice! I\u0027ve marked this task as above:\\n  \" + target;","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the unmarking action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The task being unmarked.","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message of the chatbot after unmarking a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"hhchinh2002"},"content":"    public static String getUnmarkTaskMessage(Task target) {","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"hhchinh2002"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + target;","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the deleting action of the argument task.","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"hhchinh2002"},"content":"     * @param target The duke.task.Task being deleted from the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"hhchinh2002"},"content":"     * @param size   The current size of task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message of the chatbot after deleting a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"hhchinh2002"},"content":"    public static String getDeleteTaskMessage(Task target, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"hhchinh2002"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"hhchinh2002"},"content":"                + target + \"\\nNow you have \" + size + \" task(s) in the list\";","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"hhchinh2002"},"content":"     * Prints a message corresponding to the finding action with the list of task found.","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"hhchinh2002"},"content":"     * @param resultedTasks A Stream of Task object encapsulating all tasks found.","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"hhchinh2002"},"content":"     * @return The message of the chatbot after finding tasks by a keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"hhchinh2002"},"content":"    public static String getFindTaskMessage(Stream\u003cTask\u003e resultedTasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"hhchinh2002"},"content":"        Stream\u003cString\u003e searchResult \u003d resultedTasks.map((task) -\u003e task.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"hhchinh2002"},"content":"        String listingResultMessage \u003d searchResult.reduce(\"\", (result, element) -\u003e result + element + \"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"hhchinh2002"},"content":"        return \"Here are the matching tasks in your list:\\n\" + listingResultMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"hhchinh2002"},"content":"     * Takes in a stage object from overriding start() method from Duke class and set some default","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"hhchinh2002"},"content":"     * attributes to it.","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"hhchinh2002"},"content":"     * @param stage","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"hhchinh2002"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"hhchinh2002"},"content":"        stage.show();","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"hhchinh2002"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"hhchinh2002"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"hhchinh2002"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"hhchinh2002"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"hhchinh2002"},"content":"     * Set the Scroll Pane in the user interface to default.","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"hhchinh2002"},"content":"    public void setScrollPane() {","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"hhchinh2002"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"hhchinh2002"},"content":"     * Set the Anchor Pane in the user interface to default.","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"hhchinh2002"},"content":"     * @param userInput A TextField object with input user keyed in.","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"hhchinh2002"},"content":"    public void setAnchorPane(TextField userInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"hhchinh2002"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"hhchinh2002"},"content":"     * Takes in the user input from a TextField object and a Parser of chatbot","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"hhchinh2002"},"content":"     * Do the corresponding action and display it on the user interface.","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"hhchinh2002"},"content":"     * @param userInput","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"hhchinh2002"},"content":"     * @param parser","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"hhchinh2002"},"content":"    public void manageGuiEchoing(TextField userInput, Parser parser) {","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"hhchinh2002"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"hhchinh2002"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-20"},{"lineNumber":204,"author":{"gitId":"hhchinh2002"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"hhchinh2002"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"hhchinh2002"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"hhchinh2002"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"hhchinh2002"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":210,"author":{"gitId":"hhchinh2002"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"hhchinh2002"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"hhchinh2002"},"content":"        //handle user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"hhchinh2002"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"hhchinh2002"},"content":"            parser.handleUserInput(userInput, dialogContainer, new ImageView(user), new ImageView(duke));","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"hhchinh2002"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"hhchinh2002"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":220,"author":{"gitId":"hhchinh2002"},"content":"            parser.handleUserInput(userInput, dialogContainer, new ImageView(user), new ImageView(duke));","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"hhchinh2002"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":222,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":223,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":224,"author":{"gitId":"hhchinh2002"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"hhchinh2002"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"hhchinh2002"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":227,"author":{"gitId":"hhchinh2002"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-20"},{"lineNumber":228,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":229,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":230,"author":{"gitId":"hhchinh2002"},"content":"    public VBox getDialogContainer() {","lastModifiedDate":"2023-02-20"},{"lineNumber":231,"author":{"gitId":"hhchinh2002"},"content":"        return this.dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":232,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":233,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":234,"author":{"gitId":"hhchinh2002"},"content":"    public ScrollPane getScrollPane() {","lastModifiedDate":"2023-02-20"},{"lineNumber":235,"author":{"gitId":"hhchinh2002"},"content":"        return this.scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":236,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":237,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":238,"author":{"gitId":"hhchinh2002"},"content":"    public Button getSendButton() {","lastModifiedDate":"2023-02-20"},{"lineNumber":239,"author":{"gitId":"hhchinh2002"},"content":"        return this.sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":240,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":241,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":241}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"public class EventTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventOneStart \u003d LocalDate.parse(\"2023-03-04\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventOneEnd \u003d LocalDate.parse(\"2023-03-06\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventTwoStart \u003d eventOneStart;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventTwoEnd \u003d eventOneEnd;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventThreeStart \u003d eventOneStart;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    private LocalDate eventThreeEnd \u003d LocalDate.parse(\"2023-03-07\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of Event.equals().","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public void equals() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        Event eventOne \u003d new Event(\"festival\", eventOneStart, eventOneEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        Event eventTwo \u003d new Event(\"concert\", eventTwoStart, eventTwoEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        Event eventThree \u003d new Event(\"festival\", eventThreeStart, eventThreeEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        ToDo toDo \u003d new ToDo(\"festival\");","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventOne.equals(eventTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.equals(eventOne), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventTwo.equals(eventTwo), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.equals(toDo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of Event.toString().","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    public void toString_checkMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        Event eventOne \u003d new Event(\"festival\", eventOneStart, eventOneEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        Event eventTwo \u003d new Event(\"concert\", eventTwoStart, eventTwoEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        Event eventThree \u003d new Event(\"festival\", eventThreeStart, eventThreeEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventOne.toString(), \"[E][ ] festival (from: Mar 4 2023 to: Mar 6 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventTwo.toString(), \"[E][ ] concert (from: Mar 4 2023 to: Mar 6 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(eventThree.toString(), \"[E][ ] festival (from: Mar 4 2023 to: Mar 7 2023)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":45}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoOne \u003d new ToDo(\"work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoTwo \u003d new ToDo(\"homework\");","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoThree \u003d new ToDo(null);","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    private ToDo toDoFour \u003d new ToDo(\"work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the implementation of ToDo.equals().","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    public void equals() {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.equals(toDoTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoTwo.equals(toDoTwo), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.equals(toDoFour), true);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoThree.equals(toDoTwo), false);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     * Checks the message from ToDo.toString().","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    public void toString_checkMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoOne.toString(), \"[T][ ] work\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        assertEquals(toDoTwo.toString(), \"[T][ ] homework\");","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hhchinh2002":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"todo borrow book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hhchinh2002":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"java -classpath ..\\bin duke\\Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hhchinh2002":1,"-":20}}]
