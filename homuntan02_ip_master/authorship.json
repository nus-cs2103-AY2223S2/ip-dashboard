[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"checkstyle {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"homuntan02":20,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"T | 0 | sleep","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"T | 0 | find gf","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"T | 0 | gf","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"homuntan02":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.parsers.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":" * The main duke program.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        this.taskList \u003d storage.loadFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"     * Begins the execution of the Duke program.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"        //start of bot","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"            String fullCommand \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"                c.execute(taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"            } catch (DukeExceptions exceptions) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"                ui.showError(exceptions);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"            } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"    public String getResponse(String request) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"            Command com \u003d Parser.parse(request);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"            String response \u003d com.execute(this.taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"            if (com.isExit()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"                storage.save(this.taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"            return response;","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"        new Duke(\"./data/\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":72}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"public class Launcher {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    private Duke duke \u003d new Duke(\"./data/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":32}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":" * Processes Commands to execute tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"    private boolean isEnd;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    private String tag;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"     * Constuctor for a commmand.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"     * @param tag to know what command is used.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    public Command(String tag) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        this.isEnd \u003d tag.equals(\"END\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     * Processes the command and return a reply.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"     * @param tasks the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"    public abstract String execute(TaskList tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"     * Checks if the command is an exit command which terminates the program.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"     * @return boolean to tell if command is an exit command.","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        return isEnd;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":38}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.MissingArgumentException;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" * Command to add a deadline.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    private String requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    public DeadlineCommand(String requestContent) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        super(\"DEADLINE\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        this.requestContent \u003d requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"     * Adds deadline to a task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        String[] splitWithBy \u003d requestContent.split(\" /by \", 2);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        String description \u003d splitWithBy[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        } else if (splitWithBy.length !\u003d 2 || splitWithBy[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The deadline cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        String by \u003d splitWithBy[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"        tasks.addDeadline(newDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + newDeadline.toString()","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"                + \"  Now you have \" + tasks.getLen() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":43}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Command to delete a task.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        super(\"DELETE\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        assert this.index \u003e\u003d 0;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        return tasks.delete(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":27}},{"path":"src/main/java/duke/commands/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":" * Command to terminate program.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"public class EndCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"    public EndCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"        super(\"END\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"        Ui.outro();","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"        return \"Nice have the BEST DAY AHEAD!!!!!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":19}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.MissingArgumentException;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" * Command to add an event to a task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    private String requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    public EventCommand(String requestContent) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        super(\"EVENT\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        this.requestContent \u003d requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        String[] splitFrom \u003d requestContent.split(\" /from \", 2);","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        String description \u003d splitFrom[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        } else if (splitFrom.length !\u003d 2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The from cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        String[] splitTo \u003d splitFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        String from \u003d splitTo[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        String to \u003d splitTo[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"        if (from.equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The from cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"        } else if (splitTo.length !\u003d 2 || splitTo[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The to cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"        tasks.addEvent(newEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + newEvent.toString()","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"                + \"  Now you have \" + tasks.getLen() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":48}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Command to search for keywords in task of a task list.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    private String keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    public FindCommand(String keyword){","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        super(\"FIND\");","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks){","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        assert this.keyword !\u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        return tasks.find(this.keyword);","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"homuntan02":24}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":" * Command to print all task in a task list to the console.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"    public ListCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"        super(\"LIST\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"        Ui.displayMessage(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"        reply +\u003d tasks.list();","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":21}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        super(\"MARK\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        assert this.index \u003e\u003d 0;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        return tasks.setDone(this.index);","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":27}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.MissingArgumentException;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" * Command to add a \"to do\" task to a task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    private String requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    public ToDoCommand(String requestContent) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        super(\"TODO\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"        this.requestContent \u003d requestContent;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        if (requestContent.trim().equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"            throw new MissingArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        ToDo newToDo \u003d new ToDo(requestContent);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        tasks.addToDo(newToDo);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + newToDo.toString()","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"                + \"  Now you have \" + tasks.getLen() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":33}},{"path":"src/main/java/duke/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.UnknownCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Command that throws unknown command exception","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    public UnknownCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"        super(\"UNKNOWN\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks)throws UnknownCommandException {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":19}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Command to mark a task as undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    private int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"        super(\"UNMARK\");","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    public String execute(TaskList tasks) throws InvalidArgumentException {","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        assert this.index \u003e\u003d 0;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        return tasks.setNotDone(this.index);","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"            throw new InvalidArgumentException(\"Index \" + (this.index + 1) + \" is out of bound.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":26}},{"path":"src/main/java/duke/dukeexceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":" * Exceptions by Duke program.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"public class DukeExceptions extends RuntimeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"    public DukeExceptions(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":15}},{"path":"src/main/java/duke/dukeexceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":" * Exception when the user inputs an invalid argument in the command.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"public class InvalidArgumentException extends DukeExceptions {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":10}},{"path":"src/main/java/duke/dukeexceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":" * Exception when the user is missing arguments in the command.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"public class MissingArgumentException extends DukeExceptions {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":11}},{"path":"src/main/java/duke/dukeexceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":" * Exception when the user inputs an invalid argument in the command.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"public class UnknownCommandException extends DukeExceptions {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":10}},{"path":"src/main/java/duke/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.parsers;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.commands.*;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"     * Parses a request to generate command.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"     * @param fullCommand content to be parsed","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"     * @return A corresponding command.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    public static Command parse(String fullCommand) throws DukeExceptions {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        String[] splitStr \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        String requestContent \u003d fullCommand.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"                ? fullCommand.split(\" \", 2)[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"                : \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        //END","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        if (splitStr[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"            return new EndCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        switch(splitStr[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"            if (requestContent.trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"                throw new MissingArgumentException(\"The index cannot be empty.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"            int markIndex \u003d Integer.parseInt(splitStr[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"            if (requestContent.trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"                throw new MissingArgumentException(\"The index cannot be empty.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"            int unmarkIndex \u003d Integer.parseInt(splitStr[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"            return new ToDoCommand(requestContent);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"            return new DeadlineCommand(requestContent);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"        case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"            return new EventCommand(requestContent);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"            if (requestContent.trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"                throw new MissingArgumentException(\"The index cannot be empty.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"            int index \u003d Integer.parseInt(requestContent.trim()) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"        case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"            return new FindCommand(requestContent);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":71}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":" * Class to abstract the interaction between local storage and program task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    private File file;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    private final String path;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"     * Constructor for storage abstraction.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"     * @param path the data path where we will load and store the data","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        fileSetup();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"     * Sets up file and directory if not present.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    public void fileSetup() {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"        File directory \u003d new File(path);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"                directory.mkdir();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"            this.file \u003d new File(path, \"duke.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"     * Reads locally stored data for program and returns it as a Tasklist.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"     * @return Loaded task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"                String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"                result.addTask(Task.decode(nextLine));","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"            scanner.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"        } catch (DukeExceptions exceptions) {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"            ui.showError(exceptions);","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"homuntan02"},"content":"     * Stores a task list locally.","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"homuntan02"},"content":"     * @param taskList task list to be stored.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"homuntan02"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"homuntan02"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"homuntan02"},"content":"            fileWriter.write(taskList.saveTaskList());","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"homuntan02"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"homuntan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"homuntan02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":90}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.InvalidArgumentException;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":" * Stores tasks in a list","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    protected Task[] list;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    protected int len;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"     * Constructor for the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        this.list \u003d new Task[100];","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        this.len \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    public int getLen(){","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        return this.len;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"     * @param index index of the task you want to retrieve","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"     * @return the task","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    public Task showTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        return list[index];","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"     * Prints out all the task in the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"    public String list() {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"        for (int i \u003d 0; i \u003c this.len; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"            result +\u003d \"  \" + index + \". \" + list[i].toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"        System.out.print(result);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"        return result;","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"     * Marks the task at index as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"     * @param index index of task to be marked done","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"     * @return formatted string of the task being marked","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"    public String setDone(int index) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"        this.list[index].setDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + list[index].toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"     * Unmark the task at index as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"     * @param index index of task to be set as not done","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"     * @return formatted string of the task being unmarked","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"    public String setNotDone(int index) {","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"homuntan02"},"content":"        this.list[index].setNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  OK, I\u0027ve marked this task as not done:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + list[index].toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"homuntan02"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"homuntan02"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"homuntan02"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"homuntan02"},"content":"        this.list[len] \u003d task;","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"homuntan02"},"content":"        this.len++;","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"homuntan02"},"content":"     * Adds a ToDo task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"homuntan02"},"content":"     * @param toDo the toDo to be added","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"homuntan02"},"content":"    public void addToDo(ToDo toDo) {","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"homuntan02"},"content":"        this.list[len] \u003d toDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"homuntan02"},"content":"        this.len++;","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"homuntan02"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"homuntan02"},"content":"     * @param deadline Deadline to be added","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"homuntan02"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"homuntan02"},"content":"        this.list[len] \u003d deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"homuntan02"},"content":"        this.len++;","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"homuntan02"},"content":"     * Adds an Event to the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"homuntan02"},"content":"     * @param event to be added to the list","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"homuntan02"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"homuntan02"},"content":"        this.list[len] \u003d event;","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"homuntan02"},"content":"        this.len++;","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"homuntan02"},"content":"     * Prints indexed task as a formatted string.","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"homuntan02"},"content":"     * @param index the index of the task to be printed","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"homuntan02"},"content":"     * @return the task as a formatted string","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"homuntan02"},"content":"    public String taskToString(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"homuntan02"},"content":"        return list[index].toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"homuntan02"},"content":"     * Deletes the indexed task from the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"homuntan02"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"homuntan02"},"content":"     * @return a formatted string about the deleted task","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"homuntan02"},"content":"    public String delete(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"homuntan02"},"content":"        if (index \u003e this.len) {","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"homuntan02"},"content":"            throw new InvalidArgumentException(\"This task doesn\u0027t exist\");","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"homuntan02"},"content":"        Task deletedTask \u003d list[index];","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"homuntan02"},"content":"        for (int i \u003d index; i \u003c this.len; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"homuntan02"},"content":"            this.list[i] \u003d this.list[i + 1];","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"homuntan02"},"content":"        this.len--;","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"  Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"homuntan02"},"content":"                + \"    \" + deletedTask.toString()","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"homuntan02"},"content":"                + \"  Now you have \" + this.len + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"homuntan02"},"content":"        System.out.print(reply);","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"homuntan02"},"content":"     * Returns the task list as a formatted string to be saved locally.","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"homuntan02"},"content":"     * @return the task list in formatted string","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"homuntan02"},"content":"    public String saveTaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"homuntan02"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"homuntan02"},"content":"        for (int i \u003d 0; i \u003c this.len; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"homuntan02"},"content":"            result +\u003d list[i].saveTask() + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"homuntan02"},"content":"        return result;","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":167,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"homuntan02"},"content":"     * Searches for a keyword in the description of tasks in the list to find a match.","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":170,"author":{"gitId":"homuntan02"},"content":"     * @param keywords the keywords to be searched.","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"homuntan02"},"content":"    public String find(String keywords) {","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"homuntan02"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"homuntan02"},"content":"        for (int i \u003d 0; i \u003c this.len; i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"homuntan02"},"content":"            Task currTask \u003d this.list[i];","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"homuntan02"},"content":"            if (currTask.getDescription().contains(keywords)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"homuntan02"},"content":"                temp.addTask(currTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"homuntan02"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"homuntan02"},"content":"        if (temp.len \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"homuntan02"},"content":"            reply \u003d \"There\u0027s nothing in your list that matched keyword\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"homuntan02"},"content":"            Ui.displayMessage(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"homuntan02"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"homuntan02"},"content":"            reply \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"homuntan02"},"content":"            Ui.displayMessage(reply);","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"homuntan02"},"content":"        reply +\u003d temp.list();","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"homuntan02"},"content":"        return reply;","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":192}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":" * A task representing a deadline.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    private static final String tag \u003d \"D\";","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"     * Constructor for a deadline.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"     * @param by the date and time of the due date","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"            LocalDate byLocalDate \u003d LocalDate.parse(by.split(\" \")[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"            LocalTime byLocalTime \u003d LocalTime.parse(by.split(\" \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"            this.by \u003d LocalDateTime.of(byLocalDate, byLocalTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"            throw new DukeExceptions(\"Format of date was not recognized, use YYYY-MM-DD and HH:MM\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"     * Returns the deadline in a formatted string to be saved locally.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"     * @return the deadline in string format","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"        return this.tag + \" | \" + completed + \" | \"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"                + this.description + \" | \" + formattedDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"                + \" (by:\" + by.format(DateTimeFormatter.ofPattern(\"MM/dd/yyyy \u0027at\u0027 hh:mm a\")) + \")\"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"                + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"            return true;","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"        return Objects.equals(by, deadline.by);","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":75}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":" *  A task representing an event","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    private static final String tag \u003d \"E\";","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"     *  Constructor for an event.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"     * @param description the description of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"     * @param from data and time of when event starts","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"     * @param to data and time of when event ends","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"            String[] fromSplit \u003d from.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"            LocalDate fromLocalDate \u003d LocalDate.parse(fromSplit[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"            LocalTime fromLocalTime \u003d LocalTime.parse(fromSplit[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"            this.from \u003d LocalDateTime.of(fromLocalDate, fromLocalTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"            String[] toSplit \u003d to.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"            LocalDate toLocalDate \u003d LocalDate.parse(toSplit[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"            LocalTime toLocalTime \u003d LocalTime.parse(toSplit[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"            this.to \u003d LocalDateTime.of(toLocalDate, toLocalTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"            throw new DukeExceptions(\"Format of date was not recognized, use YYYY-MM-DD and HH:MM\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"     * Returns the event in a formatted string to be saved locally.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"     * @return the event in string format","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"        return this.tag + \" | \" + completed + \" | \"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"                + this.description","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"                + \" | \" + this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"                + \" - \" + this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"     * Returns the event in formatted string to be printed into console.","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"     * @return the event in string format","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"                + \"(from:\" + this.from.format(DateTimeFormatter.ofPattern(\"MM/dd/yyyy \u0027at\u0027 hh:mm a\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"                + \" to:\" + this.to.format(DateTimeFormatter.ofPattern(\"MM/dd/yyyy \u0027at\u0027 hh:mm a\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"                + \")\" + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"     * Checks if an object is an event with the same description, from and to.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"     * @return boolean of whether an object is an event with the same description, from and to","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"homuntan02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"homuntan02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"homuntan02"},"content":"            return true;","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"homuntan02"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"homuntan02"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"homuntan02"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"homuntan02"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"homuntan02"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"homuntan02"},"content":"        return Objects.equals(from, event.from) \u0026\u0026 Objects.equals(to, event.to);","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":89}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":" * A task class that specific task inherit from.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    protected String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"     * Constructor for a task with a description","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"     * @param description the desctiption of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"     * Returns a string denoting whether the task is done","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"     * @return \"X\" for task that are done and \"\" for task that are not.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"     * Sets a task to be done.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"     * Sets a task to be not done.","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"     * retrieves the description of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"     * @return the description","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"     * formats the task into a string to be saved locally","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"    public abstract String saveTask();","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"     * decodes a task that has been formatted to be saved locally back into a task.","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"     * @return the task that has been decoded","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"    public static Task decode(String taskString) throws DukeExceptions {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"homuntan02"},"content":"        String[] taskStringSplit \u003d taskString.split(\" \\\\| \", 4);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"homuntan02"},"content":"        //temporarily set the currTask to null.","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"homuntan02"},"content":"        Task currTask \u003d null;","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"homuntan02"},"content":"        switch(taskStringSplit[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"homuntan02"},"content":"        case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"homuntan02"},"content":"            currTask \u003d new ToDo(taskStringSplit[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"homuntan02"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"homuntan02"},"content":"        case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"homuntan02"},"content":"            currTask \u003d new Deadline(taskStringSplit[2], taskStringSplit[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"homuntan02"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"homuntan02"},"content":"        case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"homuntan02"},"content":"            String[] fromToSplit \u003d taskStringSplit[3].split(\" - \");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"homuntan02"},"content":"            currTask \u003d new Event(taskStringSplit[2], fromToSplit[0], fromToSplit[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"homuntan02"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"homuntan02"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"homuntan02"},"content":"            throw new DukeExceptions(\"Loading of file failed.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"homuntan02"},"content":"        if (taskStringSplit[1].equals(\"1\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"homuntan02"},"content":"            currTask.setDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"homuntan02"},"content":"        return currTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"homuntan02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"homuntan02"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"homuntan02"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"homuntan02"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"homuntan02"},"content":"            return true;","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"homuntan02"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"homuntan02"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"homuntan02"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"homuntan02"},"content":"        return isDone \u003d\u003d task.isDone \u0026\u0026 description.equals(task.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":110}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":" *  A task representing an to do.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"    private static final String tag \u003d \"T\";","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"     *  Constructor for to do event with description","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"     * @param description description of the to do task.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"     * Returns the to do in a formatted string to be saved locally.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"     * @return the to do in string format","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        return this.tag + \" | \" + completed + \" | \"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"                + this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":38}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    private Label text;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        this.setPadding(new Insets(5, 10, 5, 10));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        this.setSpacing(20);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":54}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"        Label response \u003d new Label(Ui.showWelcome());","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"                DialogBox.getDukeDialog(response, new ImageView(dukeImage))","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"        );","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"        String inputString \u003d userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"        Label input \u003d new Label(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"        Label response \u003d new Label (duke.getResponse(inputString));","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"homuntan02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"homuntan02"},"content":"                DialogBox.getUserDialog(input, new ImageView(userImage)),","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"homuntan02"},"content":"                DialogBox.getDukeDialog(response, new ImageView(dukeImage))","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"homuntan02"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"homuntan02"},"content":"        if (inputString.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"homuntan02"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"homuntan02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"homuntan02"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":64}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package duke.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"import duke.dukeexceptions.DukeExceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":" * Ui deals with interactions with the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"        String introduction \u003d \"  ________________________________\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"                + \"  Yo Great to see you!\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"                + \"  What can I do for you?\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"                + \"  ________________________________\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"        System.out.println(introduction);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"        return \"  Yo Great to see you!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    public static void outro() {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"        String bye \u003d \"  Bye! have a great day\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"     * Prints formatted exception.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"     * @param exception the exception to be printed","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"    public static void showError(DukeExceptions exception) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"homuntan02"},"content":"        String reply \u003d exception.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"homuntan02"},"content":"        System.out.println(reply);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"homuntan02"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"homuntan02"},"content":"        System.out.println(\"  ________________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"homuntan02"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"homuntan02"},"content":"     * Prints formatted messages.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"homuntan02"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"homuntan02"},"content":"     * @param message the string to be printed","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"homuntan02"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"homuntan02"},"content":"    public static void displayMessage(String message) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"homuntan02"},"content":"        System.out.print(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"homuntan02":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"homuntan02":19}},{"path":"src/test/java/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    public void init() {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        this.storage \u003d new Storage(\"./data/\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    public void shouldAddDeadline() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        DeadlineCommand demoDeadlineCommand \u003d new DeadlineCommand(\"Demo /by 2002-02-12 19:00\");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        demoDeadlineCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        Deadline expected \u003d new Deadline(\"Demo\",\"2002-02-12 19:00\");","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"homuntan02":34}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"    Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"    public void init() {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"        this.storage \u003d new Storage(\"./data/\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"    public void shouldAddEvent() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        EventCommand demoEventCommand \u003d new EventCommand(\"Demo /from 2002-02-12 19:00 /to 2012-02-12 21:00\");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        demoEventCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        Event expected \u003d new Event(\"Demo\",\"2002-02-12 19:00\", \"2012-02-12 21:00\");","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"homuntan02":35}},{"path":"src/test/java/command/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"package command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"homuntan02"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"homuntan02"},"content":"    TaskList tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"homuntan02"},"content":"    Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"homuntan02"},"content":"    Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"homuntan02"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"homuntan02"},"content":"    public void init() {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"homuntan02"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"homuntan02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"homuntan02"},"content":"        this.storage \u003d new Storage(\"./data/\");","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"homuntan02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"homuntan02"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"homuntan02"},"content":"    public void shouldAddTodo() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"homuntan02"},"content":"        ToDoCommand demoToDoCommand \u003d new ToDoCommand(\"Demo\");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"homuntan02"},"content":"        demoToDoCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"homuntan02"},"content":"        Task actual \u003d this.tasks.showTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"homuntan02"},"content":"        ToDo expected \u003d new ToDo(\"Demo\");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"homuntan02"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"homuntan02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"homuntan02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"homuntan02":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"todo","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"homuntan02"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"homuntan02":3,"-":19}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\.java","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\Duke.java","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\TaskList.java","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\dukeexceptions\\DukeExceptions.java","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\dukeexceptions\\MissingArgumentException.java","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\dukeexceptions\\UnknownCommandException.java","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\tasks\\Deadline.java","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\tasks\\Events.java","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\tasks\\Task.java","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"homuntan02"},"content":"C:\\Users\\Homun\\Downloads\\Year 2 Sem 2\\CS2103\\ip\\src\\main\\java\\tasks\\ToDo.java","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"homuntan02":10}}]
