[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"javafx {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hongshenggg":12,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import duke.storage.TaskStorage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"import duke.tasklist.Tasklist;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":" * Duke is the personal assistant for managing user","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":" * tasks such as todos, deadlines, and events.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    private static final String FILE_PATH \u003d \"data/data.txt\";","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    private final Tasklist tasklist;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    private boolean isActive;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    public Duke() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        this.tasklist \u003d new Tasklist(new TaskStorage(FILE_PATH));","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"     * Runs Duke and begins parsing input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"     * Duke will deactivate and exit upon receiving \"bye\"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"     * from user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        if (this.isActive) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"                Commands command \u003d this.parser.parseInput(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"                switch (command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"                case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"                    return this.exit();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"                case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"                    return this.viewList();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"                case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"                    return this.mark(parser.getIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"                    return this.unmark(parser.getIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"                case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"                    return this.addTask(parser.getName());","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"                    return this.addTask(","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"                            parser.getName(),","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"                            parser.getDeadline());","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"                case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"                    return this.addTask(","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"                            parser.getName(),","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"                            parser.getStartDate(),","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"                            parser.getEndDate());","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"                case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"                    return this.deleteTask(parser.getIndex());","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"                case FIND:","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"                    return this.findTask(parser.getName());","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"                case DEFAULT:","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"                    return \"I don\u0027t quite get what that means.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"                return e.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"        return \"Duke is currently offline\";","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"    private String exit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"    private String viewList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"        if (this.tasklist.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"            return \"You currently have no tasks.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"            String tasks \u003d formatTasks(this.tasklist.getList());","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"            return \"Here is a list of your tasks:\\n\" + tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"    private String formatTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"            res +\u003d i + 1 + \".\" +  tasks.get(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"            res +\u003d \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"    private String mark(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"hongshenggg"},"content":"        if (this.tasklist.mark(index)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"            return \"I\u0027ve marked this as done:\\n \"","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"                    + this.tasklist.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"            return \"The selected task has already been marked as done.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"    private String unmark(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"        if (this.tasklist.unmark(index)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"hongshenggg"},"content":"            return \"I\u0027ve marked this as not done yet:\\n \"","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"hongshenggg"},"content":"                    + this.tasklist.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"hongshenggg"},"content":"            return \"The selected task has not yet been marked as done.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"    private String addTask(String name) {","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"hongshenggg"},"content":"        Task t \u003d new Todo(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"hongshenggg"},"content":"        this.tasklist.addTask(t, TaskTypes.TODO);","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"hongshenggg"},"content":"        return \"I\u0027ve added the following to your list of tasks:\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"hongshenggg"},"content":"                + t","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"hongshenggg"},"content":"                + \"\\n You now have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"hongshenggg"},"content":"                + this.tasklist.size()","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"hongshenggg"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"hongshenggg"},"content":"    private String addTask(String name, LocalDate byDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"hongshenggg"},"content":"        Task t \u003d new Deadline(name, byDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"        this.tasklist.addTask(t, TaskTypes.DEADLINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"hongshenggg"},"content":"        return \"I\u0027ve added the following to your list of tasks:\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"hongshenggg"},"content":"                + t","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"hongshenggg"},"content":"                + \"\\n You now have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"hongshenggg"},"content":"                + this.tasklist.size()","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"hongshenggg"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"hongshenggg"},"content":"    private String addTask(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"hongshenggg"},"content":"        Task t \u003d new Event(name, startDate, endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"hongshenggg"},"content":"        this.tasklist.addTask(t, TaskTypes.EVENT);","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"hongshenggg"},"content":"        return \"I\u0027ve added the following to your list of tasks:\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"hongshenggg"},"content":"                + t","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"hongshenggg"},"content":"                + \"\\n You now have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"hongshenggg"},"content":"                + this.tasklist.size()","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"hongshenggg"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"hongshenggg"},"content":"    private String deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"hongshenggg"},"content":"        Task task \u003d this.tasklist.deleteTask(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"hongshenggg"},"content":"        return \"I\u0027ve removed the following from your list of tasks:\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"hongshenggg"},"content":"                + task","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"hongshenggg"},"content":"                + \"\\n You now have \"","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"hongshenggg"},"content":"                + this.tasklist.size()","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"hongshenggg"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"hongshenggg"},"content":"    private String findTask(String word) {","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"hongshenggg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.tasklist.find(word);","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"hongshenggg"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"hongshenggg"},"content":"            return \"I could not find any task matching your request.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"hongshenggg"},"content":"            String matchingTasks \u003d this.formatTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"hongshenggg"},"content":"            return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"hongshenggg"},"content":"                    + matchingTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hongshenggg":168,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.gui.Gui;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":" * Main class to launch the GUI of Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"hongshenggg":13}},{"path":"src/main/java/duke/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.enums;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"public enum Commands {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"    BYE,","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"    LIST,","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"    MARK,","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"    UNMARK,","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"    TODO,","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    EVENT,","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    DELETE,","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    FIND,","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    DEFAULT","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hongshenggg":14}},{"path":"src/main/java/duke/enums/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.enums;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"public enum TaskTypes {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"    TODO,","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"    EVENT","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":7}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":7}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.gui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    private Label text;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        text \u003d l;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"hongshenggg":45}},{"path":"src/main/java/duke/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.gui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.gui.DialogBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":" * Class that renders the GUI for Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    private Image dukeImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    public Gui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        duke.run();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        Scene scene \u003d loadScene();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.setTitle(\"Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.setMinHeight(600.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.setMinWidth(400.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        primaryStage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"     * Returns a JavaFX Scene instance with appropriate JavaFx","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"     * controls configured.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"     * @return A Scene instance containing appropriately","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"     * configured controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"    public Scene loadScene() {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"            handleUserInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"        });","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"            handleUserInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"        });","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"        return new Scene(mainLayout);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"     * Method called upon user submitting user input. The","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"     * input is passed to Duke to process, and a response","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"     * is returned from Duke accordingly.","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"        assert userText !\u003d null;","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"hongshenggg"},"content":"        Label dukeText \u003d new Label(duke.getResponse(userInput.getText()));","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"        assert dukeText !\u003d null;","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImg)),","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImg))","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"hongshenggg":113}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":" * This class manages the parsing of user inputs.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    private final int NUM_OF_DATES \u003d 2;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    private String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    private LocalDate[] dates;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    public Parser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        this.dates \u003d new LocalDate[NUM_OF_DATES];","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"     * Parses through the user input to receive the command from","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"     * the user. Based on the command received, required","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"     * information would be retrieved from the user input. If an","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"     * invalid input was received, an exception is thrown.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"     * @param input The string containing user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"     * @return An enum with the respective command from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"     * @throws DukeException If an invalid input was given.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"    public Commands parseInput(String input) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"        String[] delimited \u003d input.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        switch (delimited[0].toLowerCase()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"            return Commands.BYE;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"        case \"list\":","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"            return Commands.LIST;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"            this.index \u003d this.retrieveIndex(delimited);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"            return Commands.MARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"            this.index \u003d this.retrieveIndex(delimited);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"            return Commands.UNMARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"            this.name \u003d this.retrieveName(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"            return Commands.TODO;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"            this.name \u003d this.retrieveName(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"            this.retrieveDates(TaskTypes.DEADLINE, input);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"            return Commands.DEADLINE;","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"        case \"event\":","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"            this.name \u003d this.retrieveName(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"            this.retrieveDates(TaskTypes.EVENT, input);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"            return Commands.EVENT;","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"            this.index \u003d this.retrieveIndex(delimited);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"            return Commands.DELETE;","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        case \"find\":","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"            this.name \u003d this.retrieveName(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"            return Commands.FIND;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"            return Commands.DEFAULT;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"    private int retrieveIndex(String[] input) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Please provide a task number.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"            if (index \u003c 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(\"Invalid task number provided. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"                        + \"Number cannot be less than 1.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"            return index - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Invalid task number provided.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"    private String retrieveName(String input)","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"            return input.split(\" /\")[0].split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Invalid description provided.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"    private void retrieveDates(TaskTypes type, String input)","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"        String[] temp;","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"        switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(\"Please provide a deadline using /by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"            temp \u003d input.split(\" /by \");","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"hongshenggg"},"content":"            if (temp.length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(\"Please provide a valid date.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"                this.dates[0] \u003d LocalDate.parse(temp[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"                        \"Please provide a valid date in the following \"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"                                + \"format: YYYY-MM-DD.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"hongshenggg"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"hongshenggg"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"hongshenggg"},"content":"            if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"hongshenggg"},"content":"                        \"Please provide a start date and end date \"","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"hongshenggg"},"content":"                                + \"using /from and /to respectively.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"            temp \u003d input.split(\" /from \");","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"hongshenggg"},"content":"            String[] dates \u003d temp[1].split(\" /to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"hongshenggg"},"content":"            if (dates.length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(\"Please provide a valid start and end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"hongshenggg"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"hongshenggg"},"content":"                this.dates[0] \u003d LocalDate.parse(dates[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"hongshenggg"},"content":"                this.dates[1] \u003d LocalDate.parse(dates[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"hongshenggg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"hongshenggg"},"content":"                throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"hongshenggg"},"content":"                        \"Please provide the dates in the following \"","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"hongshenggg"},"content":"                                + \"format: YYYY-MM-DD.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"hongshenggg"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"hongshenggg"},"content":"    public int getIndex() {","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"hongshenggg"},"content":"        return this.index;","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"hongshenggg"},"content":"    public String getName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"hongshenggg"},"content":"        return this.name;","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"hongshenggg"},"content":"        return this.dates[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"hongshenggg"},"content":"        return this.dates[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"hongshenggg"},"content":"        return this.dates[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hongshenggg":157}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"public interface Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"    ArrayList\u003cTask\u003e load();","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    void addTask(Task t, TaskTypes type);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    void deleteTask(int index);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    void mark(int index);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    void unmark(int index);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hongshenggg":14}},{"path":"src/main/java/duke/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":" * This class manages persistent storage of the list","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":" * of tasks the user has.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"public class TaskStorage implements Storage{","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    private String filepath;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    private Path path;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    private final String DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    public TaskStorage(String filepath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        Path path \u003d Paths.get(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"        assert Files.exists(path);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"            this.scanner \u003d new Scanner(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"     * Parses through the text file containing the user\u0027s list","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"     * of tasks. The tasks are then created and added to an arraylist","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"     * accordingly before returning the arrayList. When called by the","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"     * constructor of the Tasklist class, allows the Tasklist to be","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"     * loaded with the user\u0027s existing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"     * @return An arraylist containing the existing tasks in the user\u0027s","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"     * list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"     * @see duke.tasklist.Tasklist","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"            String[] task \u003d line.split(DELIMITER);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"            String type \u003d task[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"            Task t;","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"            switch (type) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"            case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"                t \u003d new Todo(task[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"            case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"                t \u003d new Deadline(task[2], LocalDate.parse(task[3]));","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"            case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"                t \u003d new Event(task[2], LocalDate.parse(task[3]), LocalDate.parse(task[4]));","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"            if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"                t.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"            tasks.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"        return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"     * Adds a task into the text document for persistent storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"     * @param type The type of the task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"    public void addTask(Task t, TaskTypes type) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"        String line;","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"        switch (type) {","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"        case TODO:","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"            line \u003d \"T|0|\" + t.getName() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"hongshenggg"},"content":"            line \u003d \"D|0|\" + t.getName() + \"|\" + deadline.getDeadline() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"        case EVENT:","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"            line \u003d \"E|0|\" + t.getName() + \"|\" + event.getStartDate()","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"                    + \"|\" + event.getEndDate() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"hongshenggg"},"content":"            Files.write(this.path, line.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"hongshenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"hongshenggg"},"content":"     * Deletes a task from the text document that is used for","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"hongshenggg"},"content":"     * persistent storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"hongshenggg"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"hongshenggg"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"hongshenggg"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"hongshenggg"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"hongshenggg"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"hongshenggg"},"content":"            if (count !\u003d index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"                newContent \u003d newContent + line + System.lineSeparator();","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"hongshenggg"},"content":"            count++;","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"hongshenggg"},"content":"            Files.write(this.path, newContent.getBytes());","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"hongshenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"hongshenggg"},"content":"     * Marks a task in the storage document as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"hongshenggg"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"hongshenggg"},"content":"            replaceText(index, \"0\", \"1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"hongshenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"hongshenggg"},"content":"     * Marks a task in the storage document as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"hongshenggg"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"hongshenggg"},"content":"            replaceText(index, \"1\", \"0\");","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"hongshenggg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"hongshenggg"},"content":"    private void replaceText(int index, String target, String replacement)","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"hongshenggg"},"content":"            throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"hongshenggg"},"content":"        String newContent \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"hongshenggg"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"hongshenggg"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"hongshenggg"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"hongshenggg"},"content":"            if (count \u003d\u003d index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"hongshenggg"},"content":"                line \u003d line.replaceFirst(target, replacement);","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"hongshenggg"},"content":"            newContent \u003d newContent + line + System.lineSeparator();","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"hongshenggg"},"content":"            count++;","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"hongshenggg"},"content":"        Files.write(this.path, newContent.getBytes());","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hongshenggg":184}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":" * Represents a task that has a deadline that the","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":" * user wants to complete it by.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        return deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":" * Represents a task that has both a starting date","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":" * and an ending date.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        return startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"        return endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"                + this.startDate.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\"))","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"                + \" to: \" + this.endDate.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":" * Represents a task that the user has.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"    private String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    public String getName() {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        return name;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"     * Marks this task as done if it is currently marked as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"     * @return True if this task was not completed, false otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"            return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"     * Marks this task as uncompleted if it is currently marked as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"     * @return True if this task was marked as done, false otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"            return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        String mark;","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"            mark \u003d \"[X]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"            mark \u003d \"[ ]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"        return mark + \" \" + this.name;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":" * Represents a to-do task that the user has.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":" * A to-do has no associated dates where it has","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":" * to be completed by.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":18}},{"path":"src/main/java/duke/tasklist/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":" * Represents the list of tasks that the user has.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"public class Tasklist {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    public Tasklist(Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"        this.tasks \u003d storage.load();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    public int size() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"     * Adds a task into the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"     * @param type The type of the task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    public void addTask(Task t, TaskTypes type) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        this.storage.addTask(t, type);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"     * Deletes a task from the list of tasks based on the","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"     * passed index.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the task in the list to be","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"     *              deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"     * @throws DukeException If the passed index is larger than","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"     * the size of the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"        if (index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Invalid task number provided. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"                    + \"Given task number is \" + (index + 1)","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"                    + \" but there are only \" + this.tasks.size()","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"                    + \" task(s) in the list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        this.storage.deleteTask(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"     * Returns the task in the list with the passed index.","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the desired task in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"     * @return The task with the given index.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"     * Marks the task with given index as completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"     * @return True if the task was successfully marked, false","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"     * otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"     * @throws DukeException If given index is larger than the","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"     * size of the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"    public boolean mark(int index) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"        if (index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Invalid task number provided. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"                    + \"Given task number is \" + (index + 1)","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"                    + \" but there are only \" + this.tasks.size()","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"                    + \" task(s) in the list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"        if (this.tasks.get(index).markAsDone()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"            this.storage.mark(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"            return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"     * Unmarks the task with the given index such that it is","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"hongshenggg"},"content":"     * uncompleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"     * @return True if the task was successfully unmarked, false","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"     * otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"     * @throws DukeException If given index is larger than the","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"     * size of the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"    public boolean unmark(int index) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"        if (index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"hongshenggg"},"content":"            throw new DukeException(\"Invalid task number provided. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"hongshenggg"},"content":"                    + \"Given task number is \" + (index + 1)","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"hongshenggg"},"content":"                    + \" but there are only \" + this.tasks.size()","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"hongshenggg"},"content":"                    + \" task(s) in the list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"hongshenggg"},"content":"        if (this.tasks.get(index).markAsUndone()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"hongshenggg"},"content":"            this.storage.unmark(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"            return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"hongshenggg"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"hongshenggg"},"content":"     * Returns a list of tasks with a description matching","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"hongshenggg"},"content":"     * the input description.","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"hongshenggg"},"content":"     * @param word","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"hongshenggg"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"    public ArrayList\u003cTask\u003e find(String word) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"hongshenggg"},"content":"        ArrayList\u003cTask\u003e result \u003d this.tasks.stream()","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"hongshenggg"},"content":"                .filter(t -\u003e t.getName().contains(word))","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"hongshenggg"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"hongshenggg"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":139}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":" * This class manages the displaying of output to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private static final String LINE \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"            \"\\t____________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"     * Prints a greeting message to the user on the standard output.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public void greet() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                + LOGO","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"                + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"     * Prints the given text on to the standard output. A line is","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"     * added before and after the text for aesthetic formatting.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"     * @param text The string to be printed.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"    public void printOutput(String text) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(\"\\t \" + text);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"    public void printOutput(String text, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(\"\\t \" + text);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"hongshenggg":49}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    public void parseInput_validTodoString_success() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"        assertEquals(Commands.TODO, new Parser().parseInput(\"todo todo1\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    public void parseInput_todoNoDescription_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"            new Parser().parseInput(\"todo \");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"            assertEquals(","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"                    \"Invalid description provided. \" +","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"                            \"The description of a task cannot be empty.\",","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    public void parseInput_deadlineNoDate_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"            new Parser().parseInput(\"deadline deadline /by \");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"            assertEquals(\"Please provide a valid deadline.\", e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"    public void parseInput_deadlineInvalidFormat_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"            new Parser().parseInput(\"deadline deadline /by2023-12-12\");","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"            assertEquals(\"Please provide a valid deadline.\", e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hongshenggg":49}},{"path":"src/test/java/duke/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.stubs;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"public class StorageStub implements Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        Todo todo \u003d new Todo(\"test todo\");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        tasks.add(new Deadline(\"test deadline\", LocalDate.of(2023, 6, 20)));","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"        tasks.add(new Event(\"test event\",","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"                LocalDate.of(2020, 4, 20),","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"                LocalDate.of(2022, 12, 17)));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"        return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    public void addTask(Task t, TaskTypes type) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hongshenggg":46}},{"path":"src/test/java/duke/tasklist/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import duke.enums.TaskTypes;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import duke.stubs.StorageStub;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"public class TasklistTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    public void addTask_addTodo_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"        Tasklist tasklist \u003d new Tasklist(new StorageStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        tasklist.addTask(new Todo(\"test todo 2\"), TaskTypes.TODO);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        assertEquals(4, tasklist.size());","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"    public void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"        Tasklist tasklist \u003d new Tasklist(new StorageStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"            tasklist.deleteTask(55);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"            assertEquals(","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"                    \"Invalid task number provided. \" +","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"                            \"Given task number is 56 but there \" +","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"                            \"are only 3 task(s) in the list\",","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"    public void mark_validIndex_true() {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"        Tasklist tasklist \u003d new Tasklist(new StorageStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"            assertTrue(tasklist.mark(1));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"    public void mark_markedIndex_false() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        Tasklist tasklist \u003d new Tasklist(new StorageStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"            assertFalse(tasklist.mark(0));","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"    public void unmark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"        Tasklist tasklist \u003d new Tasklist(new StorageStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"            tasklist.unmark(24);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"            assertEquals(\"Invalid task number provided. \" +","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"                            \"Given task number is 25 but there \" +","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"                            \"are only 3 task(s) in the list\",","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"hongshenggg":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"todo return book","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"deadline homework /by 2022-02-02","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"event team meeting /from 2023-01-01 /to 2023-04-06","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"mark 100","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"mark -10","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"mark asdf","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"unmark","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"todo","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"event","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"deadline project /by","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"event cny /from 10am","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"event dinner /to 8pm","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"event event /from /to","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"deadline deadline /by yesterday","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"event some event /from now /to later","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"delete","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"delete 1","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"delete 2","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"delete 50","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"delete asdojv","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"delete -214","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"find homework","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"find book","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"find","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"hongshenggg":35}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"# delete data file from previous run","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"then","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    rm -rf data","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"fi","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hongshenggg":8,"-":36}}]
