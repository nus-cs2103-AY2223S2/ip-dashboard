[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"3. After that, locate the `src/main/java/duke/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"    toolVersion \u003d \u002710.6\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":21,"-":40}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"T,0,sleep","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"huangzz125":1}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":" * This class contains the Commands for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"public class Commands {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"     * Executes the list command.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    public static String executeListCommand(TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"            return \"You currently have no task.\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"            StringBuilder outputString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"            for (int i \u003d 0; i \u003c taskList.getArraySize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"                Task currentTask \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"                int taskIndex \u003d i + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"                String currentString \u003d taskIndex + \". \" + currentTask + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"                outputString.append(currentString);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"            return outputString.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"     * Executes the find command.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"     * @param textUi TextUi for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"    public static String executeFindCommand(String searchTerm, TextUi textUi, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"            return \"You currently have no task.\";","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"            StringBuilder outputString \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"            for (int i \u003d 0; i \u003c taskList.getArraySize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"                String currentTaskDescription \u003d taskList.getTask(i).getDescription();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"                if (currentTaskDescription.contains(searchTerm)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"                    String currentString \u003d count + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"                    outputString.append(currentString);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"                    count++;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"                // there is no task with the keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"                return \"Here are no matching task in your list.\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"            return outputString.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"huangzz125"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If there is no such task.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"huangzz125"},"content":"    public static String executeMarkCommand(","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"huangzz125"},"content":"            String input, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"huangzz125"},"content":"        int indexToMark \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"huangzz125"},"content":"        if (indexToMark \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"huangzz125"},"content":"            Task toMark \u003d taskList.getTask(indexToMark);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"huangzz125"},"content":"            toMark.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"huangzz125"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + toMark;","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"huangzz125"},"content":"     * Executes the unmark command.","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If there is no such task","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"huangzz125"},"content":"    public static String executeUnmarkCommand(String input, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"huangzz125"},"content":"        int indexToUnmark \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"huangzz125"},"content":"        if (indexToUnmark \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"huangzz125"},"content":"            Task toUnmark \u003d taskList.getTask(indexToUnmark);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"huangzz125"},"content":"            toUnmark.markAsUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"huangzz125"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toUnmark;","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"huangzz125"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"huangzz125"},"content":"     * @param textUi TextUi for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If there is no such task.","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"huangzz125"},"content":"    public static String executeDeleteCommand(String input, TextUi textUi, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"huangzz125"},"content":"        int indexToDelete \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"huangzz125"},"content":"        if (indexToDelete \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"huangzz125"},"content":"            taskList.removeTask(indexToDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"huangzz125"},"content":"            return textUi.getTaskRemovedMessage(taskList.getTask(indexToDelete), taskList.getArraySize() - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"huangzz125"},"content":"     * Executes the todo command.","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"huangzz125"},"content":"     * @param textUi TextUi for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If the given string is empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"huangzz125"},"content":"    public static String executeToDoCommand(String input, TextUi textUi, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"huangzz125"},"content":"        String processedString \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"huangzz125"},"content":"        if (processedString.equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new ToDo(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"huangzz125"},"content":"        return textUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"huangzz125"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"huangzz125"},"content":"     * @param textUi TextUi for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If the given string is empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"huangzz125"},"content":"    public static String executeDeadlineCommand(String input, TextUi textUi, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"huangzz125"},"content":"        String processedString \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"huangzz125"},"content":"        if (processedString.equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"huangzz125"},"content":"        String[] str \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new Deadline(str[0].substring(0, str[0].length() - 1),","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"huangzz125"},"content":"                LocalDate.parse(str[1].substring(3)));","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"huangzz125"},"content":"        return textUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"huangzz125"},"content":"     * Executes the event command.","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"huangzz125"},"content":"     * @param input Input String.","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"huangzz125"},"content":"     * @param textUi TextUi for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"huangzz125"},"content":"     * @param taskList TaskList for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"huangzz125"},"content":"     * @param storage Storage for Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"huangzz125"},"content":"     * @return String to display.","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"huangzz125"},"content":"     * @throws DukeException If the given string is empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"huangzz125"},"content":"    public static String executeEventCommand(String input, TextUi textUi, TaskList taskList, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"huangzz125"},"content":"        String processedString \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"huangzz125"},"content":"        if (processedString.equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"huangzz125"},"content":"        String[] str \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new Event(str[0].substring(0, str[0].length() - 1),","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"huangzz125"},"content":"                LocalDate.parse(str[1].substring(5, str[1].length() - 1)),","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"huangzz125"},"content":"                LocalDate.parse(str[2].substring(3)));","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"huangzz125"},"content":"        return textUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-30"},{"lineNumber":198,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":199}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":" * This class is a deadline task. It contains","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":" * the description of the task and the time","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":" * the task is due.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"     * Constructs a deadline with the given description and date.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"     * @param by The deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"     * Constructs a deadline with the given description, isDone and date.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"     * @param isDone Whether the deadline task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"     * @param by The deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    public String convertToStorableString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"        return String.format(\"D,%s,%s,%s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"                this.getDescription(),","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"                this.by.toString()","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"                );","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":52}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    private Label text;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        text \u003d l;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    private void flip() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"        db.flip();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"        return db;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"huangzz125":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":" * This class contains a Duke that contains the main method.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    private Scene scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    private final Image grandDuke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    private static Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    private static Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    private static TextUi textUi;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        textUi \u003d new TextUi();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"        taskList \u003d storage.readSavedFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"        stage.show();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"huangzz125"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"huangzz125"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"huangzz125"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"huangzz125"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"huangzz125"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"huangzz125"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"huangzz125"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"huangzz125"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"huangzz125"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"huangzz125"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"huangzz125"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"huangzz125"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"huangzz125"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"huangzz125"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"huangzz125"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"huangzz125"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"huangzz125"},"content":"            handleUserInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"huangzz125"},"content":"        });","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"huangzz125"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"huangzz125"},"content":"            handleUserInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"huangzz125"},"content":"        });","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"huangzz125"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"huangzz125"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"huangzz125"},"content":"        //Send a welcome message","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"huangzz125"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"huangzz125"},"content":"                DialogBox.getDukeDialog(new Label(textUi.getWelcomeMessage()), new ImageView(grandDuke))","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"huangzz125"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"huangzz125"},"content":"     * Iteration 2:","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"huangzz125"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"huangzz125"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"huangzz125"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"huangzz125"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"huangzz125"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"huangzz125"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"huangzz125"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"huangzz125"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(grandDuke))","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"huangzz125"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"huangzz125"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"huangzz125"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"huangzz125"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"huangzz125"},"content":"    private static String getResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"huangzz125"},"content":"        if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"huangzz125"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"huangzz125"},"content":"                return parser.parse(input, taskList, storage, textUi);","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"huangzz125"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"huangzz125"},"content":"                return dukeException.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"huangzz125"},"content":"            return textUi.getGoodbyeMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"huangzz125":136,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":" * This is a DukeException that contains error message","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":" * for the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"huangzz125":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":" * This class is a event task. It contains","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":" * the description of the task, the time the task","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":" * starts and the time the task ends.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"     * Constructs an event with the given description, from and to.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"     * @param from The time the event task starts.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"     * @param to The time the event task ends.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"     * Constructs an event with the given description, isDone, from and to.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"     * @param isDone Whether the deadline task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"     * @param from The time the event task starts.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"     * @param to The time the event task ends.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"    public Event(String description, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"                + \" to: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"    public String convertToStorableString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"        return String.format(\"E,%s,%s,%s,%s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"                this.getDescription(),","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"                this.from.toString(),","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"                this.to.toString()","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":60}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"public class Launcher {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"huangzz125":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":" * This class is a parser that reads user inputs.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"     * Parses the input string and calls the correct","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"     * execution method.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"     * @param userInput User Input.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"     * @param taskList  TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"     * @param storage   Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"     * @param textUi    TextUi.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    public String parse(String userInput, TaskList taskList, Storage storage, TextUi textUi)","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        String command;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        String body;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        if (userInput.contains(\" \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"            command \u003d userInput.substring(0, userInput.indexOf(\" \"));","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"            body \u003d userInput.substring(userInput.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"            command \u003d userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"            body \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeListCommand(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeMarkCommand(body, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeUnmarkCommand(body, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeDeleteCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeToDoCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeDeadlineCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeEventCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"        case \"find\":","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"            return Commands.executeFindCommand(body, textUi, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"    public static String removeWhiteSpaces(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"        return str.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":55}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":" * This class is a Storage that helps with the writing and reading","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":" * of saved contents made by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    private static final String FILE_NAME \u003d \"data.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    private final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        file \u003d new File(FILE_NAME);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"     * Loads and parses saved content into a TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"     * @return TaskList of user.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    public TaskList readSavedFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        File file \u003d new File(FILE_NAME);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"                System.out.println(\"Error when creating file: \" + e);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"                taskList.addTask(parseStringToTask(myReader.nextLine()));","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"            myReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        return taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"     * Takes in a String and returns a Task.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"     * @param string List of tasks in use by the app.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"     * @return Task.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"    public Task parseStringToTask(String string) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"        String[] inputArray \u003d string.split(\",\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"        if (inputArray[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"            return new ToDo(inputArray[2], inputArray[1].equals(\"1\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"huangzz125"},"content":"        } else if (inputArray[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"huangzz125"},"content":"            return new Deadline(inputArray[2], inputArray[1].equals(\"1\"), LocalDate.parse(inputArray[3]));","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"huangzz125"},"content":"            return new Event(inputArray[2], inputArray[1].equals(\"1\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"huangzz125"},"content":"                    LocalDate.parse(inputArray[3]),","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"huangzz125"},"content":"                    LocalDate.parse(inputArray[4]));","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"huangzz125"},"content":"     * Saves tasklist to file.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"huangzz125"},"content":"     * @param taskList Lists of tasks in use by the app.","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"huangzz125"},"content":"    public void saveTaskListToStorage(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"huangzz125"},"content":"            FileWriter myWriter \u003d new FileWriter(file); // this truncates the duke.txt to size 0","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"huangzz125"},"content":"            for (int i \u003d 0; i \u003c taskList.getArraySize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"huangzz125"},"content":"                myWriter.write(taskList.getTask(i).convertToStorableString() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"huangzz125"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"huangzz125"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"huangzz125"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":88}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":" * This abstract class is a Task. A task contains","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":" * the description of the task and whether the task is completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    private String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"     * Constructs a task with the given description and isDone.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"     * @param isDone      Whether the deadline task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"    public abstract String convertToStorableString();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"        return (isDone ? \"[X] \" : \"[] \") + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":" * This class is a TaskList that keeps track of","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":" * user\u0027s list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"    public int getArraySize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":38}},{"path":"src/main/java/duke/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":" * This is a TextUi that contains methods read and write","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":" * on Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"class TextUi {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    public final Scanner in;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    public TextUi() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"        return \"Hello! I\u0027m Grand Duke.\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"    public String getTaskAddedMessage(Task task, int sizeOfList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s task%s in the list.\",","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"                task,","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"                sizeOfList,","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"                sizeOfList \u003e 1 ? \"s\" : \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"    public String getTaskRemovedMessage(Task task, int sizeOfList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %s task%s in the list.\",","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"                task,","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"                sizeOfList,","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"                sizeOfList \u003e 1 ? \"s\" : \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":47}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":" * This class is a ToDo task. It contains","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":" * the description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"     * Constructs a deadline with the given description.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"     * Constructs a ToDo with the given description, isDone and date.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"     * @param description Description of the ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"     * @param isDone      Whether the ToDo task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"    public String convertToStorableString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"        return String.format(\"T,%s,%s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"                this.getDescription()","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":41}},{"path":"src/test/java/duke/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"public class CommandsTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    public void executeToDoCommandTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        Task testTask \u003d new ToDo(\"Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d storage.readSavedFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        TextUi TextUi \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        Integer indexOfNewTask \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"            Commands.executeToDoCommand(\"Duke\", TextUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"            indexOfNewTask \u003d taskList.getArraySize() - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        assertEquals(taskList.getTask(indexOfNewTask).toString(), new ToDo(\"Duke\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    public void executeMarkCommandTest() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"        Task testTask \u003d new ToDo(\"Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d storage.readSavedFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        TextUi TextUi \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        Commands.executeToDoCommand(\"Duke\", TextUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"        Integer indexOfNewTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"            indexOfNewTask \u003d taskList.getArraySize();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"            Commands.executeMarkCommand(indexOfNewTask.toString(), taskList, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        assertTrue(taskList.getTask(indexOfNewTask -1).isDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"huangzz125":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"if ! javac -cp ../src/main/java/Duke -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":1,"-":37}}]
