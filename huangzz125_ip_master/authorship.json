[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"3. After that, locate the `src/main/java/duke/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"T,0,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"E,1,project meeting,2000-12-20,2000-12-20","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"T,0,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"T,1,Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"T,0,Duke","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":11}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"public class Commands {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"    public static void executeListCommand(TextUi TextUi, TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"        TextUi.printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"You currently have no task.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"            for (int i \u003d 0; i \u003c taskList.getArraySize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"                Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"                int taskIndex \u003d i + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"                System.out.println(taskIndex + \". \" + currTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        TextUi.printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    public static void executeMarkCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        int indexToMark \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"        if (indexToMark \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"            Task toMark \u003d taskList.getTask(indexToMark);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"            toMark.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"            TextUi.getCustomMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + toMark);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"    public static void executeUnmarkCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"        int indexToUnmark \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"        if (indexToUnmark \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"            Task toUnmark \u003d taskList.getTask(indexToUnmark);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"            toUnmark.markAsUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"            TextUi.getCustomMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\" + toUnmark);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"    public static void executeDeleteCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        int indexToDelete \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"        if (indexToDelete \u003c taskList.getArraySize()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"            TextUi.getTaskRemovedMessage(taskList.getTask(indexToDelete), taskList.getArraySize() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"            taskList.removeTask(indexToDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"            storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"Invalid, there is no such task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"    public static void executeToDoCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"huangzz125"},"content":"        String check \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"huangzz125"},"content":"        if (check.equals(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new ToDo(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"huangzz125"},"content":"        TextUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"huangzz125"},"content":"    public static void executeDeadlineCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"huangzz125"},"content":"        String check \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"huangzz125"},"content":"        if (check.equals(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"huangzz125"},"content":"        String[] str \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new Deadline(str[0].substring(0, str[0].length() - 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"huangzz125"},"content":"                , LocalDate.parse(str[1].substring(3)));","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"huangzz125"},"content":"        TextUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"huangzz125"},"content":"    public static void executeEventCommand(String input, TextUi TextUi","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"huangzz125"},"content":"            , TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"huangzz125"},"content":"        String check \u003d Parser.removeWhiteSpaces(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"huangzz125"},"content":"        if (check.equals(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"huangzz125"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"huangzz125"},"content":"        String[] str \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"huangzz125"},"content":"        Task newTask \u003d new Event(str[0].substring(0, str[0].length() - 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"huangzz125"},"content":"                , LocalDate.parse(str[1].substring(5, str[1].length() - 1))","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"huangzz125"},"content":"                , LocalDate.parse(str[2].substring(3)));","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"huangzz125"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"huangzz125"},"content":"        TextUi.getTaskAddedMessage(newTask, taskList.getArraySize());","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"huangzz125"},"content":"        storage.saveTaskListToStorage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":99}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    public String toStorableString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        // D|0|return book|June 6th","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"        return \"D\" + \",\" +  (this.isDone() ? \"1\" : \"0\")+ \",\" + this.getDescription() + \",\" + this.by.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"        TextUi TextUi \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"        Parser Parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"        Storage Storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d Storage.readSavedFile(); // loads the list","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"        TextUi.getWelcomeMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        String input;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        while (!(input \u003d TextUi.in.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"                Parser.parse(input, taskList, Storage, TextUi);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"                TextUi.getCustomMessage(dukeException.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"        TextUi.getGoodbyeMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"huangzz125":21,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"huangzz125":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    public Event(String description, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"                + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"                + \" to: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    public String toStorableString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        // E|0|return book|June 6th|June 7th","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        return \"E\" + \",\" + (this.isDone() ? \"1\" : \"0\") + \",\" + this.getDescription()","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"                + \",\" + this.from.toString() + \",\" + this.to.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"    public void parse(String userInput, TaskList taskList, Storage storage, TextUi textUi) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"        String command;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"        String body;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"        if (userInput.contains(\" \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"            command \u003d userInput.substring(0, userInput.indexOf(\" \"));","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"            body \u003d userInput.substring(userInput.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"            command \u003d userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"            body \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"            case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"                Commands.executeListCommand(textUi, taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"                Commands.executeMarkCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"                Commands.executeUnmarkCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"                Commands.executeDeleteCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"                Commands.executeToDoCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"                Commands.executeDeadlineCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"            case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"                Commands.executeEventCommand(body, textUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"                throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"    public static String removeWhiteSpaces(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"        return str.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    private static final String FILE_DESTINATION \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    private final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        file \u003d new File(FILE_DESTINATION);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    public TaskList readSavedFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        File file \u003d new File(FILE_DESTINATION);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"                taskList.addTask(parseStringToTask(myReader.nextLine()));","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"            myReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        return taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    public Task parseStringToTask(String string) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"        String[] arr \u003d string.split(\",\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"            return new ToDo(arr[2]","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"                    , arr[1].equals(\"1\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"            return new Deadline(arr[2]","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"                    , arr[1].equals(\"1\")","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"                    , LocalDate.parse(arr[3]));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"            return new Event(arr[2]","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"                    , arr[1].equals(\"1\")","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"                    , LocalDate.parse(arr[3])","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"                    , LocalDate.parse(arr[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"    public void saveTaskListToStorage(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"            FileWriter myWriter \u003d new FileWriter(file); // this truncates the duke.txt to size 0","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"            for (int i \u003d 0; i \u003c taskList.getArraySize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"                myWriter.write(taskList.getTask(i).toStorableString() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"huangzz125"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"huangzz125"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"huangzz125"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":60}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"    private String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    public abstract String toStorableString();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        return (isDone ? \"[X] \" : \"[] \") + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":34}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    public int getArraySize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":27}},{"path":"src/main/java/duke/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"class TextUi {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    public final Scanner in;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    public TextUi() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"    public void getWelcomeMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Hello! I\u0027m duke.Duke.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    public void getGoodbyeMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"    public void printLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"    public void getCustomMessage(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"        out.println(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"    public void getTaskAddedMessage(Task task, int sizeOfList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"huangzz125"},"content":"        out.println(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Now you have \" + sizeOfList + \" task\" + (sizeOfList \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"huangzz125"},"content":"    public void getTaskRemovedMessage(Task task, int sizeOfList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"huangzz125"},"content":"        out.println(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"huangzz125"},"content":"        out.println(\"Now you have \" + sizeOfList + \" task\" + (sizeOfList \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"huangzz125"},"content":"        out.println(\"____________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":54}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"    public String toStorableString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        // T|0|return book","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"        return \"T,\" +  (this.isDone() ? \"1\" : \"0\") + \",\" + this.getDescription();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"huangzz125":20}},{"path":"src/test/java/duke/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"public class CommandsTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"    public void executeToDoCommandTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"        Task testTask \u003d new ToDo(\"Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d storage.readSavedFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"        TextUi TextUi \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"        Integer indexOfNewTask \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"            Commands.executeToDoCommand(\"Duke\", TextUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"huangzz125"},"content":"            indexOfNewTask \u003d taskList.getArraySize() - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"huangzz125"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"huangzz125"},"content":"            TextUi.getCustomMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"huangzz125"},"content":"        assertEquals(taskList.getTask(indexOfNewTask).toString(), new ToDo(\"Duke\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"huangzz125"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"huangzz125"},"content":"    public void executeMarkCommandTest() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"huangzz125"},"content":"        Task testTask \u003d new ToDo(\"Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"huangzz125"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"huangzz125"},"content":"        TaskList taskList \u003d storage.readSavedFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"huangzz125"},"content":"        TextUi TextUi \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"huangzz125"},"content":"        Commands.executeToDoCommand(\"Duke\", TextUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"huangzz125"},"content":"        Integer indexOfNewTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"huangzz125"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"huangzz125"},"content":"            indexOfNewTask \u003d taskList.getArraySize();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"huangzz125"},"content":"            Commands.executeMarkCommand(indexOfNewTask.toString(), TextUi, taskList, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"huangzz125"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"huangzz125"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"huangzz125"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"huangzz125"},"content":"        assertTrue(taskList.getTask(indexOfNewTask -1).isDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"huangzz125"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"huangzz125"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"huangzz125":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"huangzz125"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"huangzz125"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"huangzz125"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"huangzz125"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"huangzz125"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"huangzz125"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"huangzz125"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"huangzz125"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"huangzz125"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"huangzz125"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"huangzz125"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"huangzz125"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"huangzz125":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"huangzz125"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"huangzz125"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"huangzz125"},"content":"if ! javac -cp ../src/main/java/Duke -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"huangzz125":1,"-":37}}]
