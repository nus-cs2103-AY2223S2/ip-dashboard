[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"    mainClassName \u003d \"peppa.Peppa\"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"    archiveBaseName \u003d \"peppa\"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"    archiveVersion \u003d \"v0.1\"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"huixuant":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"# User Guide: Peppa","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"## Introduction","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"Peppa üêΩ is a desktop application that helps you manage your tasks efficiently. It is optimised for use via a Command","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"Line Interface (CLI), but still has benefits of a Graphical User Interface (GUI) so that you get to experience the","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"**_best_** of both worlds. With Peppa, you will no longer miss your deadlines or forget your todos üôåüèº.","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"### Viewing all tasks: `list` ","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"Displays all tasks in the current tasklist, along with details like the id, status and type of each task.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"Format: `list`","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"### Viewing all data sources: `files`","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"Displays all possible files from which Peppa can try to load task data. Only checks for files in the `/data` directory.  ","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"Format: `files`","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"### Adding a todo task: `todo` ","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"Adds a todo item to the tasklist.","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"Format: `todo \u003ctask_description\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"Examples: ","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"* `todo Watch CS2106 lecture`","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"* `todo Water plants`","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"Adds a deadline to the tasklist.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"Format: `deadline \u003ctask_description\u003e /by \u003cdate_due_in_dd/mm/yyyy\u003e \u003ctime_due_in_HHmm\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"Examples:","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"* `deadline Finish CS2107 assignment /by 02/03/2023 1200`","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"* `deadline Complete essay draft /by 20/02/2023 2359`","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"### Adding an event task: `event`","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"Adds an event to the tasklist.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"Format: `event \u003ctask_description\u003e /from \u003cstart_date_in_dd/mm/yyyy\u003e /to \u003cend_date_in_dd/mm/yyyy\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"Examples:","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"* `event Family trip to Japan /from 21/02/2023 /to 27/02/2023`","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"* `event Chalet with friends /from 06/06/2023 to /08/06/2023`","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"Removes a task from the tasklist at the specified index. ","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"Format: `delete \u003ctask_id\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"* `delete 1`","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"Searches for all matching tasks that contain the specified keyword(s). ","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"To search using multiple keywords, separate them with a space in between. ","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"Format: `find \u003ckeyword_1\u003e (keyword_2 ... keyword_n)`","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"* `find CS2106`","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"* `find proposal draft presentation`","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"huixuant"},"content":"### Selecting another data source: `select`","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"huixuant"},"content":"Selects another file to load data from, if possible. Should be used after the `files` command. ","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"huixuant"},"content":"Format: `select \u003cfile_id\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"huixuant"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"huixuant"},"content":"* `select 2`","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"huixuant"},"content":"### Marking a task as complete: `mark`","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"huixuant"},"content":"Indicates a task is done by updating its status to complete.  ","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":101,"author":{"gitId":"huixuant"},"content":"Format: `mark \u003ctask_id\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"huixuant"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"huixuant"},"content":"* `mark 1`","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"huixuant"},"content":"### Unmarking a task as complete: `unmark`","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"huixuant"},"content":"Indicates a task is not done by updating its status to incomplete.","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"huixuant"},"content":"Format: `unmark \u003ctask_id\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"huixuant"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"huixuant"},"content":"* `unmark 1`","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"huixuant"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"huixuant"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"huixuant"},"content":"Closes the application.","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"huixuant"},"content":"Format: `bye`","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"-":14,"huixuant":109}},{"path":"src/main/java/peppa/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":" * Represents a deadline task. Deadlines are given by the user in the format deadline {desc} /by {dateDue} {timeDue}.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"     * Constructs a deadline task with the specified name and due date.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     * @param name Name/description of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     * @param dueDate Date and time by which the task should be completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    public Deadline(String name, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"        super(name);","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"                + this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027,\u0027 hh\u0027.\u0027mma\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    public String toFormatString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"        return \"D | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.name + \" | \"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"                + this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027,\u0027 hh\u0027.\u0027mma\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"huixuant":34}},{"path":"src/main/java/peppa/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"    public static DialogBox getPeppaDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"        db.dialog.setStyle(\"-fx-background-color:#DBC3C8; -fx-background-radius:10; -fx-border-width:0.5; \" +","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"                \"-fx-border-color: black; -fx-border-radius: 10;\");","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":63}},{"path":"src/main/java/peppa/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":" * Represents an event task. Events are given by the user in the format event {desc} /from {startDate} /to {endDate}.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"     * Constructs an event task with the specified name, start date and end date.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     * @param name Name/description of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * @param from Date on which the event starts.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     * @param to Date on which the event ends.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        super(name);","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"                + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"    public String toFormatString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"        return \"E | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.name + \" | \"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to \"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"huixuant":39}},{"path":"src/main/java/peppa/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"            System.out.println(e.getCause());","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":16}},{"path":"src/main/java/peppa/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    private Peppa peppa \u003d new Peppa();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"            stage.setTitle(\"Peppa\");","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/favicon.jpg\")));","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPeppa(peppa);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":33}},{"path":"src/main/java/peppa/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    private GridPane userInputContainer;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    private Peppa peppa;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    private Image peppaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Peppa.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    public void setPeppa(Peppa p) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        this.peppa \u003d p;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"        String response \u003d \"Initialising data...\\n\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"        if (!this.peppa.isFileSet()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"            response +\u003d peppa.getResponse(\"files\");","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"            setPeppaDialog(response);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"            setPeppaDialog(response + \"Oink! I\u0027m Peppa. Nice to meet you! How can I assist you today?\");","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"    public void setPeppaDialog(String msg) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getPeppaDialog(msg, peppaImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"        String response \u003d peppa.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"                DialogBox.getPeppaDialog(response, peppaImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":69}},{"path":"src/main/java/peppa/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import peppa.commands.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import peppa.commands.DeadlineCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"import peppa.commands.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"import peppa.commands.EventCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"import peppa.commands.ExitCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"import peppa.commands.FilesCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"import peppa.commands.FindCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"import peppa.commands.IncorrectCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"import peppa.commands.InvalidCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"import peppa.commands.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"import peppa.commands.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"import peppa.commands.SelectCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"import peppa.commands.TodoCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"import peppa.commands.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":" * Represents a parser that converts user input into Commands that can be executed.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    public Parser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"     * Parses the given command into one of Command objects based on the first word.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"     * Manages high-level switching logic only. Actual parsing is handled by individual parsing methods.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"     * @param fullCommand Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"     * @return Command object corresponding to the user request.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"    public static Command parseCommand(String fullCommand) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"        String[] args \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        String commandType \u003d args[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"        case FilesCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"            return new FilesCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"            return parseSelectCommand(args);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"            return parseMarkCommand(args);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"            return parseUnmarkCommand(args);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"            return parseDeleteCommand(args);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"            return parseFindCommand(args);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"            return parseTodoCommand(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"            return parseDeadlineCommand(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"            return parseEventCommand(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"     * Parses an add deadline request into a DeadlineCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"     * @return DeadlineCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"    public static Command parseDeadlineCommand(String command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"            int paramIndex \u003d DeadlineCommand.getParameterIndex(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"            String desc \u003d DeadlineCommand.getParameterValue(command, DeadlineCommand.DESC_INDEX, paramIndex - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"            String deadline \u003d DeadlineCommand.getParameterValue(command, paramIndex + 4, command.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"            LocalDateTime dueDate \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"            return new DeadlineCommand(desc, dueDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"huixuant"},"content":"        } catch (PeppaException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"huixuant"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter the date in dd/MM/yyyy and time in HHmm (ie. 24h) format respectively.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"huixuant"},"content":"     * Parses a delete task request into a DeleteCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"huixuant"},"content":"     * @param args Array of arguments obtained from splitting the given command around a whitespace character.","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"huixuant"},"content":"     * @return DeleteCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"huixuant"},"content":"    public static Command parseDeleteCommand(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"huixuant"},"content":"            String idxStr \u003d args[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"huixuant"},"content":"            return new DeleteCommand(Integer.parseInt(idxStr) - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"huixuant"},"content":"     * Parses an add event request into an EventCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"huixuant"},"content":"     * @return EventCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"huixuant"},"content":"    public static Command parseEventCommand(String command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"huixuant"},"content":"            int fromIndex \u003d EventCommand.getParameterIndex(command, \"from\");","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"huixuant"},"content":"            int toIndex \u003d EventCommand.getParameterIndex(command, \"to\");","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"huixuant"},"content":"            String desc \u003d EventCommand.getParameterValue(command, EventCommand.DESC_INDEX, fromIndex - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"huixuant"},"content":"            String startDate \u003d EventCommand.getParameterValue(command, fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"huixuant"},"content":"            String endDate \u003d EventCommand.getParameterValue(command, toIndex + 4, command.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"huixuant"},"content":"            LocalDate from \u003d LocalDate.parse(startDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"huixuant"},"content":"            LocalDate to \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"huixuant"},"content":"            return new EventCommand(desc, from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"huixuant"},"content":"        } catch (PeppaException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"huixuant"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter the date in dd/MM/yyyy format and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"huixuant"},"content":"     * Parses a line in the file and adds the task to the Tasklist provided.","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"huixuant"},"content":"     * @param line Entry in the file that corresponds to a task.","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"huixuant"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException If entry is not recognised or formatted correctly.","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"huixuant"},"content":"    public static void parseFileEntry(String line, TaskList tasks) throws PeppaException {","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"huixuant"},"content":"        String[] fields \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"huixuant"},"content":"        assert fields.length \u003e\u003d 3 : \"fields should have 3 or more elements\";","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"huixuant"},"content":"        String taskType \u003d fields[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"huixuant"},"content":"        String done \u003d fields[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"huixuant"},"content":"        String taskDesc \u003d fields[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"huixuant"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"huixuant"},"content":"        case (TodoCommand.ABBREVIATION):","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"huixuant"},"content":"            tasks.addTask(new Todo(taskDesc));","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"huixuant"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"huixuant"},"content":"        case (EventCommand.ABBREVIATION):","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"huixuant"},"content":"            String[] eventFields \u003d fields[3].split(\" to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"huixuant"},"content":"            LocalDate startDate \u003d LocalDate.parse(eventFields[0],","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"huixuant"},"content":"                            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"huixuant"},"content":"            LocalDate endDate \u003d LocalDate.parse(eventFields[1],","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"huixuant"},"content":"                            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"huixuant"},"content":"            tasks.addTask(new Event(taskDesc, startDate, endDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"huixuant"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"huixuant"},"content":"        case (DeadlineCommand.ABBREVIATION):","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"huixuant"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(fields[3],","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"huixuant"},"content":"                    DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027,\u0027 hh\u0027.\u0027mma\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"huixuant"},"content":"            tasks.addTask(new Deadline(taskDesc, deadline));","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"huixuant"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"huixuant"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"huixuant"},"content":"                    + \"Please check that file input is correctly formatted and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"huixuant"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"huixuant"},"content":"            int idx \u003d tasks.getLength() - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"huixuant"},"content":"            tasks.retrieveTask(idx).setDone(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"huixuant"},"content":"     * Parses a find task request into a FindCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"huixuant"},"content":"     * @param args Array of arguments obtained from splitting the given command around a whitespace character.","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"huixuant"},"content":"     * @return FindCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"huixuant"},"content":"    public static Command parseFindCommand(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"huixuant"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter at least 1 keyword to search for.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"huixuant"},"content":"            String[] keywords \u003d Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"huixuant"},"content":"            return new FindCommand(keywords);","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"huixuant"},"content":"     * Parses a mark task as done request into a MarkCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"huixuant"},"content":"     * @param args Array of arguments obtained from splitting the given command around a whitespace character.","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"huixuant"},"content":"     * @return MarkCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"huixuant"},"content":"    public static Command parseMarkCommand(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":199,"author":{"gitId":"huixuant"},"content":"            String idxStr \u003d args[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":200,"author":{"gitId":"huixuant"},"content":"            return new MarkCommand(Integer.parseInt(idxStr) - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":202,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":206,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":207,"author":{"gitId":"huixuant"},"content":"    public static Command parseSelectCommand(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"huixuant"},"content":"            String idxStr \u003d args[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"huixuant"},"content":"            return new SelectCommand(Integer.parseInt(idxStr) - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":211,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":216,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"huixuant"},"content":"     * Parses an add todo request into a TodoCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"huixuant"},"content":"     * @return TodoCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"huixuant"},"content":"    public static Command parseTodoCommand(String command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":224,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":225,"author":{"gitId":"huixuant"},"content":"            return new TodoCommand(command.substring(TodoCommand.DESC_INDEX));","lastModifiedDate":"2023-01-24"},{"lineNumber":226,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":227,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a description for the task and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":230,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":231,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":232,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"huixuant"},"content":"     * Parses an unmark task as done request into a UnmarkCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"huixuant"},"content":"     * @param args Array of arguments obtained from splitting the given command around a whitespace character.","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"huixuant"},"content":"     * @return UnmarkCommand object if command was parsed successfully, and IncorrectCommand object otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"huixuant"},"content":"    public static Command parseUnmarkCommand(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":239,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":240,"author":{"gitId":"huixuant"},"content":"            String idxStr \u003d args[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":241,"author":{"gitId":"huixuant"},"content":"            return new UnmarkCommand(Integer.parseInt(idxStr) - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":242,"author":{"gitId":"huixuant"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":243,"author":{"gitId":"huixuant"},"content":"            return new IncorrectCommand(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":246,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":247,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":248,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":248}},{"path":"src/main/java/peppa/Peppa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.commands.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":" * Represents the chatbot application.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"public class Peppa {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"    private Ui screen;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public static final String DIR_PATH \u003d \"data\";","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * Starts the chatbot application.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public Peppa() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        this.screen \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"        this.storage \u003d new Storage(this, DIR_PATH);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"            assert (c !\u003d null);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"            boolean isValidCommandWithoutFile \u003d c instanceof FilesCommand","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"                    || c instanceof SelectCommand","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"                    || c instanceof ExitCommand","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"                    || c instanceof IncorrectCommand","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"                    || c instanceof InvalidCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"            if (!isFileSet() \u0026\u0026 !isValidCommandWithoutFile) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"                throw new PeppaException(\"Boink! Peppa did not detect a data source. \"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"                        + \"Please choose a file to load data from and try again.\\n \");","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"            return c.execute(tasks, screen, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"        } catch (PeppaException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"    public boolean isFileSet() {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"        return this.storage.getFile() !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"        //storage.loadData(tasks, screen);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"    public void setTasks(TaskList tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":52}},{"path":"src/main/java/peppa/PeppaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":" * Represents a chatbot-specific exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"public class PeppaException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"    public PeppaException() {}","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"    public PeppaException(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":11}},{"path":"src/main/java/peppa/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":" * Represents a file for storing tasks and handles all file I/O-related logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    private String dirPath;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    private Peppa p;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    private File f;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    private ArrayList\u003cFile\u003e dataSources \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     * Constructs a storage object with the specified file path.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"     * @param dirPath The path of the directory containing pre-existing task files, if any.","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    public Storage(Peppa p, String dirPath) {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"        this.p \u003d p;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"        setDataSources();","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        initialiseStorage();","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"    public File getFile() {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"        return this.f;","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"    public ArrayList\u003cFile\u003e getDataSources() {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"        return this.dataSources;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    public void initialiseStorage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"            int fileCount \u003d dataSources.size();","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"            if (fileCount \u003e 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"                return;","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"            } else if (fileCount \u003d\u003d 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"                File file \u003d new File(dirPath + \"/todo.txt\");","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                this.f \u003d file;","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"            } else if (fileCount \u003d\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"                this.f \u003d dataSources.get(0);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"            loadData(new TaskList());","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"            Ui.displayMessage(\"Boink! There seems to be an I/O error. Please try again.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"     * Loads existing task data from local file.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"    public void loadData(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"            Scanner sc \u003d new Scanner(this.f);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"                Parser.parseFileEntry(line, taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"            p.setTasks(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"            Ui.displayMessage(\"Done!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"            Ui.displayMessage(\"Boink! Peppa could not locate the file. Please try again.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"        } catch (PeppaException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"            Ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"     * Updates the file when tasks are added, deleted or modified.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"    public void saveChanges(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"huixuant"},"content":"            for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"huixuant"},"content":"                fw.write(tasks.retrieveTask(i).toFormatString() + \"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"huixuant"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"huixuant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"huixuant"},"content":"            Ui.displayMessage(\"Boink! Peppa could not save changes to the task list. Please try again.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"huixuant"},"content":"    public void setDataSources() {","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"huixuant"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"huixuant"},"content":"        dir.mkdir();","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"huixuant"},"content":"        assert (dir.exists());","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"huixuant"},"content":"        File[] children \u003d dir.listFiles();","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"huixuant"},"content":"        for (File child : children) {","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"huixuant"},"content":"            if (child.isFile()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"huixuant"},"content":"                dataSources.add(child);","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"huixuant"},"content":"    public void setFile(File f) {","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"huixuant"},"content":"        this.f \u003d f;","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":110}},{"path":"src/main/java/peppa/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":" * Provides a skeletal implementation of a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"    protected String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    public Task() {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     * Constructs a task with the specified name.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * @param name Name/description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public void setDone(boolean value) {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        this.isDone \u003d value;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"     * Returns an icon that represents if the task is done.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"     * @return \"X\" if task is completed and \" \" otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"     * Returns a specially formatted string that is used for writing to storage.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"     * @return A specially formatted String representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"    public abstract String toFormatString();","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"huixuant":48}},{"path":"src/main/java/peppa/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":" * Represents a list of tasks and handles all task-related logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"     * Constructs a list of tasks stored in an ArrayList.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     * Adds task to the end of the current list.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"     * Removes task from the current list.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"     * @param task Task to be removed.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"        taskList.remove(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"     * Searches for tasks in the list which contain the specified keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"     * @param keywords Keywords that the user is searching for.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"     * @return Subset of tasks in the master list that match the given keyword(s).","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"    public HashMap\u003cString, ArrayList\u003cTask\u003e\u003e findTasks(String[] keywords) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"        HashMap\u003cString, ArrayList\u003cTask\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"            ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                if (task.name.contains(keyword)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"                    matchedTasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"            map.put(keyword, matchedTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"        return map;","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"     * Returns the number of tasks in the list currently.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"     * @return Length of tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"    public int getLength() {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"     * Returns the task at the specified position in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"     * @param i Index of the task (zero-based).","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"     * @return Task at position i.","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"    public Task retrieveTask(int i) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"        return taskList.get(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":75}},{"path":"src/main/java/peppa/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":" * Represents a todo task. Todos are given by the user in the format todo {desc}.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"     * Constructs a todo task with the specified name.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"     * @param name Name/description of the todo.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"        super(name);","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    public String toFormatString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"        return \"T | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.name;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"huixuant":26}},{"path":"src/main/java/peppa/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.io.File;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import peppa.commands.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":" * Represents a user interface screen for reading in user inputs and displaying messages in terminal.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     * Constructs a user interface for the command-line version of Peppa.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"     * Returns custom message upon a successful add task operation.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"     * @param task Task that was added.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"     * @return Add task message.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"    public static String getAddTaskMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"        return \"Oink! I\u0027ve added the following task:\\n\" + \"\u003e \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"     * Returns a list of commands that the chatbot currently supports.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"     * @return List of available commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    public static String getCommands() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        return \"\u003e \" + ListCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + FilesCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + SelectCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + MarkCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + UnmarkCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + FindCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + TodoCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + DeadlineCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + EventCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + DeleteCommand.COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"                + \"\u003e \" + ExitCommand.COMMAND_WORD + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"    public static String getDataSources(ArrayList\u003cFile\u003e sources) {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"        StringBuilder response \u003d new StringBuilder(\"Oink! Peppa found \"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"                + sources.size() + \" data sources: \\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"        for (int i \u003d 0; i \u003c sources.size(); i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"            response.append((i + 1) + \". \" + sources.get(i).getName() + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"        return response + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"     * Returns custom message upon a successful delete task operation.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"     * @return Delete task message.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"    public static String getDeleteTaskMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"        return \"Oink! I\u0027ve removed the following task:\\n\" + \"\u003e \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"     * Prints any user-provided message.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"     * @param message Message to display.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"    public static void displayMessage(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"    public static String getLoadFileMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"        return \"Please select a file to load data from: \\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"huixuant"},"content":"     * Returns custom message upon a successful mark task as done operation.","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"huixuant"},"content":"     * @param task Task that was marked as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"huixuant"},"content":"     * @return Mark done message.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"huixuant"},"content":"    public static String getMarkDoneMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"huixuant"},"content":"        return \"Oink! I\u0027ve marked this task as done:\\n\" + \"\u003e \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"huixuant"},"content":"     * Returns custom message upon execution of a find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"huixuant"},"content":"     * @param map Hashmap that associates a keyword with the list of matching tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"huixuant"},"content":"     * @return Find task message describing matching tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"huixuant"},"content":"    public static String getMatchingTasks(HashMap\u003cString, ArrayList\u003cTask\u003e\u003e map) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"huixuant"},"content":"        StringBuilder response \u003d new StringBuilder(\"Oink! \");","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"huixuant"},"content":"        for (String keyword : map.keySet()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"huixuant"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d map.get(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"huixuant"},"content":"            if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"huixuant"},"content":"                response.append(\"No tasks found which match \\\"\" + keyword + \"\\\".\\n\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"huixuant"},"content":"                continue;","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"huixuant"},"content":"            response.append(\"Peppa found \" + matchingTasks.size()","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"huixuant"},"content":"                    + \" tasks that match \\\"\" + keyword + \"\\\":\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"huixuant"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"huixuant"},"content":"                response.append((i + 1) + \". \" + matchingTasks.get(i) + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"huixuant"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"huixuant"},"content":"            response.append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"huixuant"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"huixuant"},"content":"    public static String getSelectFileMessage(File f) {","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"huixuant"},"content":"        return \"Oink! Peppa has successfully loaded data from \" + f.getName() + \".\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"huixuant"},"content":"                + \"How can Peppa assist you today?\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"huixuant"},"content":"     * Returns the current tasklist, including the details of each task (e.g. id and description).","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"huixuant"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"huixuant"},"content":"     * @return Tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"huixuant"},"content":"    public static String getTaskList(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"huixuant"},"content":"        StringBuilder response \u003d new StringBuilder(\"Oink! Here are the tasks in your list currently:\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"huixuant"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"huixuant"},"content":"            response.append((i + 1) + \". \" + tasks.retrieveTask(i) + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"huixuant"},"content":"        return response.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"huixuant"},"content":"     * Returns the number of tasks in the list currently.","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"huixuant"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"huixuant"},"content":"     * @return Tasklist summary message describing number of tasks in the list.","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"huixuant"},"content":"    public static String getTaskSummary(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"huixuant"},"content":"        return \"You now have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"huixuant"},"content":"     * Returns custom message upon a successful unmark task as done operation.","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"huixuant"},"content":"     * @param task Task that was unmarked as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"huixuant"},"content":"     * @return Unmark done message.","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"huixuant"},"content":"    public static String getUnmarkDoneMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"huixuant"},"content":"        return \"Oink! I\u0027ve marked this task as undone:\\n\" + \"\u003e \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"huixuant"},"content":"     * Prints the introductory greeting message upon initialisation of the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"huixuant"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"huixuant"},"content":"        String logo \u003d \" ____  ____  ____  ____   __\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"huixuant"},"content":"                + \"(  _ \\\\(  __)(  _ \\\\(  _ \\\\ / _\\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"huixuant"},"content":"                + \" ) __/ ) _)  ) __/ ) __//    \\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"huixuant"},"content":"                + \"(__)  (____)(__)  (__)  \\\\_/\\\\_/\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"huixuant"},"content":"        String art \u003d \"       _\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"huixuant"},"content":"                + \"  \u003c`--\u0027\\\\\u003e______\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"huixuant"},"content":"                + \"  /. .  `\u0027     \\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"huixuant"},"content":"                + \" (`\u0027)  ,        @\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"huixuant"},"content":"                + \"  `-._,        /\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"huixuant"},"content":"                + \"     )-)_/--( \u003e  jv\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"huixuant"},"content":"                + \"    \u0027\u0027\u0027\u0027  \u0027\u0027\u0027\u0027\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"huixuant"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"huixuant"},"content":"        System.out.println(\"Oink! I\u0027m\\n\" + logo + art);","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"huixuant"},"content":"        System.out.println(\"Nice to meet you! How can I assist you today?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"huixuant"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"huixuant"},"content":"     * Prints divider line for nicer formatting.","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"huixuant"},"content":"    public static void insertDivider() {","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"huixuant"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"huixuant"},"content":"     * Returns farewell message upon leaving the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"huixuant"},"content":"     * @return Farewell message.","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"huixuant"},"content":"    public String terminateSession() {","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"huixuant"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"huixuant"},"content":"        return \"Oink oink! See you again :)\";","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":197,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"huixuant"},"content":"     * Reads and returns the command entered by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"huixuant"},"content":"     * @return User-provided input.","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"huixuant"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":204,"author":{"gitId":"huixuant"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":206,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":206}},{"path":"src/main/java/peppa/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":" * An interface that represents a command entered by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"public interface Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     * Performs the action corresponding to the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     * @param screen Command-line user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     * @param storage File-like object for reading and storing data.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     * @return Message that is output and shown to the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":25}},{"path":"src/main/java/peppa/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":" * Represents a deadline command that adds the deadline to the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    public static final String ABBREVIATION \u003d \"D\";","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    public static final int DESC_INDEX \u003d 9;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"     * Constructs a deadline command with the specified task description and deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"     * @param taskDescription Details about the deadline to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"     * @param deadline The date and time by which the task should be completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    public DeadlineCommand(String taskDescription, LocalDateTime deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"     * Returns the value of the parameter (deadline).","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"     * @param start Index/position of the first character of the parameter.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"     * @param end Index/position of the last character of the parameter.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"     * @return Parameter Value.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException If end \u003c start.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"    public static String getParameterValue(String command, int start, int end) throws PeppaException {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"        if (end \u003e\u003d start) {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"            return command.substring(start, end);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                    + \"Please ensure that the input is formatted correctly and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"     * Returns the position of the parameter \"/by\".","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"     * @return Parameter Index.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException If parameter /by is not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"    public static int getParameterIndex(String command) throws PeppaException {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"        int idx \u003d command.indexOf(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"            return idx;","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"                    + \"Please ensure that the input is formatted correctly and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"        Task task \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"        int initialLength \u003d taskList.getLength();","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"        assert (initialLength \u003d taskList.getLength()) \u003e\u003d 0;","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"        assert taskList.getLength() \u003d\u003d initialLength + 1 : \"Size of tasklist should increase by 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"        storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"        return Ui.getAddTaskMessage(task) + Ui.getTaskSummary(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":84}},{"path":"src/main/java/peppa/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" * Represents a delete task command that removes the task from the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * Constructs a delete command with the index of the task to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     * Tasks are zero-indexed.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     * @param taskIndex Index of the task to be deleted. Should be \u003e\u003d 0 and \u003c length of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        if (this.taskIndex \u003e\u003d 0 \u0026\u0026 this.taskIndex \u003c taskList.getLength()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"            Task task \u003d taskList.retrieveTask(taskIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"            taskList.deleteTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"            storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"            return Ui.getDeleteTaskMessage(task) + Ui.getTaskSummary(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not find the requested task. \"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":44}},{"path":"src/main/java/peppa/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":" * Represents an event command that adds the event to the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    public static final int DESC_INDEX \u003d 6;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    public static final String ABBREVIATION \u003d \"E\";","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"     * Constructs an event command with the specified task description, start date and end date.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"     * @param taskDescription Details about the event to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"     * @param startDate Date on which the event commences.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"     * @param endDate Date on which the event ends.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    public EventCommand(String taskDescription, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"     * Returns the value of the parameter (starting date or ending date).","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"     * @param start Index/position of the first character of the parameter.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"     * @param end Index/position of the last character of the parameter.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"     * @return Parameter Value.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException If end \u003c start","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"    public static String getParameterValue(String command, int start, int end) throws PeppaException {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"        if (end \u003c start) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                    + \"Please ensure that the input is formatted correctly and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"            return command.substring(start, end);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"     * Returns the position of the specified parameter.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"     * @param command Command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"huixuant"},"content":"     * @param param Parameter to search for in the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"huixuant"},"content":"     * @return Parameter Index.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"huixuant"},"content":"     * @throws PeppaException If parameter is not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"huixuant"},"content":"    public static int getParameterIndex(String command, String param) throws PeppaException {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"huixuant"},"content":"        int idx \u003d command.indexOf(\"/\" + param);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"huixuant"},"content":"        if (idx \u003e\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"huixuant"},"content":"            return idx;","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not process the request. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"huixuant"},"content":"                    + \"Please ensure that the input is formatted correctly and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"huixuant"},"content":"        Task task \u003d new Event(taskDescription, startDate, endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"huixuant"},"content":"        int initialLength \u003d taskList.getLength();","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"huixuant"},"content":"        assert (initialLength \u003d taskList.getLength()) \u003e\u003d 0;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"huixuant"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"huixuant"},"content":"        assert taskList.getLength() \u003d\u003d initialLength + 1 : \"Size of tasklist should increase by 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"huixuant"},"content":"        storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"huixuant"},"content":"        return Ui.getAddTaskMessage(task) + Ui.getTaskSummary(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":87}},{"path":"src/main/java/peppa/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" * Represents an exit command that ends the current chatbot session.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"     * Constructs an exit command.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    public ExitCommand() { }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        return screen.terminateSession();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":27}},{"path":"src/main/java/peppa/commands/FilesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"public class FilesCommand implements Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"files\";","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"        String response \u003d Ui.getDataSources(storage.getDataSources());","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"        if (storage.getFile() !\u003d null) {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"            return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"            return response + Ui.getLoadFileMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"huixuant":22}},{"path":"src/main/java/peppa/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":" * Represents a find command that searches for tasks using one or more keywords.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    private String[] keywords;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     * Constructs a find command with the specified keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"     * @param keywords Array of keywords that the user is searching for in the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    public FindCommand(String ...keywords) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"        HashMap\u003cString, ArrayList\u003cTask\u003e\u003e results \u003d taskList.findTasks(keywords);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"        return Ui.getMatchingTasks(results);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"huixuant":39}},{"path":"src/main/java/peppa/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" * Represents an incorrect command that the chatbot recognises, but failed to parse correctly.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":" * Could be a result of wrong parameters, incorrect formatting, etc.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"public class IncorrectCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    private String errorMessage;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     * Constructs an incorrect command with the specified error message.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * @param errorMessage The error message to be displayed to the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    public IncorrectCommand(String errorMessage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":32}},{"path":"src/main/java/peppa/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" * Represents an invalid command that the chatbot fails to recognise.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"     * Constructs an invalid command.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    public InvalidCommand() { }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"        return \"Boink! Peppa couldn\u0027t understand that. Please use one of the commands below:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"                + Ui.getCommands();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":27}},{"path":"src/main/java/peppa/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":" * Represents a list command that displays the current tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"     * Constructs a list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    public ListCommand() { }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        return Ui.getTaskList(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":28}},{"path":"src/main/java/peppa/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" * Represents a mark task as done command.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * Constructs a mark command with the index of the task to be marked as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     * Tasks are zero-indexed.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     * @param taskIndex Index of the task to be marked as done. Should be \u003e\u003d 0 and \u003c length of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"        if (this.taskIndex \u003e\u003d 0 \u0026\u0026 this.taskIndex \u003c taskList.getLength()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"            Task task \u003d taskList.retrieveTask(taskIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"            task.setDone(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"            storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"            return Ui.getMarkDoneMessage(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not find the requested task. \"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":43}},{"path":"src/main/java/peppa/commands/SelectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import java.io.File;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"public class SelectCommand implements Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"    private int fileIndex;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    public SelectCommand(int fileIndex) {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"        this.fileIndex \u003d fileIndex;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"        if (this.fileIndex \u003e\u003d 0 \u0026\u0026 this.fileIndex \u003c storage.getDataSources().size()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"            File file \u003d storage.getDataSources().get(fileIndex);","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"            storage.setFile(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"            TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"            storage.loadData(newTaskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"            return Ui.getSelectFileMessage(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not find the requested data source. \"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"huixuant":29}},{"path":"src/main/java/peppa/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" * Represents a todo command that adds the todo to the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    public static final String ABBREVIATION \u003d \"T\";","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    public static final int DESC_INDEX \u003d 5;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     * Constructs a todo command with the specified task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     * @param taskDescription Details about the todo to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    public TodoCommand(String taskDescription) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"        Task task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"        int initialLength \u003d taskList.getLength();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"        assert (initialLength \u003d taskList.getLength()) \u003e\u003d 0;","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"        assert taskList.getLength() \u003d\u003d initialLength + 1 : \"Size of tasklist should increase by 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"        storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"        return Ui.getAddTaskMessage(task) + Ui.getTaskSummary(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"        if (obj instanceof TodoCommand) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"            return this.taskDescription.equals(((TodoCommand) obj).taskDescription);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":51}},{"path":"src/main/java/peppa/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import peppa.PeppaException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import peppa.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":" * Represents an unmark task as done command.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"     * Constructs an unmark command with the index of the task to be unmarked as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"     * Tasks are zero-indexed.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"     * @param taskIndex Index of the task to be unmarked as done. Should be \u003e\u003d 0 and \u003c length of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"    public String execute(TaskList taskList, Ui screen, Storage storage) throws PeppaException {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"        if (this.taskIndex \u003e\u003d 0 \u0026\u0026 this.taskIndex \u003c taskList.getLength()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"            Task task \u003d taskList.retrieveTask(taskIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"            task.setDone(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"            storage.saveChanges(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"            return Ui.getUnmarkDoneMessage(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"            throw new PeppaException(\"Boink! Peppa could not find the requested task. \"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"                    + \"Please enter a valid integer and try again.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: black; -fx-border-radius: 10; -fx-border-width: 0.5; -fx-background-color: fadcd2; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"            \u003cFont name\u003d\"Century Gothic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: ffffff;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"peppa.MainWindow\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"      \u003cGridPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\".0\" AnchorPane.leftAnchor\u003d\".0\" AnchorPane.rightAnchor\u003d\".0\" AnchorPane.topAnchor\u003d\".0\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"huixuant"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"huixuant"},"content":"          \u003cRowConstraints maxHeight\u003d\"559.3333129882812\" minHeight\u003d\"10.0\" percentHeight\u003d\"92.5\" prefHeight\u003d\"556.0\" valignment\u003d\"CENTER\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"huixuant"},"content":"          \u003cRowConstraints maxHeight\u003d\"292.6666564941406\" minHeight\u003d\"10.0\" percentHeight\u003d\"7.5\" prefHeight\u003d\"44.0\" valignment\u003d\"BOTTOM\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"huixuant"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"huixuant"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"huixuant"},"content":"            \u003cGridPane hgap\u003d\"3.0\" maxHeight\u003d\"41.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"41.0\" prefWidth\u003d\"395.0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"huixuant"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"huixuant"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"41.0\" minWidth\u003d\"316.0\" onAction\u003d\"#handleUserInput\" style\u003d\"-fx-background-color: fadcd2; -fx-background-radius: 15; -fx-border-width: 2 2 2 2; -fx-border-radius: 15; -fx-border-color: 000000;\" GridPane.halignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"huixuant"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"huixuant"},"content":"                        \u003cFont name\u003d\"Century Gothic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"huixuant"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"huixuant"},"content":"                  \u003c/TextField\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"huixuant"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"41.0\" minWidth\u003d\"72.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" style\u003d\"-fx-background-color: #588061; -fx-background-radius: 20px; -fx-border-color: 000000;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"huixuant"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"huixuant"},"content":"                       \u003cFont name\u003d\"Century Gothic Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"huixuant"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"huixuant"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"huixuant"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"huixuant"},"content":"               \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"huixuant"},"content":"                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\" percentWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"huixuant"},"content":"                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"huixuant"},"content":"               \u003c/columnConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"huixuant"},"content":"               \u003crowConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"huixuant"},"content":"                  \u003cRowConstraints valignment\u003d\"BOTTOM\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"huixuant"},"content":"               \u003c/rowConstraints\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"huixuant"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"huixuant"},"content":"              \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: ffffff;\" vvalue\u003d\"1.0\" GridPane.halignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"huixuant"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"huixuant"},"content":"                      \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: ffffff; -fx-border-color: ffffff;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"huixuant"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"huixuant"},"content":"              \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"huixuant"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"huixuant"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"huixuant"},"content":"            \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"huixuant"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"huixuant"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"huixuant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"huixuant"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"huixuant":57}},{"path":"src/test/java/peppa/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.commands.DeadlineCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"    public void getParameterValue_noDescription_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"        Exception exception \u003d assertThrows(PeppaException.class, () -\u003e {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"            String command \u003d \"deadline /by 2359\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"            int paramIndex \u003d DeadlineCommand.getParameterIndex(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"            DeadlineCommand.getParameterValue(command, DeadlineCommand.DESC_INDEX, paramIndex - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"        });","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"        assertTrue(exception.getMessage().contains(\"could not process the request\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":18}},{"path":"src/test/java/peppa/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"import peppa.commands.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.commands.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"        Command command \u003d new DeleteCommand(-1);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"        Exception exception \u003d assertThrows(PeppaException.class, () -\u003e {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"            command.execute(null, null, null);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"        });","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"huixuant"},"content":"        assertTrue(exception.getMessage().contains(\"could not find the requested task\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":19}},{"path":"src/test/java/peppa/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"package peppa;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"import peppa.commands.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"import peppa.commands.TodoCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"huixuant"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"huixuant"},"content":"    public void parseCommand_addTodo_returnTodoCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"huixuant"},"content":"        Command cmd \u003d Parser.parseCommand(\"todo clean room\");","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"huixuant"},"content":"        assertEquals(cmd, new TodoCommand(\"clean room\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"huixuant"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"huixuant"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"huixuant":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"huixuant"},"content":"todo read book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"huixuant"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"huixuant"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"huixuant"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"huixuant"},"content":"mark 3","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"huixuant"},"content":"event project meeting /from Mon 2pm /to I have no idea :P","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"huixuant"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"huixuant"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"huixuant"},"content":"unmark 3","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"huixuant"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"huixuant":10}}]
