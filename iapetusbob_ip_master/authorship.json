[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iapetusbob"},"content":"import java.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"iapetusbob"},"content":"    protected static class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"iapetusbob"},"content":"         * Task class for things added to the UserList","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"iapetusbob"},"content":"         * Methods:","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"iapetusbob"},"content":"         *      markAsDone -\u003e mark Task as done if not done and vice versa.","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"iapetusbob"},"content":"        String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"iapetusbob"},"content":"        Boolean done \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"iapetusbob"},"content":"        private Task (String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"iapetusbob"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"iapetusbob"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"iapetusbob"},"content":"             * Returns \"[done] Task\"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"iapetusbob"},"content":"            char doneX \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"iapetusbob"},"content":"            if (done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"iapetusbob"},"content":"                doneX \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"iapetusbob"},"content":"            return \"[\" + doneX + \"]\" + \" \" + name;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"iapetusbob"},"content":"        public boolean equals(Object obj){","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"iapetusbob"},"content":"            if (obj instanceof Task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"iapetusbob"},"content":"                Task objTask \u003d (Task)obj;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"iapetusbob"},"content":"                return objTask.name.equals(this.name);","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"iapetusbob"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"iapetusbob"},"content":"                return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"iapetusbob"},"content":"        private void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"iapetusbob"},"content":"             * Marks Task as done if not done and vice versa.","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"iapetusbob"},"content":"            if (done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"iapetusbob"},"content":"                System.out.println(lineBreak + \"OK, \u0027\" + this.name + \"\u0027 has been marked as Not Done.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"iapetusbob"},"content":"                done \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"iapetusbob"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"iapetusbob"},"content":"                System.out.println(lineBreak + \"OK, \u0027\" + this.name + \"\u0027 has been marked as Done.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"iapetusbob"},"content":"                done \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"iapetusbob"},"content":"    private static class UserList {","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"iapetusbob"},"content":"         * List used by userCmds \u0027add\u0027 and \u0027list\u0027.","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"iapetusbob"},"content":"         * Methods:","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"iapetusbob"},"content":"         *      addToList()     -\u003e appends Task to the list","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"iapetusbob"},"content":"         *      markAsDone(int i)    -\u003e mark Task in i-th index as done.","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"iapetusbob"},"content":"        public class TaskAlrMarkException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"iapetusbob"},"content":"             * Thrown when the Task is already Done but user wants to mark it again and vice versa.","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"iapetusbob"},"content":"            public TaskAlrMarkException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"iapetusbob"},"content":"                super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"iapetusbob"},"content":"        public class TaskNotInListException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"iapetusbob"},"content":"             * Thrown when Task is not in the userList.","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"iapetusbob"},"content":"            public TaskNotInListException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"iapetusbob"},"content":"                super(\"I can\u0027t seem to find this Task in the List.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"iapetusbob"},"content":"        List\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"iapetusbob"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"iapetusbob"},"content":"             * Returns vertical list of Tasks that is 1-index","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"iapetusbob"},"content":"            String result \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"iapetusbob"},"content":"            for (int i \u003d 0; i \u003c this.userList.size(); i++){","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"iapetusbob"},"content":"                result +\u003d (i+1) +\". \" + this.userList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"iapetusbob"},"content":"            return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"iapetusbob"},"content":"        private void addToList(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"iapetusbob"},"content":"             * Appends Task to userList.","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"iapetusbob"},"content":"            if (!userList.contains(task)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"iapetusbob"},"content":"                System.out.println(lineBreak + \"Added: \" + task.name + \"\\n\" + lineBreak);","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"iapetusbob"},"content":"                userList.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"iapetusbob"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"iapetusbob"},"content":"                System.out.println(lineBreak + \"Oops, it seems that you have already added this Task to your list!\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"iapetusbob"},"content":"        private void mark(String markCmd, int i) throws TaskNotInListException, TaskAlrMarkException {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"iapetusbob"},"content":"            /**","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"iapetusbob"},"content":"             * Mark the i-1 th index Task as done if not done and vice versa.","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"iapetusbob"},"content":"             * Note list is 0-index but displayed as 1-index, hence i would be 1-index.","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"iapetusbob"},"content":"             * If i \u003e userList.size(), throw TaskNotInListException.","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"iapetusbob"},"content":"             * If Task done but \"mark\" and vice versa, throw TaskAlrMarkException.","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"iapetusbob"},"content":"             *","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"iapetusbob"},"content":"             * @param   markCmd     User\u0027s command to \"mar\" or \"unmark\" a Task as done or not done.","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"iapetusbob"},"content":"             * @param   i           The index of the Task to be marked. Note that user input i is 1-index, so -1 is needed.","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"iapetusbob"},"content":"             */","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"iapetusbob"},"content":"            if (i \u003e userList.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"iapetusbob"},"content":"                throw new TaskNotInListException();","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"iapetusbob"},"content":"            } else if (markCmd.equals(\"mark\") \u0026\u0026 userList.get(i-1).done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"iapetusbob"},"content":"                throw new TaskAlrMarkException(lineBreak + \"It appears that this Task has already been marked as Done. Would you like to mark it as Not Done instead?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"iapetusbob"},"content":"            } else if (markCmd.equals(\"unmark\") \u0026\u0026 !userList.get(i-1).done){","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"iapetusbob"},"content":"                throw new TaskAlrMarkException(lineBreak + \"It appears that this Task has already been marked as Not Done. Would you like to mark it as Done instead?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"iapetusbob"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"iapetusbob"},"content":"                userList.get(i - 1).mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"iapetusbob"},"content":"        private int len() {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"iapetusbob"},"content":"            return userList.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"iapetusbob"},"content":"    private static String lineBreak \u003d \"_________________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"iapetusbob"},"content":"    private static UserList userList \u003d new UserList();","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"iapetusbob"},"content":"        greeting();","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"iapetusbob"},"content":"        takeCmd();","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"iapetusbob"},"content":"    private static void takeCmd() {","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"iapetusbob"},"content":"         * Control flow, logic, checking of the user inputs as commands.","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"iapetusbob"},"content":"         * Recognized user commands:","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"iapetusbob"},"content":"         *      bye     -\u003e quit","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"iapetusbob"},"content":"         *      add     -\u003e add to list","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"iapetusbob"},"content":"         *      list    -\u003e display","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"iapetusbob"},"content":"         * Unrecognized commands will simply be echoed then Duke waits next command.","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"iapetusbob"},"content":"        Scanner userCmd \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"iapetusbob"},"content":"        String cmd \u003d userCmd.next();","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"iapetusbob"},"content":"        String askForCmd \u003d lineBreak + \"Okay. What would you like to do next?\\nIf you want to exit DUKE, type \u0027bye\u0027!\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"iapetusbob"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"iapetusbob"},"content":"            exit();","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"iapetusbob"},"content":"        } else if (cmd.equals(\"add\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"iapetusbob"},"content":"            add();","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"iapetusbob"},"content":"            takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"iapetusbob"},"content":"        } else if (cmd.equals(\"list\")){","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"iapetusbob"},"content":"            list();","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"iapetusbob"},"content":"            takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"iapetusbob"},"content":"        } else if (cmd.equals(\"mark\") || cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"iapetusbob"},"content":"            String markUnmark \u003d cmd;","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"iapetusbob"},"content":"            if (userCmd.hasNext()){","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"iapetusbob"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"iapetusbob"},"content":"                    int listIdx \u003d Integer.parseInt(userCmd.next());","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"iapetusbob"},"content":"                    mark(markUnmark, listIdx);","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"iapetusbob"},"content":"                    System.out.println(askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"iapetusbob"},"content":"                    takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"iapetusbob"},"content":"                } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"iapetusbob"},"content":"                    System.out.println(\"Sorry, I don\u0027t understand what you want to me to do.\\n\" + askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"iapetusbob"},"content":"                    takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"iapetusbob"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"iapetusbob"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"iapetusbob"},"content":"                System.out.println(\"Sorry, I don\u0027t understand what you want to me to do.\\n\" + askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"iapetusbob"},"content":"                takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"iapetusbob"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"iapetusbob"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(askForCmd);","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"iapetusbob"},"content":"            takeCmd();","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"iapetusbob"},"content":"    private static void greeting() {","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"iapetusbob"},"content":"         * Start-up logo and message","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"iapetusbob"},"content":"        System.out.println(\"Hello from\\n\" + logo + lineBreak + \"Type \u0027bye\u0027 to exit!\\n\" + lineBreak + \"What can I do for you today?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"iapetusbob"},"content":"    private static void exit() {","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"iapetusbob"},"content":"         * userCmd \"bye\"","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"iapetusbob"},"content":"         * Exiting Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"iapetusbob"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" + lineBreak);","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"iapetusbob"},"content":"    private static void add() {","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"iapetusbob"},"content":"         * userCmd \"add\"","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"iapetusbob"},"content":"         * Appends item to userList, then displays it when done.","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"iapetusbob"},"content":"        Scanner userItem \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"iapetusbob"},"content":"        System.out.println(lineBreak + \"What would you like to add to the list?\\nType \u0027done\u0027 when done adding!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"iapetusbob"},"content":"        String item \u003d userItem.next();","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"iapetusbob"},"content":"        while (!item.equals(\"done\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"iapetusbob"},"content":"            Task itemTask \u003d new Task(item);","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"iapetusbob"},"content":"            userList.addToList(itemTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(\"Anything else you would like added to the list?\\nType \u0027done\u0027 when done adding!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"iapetusbob"},"content":"            item \u003d userItem.next();","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"iapetusbob"},"content":"        System.out.println(lineBreak + \"Your list looks like this:\\n\" + userList.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"iapetusbob"},"content":"    private static void list(){","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"iapetusbob"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"iapetusbob"},"content":"         * userCmd \"list\"","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"iapetusbob"},"content":"         * Displays userList vertically.","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"iapetusbob"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"iapetusbob"},"content":"        if (userList.len() \u003d\u003d 0){","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(lineBreak + \"Oops, it seems that your list is empty!\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":230,"author":{"gitId":"iapetusbob"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":231,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(lineBreak + \"Your list looks like this:\\n\" + userList.toString() + lineBreak);","lastModifiedDate":"2023-01-20"},{"lineNumber":232,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":233,"author":{"gitId":"iapetusbob"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":234,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":235,"author":{"gitId":"iapetusbob"},"content":"    private static void mark(String markCmd, int idx){","lastModifiedDate":"2023-01-20"},{"lineNumber":236,"author":{"gitId":"iapetusbob"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":237,"author":{"gitId":"iapetusbob"},"content":"            userList.mark(markCmd, idx);","lastModifiedDate":"2023-01-20"},{"lineNumber":238,"author":{"gitId":"iapetusbob"},"content":"        } catch (UserList.TaskNotInListException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(\"Sorry, can\u0027t find that task.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"iapetusbob"},"content":"        } catch (UserList.TaskAlrMarkException e){","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"iapetusbob"},"content":"            System.out.println(\"The Task has already been marked.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":242,"author":{"gitId":"iapetusbob"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"iapetusbob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"iapetusbob":236}}]
