[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":19,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"T\u001f \u001f10","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"D\u001f \u001f Dumb Dumb\u001f2000-10-10T10:10","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"T\u001f \u001f10","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"D\u001fX\u001f do cs2103t\u001f2023-10-20T10:24","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"D\u001f \u001f do wwwork\u001f2010-10-10T10:00","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"E\u001f \u001f do work\u001f2022-10-10T10:00\u001f2022-10-10T22:00","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"igezt":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" * DukeBot that contains all the logic and calls the relevant methods based on the commands given.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class Duke {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private static final String FRAME \u003d \"\"; //\"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final Database database;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    private boolean isActive;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * Represents the Duke chatbot wrapped with all its necessary dependencies such as","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * Ui, Database, TaskList and Parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @param filePath path of the database file.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        this.database \u003d new Database(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            tasks \u003d new TaskList(database.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"     * Runs the Duke chatbot and activates the UI to receive and display information","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public void runCommand(String command) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            Command nextCommand \u003d this.parser.parse(command, this.tasks.length());","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            nextCommand.execute(this.tasks, this.ui, this.database);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            this.isActive \u003d nextCommand.isActive();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"            ui.response(e.getLocalizedMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        } finally {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"            ui.showResponse();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"            if (!this.isActive) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":64}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Launcher class to launch the Main object.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"     * Default main method","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"     * @param args arguments to be passed in.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":" * Main wrapper class to couple Duke and the UI together.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Ui.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"            AnchorPane ui \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"            Scene scene \u003d new Scene(ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"            fxmlLoader.\u003cUi\u003egetController().setDuke(this.duke);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"            stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"            stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            scene.getStylesheets().add(","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"                    Objects.requireNonNull(Ui.class.getResource(\"/view/style.css\")).toExternalForm());","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":37}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.exception.blankfieldexceptions.BlankFieldDeadlineException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.exception.includeexceptions.IncludeByException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":" * Represents a command to add a deadline task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    private final String commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * Represents a command to add a deadline task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * @param commandBody Parameters of the command, pre-parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public AddDeadlineCommand(String commandBody) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * Executes the generated AddDeadlineCommand by adding a new Deadline task into the TaskList and gives a response","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws IncludeByException /by was not included in the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     * @throws BlankFieldDeadlineException No task and/or date was included in the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     * @throws InvalidDateException Date given in the command is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws IncludeByException,","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"            BlankFieldDeadlineException, InvalidDateException {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        // Extract deadline date and duke.task item.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d this.commandBody.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        boolean hasByKeyword \u003d false;","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                hasByKeyword \u003d true;","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"            } else if (!hasByKeyword) {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"                deadline.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        if (!hasByKeyword) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            throw new IncludeByException();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty() || deadline.toString().trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"            System.out.println(deadline.toString().stripLeading());","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"            Deadline newDeadline \u003d new Deadline(task.toString(), deadline.toString().stripLeading());","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"            ui.response(FRAME + \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"                    + \"Got it. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"                    + newDeadline.getStatus() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"                    + \"Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"                    + FRAME);","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":82}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.commands.enums.AddEventParserLogic;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.exception.blankfieldexceptions.BlankFieldEventException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import duke.exception.includeexceptions.IncludeToAndFromException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"/** Represents a command to add an event task to the TaskList. */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final String commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * Represents a command to add an event task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * @param commandBody Parameters of the command, pre-parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    public AddEventCommand(String commandBody) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * Executes the generated AddEventCommand by adding a new Event task into the TaskList and gives a response","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     * to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     * @throws IncludeToAndFromException /to and/or /from was not included in the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     * @throws BlankFieldEventException No task, from date and/or to date was included in the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws InvalidDateException Date given in the command is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws IncludeToAndFromException,","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"            BlankFieldEventException, InvalidDateException {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        // Extract event\u0027s start date and end date","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d this.commandBody.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        // State \u003d 0 if extracting duke.task item","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        // State \u003d 1 if extracting start date","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        // State \u003d 2 if extracting end date","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        AddEventParserLogic state \u003d AddEventParserLogic.inTask;","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/from\") \u0026\u0026 state \u003d\u003d AddEventParserLogic.inTask) {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"                state \u003d AddEventParserLogic.inStartDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"                continue;","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"            } else if (Objects.equals(line, \"/to\") \u0026\u0026 state \u003d\u003d AddEventParserLogic.inStartDate) {","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                state \u003d AddEventParserLogic.inEndDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"                continue;","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"            switch (state) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"            case inTask:","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"            case inStartDate:","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"                startDate.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"            case inEndDate:","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"                endDate.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"                //will never reach here.","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        if (state !\u003d AddEventParserLogic.inEndDate) {","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"            throw new IncludeToAndFromException();","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty()","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"                || startDate.toString().trim().isEmpty()","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"                || endDate.toString().trim().isEmpty()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"            Event newEvent \u003d new Event(task.toString(), startDate.toString().stripLeading(),","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"                    endDate.toString().stripLeading());","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"            ui.response(FRAME + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"                    + \"     Got it. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"                    + \"     \" + newEvent.getStatus() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"                    + \"     Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"                    + FRAME);","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":102}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"/** Represents a command to add a toDo task to the TaskList. */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    private final String task;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     * Represents a command to add a todo task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     * @param task Task to be done.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public AddToDoCommand(String task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * Executes the generated AddToDoCommand by adding a new todo task into the TaskList and gives a response","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     * to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        ToDo newToDo \u003d new ToDo(this.task);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        taskList.addTask(newToDo);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                + \"Got it. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                + newToDo.getStatus() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                + \"Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":44}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.databaseexceptions.DatabaseNotUpdatingException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"/** Represents a command for shutting down Duke. */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"     * Represents a command to shutting down Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * Executes the generated ByeCommand by updating isActive to false, updating the database, and gives a response","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * @throws DatabaseNotUpdatingException thrown when the database was not updated due to some file update error.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws DatabaseNotUpdatingException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.setIsActive(false);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        database.update(taskList.getTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        assert !this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents the abstract Command to be inherited from by all Commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    /** Frame to be used in response. */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String FRAME \u003d \"\"; //\"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    /** Changed to false only in the case of a bye command. */","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private boolean isActive;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public Command() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * Execute method which will be run immediately after the generation of the command. Implementation","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * depends on the command being run.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @throws DukeException throws a Duke related exception depending on the command generated.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Database database) throws DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public boolean isActive() {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        return isActive;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public void setIsActive(boolean isActive) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":39}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"/** Represents a command to delete a task stored in from Duke. */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"     * Represents a command to delete a task stored in from Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     * @param taskNumber The identifier of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * Executes the generated DeleteCommand by deleting the task related to the taskNumber","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * and gives a response to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when the taskNumber identifier does not exist in the taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        String taskDescription \u003d taskList.getTask(taskNumber).getStatus();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                + \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                + taskDescription","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                + \"Now you have \" + taskList.length() + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":43}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" * Represents a find command to find a task with the relevant query string.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private final String query;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * Represents a find command to find a task with the relevant query string.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * @param query query string.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * Executes the generated FindCommand by finding a list of tasks in Duke that contain the query string in its","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * details and giving it as a response to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        StringBuilder queriedTasks \u003d new StringBuilder(FRAME);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        int numOfQueriedTasks \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"            if (task.isContains(this.query)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                queriedTasks.append(\"     \").append(numOfQueriedTasks + 1).append(\". \")","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                        .append(task.getStatus()).append(\"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                numOfQueriedTasks++;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        ui.response(queriedTasks.append(FRAME).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"igezt":51}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/** Represents a command to view the list of all items in the taskList of Duke. */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"     * Represents a command to view the list of all items in the taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * Executes the generated ListCommand by generating the list of tasks in Duke as a String and","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * giving it as a response to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        StringBuilder res \u003d new StringBuilder(FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        for (int i \u003d 0; i \u003c taskList.length(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            Task task \u003d taskList.getTask(i + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"            res.append(i + 1).append(\". \").append(task.getStatus()).append(\"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        ui.response(res.append(FRAME).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":39}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/** Represents a command for marking an existing task in the taskList of Duke. */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     * Represents a command for marking an existing task in the taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     * @param taskNumber The identifier of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * Executes the generated MarkCommand by marking the relevant task in Duke as complete and","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * giving it as a response to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when there is no task with that taskNumber","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        task.setComplete();","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                + \"[X] \" + task.getDetails() + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":44}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/** Represents a command for unmarking an existing task in the taskList of Duke. */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     * Represents a command for unmarking an existing task in the taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     * @param taskNumber The identifier of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * Executes the generated MarkCommand by marking the relevant task in Duke as incomplete and","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * giving it as a response to the Ui.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @param taskList taskList of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @param ui user interface object of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * @param database database of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when there is no task with that taskNumber","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        assert this.isActive();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        task.setIncomplete();","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                + \"[ ] \" + task.getDetails() + \"\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":43}},{"path":"src/main/java/duke/commands/enums/AddEventParserLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands.enums;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Represents if the AddEventCommand parsing logic is within the task, start date or end date.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public enum AddEventParserLogic {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    inTask(\"T\"),","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    inStartDate(\"S\"),","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    inEndDate(\"E\");","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final String identifier;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    AddEventParserLogic(String identifier) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public String getIdentifier() {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        return identifier;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"igezt":20}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.database;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.exception.databaseexceptions.DatabaseNotLoadingException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import duke.exception.databaseexceptions.DatabaseNotUpdatingException;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import duke.exception.databaseexceptions.DatabaseTypeNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"/** Represents the database storage for Duke using a basic text file. */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"public class Database {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    //ASCII 31 is known as the \"Unit Seperator\"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    //Value taken from","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    //https://stackoverflow.com/questions/492090/least-used-delimiter-character-in-normal-text-ascii-128","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    private final String delimiter \u003d Character.toString((char) 31);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     * Represents the database storage for Duke using a basic text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * @param filePath the path for which the database text file is stored in","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public Database(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     * Loads Duke\u0027s taskList with the relevant saved tasks stored in the database. Usually run on startup of Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     * @return an ArrayList of Task objects that was saved in the database","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws DatabaseNotLoadingException thrown when there is an error with loading the database file.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cTask\u003e load() throws DatabaseNotLoadingException, DatabaseTypeNotFoundException {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"            File taskFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            Scanner dataScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                String[] taskData \u003d dataScanner.nextLine().split(this.delimiter);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                switch (taskData[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                case \"T\":","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                    tasks.add(new ToDo(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"                case \"E\":","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"                    tasks.add(new Event(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                case \"D\":","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"                    tasks.add(new Deadline(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"                default:","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"                    throw new DatabaseTypeNotFoundException();","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"            return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"            throw new DatabaseNotLoadingException();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"     * Updates the database on shutting down of Duke with the new taskList","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"     * @param tasks the tasks originally stored in the taskList for Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"     * @throws DatabaseNotUpdatingException thrown when there is an error with updating the database file.","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    public void update(ArrayList\u003cTask\u003e tasks) throws DatabaseNotUpdatingException {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"            StringBuilder data \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"                ArrayList\u003cString\u003e taskData \u003d task.getData();","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"                data.append(String.join(this.delimiter, taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"                data.append(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"            writer.write(data.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"            writer.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"            throw new DatabaseNotUpdatingException();","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"igezt":98}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" * DukeException meant to be inherited from by all exceptions relating to the DukeBot.","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public static final String FRAME \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    public DukeException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":15}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Thrown when an invalid date string is given for a date related command.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"     * Thrown when an invalid date string is given for a date related command.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"I can\u0027t seem to understand that date...\" + \"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"                + \"Can you use DD-MM-YYYY HH:MM if possible?\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"igezt":16}},{"path":"src/main/java/duke/exception/TaskNumberNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Thrown when the task number stated is not found in the task list of Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class TaskNumberNotFoundException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"     * Thrown when the task number stated is not found in the task list of Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public TaskNumberNotFoundException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(\"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"                + \"Either there is no task with that number or you didn\u0027t format your command correctly!\" + \"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"                + \"Use \\\"mark N\\\", \\\"unmark N\\\" or \\\"delete N\\\" where N is your task number.\" + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":15}},{"path":"src/main/java/duke/exception/blankfieldexceptions/BlankFieldDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.blankfieldexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" *  Thrown when a deadline-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class BlankFieldDeadlineException extends BlankFieldException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"     *  Thrown when a deadline-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public BlankFieldDeadlineException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(\"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"                + \"     ☹ OOPS!!! The description or date of a deadline cannot be empty.\"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"                + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":15}},{"path":"src/main/java/duke/exception/blankfieldexceptions/BlankFieldEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.blankfieldexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" *  Thrown when an event-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class BlankFieldEventException extends BlankFieldException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"     *  Thrown when an event-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public BlankFieldEventException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(\"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"                + \"     ☹ OOPS!!! The description, start date or end date of a event cannot be empty.\"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"                + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":15}},{"path":"src/main/java/duke/exception/blankfieldexceptions/BlankFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.blankfieldexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Thrown when a AddEvent command does not include the \"/from\" or the \"/to\" keyword.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class BlankFieldException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public BlankFieldException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":12}},{"path":"src/main/java/duke/exception/blankfieldexceptions/BlankFieldTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.blankfieldexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" *  Thrown when a to-do-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class BlankFieldTodoException extends BlankFieldException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"     *  Thrown when a to-do-related command has a blank field.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public BlankFieldTodoException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(\"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"                + \"     ☹ OOPS!!! The description of a todo cannot be empty.\"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"                + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":15}},{"path":"src/main/java/duke/exception/databaseexceptions/DatabaseNotLoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.databaseexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" *  Thrown when the database does not load.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class DatabaseNotLoadingException extends DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"     *  Thrown when the database does not load.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public DatabaseNotLoadingException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"Oh dear, it seems something went wrong with the Database.\" + \"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"                + \"Creating an empty one for now\" + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":17}},{"path":"src/main/java/duke/exception/databaseexceptions/DatabaseNotUpdatingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.databaseexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Thrown when the database is not updated properly.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class DatabaseNotUpdatingException extends DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"     * Thrown when the database is not updated properly.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public DatabaseNotUpdatingException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"                + \"Oh dear, it seems something went wrong with the Database.\" + \"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"                + \"Try updating it again\" + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":18}},{"path":"src/main/java/duke/exception/databaseexceptions/DatabaseTypeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.databaseexceptions;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Thrown when one of the tasks stored in the database has the wrong type.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class DatabaseTypeNotFoundException extends DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public DatabaseTypeNotFoundException() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"Oh no, it seems that one of the tasks stored in the database has a wrong type\");","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"igezt":13}},{"path":"src/main/java/duke/exception/includeexceptions/IncludeByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.includeexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Thrown when a AddDeadline command does not include the \"/by\" keyword.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class IncludeByException extends IncludeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    public IncludeByException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"     Error! Did you forget to include the \\\"/by\\\" in your command?\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/duke/exception/includeexceptions/IncludeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.includeexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Parent exception class to be inherited from for exceptions relating to missing keywords in commands.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class IncludeException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public IncludeException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":12}},{"path":"src/main/java/duke/exception/includeexceptions/IncludeToAndFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.includeexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Thrown when","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class IncludeToAndFromException extends IncludeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    public IncludeToAndFromException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"     Error! Did you forget to include the \\\"/from\\\" and \\\"/to\\\" in your command?\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/duke/exception/parserexceptions/NoCommandBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.parserexceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Thrown when the command given does not have a command body or relevant parameters.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class NoCommandBodyException extends DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public NoCommandBodyException() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"Oh my, I\u0027m gonna need a command body!\" + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":12}},{"path":"src/main/java/duke/exception/parserexceptions/UnknownCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.parserexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Thrown when the command is unknown or when parsable in Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class UnknownCommandError extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public UnknownCommandError() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"Sorry I don\u0027t think there\u0027s a command like that!\" + \"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.commands.AddToDoCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import duke.exception.blankfieldexceptions.BlankFieldDeadlineException;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import duke.exception.blankfieldexceptions.BlankFieldEventException;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import duke.exception.blankfieldexceptions.BlankFieldTodoException;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import duke.exception.parserexceptions.NoCommandBodyException;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import duke.exception.parserexceptions.UnknownCommandError;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":" * Represents the wrapper for the parsing logic for commands for Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * Parses the command text given and returns the Command object associated with the command text.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     * @param command the command text given.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * @param lengthOfList the length of taskList currently","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * @return Command object associated with the command text.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     * @throws NoCommandBodyException thrown when there is no command body","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when there is no task identifier found for mark, unmark, delete","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     *      commands.","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     * @throws BlankFieldTodoException thrown when there is a blank field for the addToDoCommand.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws BlankFieldDeadlineException thrown when there is a blank field for the addDeadlineCommand.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     * @throws BlankFieldEventException thrown when there is a blank field for the addEventCommand.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     * @throws UnknownCommandError thrown when the command\u0027s keyword does not match any of the ones known.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    public Command parse(String command, int lengthOfList) throws TaskNumberNotFoundException, BlankFieldTodoException,","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            BlankFieldDeadlineException, BlankFieldEventException, UnknownCommandError, NoCommandBodyException {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        } else if (Objects.equals(command, \"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"            throw new NoCommandBodyException();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        String keyWord \u003d words[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        String commandBody \u003d words[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        switch (keyWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            return parseMarkCommand(commandBody, lengthOfList);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"            return parseUnmarkCommand(commandBody, lengthOfList);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"            return parseAddToDoCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"            return parseAddDeadlineCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        case \"event\":","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"            return parseAddEventCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"            return parseDeleteCommand(commandBody, lengthOfList);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        case \"find\":","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"            return parseFindCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"            throw new UnknownCommandError();","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"    private FindCommand parseFindCommand(String commandBody) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        return new FindCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    private DeleteCommand parseDeleteCommand(String commandBody, int lengthOfList) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"            int taskNumber \u003d Integer.parseInt(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"            if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"    private AddEventCommand parseAddEventCommand(String commandBody) throws BlankFieldEventException {","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        if (commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldEventException();","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        return new AddEventCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    private AddDeadlineCommand parseAddDeadlineCommand(String commandBody) throws BlankFieldDeadlineException {","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"        if (commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"        return new AddDeadlineCommand(commandBody);","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"    private AddToDoCommand parseAddToDoCommand(String commandBody) throws BlankFieldTodoException {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"        if (commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldTodoException();","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        return new AddToDoCommand(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"    private MarkCommand parseMarkCommand(String commandBody, int lengthOfList) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"            int taskNumber \u003d Integer.parseInt(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"            if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"    private UnmarkCommand parseUnmarkCommand(String commandBody, int lengthOfList) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"            int taskNumber \u003d Integer.parseInt(commandBody);","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"            if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":148}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" * Represents a Deadline task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    private static final String TYPE_TO_STRING \u003d \"D\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * Represents a Deadline task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * @param task the task details.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @param deadline the deadline the task should be completed by.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * @throws DateTimeParseException thrown when the date and time given is not parsable.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    public Deadline(String task, String deadline) throws DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        this.setType(Types.DEADLINE);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * Represents a Deadline task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     * @param data an array of Strings with relevant information typically obtained from the database in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    public Deadline(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        this.setCompleted(Objects.equals(data[1], \"X\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        this.deadline \u003d LocalDateTime.parse(data[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"     * @return the status of the Deadline task with its time formatted.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    public String getStatus() {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        String status \u003d this.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        return \"[\" + TYPE_TO_STRING + \"]\" + status + this.getDetails() + \" (by: \"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                + this.deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                + this.deadline.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\";","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"     * @return all relevant information of the Deadline task in an ArrayList of Strings to be saved into the Database.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e getData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        data.add(TYPE_TO_STRING);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        data.add(this.isCompleted() ? \"X\" : \" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        data.add(this.getDetails());","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        data.add(this.deadline.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":68}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" * Represents a Event task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    private static final String TYPE_TO_STRING \u003d \"E\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * Represents a Event task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @param task task details.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * @param startDateTime start date and time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * @param endDateTime end date and time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * @throws DateTimeParseException thrown when either of the date and/or time is not parsable.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public Event(String task, String startDateTime, String endDateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        this.setType(Types.EVENT);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        this.startDateTime \u003d LocalDateTime.parse(startDateTime, FORMATTER);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        this.endDateTime \u003d LocalDateTime.parse(endDateTime, FORMATTER);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     * Represents an Event task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @param data an array of Strings with relevant information typically obtained from the database in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public Event(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        this.setCompleted(Objects.equals(data[1], \"X\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        this.startDateTime \u003d LocalDateTime.parse(data[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        this.endDateTime \u003d LocalDateTime.parse(data[4]);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"     * @return the status of the Event task with its time formatted.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    public String getStatus() {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        String status \u003d this.getCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        return \"[\" + TYPE_TO_STRING + \"]\" + status + this.getDetails()","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                + \" (from: \" + this.startDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"                + this.startDateTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\" + \" to: \"","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"                + this.endDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\"","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                + this.endDateTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\" + \")\";","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"     * @return all relevant information of the Event task in an ArrayList of Strings to be saved into the Database.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e getData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        data.add(TYPE_TO_STRING);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        data.add(this.getCompleted() ? \"X\" : \" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        data.add(this.getDetails());","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        data.add(this.startDateTime.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        data.add(this.endDateTime.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Represents the abstract Task class that all tasks in Duke inherit from.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    /** true when the task is completed, false if not. */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    /** Details of the task. */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private String details;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    /** Type of task. */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private Types type;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /** Generic constructor, defaults as false for isCompleted and takes in the task details. */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        this.details \u003d task;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public abstract String getStatus();","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @return all relevant information of the task in an ArrayList of Strings to be saved into the Database.","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public abstract ArrayList\u003cString\u003e getData();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    /** Marks the task as complete. */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public void setComplete() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    /** Marks the task as incomplete */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    public void setIncomplete() {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    public String getDetails() {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        return details;","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    public boolean isContains(String str) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        return this.details.contains(str);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    public void setDetails(String details) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    public void setType(Types type) {","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"igezt":65}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" * Represents a ToDo task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private static final String TYPE_TO_STRING \u003d \"T\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"     * Represents a ToDo task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     * @param task the task details.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        this.setType(Types.TODO);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * Represents a ToDo task in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * @param data an array of Strings with relevant information typically obtained from the database in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public ToDo(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.setCompleted(Objects.equals(data[1], \"X\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        this.setDetails(data[2]);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * Returns the status of the ToDo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public String getStatus() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        String status \u003d this.getCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        return \"[\" + TYPE_TO_STRING + \"]\" + status + \" \" + this.getDetails();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"     * @return Returns all relevant information of the task in an ArrayList of Strings to be saved into the Database.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e getData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        data.add(TYPE_TO_STRING);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        data.add(this.getCompleted() ? \"X\" : \" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        data.add(this.getDetails());","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":53}},{"path":"src/main/java/duke/task/Types.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Represents the Types identifier for each task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public enum Types {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final String identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    Types(String identifier) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public String getIdentifier() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        return identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":20}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" * Represents the task list in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     * Represents the task list in Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * @param tasks an ArrayList of tasks to be stored in TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * Represents the task list in Duke. This constructor is used when first initializing Duke with an empty database.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * @return the number of tasks in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    public int length() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     * Returns the task according to the identifier.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     * @param taskNumber identifier of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"     * @return the task corresponding to the identifier.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when the identifier does not exist in the taskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public Task getTask(int taskNumber) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            return this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"     * Deletes the task according to the identifier.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"     * @param taskNumber identifier of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"     * @throws TaskNumberNotFoundException thrown when the identifier does not exist in the taskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    public void deleteTask(int taskNumber) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"            this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"     * Adds the task to the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"     * Getter for the ArrayList of tasks stored in TaskList. Typically only used when storing the tasks in the database","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"     * @return Arraylist of tasks in the Tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":85}},{"path":"src/main/java/duke/ui/MessageBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":" * FXML messagebox object that represents the text message sent into the UI.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"public class MessageBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    MessageBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MessageBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        this.dialog.getStyleClass().add(\"message\");","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        this.dialog.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        Circle pictureClip \u003d new Circle(","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                this.displayPicture.getX() + this.displayPicture.getFitWidth() / 2,","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                this.displayPicture.getY() + this.displayPicture.getFitWidth() / 2,","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                this.displayPicture.getFitWidth() / 2","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        this.displayPicture.setClip(pictureClip);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    private Label getDialog() {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        return this.dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"    public static MessageBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        MessageBox userMessage \u003d new MessageBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        userMessage.getDialog().getStyleClass().add(\"userMessage\");","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        return userMessage;","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"    public static MessageBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        MessageBox dukeMessage \u003d new MessageBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        dukeMessage.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        dukeMessage.getDialog().getStyleClass().add(\"dukeMessage\");","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        return dukeMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":77}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":" * Represents the user interface of Duke. Currently, just terminal text.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"public class Ui extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    private String response;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    private String commandInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            .getResourceAsStream(\"/images/Duke.jpg\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            .getResourceAsStream(\"/images/User.png\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        duke.setUi(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"     * Initializes the UI.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        this.dialogContainer.getStyleClass().add(\"dialogBox\");","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        String text \u003d this.userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        MessageBox userResponse \u003d MessageBox.getUserDialog(text, this.userImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        this.dialogContainer.getChildren().add(userResponse);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        this.duke.runCommand(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        this.userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"     * Stores the response given by Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"     * @param reply the reply given by Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    public void response(String reply) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        this.response \u003d reply;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"     * Prints out the response given by Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"    public void showResponse() {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        MessageBox dukeResponse \u003d MessageBox.getDukeDialog(this.response, this.dukeImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        this.dialogContainer.getChildren().add(dukeResponse);","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":80}},{"path":"src/main/resources/view/MessageBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":16}},{"path":"src/main/resources/view/Ui.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600\" minWidth\u003d\"400\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"            fx:controller\u003d\"duke.ui.Ui\" \u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    \u003cTextField fx:id\u003d\"userInput\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"               prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"60.0\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"igezt":21}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public void deadline_creationCompareWithStatus_isEqual() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        String[] data \u003d new String[]{\"D\", \" \", \"Dumb Dumb\", \"2000-10-10T10:10\"};","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        assertEquals(\"[D][ ] Dumb Dumb (by: Tuesday, 10 October 2000 [10:10 AM])\", new Deadline(data).getStatus());","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"igezt":17}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.commands.AddToDoCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public void parser_randomCommand_exceptionThrown() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"            assertEquals(new AddToDoCommand(\"\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"                    new Parser().parse(\"This is a test to bring about a better work\", 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"            fail(); //Should not reach here","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"            assertEquals(e.getLocalizedMessage(),","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                    \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                    + \"Sorry I don\u0027t think there\u0027s a command like that!\"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"                    + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"igezt":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"list","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":1,"-":37}}]
