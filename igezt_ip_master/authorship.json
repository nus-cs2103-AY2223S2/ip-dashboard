[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":2,"-":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"E\u001fX\u001f 123\u001f2023-01-15T15:00\u001f2023-01-15T15:00","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"T\u001f \u001frun","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"T\u001fX\u001f10","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":3}},{"path":"legacybot/DukeBot/DukeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package DukeBot;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldDeadlineException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldEventException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldTodoException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.exception.DatabaseExceptions.DatabaseNotLoadingException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.exception.IncludeExceptions.IncludeByException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.exception.IncludeExceptions.IncludeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import duke.exception.IncludeExceptions.IncludeToAndFromException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import duke.exception.UnknownCommandError;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"public class DukeBot {","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    private int lengthOfList;","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    private static final String FRAME \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    private boolean isActive;","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    private final Database dataBase;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public DukeBot(Scanner scanner, String filePath) throws DatabaseNotLoadingException {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        this.dataBase \u003d new Database(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        this.list \u003d this.dataBase.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        this.lengthOfList \u003d this.list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    public void activate() {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        System.out.println(FRAME +","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                \"     Hello! I\u0027m duke.Duke\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                \"     What can I do for you?\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        while (this.isActive \u0026\u0026 this.scanner.hasNextLine()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            String line \u003d this.scanner.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                System.out.println(this.text(line));","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"            } catch (BlankFieldException | UnknownCommandError | TaskNumberNotFoundException | IncludeException |","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                    InvalidDateException e){","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                System.out.println(e.getLocalizedMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"                System.out.println(\"Oh no something went bad bad\");","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    public String text(String line) throws BlankFieldException, UnknownCommandError, TaskNumberNotFoundException, IncludeException, IOException, InvalidDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(line, \"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"            return this.list();","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        } else if (Objects.equals(line, \"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"            return this.bye();","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        switch (command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"                    if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"                    if (taskNumber \u003e this.lengthOfList || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"                    return this.mark(taskNumber);","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"                try {","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"                    if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"                    if (taskNumber \u003e this.lengthOfList || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"                    return this.unmark(taskNumber);","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"                if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"                    throw new BlankFieldTodoException();","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"                return this.addToDo(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"                if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"                    throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"                return this.addDeadline(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"            case \"event\":","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"                if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"                    throw new BlankFieldEventException();","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"                return this.addEvent(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"                    if (words.length \u003d\u003d 1 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"                    if (taskNumber \u003e this.lengthOfList || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"                        throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"                    return this.delete(taskNumber);","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        throw new UnknownCommandError(\"\\n\" + FRAME + \"\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"    private String delete(int taskNumber) {","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"        String task \u003d this.list.get(taskNumber - 1).status();","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"        this.list.remove(taskNumber - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"        this.lengthOfList -\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"        return FRAME +","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"                \" Noted. I\u0027ve removed this duke.task:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"                \"       \" + task +","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"                \"     Now you have \" + this.lengthOfList + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"                + FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"    private String unmark(int taskNumber) {","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"        Task task \u003d this.list.get(taskNumber - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"        task.incomplete();","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"        return FRAME +","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"                \"     OK, I\u0027ve marked this duke.task as not done yet:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"                \"       [ ] \" + task.details + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"                FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"    private String mark(int taskNumber) {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"        Task task \u003d this.list.get(taskNumber - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"        task.complete();","lastModifiedDate":"2023-01-16"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"        return FRAME +","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"                \"     Nice! I\u0027ve marked this duke.task as done:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"                \"       [X] \" + task.details + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"                FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":171,"author":{"gitId":"igezt"},"content":"    private String list() {","lastModifiedDate":"2023-01-16"},{"lineNumber":172,"author":{"gitId":"igezt"},"content":"        StringBuilder res \u003d new StringBuilder(FRAME);","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-01-16"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"            res.append(\"     \").append(i + 1).append(\". \").","lastModifiedDate":"2023-01-16"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"                    append(task.status()).append(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"        return res.append(FRAME).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"    public String addToDo(String parameters) {","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"        ToDo newToDo \u003d new ToDo(parameters);","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"        this.list.add(newToDo);","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"        this.lengthOfList +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"        return FRAME + \"\\n\" +","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"                \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"                \"     \" + newToDo.status() + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"                \"     Now you have \" + this.lengthOfList + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"                FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"    public String addDeadline(String parameters) throws IncludeByException, BlankFieldDeadlineException, InvalidDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"        // Extract deadline date and duke.task item.","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d parameters.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"        boolean by \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/by\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"igezt"},"content":"                by \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"igezt"},"content":"            } else if (!by) {","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-17"},{"lineNumber":207,"author":{"gitId":"igezt"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":208,"author":{"gitId":"igezt"},"content":"                deadline.append(\" \").append(line);","lastModifiedDate":"2023-01-17"},{"lineNumber":209,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":210,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":211,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"igezt"},"content":"        if (!by) {","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"igezt"},"content":"            throw new IncludeByException();","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty() || deadline.toString().trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"igezt"},"content":"            Deadline newDeadline \u003d new Deadline(task.toString(), deadline.toString().stripLeading());","lastModifiedDate":"2023-01-28"},{"lineNumber":221,"author":{"gitId":"igezt"},"content":"            this.list.add(newDeadline);","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"igezt"},"content":"            this.lengthOfList +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"igezt"},"content":"            return FRAME + \"\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"                    \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"igezt"},"content":"                    \"     \" + newDeadline.status() + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"igezt"},"content":"                    \"     Now you have \" + this.lengthOfList + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"igezt"},"content":"                    FRAME;","lastModifiedDate":"2023-01-28"},{"lineNumber":228,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":229,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-28"},{"lineNumber":230,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":231,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":232,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":233,"author":{"gitId":"igezt"},"content":"    public String addEvent(String parameters) throws IncludeToAndFromException, BlankFieldEventException, InvalidDateException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":234,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":235,"author":{"gitId":"igezt"},"content":"        // Extract event\u0027s start date and end date","lastModifiedDate":"2023-01-17"},{"lineNumber":236,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d parameters.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":237,"author":{"gitId":"igezt"},"content":"        // State \u003d 0 if extracting duke.task item","lastModifiedDate":"2023-01-31"},{"lineNumber":238,"author":{"gitId":"igezt"},"content":"        // State \u003d 1 if extracting start date","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"igezt"},"content":"        // State \u003d 2 if extracting end date","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"igezt"},"content":"        int state \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":241,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":242,"author":{"gitId":"igezt"},"content":"        StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":243,"author":{"gitId":"igezt"},"content":"        StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/from\") \u0026\u0026 state \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":247,"author":{"gitId":"igezt"},"content":"                state \u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":248,"author":{"gitId":"igezt"},"content":"            } else if (Objects.equals(line, \"/to\") \u0026\u0026 state \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":249,"author":{"gitId":"igezt"},"content":"                state \u003d 2;","lastModifiedDate":"2023-01-17"},{"lineNumber":250,"author":{"gitId":"igezt"},"content":"            } else switch (state) {","lastModifiedDate":"2023-01-17"},{"lineNumber":251,"author":{"gitId":"igezt"},"content":"            case 0:","lastModifiedDate":"2023-01-17"},{"lineNumber":252,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-17"},{"lineNumber":253,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":254,"author":{"gitId":"igezt"},"content":"            case 1:","lastModifiedDate":"2023-01-17"},{"lineNumber":255,"author":{"gitId":"igezt"},"content":"                startDate.append(\" \").append(line);","lastModifiedDate":"2023-01-17"},{"lineNumber":256,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":257,"author":{"gitId":"igezt"},"content":"            case 2:","lastModifiedDate":"2023-01-17"},{"lineNumber":258,"author":{"gitId":"igezt"},"content":"                endDate.append(\" \").append(line);","lastModifiedDate":"2023-01-17"},{"lineNumber":259,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"igezt"},"content":"        if (state !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"igezt"},"content":"            throw new IncludeToAndFromException();","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty() ||","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"igezt"},"content":"                startDate.toString().trim().isEmpty() ||","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"igezt"},"content":"                endDate.toString().trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldEventException();","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":272,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":273,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":274,"author":{"gitId":"igezt"},"content":"            Event newEvent \u003d new Event(task.toString(), startDate.toString().stripLeading(), endDate.toString().stripLeading());","lastModifiedDate":"2023-01-28"},{"lineNumber":275,"author":{"gitId":"igezt"},"content":"            this.list.add(newEvent);","lastModifiedDate":"2023-01-17"},{"lineNumber":276,"author":{"gitId":"igezt"},"content":"            this.lengthOfList +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":277,"author":{"gitId":"igezt"},"content":"            return FRAME + \"\\n\" +","lastModifiedDate":"2023-01-27"},{"lineNumber":278,"author":{"gitId":"igezt"},"content":"                    \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":279,"author":{"gitId":"igezt"},"content":"                    \"     \" + newEvent.status() + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"igezt"},"content":"                    \"     Now you have \" + this.lengthOfList + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"igezt"},"content":"                    FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":282,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":283,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-28"},{"lineNumber":284,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":285,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"igezt"},"content":"    public String bye() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":288,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":289,"author":{"gitId":"igezt"},"content":"        this.dataBase.update(this.list);","lastModifiedDate":"2023-01-27"},{"lineNumber":290,"author":{"gitId":"igezt"},"content":"        return FRAME +","lastModifiedDate":"2023-01-27"},{"lineNumber":291,"author":{"gitId":"igezt"},"content":"                \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":292,"author":{"gitId":"igezt"},"content":"                FRAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":293,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":294,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":295,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"igezt":295}},{"path":"legacybot/DukeBot/Keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package DukeBot;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public enum Keywords {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":5}},{"path":"legacybot/DukeBot/Types.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package DukeBot;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public enum Types {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    private final String identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    Types(String identifier) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        this.identifier \u003d identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public String getIdentifier() {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        return identifier;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Duke {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    private Database database;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    private static final String FRAME \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private boolean isActive;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.database \u003d new Database(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"            tasks \u003d new TaskList(database.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        System.out.println(FRAME +","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"                \"     Hello! I\u0027m duke.Duke\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"                \"     What can I do for you?\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        while (this.isActive \u0026\u0026 this.ui.hasNextCommand()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            String command \u003d this.ui.nextCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                Command nextCommand \u003d this.parser.parse(command, this.tasks.length());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                nextCommand.execute(this.tasks, this.ui, this.database);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                this.isActive \u003d nextCommand.isActive;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                ui.response(e.getLocalizedMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            } finally {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                ui.showResponse();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":59}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldDeadlineException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.exception.IncludeExceptions.IncludeByException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private final String commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public AddDeadlineCommand(String commandBody) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws IncludeByException, BlankFieldDeadlineException, InvalidDateException {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        // Extract deadline date and duke.task item.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d this.commandBody.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        boolean by \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"                by \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            } else if (!by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"                deadline.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        if (!by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"            throw new IncludeByException();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty() || deadline.toString().trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            Deadline newDeadline \u003d new Deadline(task.toString(), deadline.toString().stripLeading());","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            ui.response(FRAME + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"                    \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                    \"     \" + newDeadline.status() + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                    \"     Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                    FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":59}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldEventException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.exception.IncludeExceptions.IncludeToAndFromException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final String commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public AddEventCommand(String commandBody) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws IncludeToAndFromException, BlankFieldEventException, InvalidDateException {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        // Extract event\u0027s start date and end date","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        String[] lines \u003d this.commandBody.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        // State \u003d 0 if extracting duke.task item","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        // State \u003d 1 if extracting start date","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        // State \u003d 2 if extracting end date","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        int state \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(line, \"/from\") \u0026\u0026 state \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                state \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"            } else if (Objects.equals(line, \"/to\") \u0026\u0026 state \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                state \u003d 2;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"            } else switch (state) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"            case 0:","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                task.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"            case 1:","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                startDate.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            case 2:","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"                endDate.append(\" \").append(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        if (state !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"            throw new IncludeToAndFromException();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        if (task.toString().trim().isEmpty() ||","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                startDate.toString().trim().isEmpty() ||","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                endDate.toString().trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"            Event newEvent \u003d new Event(task.toString(), startDate.toString().stripLeading(), endDate.toString().stripLeading());","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"            ui.response(FRAME + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"                    \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"                    \"     \" + newEvent.status() + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"                    \"     Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"                    FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":76}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class AddToDoCommand extends Command{","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final String task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public AddToDoCommand(String task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        ToDo newToDo \u003d new ToDo(this.task);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        taskList.addTask(newToDo);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                \"     Got it. I\u0027ve added this duke.task:\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                \"     \" + newToDo.status() + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"                \"     Now you have \" + taskList.length() + \" tasks in the list\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":28}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.DatabaseExceptions.DatabaseNotUpdatingException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"            database.update(taskList.getTaskList());","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"            ui.response(FRAME +","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                    \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                    FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"            throw new DatabaseNotUpdatingException();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":29}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public boolean isActive;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    public static final String FRAME \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public Command() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Database database) throws DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":19}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        String taskDescription \u003d taskList.getTask(taskNumber).status();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME +","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                \" Noted. I\u0027ve removed this duke.task:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                \"       \" + taskDescription +","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"                \"     Now you have \" + taskList.length() + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"                + FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"        StringBuilder res \u003d new StringBuilder(FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        for (int i \u003d 0; i \u003c taskList.length(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"            Task task \u003d taskList.getTask(i + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"            res.append(\"     \").append(i + 1).append(\". \").","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"                    append(task.status()).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        ui.response(res.append(FRAME).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":26}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        task.complete();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME +","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                \"     Nice! I\u0027ve marked this duke.task as done:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                \"       [X] \" + task.details + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":28}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.database.Database;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public void execute(TaskList taskList, Ui ui, Database database) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        Task task \u003d taskList.getTask(this.taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        task.incomplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        ui.response(FRAME +","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                \"     OK, I\u0027ve marked this duke.task as not done yet:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                \"       [ ] \" + task.details + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":27}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.database;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.DatabaseExceptions.DatabaseNotLoadingException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"public class Database {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    //ASCII 31 is known as the \"Unit Seperator\"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    //Value taken from","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    //https://stackoverflow.com/questions/492090/least-used-delimiter-character-in-normal-text-ascii-128","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    private final String delimiter \u003d Character.toString((char) 31);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public Database(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cTask\u003e load() throws DatabaseNotLoadingException {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"            File taskFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            Scanner dataScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                String[] taskData \u003d dataScanner.nextLine().split(this.delimiter);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                switch (taskData[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                case \"T\":","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                    tasks.add(new ToDo(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                case \"E\":","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                    tasks.add(new Event(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                case \"D\":","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                    tasks.add(new Deadline(taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"            return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"            throw new DatabaseNotLoadingException();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    public void update(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        StringBuilder data \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"            ArrayList\u003cString\u003e taskData \u003d task.data();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            data.append(String.join(this.delimiter, taskData));","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"            data.append(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        writer.write(data.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        writer.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"igezt":70}},{"path":"src/main/java/duke/exception/BlankFieldExceptions/BlankFieldDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.BlankFieldExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class BlankFieldDeadlineException extends BlankFieldException{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public BlankFieldDeadlineException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"     ☹ OOPS!!! The description or date of a deadline cannot be empty.\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/BlankFieldExceptions/BlankFieldEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.BlankFieldExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class BlankFieldEventException extends BlankFieldException {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public BlankFieldEventException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"     ☹ OOPS!!! The description, start date or end date of a event cannot be empty.\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/BlankFieldExceptions/BlankFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.BlankFieldExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"public class BlankFieldException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"    public BlankFieldException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/BlankFieldExceptions/BlankFieldTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.BlankFieldExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class BlankFieldTodoException extends BlankFieldException{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public BlankFieldTodoException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"     ☹ OOPS!!! The description of a todo cannot be empty.\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/DatabaseExceptions/DatabaseNotLoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.DatabaseExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"public class DatabaseNotLoadingException extends DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    public DatabaseNotLoadingException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"                \"Oh dear, it seems something went wrong with the Database.\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"                \"Creating an empty one for now\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":13}},{"path":"src/main/java/duke/exception/DatabaseExceptions/DatabaseNotUpdatingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.DatabaseExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"public class DatabaseNotUpdatingException extends DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    public DatabaseNotUpdatingException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"                \"Oh dear, it seems something went wrong with the Database.\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"                \"Try updating it again\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"    public DukeException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/IncludeExceptions/IncludeByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.IncludeExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class IncludeByException extends IncludeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public IncludeByException () {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"     Error! Did you forget to include the \\\"/by\\\" in your command?\"  + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/IncludeExceptions/IncludeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.IncludeExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"public class IncludeException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"    public IncludeException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/IncludeExceptions/IncludeToAndFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception.IncludeExceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class IncludeToAndFromException extends IncludeException{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public IncludeToAndFromException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"     Error! Did you forget to include the \\\"/from\\\" and \\\"/to\\\" in your command?\"  + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":9}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"I can\u0027t seem to understand that date...\" + \"\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"                \"Can you use DD-MM-YYYY HH:MM if possible?\" + \"\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"igezt":12}},{"path":"src/main/java/duke/exception/TaskNumberNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class TaskNumberNotFoundException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public TaskNumberNotFoundException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(\"\\n\" + \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"                \"Either there is no task with that number or you didn\u0027t format your command correctly!\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"                \"Use \\\"mark N\\\", \\\"unmark N\\\" or \\\"delete N\\\" where N is your task number.\" + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/duke/exception/UnknownCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"public class UnknownCommandError extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"    public UnknownCommandError(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import duke.commands.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldDeadlineException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldEventException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import duke.exception.BlankFieldExceptions.BlankFieldTodoException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import duke.exception.UnknownCommandError;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private static final String FRAME \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public Parser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public Command parse(String command, int lengthOfList) throws BlankFieldEventException, BlankFieldDeadlineException, BlankFieldTodoException, TaskNumberNotFoundException, UnknownCommandError {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        } else if (Objects.equals(command, \"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"            throw new BlankFieldEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        String keyWord \u003d words[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        String commandBody \u003d words[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        switch (keyWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"                if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"            if (commandBody.trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"                throw new BlankFieldTodoException();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"            return new AddToDoCommand(commandBody);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"            if (words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"                throw new BlankFieldDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"            return new AddDeadlineCommand(commandBody);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"            if (words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"                throw new BlankFieldEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"            return new AddEventCommand(commandBody);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"                if (taskNumber \u003e lengthOfList || taskNumber \u003c\u003d 0 || words[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"                    throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"                return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"                throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        throw new UnknownCommandError(\"\\n\" + FRAME + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"                FRAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":101}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"import DukeBot.Types;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    private static final String typeToString \u003d \"D\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public Deadline(String task, String deadline) throws DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.type \u003d Types.DEADLINE;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    public Deadline(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        this.completed \u003d Objects.equals(data[1], \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.deadline \u003d LocalDateTime.parse(data[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public String status() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        String status \u003d this.completed ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        return \"[\" + typeToString + \"]\" + status + this.details + \" (by: \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"                this.deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"                this.deadline.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e data() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        data.add(typeToString);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        data.add(this.completed ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        data.add(this.details);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        data.add(this.deadline.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import DukeBot.Types;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    private static final String typeToString \u003d \"E\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public Event(String task, String startDateTime, String endDateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.type \u003d Types.EVENT;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        this.startDateTime \u003d LocalDateTime.parse(startDateTime, FORMATTER);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        this.endDateTime \u003d LocalDateTime.parse(endDateTime, FORMATTER);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public Event(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        this.completed \u003d Objects.equals(data[1], \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        this.startDateTime \u003d LocalDateTime.parse(data[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        this.endDateTime \u003d LocalDateTime.parse(data[4]);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    public String status() {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        String status \u003d this.completed ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        return \"[\" + typeToString + \"]\" + status + this.details +","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                \" (from: \" + this.startDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                this.startDateTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\" + \" to: \" +","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                this.endDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)) + \" [\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                this.endDateTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \"]\" + \")\" + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e data() {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        data.add(typeToString);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        data.add(this.completed ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        data.add(this.details);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        data.add(this.startDateTime.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        data.add(this.endDateTime.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import DukeBot.Types;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    public boolean completed;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public String details;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    public Types type;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.details \u003d task;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public abstract String status();","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public void complete() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public void incomplete() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    public abstract ArrayList\u003cString\u003e data();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"igezt":30}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import DukeBot.Types;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    private static final String typeToString \u003d \"T\";","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.type \u003d Types.TODO;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public ToDo(String[] data) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        super(data[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        this.completed \u003d Objects.equals(data[1], \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        this.details \u003d data[2];","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    public String status() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        String status \u003d this.completed ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        return \"[\" + typeToString + \"]\" + status + \" \" + this.details;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cString\u003e data() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        data.add(typeToString);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        data.add(this.completed ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        data.add(this.details);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        return data;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":37}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import duke.exception.TaskNumberNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public int length() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public Task getTask(int taskNumber) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"            return this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public void deleteTask(int taskNumber) throws TaskNumberNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"            this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"            throw new TaskNumberNotFoundException();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":49}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package duke.ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    Scanner ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    String response;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        this.ui \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public String nextCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        return this.ui.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public boolean hasNextCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        return this.ui.hasNextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    public void response(String reply) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        this.response \u003d reply;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    public void showResponse() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        System.out.println(this.response);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"igezt":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"list","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"igezt":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"igezt":1,"-":37}}]
