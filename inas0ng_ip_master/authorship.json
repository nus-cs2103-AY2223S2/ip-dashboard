[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"plugins {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"checkstyle {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"repositories {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"dependencies {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"test {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    testLogging {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        showExceptions true","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        showCauses true","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"application {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"shadowJar {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"run{","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":61}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"@rem","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"echo.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"echo.","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"goto fail","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"echo.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"echo.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"goto fail","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":":init","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":":win9xME_args","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"set _SKIP\u003d2","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":":win9xME_args_slurp","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":":execute","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":":end","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":":fail","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"exit /b 1","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":":mainEnd","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":":omega","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" * Represents a Deadline task. A Deadline task has a description,","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" * a \u0027by\u0027 timeframe, and can be marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    protected String by;","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    protected Optional\u003cLocalTime\u003e byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Deadline task, marked as undone.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"     * @param description Deadline task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"     * @param by Deadline date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d by.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        this.byDate \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"            this.byTime \u003d Optional.of(LocalTime.parse(split[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"            this.byTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Deadline task with boolean specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"     * @param description Deadline task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"     * @param bool Indicates whether task is marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"     * @param by Deadline date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"    public Deadline(String description, boolean bool, String by) {","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"        super(description, bool);","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d by.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        this.byDate \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"            this.byTime \u003d Optional.of(LocalTime.parse(split[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"            this.byTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"     * Marks a Deadline task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"     * @return Deadline task marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"        return new Deadline(description, true, by);","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"     * Unmarks a Deadline task from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"     * @return Deadline task unmarked from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"    public Deadline unmarkAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"     * Returns data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"     * @return Data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"    public String getDataToSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"        return \"D / \" + getStatusNum() + \" / \" + getDesc() + \" / \" + by;","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"        if (byTime.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"                    + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"                    + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"                    + byTime.get().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"inas0ng":94}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":" * Represents Duke itself, the Chat bot.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"     * @param filePath File path to store/retrieve previous task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"     * Saves the current TaskList into a specified file.","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"     * @param taskList List of Tasks to be saved.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"     * @throws IOException If specified file does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    public void saveTaskList(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        FileWriter fw \u003d new FileWriter(storage.getFilePath());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        for (Task a : taskList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"            fw.write(a.getDataToSave() + System.lineSeparator());","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"     * Duke takes in user input and addresses it accordingly.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"            String command \u003d parser.getCommand(userInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"            int index;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"            switch (command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"                    index \u003d Integer.parseInt(parser.getCommandDetails(userInput)) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.set(index, tasks.get(index).markAsDone());","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"nice! i\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"                            + tasks.get(index));","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls specify an existing task number in the task list!\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"                            + \"use the format: mark [task number]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"                    index \u003d Integer.parseInt(parser.getCommandDetails(userInput)) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.set(index, tasks.get(index).unmarkAsDone());","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"ok, i\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"                            + tasks.get(index));","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls specify an existing task number in the task list!\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"                            + \"use the format: unmark [task number]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"                ui.showBye();","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"                System.exit(0);","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"            case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"                System.out.println(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"                    Todo newTodo \u003d new Todo(parser.getCommandDetails(userInput));","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.add(newTodo);","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"i\u0027ve added this task:\\n\" + newTodo);","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"                    if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have 1 task in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"                } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls add a description for this task!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"                    String deadlineStr \u003d parser.getDeadline(userInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"                    String[] split \u003d deadlineStr.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(split[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"                    Optional\u003cLocalTime\u003e deadlineTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"                    if (split.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"                        // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"                        deadlineTime \u003d Optional.of(LocalTime.parse(split[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"                        deadlineTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"                    Deadline newDeadline \u003d new Deadline(parser.getDeadlineDesc(userInput),","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"                            parser.getDeadline(userInput));","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.add(newDeadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"i\u0027ve added this task with deadline:\\n\" + newDeadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"                    if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have 1 task in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"                } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls specify the description and deadline for this task!\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"                            + \"use the format: deadline [description] /by yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"            case \"event\":","lastModifiedDate":"2023-01-22"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-15"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"                    String eventFromStr \u003d parser.getEventFrom(userInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"                    String[] splitFrom \u003d eventFromStr.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"                    LocalDate eventFromDate \u003d LocalDate.parse(splitFrom[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"                    Optional\u003cLocalTime\u003e eventFromTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"                    if (splitFrom.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"                        // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"                        eventFromTime \u003d Optional.of(LocalTime.parse(splitFrom[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"                        eventFromTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"                    String eventToStr \u003d parser.getEventTo(userInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"                    String[] splitTo \u003d eventToStr.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"                    LocalDate eventToDate \u003d LocalDate.parse(splitTo[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"                    Optional\u003cLocalTime\u003e eventToTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"                    if (splitTo.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"                        // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"                        eventToTime \u003d Optional.of(LocalTime.parse(splitTo[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"                        eventToTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":171,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"                    Event newEvent \u003d new Event(parser.getEventDesc(userInput),","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"                            parser.getEventFrom(userInput), parser.getEventTo(userInput));","lastModifiedDate":"2023-01-22"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.add(newEvent);","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"i\u0027ve added this event:\\n\" + newEvent);","lastModifiedDate":"2023-01-22"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"                    if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have 1 task in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"                } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls specify the description and duration for this event!\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"                            + \"use the format: event [description] /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":190,"author":{"gitId":"inas0ng"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-22"},{"lineNumber":191,"author":{"gitId":"inas0ng"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":192,"author":{"gitId":"inas0ng"},"content":"                    index \u003d Integer.parseInt(parser.getCommandDetails(userInput)) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":193,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":194,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"i\u0027ve removed this task:\\n\" + tasks.get(index));","lastModifiedDate":"2023-01-22"},{"lineNumber":195,"author":{"gitId":"inas0ng"},"content":"                    tasks \u003d tasks.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":196,"author":{"gitId":"inas0ng"},"content":"                    if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":197,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have 1 task in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":198,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":199,"author":{"gitId":"inas0ng"},"content":"                        System.out.println(\"you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":200,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":201,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":202,"author":{"gitId":"inas0ng"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":203,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":204,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(new DukeException(\"pls specify an existing task number in the task list!\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":205,"author":{"gitId":"inas0ng"},"content":"                            + \"use the format: delete [task number]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":206,"author":{"gitId":"inas0ng"},"content":"                    ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":207,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":208,"author":{"gitId":"inas0ng"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":209,"author":{"gitId":"inas0ng"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":210,"author":{"gitId":"inas0ng"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":211,"author":{"gitId":"inas0ng"},"content":"                System.out.println(new DukeException(\"invalid command\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":212,"author":{"gitId":"inas0ng"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":213,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":214,"author":{"gitId":"inas0ng"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":215,"author":{"gitId":"inas0ng"},"content":"                saveTaskList(tasks.getTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":216,"author":{"gitId":"inas0ng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":217,"author":{"gitId":"inas0ng"},"content":"                System.out.println(\"Something went wrong!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":218,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":219,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":222,"author":{"gitId":"inas0ng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":223,"author":{"gitId":"inas0ng"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-22"},{"lineNumber":224,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"inas0ng":222,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Represents exceptions specific to Duke.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"inas0ng":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" * Represents an Event task. An Event task has a description,","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" * a \u0027from\u0027 and \u0027to\u0027 timeframe, and can be marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    protected String from;","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    protected String to;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    protected Optional\u003cLocalTime\u003e fromTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    protected Optional\u003cLocalTime\u003e toTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Event task, marked as undone.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"     * @param description Event task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     * @param from Event start date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"     * @param to Event end date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        String[] splitFrom \u003d from.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        this.fromDate \u003d LocalDate.parse(splitFrom[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"        if (splitFrom.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"            this.fromTime \u003d Optional.of(LocalTime.parse(splitFrom[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"            this.fromTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        String[] splitTo \u003d to.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        this.toDate \u003d LocalDate.parse(splitTo[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        if (splitTo.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"            this.toTime \u003d Optional.of(LocalTime.parse(splitTo[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"            this.toTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Event task with boolean specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"     * @param description Event task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"     * @param bool Indicates whether task is marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"     * @param from Event start date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"     * @param to Event end date/time.","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"    public Event(String description, boolean bool, String from, String to) {","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"        super(description, bool);","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"        String[] splitFrom \u003d from.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"        this.fromDate \u003d LocalDate.parse(splitFrom[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        if (splitFrom.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"            this.fromTime \u003d Optional.of(LocalTime.parse(splitFrom[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"            this.fromTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        String[] splitTo \u003d to.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"        this.toDate \u003d LocalDate.parse(splitTo[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        if (splitTo.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"            // Time is specified by user","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"            this.toTime \u003d Optional.of(LocalTime.parse(splitTo[1], formatter));","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"            this.toTime \u003d Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"     * Marks an Event task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"     * @return Event task marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"    public Event markAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"        return new Event(description, true, from, to);","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"     * Unmarks an Event task from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"     * @return Event task unmarked from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"    public Event unmarkAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"     * Returns data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"     * @return Data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"    public String getDataToSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"        return \"E / \" + getStatusNum() + \" / \" + getDesc() + \" / \" + from + \" / \" + to;","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"        if (fromTime.isEmpty() \u0026\u0026 toTime.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"                    + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"                    + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"        } else if (fromTime.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"                    + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"                    + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"                    + toTime.get().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"        } else if (toTime.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"                    + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"                    + fromTime.get().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"                    + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"                    + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"                    + fromTime.get().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"                    + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"                    + toTime.get().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"inas0ng":132}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"     * Returns the command (e.g. \"bye\", \"mark\", \"event\", etc.).","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"     * @return Command.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"    public String getCommand(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d str.split(\" \", 2);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"        return split[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"     * Returns details (e.g. the index for a \"mark\" command, or the description for an \"event\" command).","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"     * @return Command details.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    public String getCommandDetails(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d str.split(\" \", 2);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"        return split[1];","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"     * Returns description of a Deadline task.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"     * @return Description of a deadline task.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    public String getDeadlineDesc(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d getCommandDetails(str).split(\" /by \");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        return split[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"     * Returns deadline of a Deadline task.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"     * @return Deadline of a deadline task.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"    public String getDeadline(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d getCommandDetails(str).split(\" /by \");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        return split[1];","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"     * Returns description of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"     * @return Description of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"    public String getEventDesc(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d getCommandDetails(str).split(\" /from \");","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"        return split[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"     * Returns \"from\" timeframe of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"     * @return \"From\" timeframe of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"    public String getEventFrom(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d getCommandDetails(str).split(\" /from \");","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"        return split[1].split(\" /to \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"     * Returns \"to\" timeframe of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"     * @param str User input.","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"     * @return \"To\" timeframe of an Event task.","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"    public String getEventTo(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"        String[] split \u003d getCommandDetails(str).split(\" /from \");","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"        return split[1].split(\" /to \")[1];","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":76}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":" * Contains the filepath where previous data is stored.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":" * Allows for retrieval of the previously saved TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"     * Returns the filepath.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     * @return Filepath.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        return filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"     * Checks if the necessary files exist and creates them otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"     * Loads up previously saved TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"     * @return A List of Tasks to recreate the previously saved TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"        File storageTasks \u003d new File(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        if (!storageTasks.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"                File makeDataDir \u003d new File(storageTasks.getParent());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"                if (!makeDataDir.exists() \u0026\u0026 !makeDataDir.mkdirs()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"Error in creating directory!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"                if (!storageTasks.createNewFile()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"Error in creating file!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"                System.out.println(\"Something went wrong!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"            Scanner s \u003d new Scanner(storageTasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"                String[] taskDetails \u003d str.split(\" / \");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"                case \"T\":","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Todo(taskDetails[2], true));","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Todo(taskDetails[2], false));","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"                case \"D\":","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Deadline(taskDetails[2], true, taskDetails[3]));","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Deadline(taskDetails[2], false, taskDetails[3]));","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"                case \"E\":","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Event(taskDetails[2], true, taskDetails[3], taskDetails[4]));","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"                        tasks.add(new Event(taskDetails[2], false, taskDetails[3], taskDetails[4]));","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"                default:","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"                    System.out.println(\"Something went wrong!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"            System.out.println(\"Something went wrong!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"        return tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":86}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Represents a task. Tasks can be in the form of a Todo, a Deadline, or an Event.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    protected String description;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Task, marked as undone.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"     * Constructor for Task with boolean specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"     * @param bool Indicates whether task is marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    public Task(String description, Boolean bool) {","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"     * Returns the symbol indicating whether a task is done.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"     * @return \"X\" if task is done, \" \" otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"     * Returns the number indicating whether a task is done.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"     * @return 1 if task is done, 0 otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"    public int getStatusNum() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"     * @return Task marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"    public Task markAsDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"        return new Task(description, true);","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"     * Unmarks a task from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"     * @return Task unmarked from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"    public Task unmarkAsDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"        return new Task(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"     * Returns task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"     * @return Task description.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"     * Returns data for storage purposes, should be called in subclasses.","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"     * @return Data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"    public String getDataToSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"        return \"task\";","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"inas0ng":81}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":" * Represents a List of Tasks. Uses basic methods from ArrayList.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    public TaskList() { this.tasks \u003d new ArrayList\u003c\u003e(); }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"     * Returns the List of Tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"     * @return List of Tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"     * @return TaskList with added task.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"    public TaskList add(Task newTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"        TaskList newList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        newList.tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        return newList;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"     * Removes a Task from the TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"     * @return TaskList with removed task.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"    public TaskList remove(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"        TaskList newList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        newList.tasks.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        return newList;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"     * Replaces a Task in the TaskList with another Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"     * @param index The index of the task to be replaced.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"     * @param newTask The new task that replaces the existing task.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"     * @return TaskList with replaced task.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"    public TaskList set(int index, Task newTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        TaskList newList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        newList.tasks.set(index, newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"        return newList;","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"     * Returns the Task at the index.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"     * @return Task at the index.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"     * Returns size of TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"     * @return Size of TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"        int num \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"        for (Task a : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"            str.append(num).append(\". \").append(a);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"            if (num !\u003d tasks.size()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"            num++;","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"            str.append(\"there are no items in your task list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"        return str.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":93}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Represents a Todo task. A Todo task has a description and can be marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"    public Todo(String description, boolean bool) {","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"        super(description, bool);","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"     * Marks a Todo task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"     * @return Todo task marked as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    public Todo markAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"        return new Todo(description, true);","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"     * Unmarks a Todo task from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"     * @return Todo task unmarked from being done.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    public Todo unmarkAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        return new Todo(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"     * Returns data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"     * @return Data for storage purposes.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"    public String getDataToSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        return \"T / \" + getStatusNum() + \" / \" + getDesc();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"inas0ng":46}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"        System.out.println(\"---\\nhi i\u0027m Duke! what\u0027s up?\\n---\");","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"     * Prints the divider line (\"---\").","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"        System.out.println(\"---\"); // show the divider line (\"---\")","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"     * Prints the bye message.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    public void showBye() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        System.out.println(\"---\\nbye! see u soon! :-)\\n---\");","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"inas0ng":27}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    Deadline deadlineTask \u003d new Deadline(\"homework\", \"2023-10-10 2359\");","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"    public void saveDataFormatTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"        String expectedFormat \u003d \"D / 0 / homework / 2023-10-10 2359\";","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedFormat, deadlineTask.getDataToSave());","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"        deadlineTask \u003d deadlineTask.markAsDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"        assertEquals(\"[D][X] homework (by: Oct 10 2023 23:59)\", deadlineTask.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"inas0ng":20}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"    public void addTasksTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"        Task todoTask \u003d new Todo(\"read book\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"        Deadline deadlineTask \u003d new Deadline(\"homework\", \"2023-10-10 2359\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"        Event eventTask \u003d new Event(\"birthday party\", \"2023-03-11 1600\", \"2023-03-11 2100\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"        taskList \u003d taskList.add(todoTask).add(deadlineTask).add(eventTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"        String expectedTaskList \u003d \"1. [T][ ] read book\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"                + \"2. [D][ ] homework (by: Oct 10 2023 23:59)\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"                + \"3. [E][ ] birthday party (from: Mar 11 2023 16:00 to: Mar 11 2023 21:00)\";","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedTaskList, taskList.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    public void deleteTasksTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        Task todoTask \u003d new Todo(\"read book\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"        Deadline deadlineTask \u003d new Deadline(\"homework\", \"2023-10-10 2359\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        Event eventTask \u003d new Event(\"birthday party\", \"2023-03-11 1600\", \"2023-03-11 2100\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        taskList \u003d taskList.add(todoTask).add(deadlineTask).add(eventTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        taskList \u003d taskList.remove(0).remove(0);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"        String expectedTaskList \u003d \"1. [E][ ] birthday party (from: Mar 11 2023 16:00 to: Mar 11 2023 21:00)\";","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedTaskList, taskList.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        Task todoTask \u003d new Todo(\"read book\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"        todoTask \u003d todoTask.markAsDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        taskList \u003d taskList.add(todoTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        String expectedTaskList \u003d \"1. [T][X] read book\";","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedTaskList, taskList.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"inas0ng":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"todo read book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"deadline return book /by 2023-06-06","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"event project meeting /from 2023-08-06 1400 /to 2023-08-06 1600","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"hi","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"delete 3","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"delete 1","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"delete 1","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"inas0ng":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"inas0ng":1}}]
