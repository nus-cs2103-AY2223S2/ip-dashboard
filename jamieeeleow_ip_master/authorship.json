[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"    mainClassName \u003d \"leo.ui.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"    archiveBaseName \u003d \"leo\"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jamieeeleow":22,"-":39}},{"path":"data/leo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"[D][ ] project | 29102023 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"[E][ ] meeting | 29012023 20:00 | 29012023 22:00","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"[T][X] run","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"[T][ ] eat acai","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"[T][ ] eat fruits","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"[T][X] sleeping","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"[D][ ] presentation | 10022023 17:00","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"[D][ ] project | 20022023 12:00","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"[D][ ] presentation | 20022023 13:00","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"[E][ ] birthday | 20022023 12:00 | 23022023 01:00","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jamieeeleow":10}},{"path":"src/main/java/leo/Leo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.command.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.command.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":" * Leo class to run the main task application.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"public class Leo {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public Leo(String filePath) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"        run();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"            Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"            parser \u003d new Parser(storage);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    private void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        ui.greetings();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     * Gets the response from Duke","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"     * @param input User input","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"     * @return Response from Duke","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"            Command command \u003d this.parser.readCommand(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"            return command.execute();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jamieeeleow":46}},{"path":"src/main/java/leo/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.EmptyDeadlineException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.EmptyDescriptionException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncompleteDurationException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.InvalidInputException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.DeadlineTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.EventTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.ToDoTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":" * Represents an addition command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create an AddCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    public AddCommand(Storage s, String task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        super(s, task);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"            if (command.contains(\"todo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"                return storage.addTask(new ToDoTask(command.substring(5)));","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"            } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"                    String t \u003d command.substring(9);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"                    String[] taskAndDeadline \u003d t.split(\"/\");","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"                    String deadlineTask \u003d taskAndDeadline[0].trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"                    String time \u003d taskAndDeadline[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"                    LocalDateTime dateTime \u003d convertString(time);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"                    Task deadline \u003d new DeadlineTask(deadlineTask, dateTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"                    return storage.addTask(deadline);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"                    throw new EmptyDeadlineException();","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"            } else if (command.contains(\"event\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"                    String t \u003d command.substring(6);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"                    String[] eventAndDuration \u003d t.split(\"/\");","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"                    String eventTask \u003d eventAndDuration[0].trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"                    String from \u003d eventAndDuration[1].trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"                    String to \u003d eventAndDuration[2].trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"                    LocalDateTime dateFrom \u003d convertString(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"                    LocalDateTime dateTo \u003d convertString(to);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"                    Task event \u003d new EventTask(eventTask, dateFrom, dateTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"                    return storage.addTask(event);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"                    throw new IncompleteDurationException();","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"            } else if (command.contains(\"hello\") || command.contains(\"hi\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"                return \"Well hello to you too! :-D\";","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jamieeeleow"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"jamieeeleow"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jamieeeleow"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"jamieeeleow"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jamieeeleow"},"content":"     * Converts String object to LocalDateTime.","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jamieeeleow"},"content":"     * @param str String representation of date and time.","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jamieeeleow"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jamieeeleow"},"content":"    private LocalDateTime convertString(String str) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jamieeeleow"},"content":"        return LocalDateTime.parse(str, formatter);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":83}},{"path":"src/main/java/leo/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" * Represents a command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"public class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"    public final Storage storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    public final String command;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create a Command object.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"     * @param command Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    public Command(Storage s, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        this.storage \u003d s;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        return \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"     * Updates and write tasks to data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     * Prints farewell message and exits program.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"    public String exit() {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"            storage.writeToFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"            return \"Good bye, have a nice day ahead!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"     * Returns index of a task in the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"     * @return Index of task.","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"    public int extractTaskNum() {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"        String num \u003d command.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"        return Integer.parseInt(num);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":51}},{"path":"src/main/java/leo/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" * Represents a deletion command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create a DeleteCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     * @param c Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public DeleteCommand(Storage s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        super(s, c);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        int num \u003d extractTaskNum();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        assert storage.getTask(num) !\u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        return storage.delete(num);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":28}},{"path":"src/main/java/leo/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exit command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create an ExitCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     * @param c Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    public ExitCommand(Storage s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"        super(s, c);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        return exit();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":25}},{"path":"src/main/java/leo/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoKeywordException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoTaskFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":" * Represents a find command input by user.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create FindCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"     * @param storage Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    public FindCommand(Storage storage, String task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        super(storage, task);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"     * Returns a TaskList object containing Tasks that matches the keyword input by user.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     * @param storage Storage containing data to be searched.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Task containing keyword to use for search.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     * @return TaskList containing Tasks that matches keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoKeywordException If there is no keyword input.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoTaskFoundException If there are no matching tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    public TaskList findTasks(Storage storage, String task) throws NoKeywordException, NoTaskFoundException {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        List\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        int dataLength \u003d storage.getDataLength();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"        if (dataLength \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoTaskFoundException();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"            String keyword \u003d task.substring(5);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"            for (int i \u003d 0; i \u003c dataLength; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"                Task t \u003d storage.getTask(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"                if (t.getTask().contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"                    foundList.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"            return new TaskList(foundList);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoKeywordException();","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"        TaskList taskList \u003d findTasks(storage, command);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"        return \"Here\u0027s the matching task(s):\" + taskList.display();","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jamieeeleow":65}},{"path":"src/main/java/leo/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":" * Represents a list command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create ListCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     * @param c Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    public ListCommand(Storage s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"        super(s, c);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        return storage.showList();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":25}},{"path":"src/main/java/leo/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" * Represents a mark command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create a MarkCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     * @param c Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public MarkCommand(Storage s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        super(s, c);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        int num \u003d extractTaskNum();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        assert storage.getTask(num) !\u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        return storage.mark(num);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":28}},{"path":"src/main/java/leo/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":" * Represents a Parser make sense of commands from user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    private final Storage s;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create a Parser object.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store Tasks from commands by user.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    public Parser(Storage s) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"     * Reads user inputs line by line.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"     * @return Command input by user.","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    public Command readCommand(String input) throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        if (Objects.equals(input, \"list\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"            return new ListCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"            return new MarkCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"            return new UnmarkCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"            return new DeleteCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.contains(\"find\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"            return new FindCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.contains(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"            return new ExitCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"        } else if (input.contains(\"view\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"            return new ViewCommand(s, input);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"            return new AddCommand(s, input);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":48}},{"path":"src/main/java/leo/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" * Represents an unmark command input by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for creating an UnmarkCommand object.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     * @param s Storage to store the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     * @param c Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public UnmarkCommand(Storage s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        super(s, c);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        int num \u003d extractTaskNum();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        assert storage.getTask(num) !\u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        return storage.unmark(num);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":28}},{"path":"src/main/java/leo/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoTaskFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import java.util.List;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    public ViewCommand(Storage s, String c) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        super(s,c);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    public String execute() throws LeoException {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        String date \u003d command.substring(5);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        LocalDate day \u003d convertString(date);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        TaskList view \u003d viewTask(storage, day);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        String response \u003d \"Here is what you have on \" + convertToString(day) + \":\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        return response + view.display();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    private LocalDate convertString(String str) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy\");","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        return LocalDate.parse(str, formatter);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    public TaskList viewTask(Storage s, LocalDate d) throws NoTaskFoundException {","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"        List\u003cTask\u003e viewList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        int dataLength \u003d s.getDataLength();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        if (dataLength \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoTaskFoundException();","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        for (int i \u003d 0; i \u003c dataLength; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"            Task t \u003d s.getTask(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"            if (t.getType() \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"                DeadlineTask task \u003d (DeadlineTask) t;","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"                if (task.sameDay(d)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"                    viewList.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"            } else if (t.getType() \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"                EventTask task \u003d (EventTask) t;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"                if (task.withinDate(d)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"                    viewList.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"        return new TaskList(viewList);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"    public String convertToString(LocalDate d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, MMM dd\");","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"        return formatter.format(d);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jamieeeleow":61}},{"path":"src/main/java/leo/leoexception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when no deadline is indicated in a Deadline Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class EmptyDeadlineException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"Uh oh! There is no deadline indicated :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when no description is given in a Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class EmptyDescriptionException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"Uh oh! Description of task is empty :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/IncompleteDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when duration is not complete in an Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class IncompleteDurationException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public IncompleteDurationException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"Uh oh! The duration of the event is incomplete :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":12}},{"path":"src/main/java/leo/leoexception/IncorrectMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when a marked Task is set to be marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class IncorrectMarkException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public IncorrectMarkException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"This task was already marked previously.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/IncorrectUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when an unmarked Task is set to be unmark.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class IncorrectUnmarkException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public IncorrectUnmarkException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"This task has not been marked.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":12}},{"path":"src/main/java/leo/leoexception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when input is not a supported feature.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class InvalidInputException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"Ohno! I do not know what you mean...\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/LeoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception specific to features in Leo.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class LeoException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public LeoException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/NoKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when no keyword input for search to happen.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class NoKeywordException extends LeoException {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public NoKeywordException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"Oops! I do not know what I should be searching for...\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/NoStorageFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when no data file containing the list of Tasks is found.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class NoStorageFileException extends LeoException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public NoStorageFileException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"No file found!! \u003e:-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/leoexception/NoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.leoexception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents an exception when no Tasks in found.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public class NoTaskFoundException extends LeoException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    public NoTaskFoundException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"        super(\"There are no matching tasks!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":11}},{"path":"src/main/java/leo/storage/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" * Represents a Deadline Task. A \u003ccode\u003eDeadlineTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":" * a Task containing the String description and LocalDateTime deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create a DeadlineTask object.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    public DeadlineTask(String task, LocalDateTime by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        setType(TaskType.DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"     * Returns type, status, description and deadline of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of DeadlineTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        return typeAndStatus() + getTask() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the String representation of Task that is to be saved in the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of DeadlineTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"        String strDeadline \u003d formatter.format(this.deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"        return typeAndStatus() + getTask() + \" | \" + strDeadline + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"     * Returns formatted deadline obtained from LocalDateTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"    private String getDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, MMM dd, hh:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"        return formatter.format(this.deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"    public boolean sameDay(LocalDate day) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"        LocalDate deadlineDate \u003d this.deadline.toLocalDate();","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"        return deadlineDate.equals(day);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":63}},{"path":"src/main/java/leo/storage/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":" * Represents a Event Task. A \u003ccode\u003eEventTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":" * a Task containing the String description and duration consisting of LocalDateTime from and LocalDateTime to.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor to create an EventTask object.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"     * @param from Start date of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"     * @param to End date of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    public EventTask(String task, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"        setType(TaskType.EVENT);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     * Returns type, status, description and deadline of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of EventTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        return typeAndStatus() + getTask() + \" (\" + duration() + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"     * Returns formatted duration of EventTask obtained from LocalDateTime.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of the duration.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"    private String duration() {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatterOne \u003d DateTimeFormatter.ofPattern(\"EEE, MMM dd, hh:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatterTwo \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"        if (sameDate(this.from, this.to)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"            return formatterOne.format(this.from) + \" - \" + formatterTwo.format(this.to);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"        return formatterOne.format(this.from) + \" - \" + formatterOne.format(this.to);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"     * Checks whether both LocalDateTime provided are on the same day regardless of time.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"     * @param dtOne First LocalDateTime to be compared.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"     * @param dtTwo Second LocalDateTime to be compared.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"     * @return Both LocalDateTime are on the same day.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"    private boolean sameDate(LocalDateTime dtOne, LocalDateTime dtTwo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"        boolean sameYear \u003d dtOne.getYear() \u003d\u003d dtTwo.getYear();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"        return sameYear \u0026\u0026 dtOne.getDayOfYear() \u003d\u003d dtTwo.getDayOfYear();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the String representation of Task that is to be saved in the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of EventTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jamieeeleow"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"jamieeeleow"},"content":"        String strFrom \u003d formatter.format(this.from);","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"jamieeeleow"},"content":"        String strTo \u003d formatter.format(this.to);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jamieeeleow"},"content":"        return typeAndStatus() + getTask() + \" | \" + strFrom + \" | \" + strTo + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jamieeeleow"},"content":"    public boolean withinDate(LocalDate day) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jamieeeleow"},"content":"        LocalDate start \u003d this.from.toLocalDate();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jamieeeleow"},"content":"        LocalDate end \u003d this.to.toLocalDate();","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jamieeeleow"},"content":"        return !(day.isBefore(start) || day.isAfter(end));","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":84}},{"path":"src/main/java/leo/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"import java.util.List;","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectMarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.LeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoStorageFileException;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoTaskFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":" * Represents a storage place containing a list Tasks. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":" * a database consisting of the list of Tasks, the File in which the data is stored in and the file path.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"public class Storage {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    private final TaskList data;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    private final String dataFilePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    private final File taskFile;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for creating a Storage object.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     * @param filePath The path where the Tasks are stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoStorageFileException If file cannot be found.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"     * @throws IncorrectMarkException If Task has already been marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    public Storage(String filePath) throws NoStorageFileException, IncorrectMarkException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        String root \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        this.dataFilePath \u003d Paths.get(root, filePath).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"        this.taskFile \u003d new File(this.dataFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"        this.data \u003d new TaskList(loadData());","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"     * Returns a list of tasks stored in the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"     * @throws IncorrectMarkException If a completed task is set to be completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoStorageFileException If file is not found.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"    private List\u003cTask\u003e loadData() throws IncorrectMarkException, NoStorageFileException {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"            return taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"            Scanner scanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"                String task \u003d scanner.nextLine().strip();","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"                char taskType \u003d task.charAt(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"                char completion \u003d task.charAt(4);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"                String description \u003d task.substring(7).strip();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"jamieeeleow"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"jamieeeleow"},"content":"                    if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"jamieeeleow"},"content":"                        Task t \u003d new ToDoTask(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jamieeeleow"},"content":"                        if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jamieeeleow"},"content":"                            t.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jamieeeleow"},"content":"                        }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jamieeeleow"},"content":"                        taskList.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jamieeeleow"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"jamieeeleow"},"content":"                        String[] temp \u003d description.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jamieeeleow"},"content":"                        String taskDescription \u003d temp[0].strip();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jamieeeleow"},"content":"                        String time \u003d temp[1].strip();","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jamieeeleow"},"content":"                        LocalDateTime dt \u003d convertString(time);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"jamieeeleow"},"content":"                        if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jamieeeleow"},"content":"                            Task t \u003d new DeadlineTask(taskDescription, dt);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jamieeeleow"},"content":"                            if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jamieeeleow"},"content":"                                t.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jamieeeleow"},"content":"                            }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jamieeeleow"},"content":"                            taskList.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jamieeeleow"},"content":"                        } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jamieeeleow"},"content":"                            String to \u003d temp[2].strip();","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jamieeeleow"},"content":"                            LocalDateTime dtTo \u003d convertString(to);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jamieeeleow"},"content":"                            Task t \u003d new EventTask(taskDescription, dt, dtTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jamieeeleow"},"content":"                            if (completion \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"jamieeeleow"},"content":"                                t.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jamieeeleow"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jamieeeleow"},"content":"                            taskList.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jamieeeleow"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"jamieeeleow"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"jamieeeleow"},"content":"                } catch (LeoException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"jamieeeleow"},"content":"                    throw new IncorrectMarkException();","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"jamieeeleow"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"jamieeeleow"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jamieeeleow"},"content":"            return taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jamieeeleow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoStorageFileException();","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":104,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jamieeeleow"},"content":"     * Adds task into the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"jamieeeleow"},"content":"     * Prints task upon successful addition.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Task to be added into the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"jamieeeleow"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"jamieeeleow"},"content":"        data.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"jamieeeleow"},"content":"        return \"Added \" + task.getTask() + \" to your tasks :-) !\";","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"jamieeeleow"},"content":"     * Prints the list of tasks stored in the data.","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"jamieeeleow"},"content":"    public String showList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"jamieeeleow"},"content":"        return data.display();","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":122,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"jamieeeleow"},"content":"     * Marks a task in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"jamieeeleow"},"content":"     * Prints error message if task is marked or not in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of task to be marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"jamieeeleow"},"content":"    public String mark(int num) {","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"jamieeeleow"},"content":"            getTask(num - 1).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"jamieeeleow"},"content":"            return \"Good work! You have completed task \" + num + \":\\n\" + getTask(num - 1).toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"jamieeeleow"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":137,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":138,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"jamieeeleow"},"content":"     * Unmarks a task in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"jamieeeleow"},"content":"     * Prints error message if task is not marked or not in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of task to be unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"jamieeeleow"},"content":"    public String unmark(int num) {","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"jamieeeleow"},"content":"            getTask(num - 1).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"jamieeeleow"},"content":"            return \"No worries! I have unmarked task \" + num + \":\\n\" + getTask(num - 1).toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"jamieeeleow"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"jamieeeleow"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"jamieeeleow"},"content":"     * Prints error message if task is not in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of task to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"jamieeeleow"},"content":"    public String delete(int num) {","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"jamieeeleow"},"content":"        Task removed;","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"jamieeeleow"},"content":"            removed \u003d getTask(num - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"jamieeeleow"},"content":"            data.removeTask(num - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"jamieeeleow"},"content":"            assert removed !\u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"jamieeeleow"},"content":"            return \"I have removed task \" + num + \":\\n\" + removed;","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"jamieeeleow"},"content":"        } catch (LeoException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"jamieeeleow"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":170,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":171,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"jamieeeleow"},"content":"     * Returns Task in the list at the index stated.","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of task required.","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"jamieeeleow"},"content":"     * @return Task required.","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoTaskFoundException If task is not in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"jamieeeleow"},"content":"    public Task getTask(int num) throws NoTaskFoundException {","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"jamieeeleow"},"content":"            return data.getTask(num);","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"jamieeeleow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoTaskFoundException();","lastModifiedDate":"2023-02-08"},{"lineNumber":183,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the path of the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of path.","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"jamieeeleow"},"content":"    public String getDataFilePath() {","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"jamieeeleow"},"content":"        return this.dataFilePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the number of tasks in the data list.","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"jamieeeleow"},"content":"     * @return Integer presenting number of tasks in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"jamieeeleow"},"content":"    public int getDataLength() {","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"jamieeeleow"},"content":"        return data.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"jamieeeleow"},"content":"     * Writes the tasks in the list into the data file in hard disk.","lastModifiedDate":"2023-01-27"},{"lineNumber":206,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":207,"author":{"gitId":"jamieeeleow"},"content":"     * @throws NoStorageFileException If file does not exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"jamieeeleow"},"content":"    public void writeToFile() throws NoStorageFileException {","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"jamieeeleow"},"content":"            int len \u003d getDataLength();","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"jamieeeleow"},"content":"            FileWriter fileWriter \u003d new FileWriter(getDataFilePath());","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"jamieeeleow"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"jamieeeleow"},"content":"                fileWriter.write(data.getTask(i).saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":216,"author":{"gitId":"jamieeeleow"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"jamieeeleow"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"jamieeeleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"jamieeeleow"},"content":"            throw new NoStorageFileException();","lastModifiedDate":"2023-02-08"},{"lineNumber":221,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"jamieeeleow"},"content":"     * Converts String object to LocalDateTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"jamieeeleow"},"content":"     * @param str String representation of date and time.","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"jamieeeleow"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"jamieeeleow"},"content":"    private LocalDateTime convertString(String str) {","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"jamieeeleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"jamieeeleow"},"content":"        return LocalDateTime.parse(str, formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jamieeeleow":235}},{"path":"src/main/java/leo/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectMarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectUnmarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import leo.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":" * Represents a Task. A \u003ccode\u003eTask\u003c/code\u003e object contains the String description.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    private final String task;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    private boolean done;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    private TaskType type;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for creating a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the description of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     * @return Description of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        return this.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"     * Returns completion status of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"     * @return Status of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"        return this.done;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"     * Marks Task that is done.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"     * @throws IncorrectMarkException If task is marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"    public void mark() throws IncorrectMarkException {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"        if (this.done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"            throw new IncorrectMarkException();","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"     * Unmarks Task that is not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"     * @throws IncorrectUnmarkException If task is not marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"    public void unmark() throws IncorrectUnmarkException {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"        if (!this.done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jamieeeleow"},"content":"            throw new IncorrectUnmarkException();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jamieeeleow"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the String representation of Task that is to be saved in the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jamieeeleow"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jamieeeleow"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the TaskType of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"jamieeeleow"},"content":"     * @return TaskType of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jamieeeleow"},"content":"    public TaskType getType() {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jamieeeleow"},"content":"        return this.type;","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jamieeeleow"},"content":"     * Set the TaskType of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"jamieeeleow"},"content":"     * @param tt TaskType to be set to the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"jamieeeleow"},"content":"    public void setType(TaskType tt) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"jamieeeleow"},"content":"        this.type \u003d tt;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the TaskType and status of Task in String representation.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of TaskType and status.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jamieeeleow"},"content":"    public String typeAndStatus() {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jamieeeleow"},"content":"        return Ui.type(this) + Ui.completion(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jamieeeleow":106}},{"path":"src/main/java/leo/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.util.List;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for creating a TaskList object containing Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"     * @param tasks The list of tasks to be in the taskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the number of Tasks in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"     * @return Number of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    public int size() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     * Adds Task into the list of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        taskList.add(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"     * Removes Task from the list of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of Task to be removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"    public void removeTask(int num) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"        taskList.remove(num);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"     * Returns Task from the list of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"     * @param num Index of Task to be retrieved.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"     * @return Task at index.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"    public Task getTask(int num) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"        return taskList.get(num);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for displaying the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"    public String display() {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"jamieeeleow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"jamieeeleow"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jamieeeleow"},"content":"            sb.append(i + 1).append(\". \").append(getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jamieeeleow"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":69}},{"path":"src/main/java/leo/storage/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents the type of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":8}},{"path":"src/main/java/leo/storage/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":" * Represents a ToDoTask. A \u003ccode\u003eToDoTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":" * a Task containing the String description.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"     * Constructor for creating a ToDoTask object.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     * @param task Description of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    public ToDoTask(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"        setType(TaskType.TODO);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"     * Returns type, status, description and deadline of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of ToDoTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        return typeAndStatus() + getTask();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"     * Returns the String representation of Task that is to be saved in the data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of ToDoTask.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        return this + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jamieeeleow":38}},{"path":"src/main/java/leo/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"    public static DialogBox getLeoDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"jamieeeleow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"jamieeeleow"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"jamieeeleow"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jamieeeleow":61}},{"path":"src/main/java/leo/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"jamieeeleow":9}},{"path":"src/main/java/leo/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import leo.Leo;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    private final Leo leo \u003d new Leo(\"/data/leo.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLeo(leo);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"            stage.getIcons().add(new Image(\"/images/lion.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"            stage.setTitle(\"Leo\");","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"            stage.isResizable();","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jamieeeleow":39}},{"path":"src/main/java/leo/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"import leo.Leo;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    private Leo leo;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elephant.jpeg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    private final Image leoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lion.jpeg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"    public void setLeo(Leo l) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        leo \u003d l;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"        String response \u003d leo.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"                DialogBox.getLeoDialog(response, leoImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"        if (response.equals(\"Good bye, have a nice day ahead!\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jamieeeleow":56}},{"path":"src/main/java/leo/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":" * Customise the user interface of Leo.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"     * Prints Welcome Logo and greeting messages.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    public String greetings() {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        String helloLogo \u003d \"__   __   ______   __       __        _____ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"                + \"| |  | |  | ____|  | |      | |      /  __  \\\\ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"                + \"| |__| |  | |____  | |      | |      | |  | |\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"                + \"|  __  |  | ____|  | |      | |      | |  | |\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"                + \"| |  | |  | |____  | |____  | |____  | |__| |\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"                + \"|_|  |_|  |______| |______| |______| \\\\_____/\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        return helloLogo + \"Good day, I am Leo!\\n\" + \"How can I assist you today?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"     * Returns String representation of TaskType.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"     * @param t Task to convert TaskType from.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of TaskType.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"    public static String type(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"        switch (t.getType()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"        case TODO:","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"            return \"[T]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"            return \"[D]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        case EVENT:","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"            return \"[E]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"     * Returns String representation of status of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"     * @param t Task to retrieve completion status from.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"     * @return String representation of done status.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"    public static String completion(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"        return (t.isDone() ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jamieeeleow":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"leo.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jamieeeleow":19}},{"path":"src/test/java/leo/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    public void extractTaskNumTest() throws Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"        Storage storage \u003d new Storage(\"ip/data/leo.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"        String str \u003d \"delete 5\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        Command command \u003d new Command(storage, str);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(5, command.extractTaskNum());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":18}},{"path":"src/test/java/leo/storage/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime dt \u003d LocalDateTime.parse(\"19012023 12:00\", formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    private final DeadlineTask deadline \u003d new DeadlineTask(\"project\", dt);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        String expected \u003d \"[D][ ] project (by: Thu, Jan 19, 12:00 pm)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        String expected \u003d \"[D][ ] project | 19012023 12:00\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expected, deadline.saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":27}},{"path":"src/test/java/leo/storage/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime dtOne \u003d LocalDateTime.parse(\"19012023 12:00\", formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime dtTwo \u003d LocalDateTime.parse(\"19012023 16:00\", formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"    private final LocalDateTime dtThree \u003d LocalDateTime.parse(\"20012023 13:00\", formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    public void testSameDateStringConversion() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"        EventTask event \u003d new EventTask(\"meeting\", dtOne, dtTwo);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        String expected \u003d \"[E][ ] meeting (Thu, Jan 19, 12:00 pm - 04:00 pm)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    public void testDifferentDateStringConversion() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        EventTask event \u003d new EventTask(\"meeting\", dtOne, dtThree);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"        String expected \u003d \"[E][ ] meeting (Thu, Jan 19, 12:00 pm - Fri, Jan 20, 01:00 pm)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"        String expectedOne \u003d \"[E][ ] meeting | 19012023 12:00 | 19012023 16:00\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"        EventTask eventOne \u003d new EventTask(\"meeting\", dtOne, dtTwo);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        String expectedTwo \u003d \"[E][ ] meeting | 19012023 12:00 | 20012023 13:00\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        EventTask eventTwo \u003d new EventTask(\"meeting\", dtOne, dtThree);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expectedOne, eventOne.saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(expectedTwo, eventTwo.saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":41}},{"path":"src/test/java/leo/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectMarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.NoStorageFileException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    public void filePathRetrieval_success() throws NoStorageFileException, IncorrectMarkException {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"        Storage storage \u003d new Storage(\"data/leo.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"/Users/jamieeeleow/Documents/cs2103t/iP/ip/data/leo.txt\", storage.getDataFilePath());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    public void testDataLength_success() throws NoStorageFileException, IncorrectMarkException {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        Storage storage \u003d new Storage(\"data/leo.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(7, storage.getDataLength());","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":23}},{"path":"src/test/java/leo/storage/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectMarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    public void testTaskRetrieval() {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"run\", new Task(\"run\").getTask());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"eat\", new Task(\"eat\").getTask());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"    public void testTaskCompletionStatus() throws IncorrectMarkException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"        Task task \u003d new Task(\"run\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"        task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"        Task task \u003d new Task(\"run\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"run\", task.saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jamieeeleow"},"content":"    public void testType() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jamieeeleow"},"content":"        Task task \u003d new Task(\"run\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(TaskType.TODO, task.getType());","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jamieeeleow"},"content":"        task.setType(TaskType.EVENT);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(TaskType.EVENT, task.getType());","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jamieeeleow"},"content":"        task.setType(TaskType.DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(TaskType.DEADLINE, task.getType());","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jamieeeleow"},"content":"    public void testTypeAndStatus() {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jamieeeleow"},"content":"        Task task \u003d new Task(\"run\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] \", task.typeAndStatus());","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jamieeeleow"},"content":"        task.setType(TaskType.EVENT);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[E][ ] \", task.typeAndStatus());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jamieeeleow"},"content":"        task.setType(TaskType.DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[D][ ] \", task.typeAndStatus());","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":52}},{"path":"src/test/java/leo/storage/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] run\", new ToDoTask(\"run\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] eat\", new ToDoTask(\"eat\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] study\", new ToDoTask(\"study\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] run\\n\", new ToDoTask(\"run\").saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] eat\\n\", new ToDoTask(\"eat\").saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T][ ] study\\n\", new ToDoTask(\"study\").saveFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":22}},{"path":"src/test/java/leo/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"package leo.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"import leo.leoexception.IncorrectMarkException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"import leo.storage.TaskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"public class UiTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"    public void testTypeOutput() {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"        Task t \u003d new Task(\"study!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[T]\", Ui.type(t));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"        t.setType(TaskType.DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[D]\", Ui.type(t));","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"        t.setType(TaskType.EVENT);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[E]\", Ui.type(t));","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"    public void testStatusOutput() throws IncorrectMarkException {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"        Task t \u003d new Task(\"study!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[ ] \", Ui.completion(t));","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"        t.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"        assertEquals(\"[X] \", Ui.completion(t));","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":30}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"__   __   ______   __       __        _____ ","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"| |  | |  | ____|  | |      | |      /  __  \\ ","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"| |__| |  | |____  | |      | |      | |  | |","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"|  __  |  | ____|  | |      | |      | |  | |","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"| |  | |  | |____  | |____  | |____  | |__| |","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"|_|  |_|  |______| |______| |______| \\_____/","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"Leo: Good day, I am Leo!","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"     How can I assist you today?","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"Leo: Well hello to you too! :-D","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"Leo: added run to your tasks :-) !","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"Leo: added project to your tasks :-) !","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"Leo: added meeting to your tasks :-) !","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"Leo: added training to your tasks :-) !","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"Leo: Uh oh! Description of task is empty :-(","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"Leo: Uh oh! There is no deadline indicated :-(","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"Leo: Uh oh! The duration of the event is incomplete :-(","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"1. [T][ ] run","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jamieeeleow"},"content":"2. [D][ ] project (by: Sun, Jan 29, 12:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jamieeeleow"},"content":"3. [E][ ] meeting (Thu, Jan 26, 02:00 pm - 03:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jamieeeleow"},"content":"4. [E][ ] training (Mon, Jan 30, 10:00 pm - Tue, Jan 31, 12:00 am)","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jamieeeleow"},"content":"Leo: Good work! You have completed task 2:","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"     [D][X] project (by: Sun, Jan 29, 12:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jamieeeleow"},"content":"Leo: Good work! You have completed task 3:","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jamieeeleow"},"content":"     [E][X] meeting (Thu, Jan 26, 02:00 pm - 03:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"Leo: No worries! I have unmarked task 3:","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jamieeeleow"},"content":"     [E][ ] meeting (Thu, Jan 26, 02:00 pm - 03:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jamieeeleow"},"content":"Leo: I have removed task 3:","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jamieeeleow"},"content":"     [E][ ] meeting (Thu, Jan 26, 02:00 pm - 03:00 pm)","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jamieeeleow"},"content":"Leo: This task was already marked previously.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jamieeeleow"},"content":"Leo: This task has not been marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jamieeeleow"},"content":"Leo: Hm, this task does not exist...","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jamieeeleow"},"content":"Leo: No file found!! \u003e:-(","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jamieeeleow":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamieeeleow"},"content":"hello","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jamieeeleow"},"content":"todo run","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jamieeeleow"},"content":"deadline project /29012023 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jamieeeleow"},"content":"event meeting /26012023 14:00 /26012023 15:00","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jamieeeleow"},"content":"event training /30012023 22:00 /31012023 00:00","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jamieeeleow"},"content":"todo","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jamieeeleow"},"content":"deadline tutorial","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jamieeeleow"},"content":"event lecture /27012023 14:00","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jamieeeleow"},"content":"list","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"mark 2","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jamieeeleow"},"content":"mark 3","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"unmark 3","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jamieeeleow"},"content":"delete 3","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jamieeeleow"},"content":"mark 2","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jamieeeleow"},"content":"unmark 3","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jamieeeleow"},"content":"delete 7","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jamieeeleow"},"content":"bye","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jamieeeleow":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jamieeeleow"},"content":"java -classpath ..\\bin Leo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamieeeleow":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jamieeeleow"},"content":"if [ -e \"./ACTUAL.txt\" ]","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jamieeeleow"},"content":"    rm ACTUAL.txt","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jamieeeleow"},"content":"java -classpath ../bin Leo \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"jamieeeleow"},"content":"diff ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamieeeleow":4,"-":30}}]
