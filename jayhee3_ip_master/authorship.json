[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"    mainClassName \u003d \"duke.launcher.Launcher\"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jayhee3":17,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"/** Encapsulates the Duke chat-bot.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":" * @author Hee Jia Yuan","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"    /** Handles storing of Tasks in the hard drive.*/","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"    /** Handles the tasks within a session.  */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"    /** Handles interactions with the User. */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new Duke session.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"     * @param filePath Directory to file storing Tasks in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jayhee3"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jayhee3"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jayhee3"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jayhee3"},"content":"        return Parser.parse(ui, tasks, storage, input);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jayhee3":69,"-":1}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":33}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":" * Encapsulates specific errors that occur in the Duke chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"    public DukeException() {};","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jayhee3":7}},{"path":"src/main/java/duke/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.launcher;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.Main;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.DeadLine;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":" * Makes sense of user input and reacts accordingly.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"     * Main method for parsing user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"     * @param ui The class that interacts with user.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"     * @param tasks The class that stores the task in the current session.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"     * @param storage The class that loads and stores the tasks in the hard drive.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    public static String parse(Ui ui, TaskList tasks, Storage storage, String userInput) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"            String firstWord \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"Goodbye! Have a nice day ahead.\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"                return ui.listTasks(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"            } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"                return ui.showHelpMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"                //Body message should be a keyword to search for a task","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"                String secondWord \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"                return ui.findTasks(tasks.findTask(secondWord));","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"                //Second word should be an integer dictating which Task to mark.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"                String secondWord \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"                int taskNumber \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"                Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"                storage.changeTaskStatus(task.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"                tasks.mark(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"I have marked this task as done! \\n\" + task.provideDetails());","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"                //Second word should be an integer dictating which Task to unmark.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"                String secondWord \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"                int taskNumber \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"                Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"                storage.changeTaskStatus(task.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"                tasks.unmark(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"               return ui.respond(\"I have marked this task as undone! \\n\" + task.provideDetails());","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"                //Rest of message describes the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"                String body \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"                ToDo task \u003d new ToDo(\"todo\", body, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"                storage.addTask(task.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"               return ui.respond(\"I have added this new task:\\n\" + task.provideDetails()","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"                        + \"\\nYou now currently have \"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jayhee3"},"content":"                        + tasks.getTaskCount() + \" tasks.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jayhee3"},"content":"                //Rest of message describes the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jayhee3"},"content":"                String body \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jayhee3"},"content":"                DeadLine newTask \u003d new DeadLine(\"deadline\", body, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jayhee3"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jayhee3"},"content":"                storage.addTask(newTask.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"I have added this new task:\\n\" + newTask.provideDetails()","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jayhee3"},"content":"                        + \"\\nYou now currently have \"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jayhee3"},"content":"                        + tasks.getTaskCount() + \" tasks.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jayhee3"},"content":"                //Rest of message describes the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jayhee3"},"content":"                String body \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jayhee3"},"content":"                Event newTask \u003d new Event(\"event\", body, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jayhee3"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jayhee3"},"content":"                storage.addTask(newTask.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"I have added this new task:\\n\" + newTask.provideDetails()","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jayhee3"},"content":"                        + \"\\nYou now currently have \"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"jayhee3"},"content":"                        + tasks.getTaskCount() + \" tasks.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"jayhee3"},"content":"            } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jayhee3"},"content":"                //second word should be an integer","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"jayhee3"},"content":"                String secondWord \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jayhee3"},"content":"                int taskNumber \u003d Integer.parseInt(secondWord);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jayhee3"},"content":"                Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jayhee3"},"content":"                tasks.deleteTask(taskNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jayhee3"},"content":"                storage.deleteTask(task.getStorageLine());","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"We have removed this task: \" + task.provideDetails() + \"\\nYou now have \"","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jayhee3"},"content":"                        + tasks.getTaskCount() + \" tasks remaining\");","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"jayhee3"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jayhee3"},"content":"                return ui.respond(\"Oops! I don\u0027t know what this means.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jayhee3"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"jayhee3"},"content":"            return ui.showCommandError();","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jayhee3"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"jayhee3"},"content":"            return ui.showCommandError();","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jayhee3":98}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.DeadLine;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":" * Handles storing of Tasks in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    /** File path to stored file in hard drive. */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    private String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"     * Creates a new Storage session.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"     * @param filePath File path to stored file in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"     * Loads a list of tasks from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"     * @return A list of tasks stored in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"     * @throws DukeException when there is an error loading tasks from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"                System.out.println(\"No existing tasks found on this device. New storage created: \" + file.getName());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"                System.out.println(\"Existing tasks found on this device have been loaded into this session. \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"                        \"No action is needed.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"                String[] nextLine \u003d scanner.nextLine().split(\" \", 3);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"                Boolean isCompleted \u003d nextLine[0].equals(\"1\") ? true : false;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"                String firstWord \u003d nextLine[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"                if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"                    String bodyMessage \u003d nextLine[2];","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"                    DeadLine task \u003d new DeadLine(\"deadline\", bodyMessage, isCompleted);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"                } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"                    String bodyMessage \u003d nextLine[2];","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"                    Event task \u003d new Event(\"event\", bodyMessage, isCompleted);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"                } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"                    String bodyMessage \u003d nextLine[2];","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"jayhee3"},"content":"                    ToDo task \u003d new ToDo(\"todo\", bodyMessage, isCompleted);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jayhee3"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jayhee3"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"jayhee3"},"content":"            scanner.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jayhee3"},"content":"            return tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jayhee3"},"content":"        }   catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"jayhee3"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jayhee3"},"content":"     * Updates task completion status in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jayhee3"},"content":"     * @param taskData A String that identifies the task in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jayhee3"},"content":"     * @throws DukeException when there is an error performing the operation.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"jayhee3"},"content":"    public void changeTaskStatus(String taskData) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the File class","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"jayhee3"},"content":"            File myObj \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the Scanner class to read the file","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"jayhee3"},"content":"            Scanner sc \u003d new Scanner(myObj);","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"jayhee3"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"jayhee3"},"content":"            String isCompleted \u003d taskData.split(\" \", 2)[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"jayhee3"},"content":"            String description \u003d   taskData.split(\" \", 2)[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"jayhee3"},"content":"            String updatedDescription \u003d isCompleted.equals(\"1\") ? \"0 \" + description : \"1 \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"jayhee3"},"content":"            //Reading lines of the file and appending them to StringBuffer","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"jayhee3"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"jayhee3"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"jayhee3"},"content":"                if (nextLine.equals(taskData)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"jayhee3"},"content":"                    buffer.append(updatedDescription + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"jayhee3"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"jayhee3"},"content":"                    buffer.append(nextLine + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"jayhee3"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"jayhee3"},"content":"            String fileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"jayhee3"},"content":"            sc.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"jayhee3"},"content":"            //instantiating the FileWriter class","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"jayhee3"},"content":"            FileWriter writer \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"jayhee3"},"content":"            writer.append(fileContents);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"jayhee3"},"content":"            writer.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"jayhee3"},"content":"        catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"jayhee3"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"jayhee3"},"content":"     * Deletes task from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"jayhee3"},"content":"     * @param taskData A String that identifies the task in hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"jayhee3"},"content":"     * @throws DukeException when there is an error performing the operation.","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"jayhee3"},"content":"    public void deleteTask(String taskData) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the File class","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"jayhee3"},"content":"            File myObj \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the Scanner class to read the file","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"jayhee3"},"content":"            Scanner sc \u003d new Scanner(myObj);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"jayhee3"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"jayhee3"},"content":"            //Reading lines of the file and appending them to StringBuffer","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"jayhee3"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"jayhee3"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"jayhee3"},"content":"                if (nextLine.equals(taskData)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"jayhee3"},"content":"                    //do nothing","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"jayhee3"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"jayhee3"},"content":"                    buffer.append(nextLine + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"jayhee3"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"jayhee3"},"content":"            String fileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"jayhee3"},"content":"            sc.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"jayhee3"},"content":"            //instantiating the FileWriter class","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"jayhee3"},"content":"            FileWriter writer \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"jayhee3"},"content":"            writer.append(fileContents);","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"jayhee3"},"content":"            writer.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"jayhee3"},"content":"        catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"jayhee3"},"content":"           throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"jayhee3"},"content":"     * Adds a task to hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"jayhee3"},"content":"     * @param input Description of task to be added to hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"jayhee3"},"content":"     * @throws DukeException when there is an error performing the operation.","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"jayhee3"},"content":"    public void addTask(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the File class","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"jayhee3"},"content":"            File myObj \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"jayhee3"},"content":"            //Instantiating the Scanner class to read the file","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"jayhee3"},"content":"            Scanner sc \u003d new Scanner(myObj);","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"jayhee3"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"jayhee3"},"content":"            //Reading lines of the file and appending them to StringBuffer","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"jayhee3"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"jayhee3"},"content":"                buffer.append(sc.nextLine() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"jayhee3"},"content":"            String fileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"jayhee3"},"content":"            sc.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"jayhee3"},"content":"            //Replacing the old line with new line","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"jayhee3"},"content":"            fileContents \u003d fileContents + input + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"jayhee3"},"content":"            //instantiating the FileWriter class","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"jayhee3"},"content":"            FileWriter writer \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"jayhee3"},"content":"            writer.append(fileContents);","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"jayhee3"},"content":"            writer.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"jayhee3"},"content":"        catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"jayhee3"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":170,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jayhee3":173}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":" * Encapsulates a list of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"public class TaskList {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"    /** An ArrayList of Tasks.*/","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"     * Finds a task based upon search key-words provided by the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"     * @param searchWord The search key-words from the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"     * @return A task with a matching key word.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"    public ArrayList\u003cTask\u003e findTask(String searchWord) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"            if (task.provideDetails().contains(searchWord)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"        return matchingTasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"     * Stores a new task.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"     * @param task The task to be stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"     * @param number The number representing the task to be updated.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"    public void mark(int number) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"        this.tasks.get(number - 1).mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"     * Marks a task as uncompleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"     * @param number The number representing the task to be updated.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jayhee3"},"content":"    public void unmark(int number) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jayhee3"},"content":"        this.tasks.get(number - 1).unmark();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jayhee3"},"content":"     * Deletes a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jayhee3"},"content":"     * @param number The number representing the task to be updated.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jayhee3"},"content":"    public void deleteTask(int number) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jayhee3"},"content":"        this.tasks.remove(number - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jayhee3"},"content":"     * Gets the number of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jayhee3"},"content":"     * @return Number of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"jayhee3"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"jayhee3"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"jayhee3"},"content":"     * Gets a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"jayhee3"},"content":"     * @param number An integer describing the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"jayhee3"},"content":"     * @return A task.","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"jayhee3"},"content":"    public Task getTask(int number) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"jayhee3"},"content":"        return this.tasks.get(number - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jayhee3":90}},{"path":"src/main/java/duke/tasks/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":" * A task with one deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"    /** The date of the deadline.*/","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"    LocalDate localDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"     * @param keyword The keyword command to create a new Deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"     * @param message The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"     * @param completed The completion status of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    public DeadLine(String keyword, String message, Boolean completed) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"        super(keyword, message, completed);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"        String[] separateText \u003d this.description.split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"        this.localDate \u003d LocalDate.parse(separateText[1], formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    public String provideDetails() {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"        String[] separateText \u003d this.description.split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"        String date \u003d localDate.format(formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"        return this.completed ? \"[D]\" + \"[x] \" + separateText[0] + \" (by: \" + date + \")\"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"                : \"[D]\" + \"[ ] \" + separateText[0] + \" (by: \" + date + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jayhee3":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":" * A task which lasts for a time period, with a start time and end time.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"     * @param keyword The keyword command to create a new Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"     * @param message The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"     * @param completed The completion status of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"    public Event(String keyword, String message, Boolean completed) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"        super(keyword, message, completed);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    public String provideDetails() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"        String[] helperArray \u003d this.description.split(\"/from\");","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"        String firstPart \u003d helperArray[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"        String[] helperArray2 \u003d helperArray[1].split(\"/to\");","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"        String secondPart \u003d helperArray2[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"        String thirdPart \u003d helperArray2[1];","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"        return this.completed ? \"[E]\" + \"[x] \" + firstPart + \"(from:\" + secondPart + \"to:\" + thirdPart + \")\"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"                              : \"[E]\" + \"[ ] \" + firstPart + \"(from:\" + secondPart + \"to:\" + thirdPart + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jayhee3":27}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":" * Encapsulates a task","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"public class Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"     * Status of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"    boolean completed ;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"     * Details of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"    String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"     * Data of the task stored in the hard drive.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    String storedData;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"    public Task(String keyword, String description, Boolean completed) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"        this.storedData \u003d keyword + \" \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"     * Provides Details of the description.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"     * @return String detail message of description.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"    public String provideDetails() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"        return completed ? \"[x] \" + description","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"                : \"[ ] \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"     * Marks the task as uncompleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"     * Marks the task as completed/","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"    public void mark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"     * Gets the data that describes the task which will be stored in the hard drive.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"     * @return A String that describes how the task is stored in the hard drive.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"    public String getStorageLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"        return this.completed ? \"1 \" + storedData","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"                              : \"0 \" + storedData;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jayhee3":60}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":" * A task with no deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"     * @param keyword The keyword command to create a new ToDo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"     * @param message The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"     * @param completed The completion status of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"    public ToDo(String keyword, String message, Boolean completed) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"        super(keyword, message, completed);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    public String provideDetails() {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"        return this.completed ? \"[T]\" + \"[x] \" + this.description","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"                : \"[T]\" + \"[ ] \" + this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jayhee3":23}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":60}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"    private final String YOUR_INPUT \u003d \"You: \";","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"                DialogBox.getUserDialog(YOUR_INPUT + input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":53}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke.ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":" * Handles interactions with the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"public class Ui {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"    private String DUKE_RESPONSE \u003d \"Duke\u0027s response: \\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"     * Duke\u0027s help message","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"    private static String HELP_MESSAGE \u003d \"The available commands are: \\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"            \"1) list\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"            \"2) bye\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"            \"3) todo ________\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"            \"4) deadline ______ /by ___________ (Note that the date has to be in YYYY-MM-DD format.\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"            \"5) event ________ /from _______  /to _________\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"            \"6) unmark ____\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"            \"7) mark ______ \\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"            \"8) help\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"            \"9) find ______ \\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    public String listTasks(TaskList tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"        System.out.println(\"These are the current tasks: \");","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"        for (int i \u003d 1; i \u003c tasks.getTaskCount() + 1; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"            taskString +\u003d task.provideDetails() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"        return DUKE_RESPONSE + \"These are the current tasks: \\n\" + taskString;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"    public String findTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jayhee3"},"content":"            Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jayhee3"},"content":"            taskString +\u003d task.provideDetails() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jayhee3"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jayhee3"},"content":"        return DUKE_RESPONSE + \"These are the matching tasks: \\n\" + taskString;","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jayhee3"},"content":"     * Greets the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jayhee3"},"content":"    public String greet() {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jayhee3"},"content":"        return \"Hi, my name\u0027s Duke, how may I be of assistance today? :)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jayhee3"},"content":"     * Responds to the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jayhee3"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jayhee3"},"content":"     * @param message The response message to be delivered to the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jayhee3"},"content":"    public String respond(String message) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jayhee3"},"content":"        return DUKE_RESPONSE + message;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jayhee3"},"content":"     * Displays a loading error message to the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jayhee3"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jayhee3"},"content":"        return \"The data from the existing file could not be loaded. A new file has been created.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jayhee3"},"content":"     * Displays a command error message to the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jayhee3"},"content":"    public String showCommandError() {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jayhee3"},"content":"        return \"I\u0027m sorry! Either the command you used was not valid, or it was incorrectly formatted. \"","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jayhee3"},"content":"                + \"To see what constitutes a valid command or format,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jayhee3"},"content":"                + \" please type \u0027help\u0027.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jayhee3"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jayhee3"},"content":"     * Displays a help message to the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jayhee3"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jayhee3"},"content":"    public String showHelpMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jayhee3"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":85}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx//8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jayhee3":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"    public void testResponseBye(){","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jayhee3"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jayhee3"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jayhee3"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jayhee3"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jayhee3"},"content":"        String byeMessage \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jayhee3"},"content":"        Parser.parse(ui, tasks, storage, byeMessage);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jayhee3"},"content":"        assertEquals(Ui.TOP_DIVIDER + \"Goodbye! Have a nice day ahead.\\n\" +  Ui.BOTTOM_DIVIDER + \"\\n\",","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jayhee3"},"content":"                outContent.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jayhee3"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jayhee3"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jayhee3"},"content":"    public void testErrorMessage(){","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jayhee3"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jayhee3"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jayhee3"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jayhee3"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jayhee3"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jayhee3"},"content":"        String invalidMessage\u003d \"invalid command\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jayhee3"},"content":"        Parser.parse(ui, tasks, storage, invalidMessage);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jayhee3"},"content":"        assertEquals(Ui.TOP_DIVIDER + \"Oops! I don\u0027t know what this means.\" +  Ui.BOTTOM_DIVIDER + \"\\n\",","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jayhee3"},"content":"                outContent.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jayhee3"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jayhee3":39}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayhee3"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jayhee3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jayhee3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jayhee3"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jayhee3"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jayhee3"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jayhee3"},"content":"    public void testToDoEventDescription(){","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jayhee3"},"content":"        ToDo todo \u003d new ToDo(\"todo\", \"buy book\", false);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jayhee3"},"content":"        String expected \u003d \"[T][ ] buy book\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jayhee3"},"content":"        assertEquals(expected, todo.provideDetails());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jayhee3"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jayhee3"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jayhee3":13}}]
