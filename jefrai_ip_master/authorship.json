[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"    public Deadline(String objective, LocalDateTime by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public static Deadline parseArgs(String args[]) throws TaskParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        String by \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        boolean token_by \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/by\") \u003e 1) throw new TaskParseException(\"This deadline has too many timings!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"                token_by \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            if (token_by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"                by +\u003d (by.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) throw new TaskParseException(\"This deadline is missing its body text!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        if (by.isEmpty()) throw new TaskParseException(\"This deadline is missing its deadline! Use /by [date]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"            return new Deadline(objective, LocalDateTime.parse(by, DATE_IN_FMT));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(by + \" needs to be formatted as \" + DATE_IN_FMT_STR + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    public boolean beforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        return by.isBefore(date) || by.isEqual(date);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    public boolean afterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        return by.isAfter(date) || by.isEqual(date);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    public static Deadline parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"D\")) throw new TaskParseException(\"Invalid deadline data format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            boolean done \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            int byLines \u003d Integer.parseInt(header[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c byLines; i++) by +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            Deadline deadline \u003d new Deadline(objective, LocalDateTime.parse(by, DATE_IN_FMT));","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            deadline.done \u003d done;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"            return deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Deadline data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"D \" + done","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"                + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"                + \" \" + (by.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, by.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        return \"[D]\" + super.toString() + \" (\" + by.format(DATE_OUT_FMT) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":87}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    public Event(String objective, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public static Event parseArgs(String[] args) throws TaskParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        boolean token_from \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        boolean token_to \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/from\") \u003e 1) throw new TaskParseException(\"This event has too many start-times!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/to\") \u003e 1) throw new TaskParseException(\"This event has too many end-times!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"                token_from \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                token_to \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                token_from \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"                token_to \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"            if (token_from) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                from +\u003d (from.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            } else if (token_to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                to +\u003d (to.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) throw new TaskParseException(\"This event is missing its body text!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        if (from.isEmpty()) throw new TaskParseException(\"This event is missing its start-time! Use /from [date]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        if (to.isEmpty()) throw new TaskParseException(\"This event is missing its end-time! Use /to [date]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        LocalDateTime fromDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        LocalDateTime toDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            fromDate \u003d LocalDateTime.parse(from, DATE_IN_FMT);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(from + \" needs to be formatted as \" + DATE_IN_FMT_STR + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            toDate \u003d LocalDateTime.parse(to, DATE_IN_FMT);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(to + \" needs to be formatted as \" + DATE_IN_FMT_STR + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        return new Event(objective, fromDate, toDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"    public boolean beforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        return from.isBefore(date) || from.isEqual(date);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    public boolean afterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        return to.isAfter(date) || to.isEqual(date);","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    public static Event parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"E\")) throw new TaskParseException(\"Invalid event data format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"            boolean done \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"            int fromLines \u003d Integer.parseInt(header[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"            int toLines \u003d Integer.parseInt(header[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c fromLines; i++) from +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c toLines; i++) to +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            Event event \u003d new Event(objective,","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                    LocalDateTime.parse(from, DATE_IN_FMT),","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"                    LocalDateTime.parse(to, DATE_IN_FMT));","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"            event.done \u003d done;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            return event;","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Event data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"E \" + done","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"                + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"                + \" \" + (from.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"                + \" \" + (to.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, from.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, to.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"        return \"[E]\" + super.toString() + \" (\" + from.format(DATE_OUT_FMT) + \" - \" + to.format(DATE_OUT_FMT) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":116}},{"path":"src/main/java/Miki.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class Miki {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    private static final String DATA_PATH \u003d \"./data/\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    private static class MikiArgsException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        protected MikiArgsException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    private static class MikiLoadException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        protected MikiLoadException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    private static void printDiv() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        System.out.println(\"    ____________________________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    private static void print(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        System.out.println(\"     \" + s);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    private static void printAdded(Task t, int taskCount) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        print(\"Added this thing! That makes \" + taskCount + (taskCount \u003d\u003d 1 ? \" task\" : \" tasks\") + \":\");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        print(\"  \" + t.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    private static void printSaves() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        File dir \u003d new File(DATA_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        if (dir \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"            print(\"(default save location is missing?!)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        File[] saves \u003d dir.listFiles();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c saves.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            print(\"\u003e \" + saves[i].getName());","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"    private static int parseIndex(String[] args, int taskCount) throws MikiArgsException {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        int idx;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        if (args.length \u003d\u003d 0) throw new MikiArgsException(\"you didn\u0027t specify which one?!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"            idx \u003d Integer.parseInt(args[0]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(\"\\\"\" + args[0] + \"\\\" isn\u0027t a real integer! There\u0027s no task #\" + args[0] + \"!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        if (idx \u003c 0 || idx \u003e\u003d taskCount) {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"            String message \u003d \"There\u0027s no task #\" + args[0] + \"! \";","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"            if (taskCount \u003d\u003d 1) message +\u003d \"There is currently 1 task...\";","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"            else message +\u003d \"There are currently \" + taskCount + \" tasks...\";","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        return idx;","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"    private static void createSaveDir() {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        File dir \u003d new File(DATA_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        if (!dir.mkdirs()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"    private static void save(String pathString, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        Path path \u003d FileSystems.getDefault().getPath(DATA_PATH).resolve(pathString);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        BufferedWriter bw \u003d Files.newBufferedWriter(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            bw.write(Integer.toString(tasks.size()));","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                String[] repres \u003d tasks.get(i).save();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"                bw.newLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"                bw.write(Integer.toString(repres.length));","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"                for (int j \u003d 0; j \u003c repres.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"                    bw.newLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"                    bw.write(repres[j]);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"        } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"            bw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"    private static ArrayList\u003cTask\u003e load(String pathString) throws IOException, MikiLoadException {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"        Path path \u003d FileSystems.getDefault().getPath(DATA_PATH).resolve(pathString);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"        BufferedReader br \u003d Files.newBufferedReader(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"            int numTasks \u003d Integer.parseInt(br.readLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"                int taskLines \u003d Integer.parseInt(br.readLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"                String[] repres \u003d new String[taskLines];","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"                for (int j \u003d 0; j \u003c taskLines; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"                    repres[j] \u003d br.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"                switch (repres[0].charAt(0)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"                        tasks.add(Todo.parseLoad(repres));","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"                        tasks.add(Deadline.parseLoad(repres));","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"                        tasks.add(Event.parseLoad(repres));","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"                    default:","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"                        //invalid ver? try to handle","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"        } catch (NumberFormatException | TaskParseException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"            throw new MikiLoadException(\"this file is corrupt...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"        } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"            br.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"jefrai"},"content":"    private static void printList(ArrayList\u003cTask\u003e tasks, String[] args) throws MikiArgsException {","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"jefrai"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"jefrai"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"jefrai"},"content":"        boolean token_from \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"jefrai"},"content":"        boolean token_to \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/from\") \u003e 1) throw new MikiArgsException(\"too many filter-froms...\");","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/to\") \u003e 1) throw new MikiArgsException(\"too many filter-tos...\");","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"jefrai"},"content":"                token_from \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"jefrai"},"content":"                token_to \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"jefrai"},"content":"                token_from \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"jefrai"},"content":"                token_to \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"jefrai"},"content":"            if (token_from) {","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"jefrai"},"content":"                from +\u003d (from.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"jefrai"},"content":"            } else if (token_to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"jefrai"},"content":"                to +\u003d (to.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"jefrai"},"content":"        LocalDateTime fromDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"jefrai"},"content":"        LocalDateTime toDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"jefrai"},"content":"        if (!from.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"jefrai"},"content":"                fromDate \u003d LocalDateTime.parse(from, Task.DATE_IN_FMT);","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"jefrai"},"content":"                throw new MikiArgsException(from + \" needs to be formatted as \" + Task.DATE_IN_FMT_STR + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"jefrai"},"content":"        if (!to.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"jefrai"},"content":"                toDate \u003d LocalDateTime.parse(to, Task.DATE_IN_FMT);","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"jefrai"},"content":"                throw new MikiArgsException(to + \" needs to be formatted as \" + Task.DATE_IN_FMT_STR + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"jefrai"},"content":"            if ((fromDate \u003d\u003d null || tasks.get(i).afterDate(fromDate))","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"jefrai"},"content":"                    \u0026\u0026 (toDate \u003d\u003d null || tasks.get(i).beforeDate(toDate))) {","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"jefrai"},"content":"                print(Integer.toString(i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":183,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"jefrai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"jefrai"},"content":"        boolean ascii_only \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"--ascii-only\")) ascii_only \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"jefrai"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"jefrai"},"content":"        printDiv();","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"jefrai"},"content":"        String username \u003d System.getProperty(\"user.name\");","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"jefrai"},"content":"        print(\"in honour / fuzuki miki / 2020 | 2021\");","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"jefrai"},"content":"        if (!ascii_only) {","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"jefrai"},"content":"            print(\"\\uD83C\\uDF80✨\");","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"jefrai"},"content":"            print(\"Hello \" + username + \" !! Konmiki! ＼(￣▽￣)/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"jefrai"},"content":"            print(\"01 f3 80 / 27 28\");","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"jefrai"},"content":"            print(\"Hello \" + username + \" !! Konmiki! \\\\(^v^)/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"jefrai"},"content":"        printDiv();","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"jefrai"},"content":"            tasks \u003d load(\"autosave.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"jefrai"},"content":"        } catch (IOException | MikiLoadException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"jefrai"},"content":"        boolean exit_cmd \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"jefrai"},"content":"        while (!exit_cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"jefrai"},"content":"            System.out.print(\"\u003e\");","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"jefrai"},"content":"            String cmd_line \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"jefrai"},"content":"            String cmd \u003d cmd_line.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"jefrai"},"content":"            String[] cmd_args \u003d {};","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"jefrai"},"content":"            if (cmd_line.contains(\" \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"jefrai"},"content":"                cmd_args \u003d cmd_line.substring(cmd.length() + 1).split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"jefrai"},"content":"                printDiv();","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"jefrai"},"content":"                switch (cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"jefrai"},"content":"                    case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"jefrai"},"content":"                        exit_cmd \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"jefrai"},"content":"                        print(\"Otsumiki!~ I\u0027ll see you later!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"jefrai"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"jefrai"},"content":"                        print(\"caught in 4k:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"jefrai"},"content":"                        printList(tasks, cmd_args);","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"jefrai"},"content":"                    case \"mark\": {","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"jefrai"},"content":"                        int idx \u003d parseIndex(cmd_args, tasks.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":232,"author":{"gitId":"jefrai"},"content":"                        tasks.get(idx).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"jefrai"},"content":"                        print(\"Yay!! Task marked as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"jefrai"},"content":"                        print(\"  \" + tasks.get(idx));","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"jefrai"},"content":"                    case \"unmark\": {","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"jefrai"},"content":"                        int idx \u003d parseIndex(cmd_args, tasks.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"jefrai"},"content":"                        tasks.get(idx).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"jefrai"},"content":"                        print(\"okay...! task unmarked as undone:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":241,"author":{"gitId":"jefrai"},"content":"                        print(\"  \" + tasks.get(idx));","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":243,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"jefrai"},"content":"                    case \"todo\": {","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"jefrai"},"content":"                        Todo newTodo \u003d Todo.parseArgs(cmd_args);","lastModifiedDate":"2023-01-20"},{"lineNumber":246,"author":{"gitId":"jefrai"},"content":"                        tasks.add(newTodo);","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"jefrai"},"content":"                        printAdded(newTodo, tasks.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":250,"author":{"gitId":"jefrai"},"content":"                    case \"deadline\": {","lastModifiedDate":"2023-01-19"},{"lineNumber":251,"author":{"gitId":"jefrai"},"content":"                        Deadline newDeadline \u003d Deadline.parseArgs(cmd_args);","lastModifiedDate":"2023-01-20"},{"lineNumber":252,"author":{"gitId":"jefrai"},"content":"                        tasks.add(newDeadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"jefrai"},"content":"                        printAdded(newDeadline, tasks.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":254,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":256,"author":{"gitId":"jefrai"},"content":"                    case \"event\": {","lastModifiedDate":"2023-01-19"},{"lineNumber":257,"author":{"gitId":"jefrai"},"content":"                        Event newEvent \u003d Event.parseArgs(cmd_args);","lastModifiedDate":"2023-01-20"},{"lineNumber":258,"author":{"gitId":"jefrai"},"content":"                        tasks.add(newEvent);","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"jefrai"},"content":"                        printAdded(newEvent, tasks.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":260,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":261,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":262,"author":{"gitId":"jefrai"},"content":"                    case \"delete\": {","lastModifiedDate":"2023-01-20"},{"lineNumber":263,"author":{"gitId":"jefrai"},"content":"                        int idx \u003d parseIndex(cmd_args, tasks.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":264,"author":{"gitId":"jefrai"},"content":"                        Task delTask \u003d tasks.remove(idx);","lastModifiedDate":"2023-01-20"},{"lineNumber":265,"author":{"gitId":"jefrai"},"content":"                        print(\"hm hmm... task #\" + (idx + 1) + \" deleted! \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" left.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":266,"author":{"gitId":"jefrai"},"content":"                        print(\"- \" + delTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":267,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":268,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":269,"author":{"gitId":"jefrai"},"content":"                    case \"save\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"jefrai"},"content":"                        String pathString \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"jefrai"},"content":"                        for (int i \u003d 0; i \u003c cmd_args.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":272,"author":{"gitId":"jefrai"},"content":"                            pathString +\u003d (i \u003e 0 ? \" \" : \"\") + cmd_args[i];","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"jefrai"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"jefrai"},"content":"                        if (!pathString.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"jefrai"},"content":"                            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":276,"author":{"gitId":"jefrai"},"content":"                                save(pathString, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":277,"author":{"gitId":"jefrai"},"content":"                                print(\"done! i\u0027ve written your list to: \" + pathString);","lastModifiedDate":"2023-01-26"},{"lineNumber":278,"author":{"gitId":"jefrai"},"content":"                            } catch (IOException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":279,"author":{"gitId":"jefrai"},"content":"                                print(\"umm... i can\u0027t write on that!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":280,"author":{"gitId":"jefrai"},"content":"                                print(\"\u003e \" + ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":281,"author":{"gitId":"jefrai"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":282,"author":{"gitId":"jefrai"},"content":"                        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"jefrai"},"content":"                            print(\"tell me where to write!!!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":284,"author":{"gitId":"jefrai"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":285,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":286,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":287,"author":{"gitId":"jefrai"},"content":"                    case \"load\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":288,"author":{"gitId":"jefrai"},"content":"                        String pathString \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":289,"author":{"gitId":"jefrai"},"content":"                        for (int i \u003d 0; i \u003c cmd_args.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":290,"author":{"gitId":"jefrai"},"content":"                            pathString +\u003d (i \u003e 0 ? \" \" : \"\") + cmd_args[i];","lastModifiedDate":"2023-01-26"},{"lineNumber":291,"author":{"gitId":"jefrai"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":292,"author":{"gitId":"jefrai"},"content":"                        if (!pathString.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":293,"author":{"gitId":"jefrai"},"content":"                            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":294,"author":{"gitId":"jefrai"},"content":"                                tasks \u003d load(pathString);","lastModifiedDate":"2023-01-26"},{"lineNumber":295,"author":{"gitId":"jefrai"},"content":"                                print(\"done! i\u0027ve taken your list from: \" + pathString);","lastModifiedDate":"2023-01-26"},{"lineNumber":296,"author":{"gitId":"jefrai"},"content":"                            } catch (IOException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":297,"author":{"gitId":"jefrai"},"content":"                                print(\"umm... i can\u0027t read from that!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":298,"author":{"gitId":"jefrai"},"content":"                                print(\"\u003e \" + ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":299,"author":{"gitId":"jefrai"},"content":"                            } catch (MikiLoadException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":300,"author":{"gitId":"jefrai"},"content":"                                print(ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":301,"author":{"gitId":"jefrai"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":302,"author":{"gitId":"jefrai"},"content":"                        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":303,"author":{"gitId":"jefrai"},"content":"                            print(\"tell me what to read!!!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":304,"author":{"gitId":"jefrai"},"content":"                            printSaves();","lastModifiedDate":"2023-01-26"},{"lineNumber":305,"author":{"gitId":"jefrai"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":306,"author":{"gitId":"jefrai"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":307,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":308,"author":{"gitId":"jefrai"},"content":"                    default:","lastModifiedDate":"2023-01-19"},{"lineNumber":309,"author":{"gitId":"jefrai"},"content":"                        throw new MikiArgsException(\"\\\"\" + cmd + \"\\\" isn\u0027t a real word!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":310,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":311,"author":{"gitId":"jefrai"},"content":"            } catch (TaskParseException | MikiArgsException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":312,"author":{"gitId":"jefrai"},"content":"                print(\"?!?!? \" + ex.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":313,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":314,"author":{"gitId":"jefrai"},"content":"            printDiv();","lastModifiedDate":"2023-01-19"},{"lineNumber":315,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":316,"author":{"gitId":"jefrai"},"content":"                save(\"autosave.txt\", tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":317,"author":{"gitId":"jefrai"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":318,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":319,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":320,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":321,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":322,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":322}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"    protected String objective;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"    protected boolean done;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"    public static final String DATE_IN_FMT_STR \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"    public static final String DATE_OUT_FMT_STR \u003d \"dd LLL yyyy hh:mm a\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"    public static final DateTimeFormatter DATE_IN_FMT \u003d DateTimeFormatter.ofPattern(DATE_IN_FMT_STR);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    protected static final DateTimeFormatter DATE_OUT_FMT \u003d DateTimeFormatter.ofPattern(DATE_OUT_FMT_STR);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    public Task(String objective) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        done \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    public abstract String[] save();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    public abstract boolean beforeDate(LocalDateTime date);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    public abstract boolean afterDate(LocalDateTime date);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        return \"[\" + (done ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + objective;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":35}},{"path":"src/main/java/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jefrai":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"    public Todo(String objective) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"    public static Todo parseArgs(String[] args) throws TaskParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"            objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) throw new TaskParseException(\"This todo is missing its body text!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"        return new Todo(objective);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public static Todo parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"T\")) throw new TaskParseException(\"Invalid todo data format\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            boolean done \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            Todo todo \u003d new Todo(objective);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            todo.done \u003d done;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Todo data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"T \" + done + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    public boolean beforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    public boolean afterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"deadline get bread /by 26 Jan","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"eat bread","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"event lunch /from tomorrow 12pm /to 1pm /from 11am","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"event lunch /from tomorrow 12pm /to 1pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"todo git-push","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"unmark bread","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"todo","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"unmark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"delete","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"deadline ip /by 23:59 /by lecture","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"event lecture /to 4pm /from 2pm","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"delete 4","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"REM set environment variables","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"set username\u003duser","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"java -classpath ..\\bin Miki --ascii-only \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"jefrai":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"USER\u003d\"user\"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"java -classpath ../bin Miki --ascii-only \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"jefrai":3}}]
