[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.11\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    mainClassName \u003d \"core.Init\"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"    archiveBaseName \u003d \"miki\"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"jefrai":26}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"### Add Tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"`todo`, `deadline`, `event`","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"### Manage Tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"`delete`, `mark`, `unmark`","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"### Display Tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"`list`, `find`","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"### Save \u0026 Load","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"`save`, `load`","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"### Exit","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"`bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"### `todo` - Add a To-do Task","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"Adds a To-do task to the end of the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"todo OBJECTIVE","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"### `deadline` - Add a Deadline Task","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"Adds a Deadline task to the end of the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"deadline OBJECTIVE /by TIME","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"### `event` - Add an Event Task","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"Adds an Event task to the end of the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"event OBJECTIVE /from TIME /to TIME","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"### `delete` - Delete a Task","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"Deletes the task at any given index.","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"delete INDEX","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"### `mark` - Mark a Task as complete","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"Marks the task at any given index as complete.","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"mark INDEX","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"### `unmark` - Mark a Task as not complete","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"Marks the task at any given index as not complete.","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"unmark INDEX","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"### `list` - Display list of Tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"Displays the tasks in the list. Optionally, filter only for tasks within a given time range.","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"list [/from TIME] [/to TIME]","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"### `find` - Find matching Tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"Displays the tasks in the list matching a given regular expression.","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"find REGEX","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"### `save` - Save Tasks to file","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"Saves the list of Tasks to a given relative file path.","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"save PATH","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"### `load` - Load Tasks to file","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"Loads the list of Tasks from a given relative file path.","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"load PATH","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"### `bye` - Exit","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"Exits the application.","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"bye","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":18,"jefrai":95}},{"path":"src/main/java/command/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * A command adding a \u003ccode\u003eTask\u003c/code\u003e to a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class AddTask implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * Creates an add-task command.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public AddTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"Added this thing! That makes \" + tasks.size()","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \":\\n\" + \"  \" + task.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":29}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * A command containing an action on one or more Miki components.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"public interface Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"     * Performs the action of this command.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     * @param tasks   tasklist to perform the action on.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * @param ui      ui to perform the action on.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * @param storage storage to perform the action on.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    void run(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":19}},{"path":"src/main/java/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import exception.TaskListIndexException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" * A command deleting a \u003ccode\u003eTask\u003c/code\u003e at a specified index of a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class Delete implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private final int idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * Creates a delete-task command.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * @param idx index to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public Delete(int idx) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            Task task \u003d tasks.delete(idx);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"hm hmm... task #\" + (idx + 1) + \" deleted! \"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                    + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" left.\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"                    + \"- \" + task);","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        } catch (TaskListIndexException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"?!?!? \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":35}},{"path":"src/main/java/command/ExceptionPrint.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * A command printing the message of an \u003ccode\u003eException\u003c/code\u003e,","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * typically as the result of parsing invalid command arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class ExceptionPrint implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final Exception ex;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * Creates an exception-print command.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     * @param ex exception with message to be printed.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public ExceptionPrint(Exception ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        this.ex \u003d ex;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"?!?!? \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":27}},{"path":"src/main/java/command/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * A command printing the exit text, and invoking the UI to close if necessary.","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"public class Exit implements Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"     * Creates an exit command.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    public Exit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"Otsumiki!~ I\u0027ll see you later!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        ui.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":23}},{"path":"src/main/java/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.util.AbstractMap.SimpleEntry;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" * A command printing the contents of a \u003ccode\u003eTaskList\u003c/code\u003e matching a given regular expression.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"public class Find implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    private String regex \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private boolean isRepeat \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Creates a find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     * @param regex regular expression to match against.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    public Find(String regex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cSimpleEntry\u003cInteger, Task\u003e\u003e outTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"            if (tasks.get(i).hasMatchingObjective(regex)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                outTasks.add(new SimpleEntry\u003c\u003e(i, tasks.get(i)));","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e outLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c outTasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            outLines.add((outTasks.get(i).getKey() + 1) + \". \" + outTasks.get(i).getValue());","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        if (!isRepeat) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"here\u0027s your \" + outTasks.size() + (outTasks.size() \u003d\u003d 1 ? \" match:\" : \" matches:\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"            ui.printTasks(outLines.toArray(new String[outLines.size()]));","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            ui.refreshTasks(outLines.toArray(new String[outLines.size()]));","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        isRepeat \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jefrai":47}},{"path":"src/main/java/command/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" * A command printing the contents of a \u003ccode\u003eTaskList\u003c/code\u003e, optionally filtering by a time window.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"public class ListTasks implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    private LocalDateTime from \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    private LocalDateTime to \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private boolean isRepeat \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Creates a list-tasks command.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    public ListTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * Creates a list-tasks command with time window filtering.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     * @param from start of the time window. May be left null for no window start filtering.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     * @param to   end of the time window. May be left null for no window end filtering.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    public ListTasks(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e outLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            if ((from \u003d\u003d null || tasks.get(i).isAfterDate(from))","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                    \u0026\u0026 (to \u003d\u003d null || tasks.get(i).isBeforeDate(to))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                outLines.add((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        if (!isRepeat) {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"caught in 4k:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            ui.printTasks(outLines.toArray(new String[outLines.size()]));","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"            ui.refreshTasks(outLines.toArray(new String[outLines.size()]));","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        isRepeat \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jefrai":53}},{"path":"src/main/java/command/Load.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" * A command loading the contents of a file to a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class Load implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private final String path;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * Creates a load command.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * @param path path of the file to load from.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public Load(String path) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        if (!path.equals(\"\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                storage.load(path, tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"done! i\u0027ve taken your list from: \" + path);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"umm... i can\u0027t read from that!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"\u003e \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"            } catch (Storage.MikiLoadException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            String output \u003d \"tell me what to read!!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                String[] saves \u003d storage.listSaves();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"                for (int i \u003d 0; i \u003c saves.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                    output +\u003d \"\\n\u003e \" + saves[i];","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            } catch (Storage.MikiLoadException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"                output +\u003d \"\\n\" + ex.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"            } finally {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(output);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":50}},{"path":"src/main/java/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import exception.TaskListIndexException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * A command marking a \u003ccode\u003eTask\u003c/code\u003e at a specified index of a \u003ccode\u003eTaskList\u003c/code\u003e as complete.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class Mark implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final int idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * Creates a mark command.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     * @param idx index to be marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public Mark(int idx) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            tasks.get(idx).mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"Yay!! Task marked as done:\\n\" + \"  \" + tasks.get(idx));","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        } catch (TaskListIndexException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"?!?!? \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":32}},{"path":"src/main/java/command/RefreshTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" * A command refreshing the UI with the contents of a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class RefreshTasks implements Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     * Creates a refresh-tasks command.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    public RefreshTasks() {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e outLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            outLines.add((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        ui.refreshTasks(outLines.toArray(new String[outLines.size()]));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":28}},{"path":"src/main/java/command/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" * A command saving the contents of a \u003ccode\u003eTaskList\u003c/code\u003e to a file.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class Save implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private final String path;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * Creates a save command.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * @param path path of the file to save to.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public Save(String path) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        if (!path.equals(\"\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                storage.save(path, tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"done! i\u0027ve written your list to: \" + path);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"umm... i can\u0027t write on that!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"\u003e \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"tell me where to write!!!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":38}},{"path":"src/main/java/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import exception.TaskListIndexException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * A command marking a \u003ccode\u003eTask\u003c/code\u003e at a specified index of a \u003ccode\u003eTaskList\u003c/code\u003e as not complete.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class Unmark implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final int idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * Creates an unmark command.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     * @param idx index to be unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public Unmark(int idx) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            tasks.get(idx).unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"okay...! task unmarked as undone:\\n\" + \"  \" + tasks.get(idx));","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        } catch (TaskListIndexException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            ui.printMiki(\"?!?!? \" + ex.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":32}},{"path":"src/main/java/core/Init.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package core;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import task.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import ui.Cli;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * Initializer \u0026 execution entry-point of the Miki project.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class Init {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"     * Main function of the Miki project.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * @param args command-line arguments from the initial program call.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        assert args !\u003d null : \"Program arguments should be non-null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        boolean hasAsciiOnly \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        boolean hasNoAutoload \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        boolean hasCli \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"--ascii-only\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"                hasAsciiOnly \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"--no-autoload\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"                hasNoAutoload \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"--cli\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"                hasCli \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        if (!hasCli) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            Application.launch(MikiApp.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            Cli cli \u003d new Cli(hasAsciiOnly);","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            Miki miki \u003d new Miki(cli, hasNoAutoload);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"            String cmdLine \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            while (!Parser.isExitString(cmdLine)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                cmdLine \u003d cli.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                miki.respond(cmdLine);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":47}},{"path":"src/main/java/core/Miki.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package core;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import command.Command;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import command.RefreshTasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import task.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":" * Core class of the Miki personal-task manager project.","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" * In honor of Fuzuki Miki.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class Miki {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    private Command listFilter;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * Creates a Miki core with the specified arguments.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * @param ui            UI for user interaction.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * @param hasNoAutoload whether this Miki shall not attempt an initial load from the auto-save path.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    public Miki(Ui ui, boolean hasNoAutoload) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        storage \u003d new Storage(\"./data/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        listFilter \u003d new RefreshTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        ui.printIntro();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        if (!hasNoAutoload) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                storage.load(\"autosave.txt\", tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                // Do nothing - assume this is the first run, and the autosave has simply not been created","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            } catch (Storage.MikiLoadException ex) {","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                ui.printMiki(\"the autosave is corrupted... not using that!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                ui.printDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        listFilter.run(tasks, ui, storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"     * Responds to a given user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"     * @param cmdLine input to respond to.","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    public void respond(String cmdLine) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        Command cmd \u003d Parser.parse(cmdLine);","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        ui.printUser(cmdLine);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        ui.printDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        cmd.run(tasks, ui, storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        ui.printDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        ui.clearInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        if (Parser.isListCommand(cmd)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            listFilter \u003d cmd;","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"            assert listFilter !\u003d null : \"Task filter should be non-null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"            listFilter.run(tasks, ui, storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"            storage.save(\"autosave.txt\", tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"            // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":74}},{"path":"src/main/java/core/MikiApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package core;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import ui.Gui;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import ui.fxcontrol.MainWindow;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":" * JavaFX launcher of the Miki project.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"public class MikiApp extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        assert stage !\u003d null : \"Application stage should be non-null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Init.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            stage.setTitle(\"Miki\");","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            mainWindow.bindStage(stage);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            List\u003cString\u003e args \u003d getParameters().getRaw();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"            boolean hasAsciiOnly \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            boolean hasNoAutoload \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                if (args.get(i).equals(\"--ascii-only\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"                    hasAsciiOnly \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                if (args.get(i).equals(\"--no-autoload\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"                    hasNoAutoload \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            Gui gui \u003d new Gui(mainWindow, stage, hasAsciiOnly);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            Miki miki \u003d new Miki(gui, hasNoAutoload);","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMiki(miki);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":51}},{"path":"src/main/java/exception/MikiArgsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * Thrown when an argument could not be parsed as a valid Miki command.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"public class MikiArgsException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"     * Constructs a \u003ccode\u003eMikiArgsException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public MikiArgsException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":15}},{"path":"src/main/java/exception/NatDateParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * Thrown when an argument could not be parsed as a valid natural date component.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"public class NatDateParseException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"     * Constructs a \u003ccode\u003eNatTimeParseException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public NatDateParseException(String message) {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        super(message);","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jefrai":15}},{"path":"src/main/java/exception/TaskListIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * Thrown when a \u003ccode\u003eTaskList\u003c/code\u003e has been accessed with an illegal index.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"public class TaskListIndexException extends ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"     * Constructs a \u003ccode\u003eTaskListIndexException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public TaskListIndexException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":15}},{"path":"src/main/java/exception/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * Thrown when an argument could not be parsed as a valid \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"     * Constructs a \u003ccode\u003eTaskParseException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public TaskParseException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jefrai":15}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":" * A storage handler for reading and writing to a filesystem.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * Thrown when a file could not be parsed as a valid Miki save file.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public static class MikiLoadException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        /**","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"         * Constructs a \u003ccode\u003eMikiLoadException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"         *","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"         * @param message the detail message.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"         */","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        protected MikiLoadException(String message) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            super(message);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    private final String dataPath;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"     * Creates a new storage handler with a specified base directory for file paths.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     * @param dataPath base directory of file paths.","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    public Storage(String dataPath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"     * Creates the base directory (and any required ancestors) if it does not exist yet.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    private void createSaveDir() {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        File dir \u003d new File(dataPath);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        if (!dir.mkdirs()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            // Do nothing - Could not create save directory, ignore here and allow other methods to alert user","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"    private String[] makeSaveData(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        String saveData \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        saveData +\u003d tasks.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"            String[] repres \u003d tasks.get(i).save();","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            saveData +\u003d \"\\n\" + repres.length;","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            for (int j \u003d 0; j \u003c repres.length; j++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"                saveData +\u003d \"\\n\" + repres[j];","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        return saveData.split(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"     * Searches the base directory for loadable files and","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"     * returns their filenames as a \u003ccode\u003eString\u003c/code\u003e array.","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"     * @return the filenames of files in the base directory.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"     * @throws MikiLoadException if the base directory does not exist and","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"     *                           cannot be created.","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"    public String[] listSaves() throws MikiLoadException {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        File dir \u003d new File(dataPath);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        if (dir \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"            throw new MikiLoadException(\"(default save location is missing?!)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        File[] saves \u003d dir.listFiles();","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        String[] filenames \u003d new String[saves.length];","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c saves.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            filenames[i] \u003d saves[i].getName();","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        return filenames;","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"     * Saves a \u003ccode\u003eTaskList\u003c/code\u003e to a file, in a loadable format.","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"     * @param pathString path of the file to save to.","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"     * @param tasks      tasklist to save.","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"     * @throws IOException if the file could not be written to.","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"    public void save(String pathString, TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"        Path path \u003d FileSystems.getDefault().getPath(dataPath).resolve(pathString);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        BufferedWriter bw \u003d Files.newBufferedWriter(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"            String[] saveData \u003d makeSaveData(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c saveData.length; i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"                bw.write(saveData[i]);","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"                bw.newLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"        } finally {","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"            bw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"     * Loads a file as a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"     * @param pathString path of the file to load from.","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"     * @param tasks      tasklist to load to.","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"     * @throws IOException       if the file could not be read from.","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"     * @throws MikiLoadException if the file did not represent a correctly-encoded TaskList.","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"    public void load(String pathString, TaskList tasks) throws IOException, MikiLoadException {","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"        createSaveDir();","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"        Path path \u003d FileSystems.getDefault().getPath(dataPath).resolve(pathString);","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"        BufferedReader br \u003d Files.newBufferedReader(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"            int numTasks \u003d Integer.parseInt(br.readLine());","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"                int taskLines \u003d Integer.parseInt(br.readLine());","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"                String[] repres \u003d new String[taskLines];","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"                for (int j \u003d 0; j \u003c taskLines; j++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"                    repres[j] \u003d br.readLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"                switch (repres[0].charAt(0)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"jefrai"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"jefrai"},"content":"                    tasks.add(Todo.parseLoad(repres));","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"jefrai"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"jefrai"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"jefrai"},"content":"                    tasks.add(Deadline.parseLoad(repres));","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"jefrai"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"jefrai"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"jefrai"},"content":"                    tasks.add(Event.parseLoad(repres));","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"jefrai"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"jefrai"},"content":"                default:","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"jefrai"},"content":"                    // Invalid task type, possibly from a different version - skip and continue if no other problems","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"jefrai"},"content":"        } catch (NumberFormatException | TaskParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"jefrai"},"content":"            throw new MikiLoadException(\"this file is corrupted...\");","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"jefrai"},"content":"        } finally {","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"jefrai"},"content":"            br.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":155}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import exception.NatDateParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":" * Implementation of a \u003ccode\u003eTask\u003c/code\u003e with one chronological deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Creates a deadline with the specified objective,","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     * and the specified deadline timing.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     * @param objective description of this deadline\u0027s objective.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * @param by        deadline time of this deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public Deadline(String objective, LocalDateTime by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e command-line arguments to create a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"     * @param args arguments containing the deadline to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     * @return a deadline represented by \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003eargs\u003c/code\u003e does not represent a valid deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public static Deadline parseArgs(String[] args) throws TaskParseException {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        String by \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        boolean isInTokenBy \u003d false; // true after scanning \"/by\" token - subsequent text is part of \"by\"-timing","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/by\") \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This deadline has too many timings!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"                isInTokenBy \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            if (isInTokenBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"                by +\u003d (by.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This deadline is missing its body text!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This deadline is missing its deadline! Use /by [date]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"            return new Deadline(objective, Parser.parseDate(by, true));","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        } catch (NatDateParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"\\\"\" + by + \"\\\"... is... when??!? write \" + DATE_IN_FMT_STR + \"!!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e save data to create a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"     * @param data data containing the deadline to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"     * @return a deadline represented by \u003ccode\u003edata\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003edata\u003c/code\u003e does not represent a valid deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"    public static Deadline parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"                throw new TaskParseException(\"Invalid deadline data format\");","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"            boolean isDone \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"            int byLines \u003d Integer.parseInt(header[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c byLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"                by +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"            Deadline deadline \u003d new Deadline(objective, LocalDateTime.parse(by, DATE_IN_FMT));","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"            deadline.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"            return deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Deadline data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"    public boolean isBeforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"        return by.isBefore(date) || by.isEqual(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"    public boolean isAfterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"        return by.isAfter(date) || by.isEqual(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"D \" + isDone","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"                + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"                + \" \" + (by.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, by.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"jefrai"},"content":"        return \"[D]\" + super.toString() + \" (\" + by.format(DATE_OUT_FMT) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":142}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import exception.NatDateParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":" * Implementation of a \u003ccode\u003eTask\u003c/code\u003e with a chronological start-time and end-time.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     * Creates an event with the specified objective,","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     * and the specified starting and ending timings.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * @param objective description of this event\u0027s objective.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     * @param from      start-time of this event.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * @param to        end-time of this event.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    public Event(String objective, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e command-line arguments to create an event.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"     * @param args arguments containing the event to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"     * @return an event represented by \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003eargs\u003c/code\u003e does not represent a valid event.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    public static Event parseArgs(String[] args) throws TaskParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        boolean isInTokenFrom \u003d false; // true after scanning \"/from\" token - subsequent text is part of \"from\"-timing","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        boolean isInTokenTo \u003d false; // true after scanning \"/to\" token - subsequent text is part of \"to\"-timing","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/from\") \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This event has too many start-times!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/to\") \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This event has too many end-times!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"                isInTokenFrom \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                isInTokenTo \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"                isInTokenFrom \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"                isInTokenTo \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"            if (isInTokenFrom) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"                from +\u003d (from.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"            } else if (isInTokenTo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"                to +\u003d (to.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This event is missing its body text!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This event is missing its start-time! Use /from [date]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This event is missing its end-time! Use /to [date]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        LocalDateTime fromDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        LocalDateTime toDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"            fromDate \u003d Parser.parseDate(from, false);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"        } catch (NatDateParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"\\\"\" + from + \"\\\"... is... when??!? write \" + DATE_IN_FMT_STR + \"!!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"            toDate \u003d Parser.parseDate(to, true);","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"        } catch (NatDateParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"\\\"\" + to + \"\\\"... is... when??!? write\" + DATE_IN_FMT_STR + \"!!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"        return new Event(objective, fromDate, toDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e save data to create an event.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"     * @param data data containing the event to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"     * @return an event represented by \u003ccode\u003edata\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003edata\u003c/code\u003e does not represent a valid event.","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"    public static Event parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"E\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"                throw new TaskParseException(\"Invalid event data format\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"            boolean isDone \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"            int fromLines \u003d Integer.parseInt(header[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"            int toLines \u003d Integer.parseInt(header[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c fromLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"                from +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c toLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"                to +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"            Event event \u003d new Event(objective,","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"                    LocalDateTime.parse(from, DATE_IN_FMT),","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"                    LocalDateTime.parse(to, DATE_IN_FMT));","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"            event.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"            return event;","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Event data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"jefrai"},"content":"    public boolean isBeforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"jefrai"},"content":"        return from.isBefore(date) || from.isEqual(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"jefrai"},"content":"    public boolean isAfterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"jefrai"},"content":"        return to.isAfter(date) || to.isEqual(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"E \" + isDone","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"jefrai"},"content":"                + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"jefrai"},"content":"                + \" \" + (from.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1)","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"jefrai"},"content":"                + \" \" + (to.format(DATE_IN_FMT).codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, from.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, to.format(DATE_IN_FMT).split(\"\\n\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"jefrai"},"content":"        return \"[E]\" + super.toString() + \" (\" + from.format(DATE_OUT_FMT) + \" - \" + to.format(DATE_OUT_FMT) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":181}},{"path":"src/main/java/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static java.time.LocalDate.now;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static task.Task.DATE_IN_FMT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"import command.AddTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"import command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"import command.Delete;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"import command.ExceptionPrint;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"import command.Exit;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"import command.Find;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"import command.ListTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"import command.Load;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"import command.Mark;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"import command.Save;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"import command.Unmark;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"import exception.MikiArgsException;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"import exception.NatDateParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":" * A parser for Miki interactive command-line inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    private static final int NAT_NONE \u003d -5719;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    private static final List\u003cString\u003e DAY_NAMES \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"            Arrays.asList(\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    private static final List\u003cString\u003e MONTH_NAMES \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            Arrays.asList(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"     * Parses a \u003ccode\u003eListTasks\u003c/code\u003e command from a provided \u003ccode\u003eString[]\u003c/code\u003e of","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"     * space-separated tokens.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"     * @param args \u003ccode\u003eString[]\u003c/code\u003e denoting a \u003ccode\u003eListTasks\u003c/code\u003e command.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"     * @return a \u003ccode\u003eListTasks\u003c/code\u003e command represented by \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"     * @throws MikiArgsException if \u003ccode\u003eargs\u003c/code\u003e does not represent","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     *                           a valid \u003ccode\u003eListTasks\u003c/code\u003e command.","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"    public static ListTasks parseList(String[] args) throws MikiArgsException {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        boolean isInTokenFrom \u003d false; // true after scanning \"/from\" token - subsequent text is part of \"from\"-timing","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        boolean isInTokenTo \u003d false; // true after scanning \"/to\" token - subsequent text is part of \"to\"-timing","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/from\") \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(\"too many filter-froms...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        if (Collections.frequency(Arrays.asList(args), \"/to\") \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(\"too many filter-tos...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"                isInTokenFrom \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"                isInTokenTo \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"            if (args[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"                isInTokenFrom \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"                isInTokenTo \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"            if (isInTokenFrom) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"                from +\u003d (from.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"            } else if (isInTokenTo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"                to +\u003d (to.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        LocalDateTime fromDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        LocalDateTime toDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"        if (!from.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                fromDate \u003d parseDate(from, false);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"            } catch (NatDateParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"                throw new MikiArgsException(\"\\\"\" + from + \"\\\"... is... when??!? write \" + Task.DATE_IN_FMT_STR + \"!!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"        if (!to.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"                toDate \u003d parseDate(to, true);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"            } catch (NatDateParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"                throw new MikiArgsException(\"\\\"\" + to + \"\\\"... is... when??!? write \" + Task.DATE_IN_FMT_STR + \"!!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"        return new ListTasks(fromDate, toDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"     * Parses a \u003ccode\u003eTaskList\u003c/code\u003e index from a \u003ccode\u003eString[]\u003c/code\u003e of space-separated tokens.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"     * @param args \u003ccode\u003eString[]\u003c/code\u003e containing a \u003ccode\u003eTaskList\u003c/code\u003e index.","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eTaskList\u003c/code\u003e index represented by \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"     * @throws MikiArgsException if \u003ccode\u003eargs\u003c/code\u003e does not represent an integer.","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"    public static int parseTaskIndex(String[] args) throws MikiArgsException {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"        int idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(\"you didn\u0027t specify which one?!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"            idx \u003d Integer.parseInt(args[0]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"            throw new MikiArgsException(\"\\\"\" + args[0] + \"\\\" isn\u0027t a real integer! There\u0027s no task #\" + args[0] + \"!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"        return idx;","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"    private static int filterDayOfWeek(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 3) {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"            String trunc \u003d args.get(i).substring(0, 3).toLowerCase();","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"            if (DAY_NAMES.contains(trunc)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"                res \u003d DAY_NAMES.indexOf(trunc) + 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"jefrai"},"content":"    private static int filterRelativeDay(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 3) {","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"jefrai"},"content":"            String trunc \u003d args.get(i).substring(0, 3).toLowerCase();","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"jefrai"},"content":"            switch (trunc) {","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"jefrai"},"content":"            case \"yst\":","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"jefrai"},"content":"            case \"yes\":","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"jefrai"},"content":"                res \u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"jefrai"},"content":"            case \"tdy\":","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"jefrai"},"content":"            case \"tod\":","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"jefrai"},"content":"                res \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"jefrai"},"content":"            case \"tmr\":","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"jefrai"},"content":"            case \"tom\":","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"jefrai"},"content":"                res \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"jefrai"},"content":"            default:","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"jefrai"},"content":"    private static int filterRelativeModifier(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 3) {","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"jefrai"},"content":"            String trunc \u003d args.get(i).substring(0, 3).toLowerCase();","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"jefrai"},"content":"            switch (trunc) {","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"jefrai"},"content":"            case \"lst\":","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"jefrai"},"content":"            case \"las\":","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"jefrai"},"content":"            case \"prv\":","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"jefrai"},"content":"            case \"pre\":","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"jefrai"},"content":"                res \u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"jefrai"},"content":"            case \"ths\":","lastModifiedDate":"2023-02-20"},{"lineNumber":204,"author":{"gitId":"jefrai"},"content":"            case \"thi\":","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"jefrai"},"content":"                res \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":210,"author":{"gitId":"jefrai"},"content":"            case \"nxt\":","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"jefrai"},"content":"            case \"nex\":","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"jefrai"},"content":"                res \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"jefrai"},"content":"            default:","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":220,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":222,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":223,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":227,"author":{"gitId":"jefrai"},"content":"    private static int filterMonth(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":229,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 3) {","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":234,"author":{"gitId":"jefrai"},"content":"            String trunc \u003d args.get(i).substring(0, 3).toLowerCase();","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"jefrai"},"content":"            if (MONTH_NAMES.contains(trunc)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"jefrai"},"content":"                res \u003d MONTH_NAMES.indexOf(trunc) + 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":237,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":238,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":239,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":240,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":241,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":242,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":243,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":244,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":246,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":248,"author":{"gitId":"jefrai"},"content":"    private static int filterMeridiem(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":249,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":250,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":251,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 2) {","lastModifiedDate":"2023-02-17"},{"lineNumber":253,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":254,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":255,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).substring(0, 2).equalsIgnoreCase(\"am\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"jefrai"},"content":"                res \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":257,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":258,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":259,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":260,"author":{"gitId":"jefrai"},"content":"            } else if (args.get(i).substring(0, 2).equalsIgnoreCase(\"pm\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":261,"author":{"gitId":"jefrai"},"content":"                res \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":262,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":263,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":264,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":266,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":269,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":270,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":271,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":272,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":273,"author":{"gitId":"jefrai"},"content":"    private static LocalTime filterTime(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":274,"author":{"gitId":"jefrai"},"content":"        LocalTime res \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":275,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":276,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":277,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).contains(\":\")","lastModifiedDate":"2023-02-20"},{"lineNumber":278,"author":{"gitId":"jefrai"},"content":"                    || args.get(i).toLowerCase().contains(\"am\")","lastModifiedDate":"2023-02-20"},{"lineNumber":279,"author":{"gitId":"jefrai"},"content":"                    || args.get(i).toLowerCase().contains(\"pm\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":280,"author":{"gitId":"jefrai"},"content":"                String cur \u003d args.get(i).toLowerCase();","lastModifiedDate":"2023-02-20"},{"lineNumber":281,"author":{"gitId":"jefrai"},"content":"                int meridiem \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":282,"author":{"gitId":"jefrai"},"content":"                if (cur.contains(\"am\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":283,"author":{"gitId":"jefrai"},"content":"                    cur \u003d cur.replace(\"am\", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":284,"author":{"gitId":"jefrai"},"content":"                    meridiem \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":285,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":286,"author":{"gitId":"jefrai"},"content":"                if (cur.contains(\"pm\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":287,"author":{"gitId":"jefrai"},"content":"                    cur \u003d cur.replace(\"pm\", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":288,"author":{"gitId":"jefrai"},"content":"                    meridiem \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":289,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":290,"author":{"gitId":"jefrai"},"content":"                String[] parts \u003d cur.split(\":\");","lastModifiedDate":"2023-02-20"},{"lineNumber":291,"author":{"gitId":"jefrai"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"jefrai"},"content":"                    res \u003d LocalTime.of(Integer.parseInt(parts[0]), parts.length \u003e 1 ? Integer.parseInt(parts[1]) : 0);","lastModifiedDate":"2023-02-20"},{"lineNumber":293,"author":{"gitId":"jefrai"},"content":"                    if (meridiem \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":294,"author":{"gitId":"jefrai"},"content":"                        res \u003d LocalTime.of(res.getHour() % 12 + 12, res.getMinute());","lastModifiedDate":"2023-02-20"},{"lineNumber":295,"author":{"gitId":"jefrai"},"content":"                    }","lastModifiedDate":"2023-02-20"},{"lineNumber":296,"author":{"gitId":"jefrai"},"content":"                } catch (NumberFormatException | DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"jefrai"},"content":"                    continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":301,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":302,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":303,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":304,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":305,"author":{"gitId":"jefrai"},"content":"            return null;","lastModifiedDate":"2023-02-17"},{"lineNumber":306,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":307,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":308,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":309,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":310,"author":{"gitId":"jefrai"},"content":"    private static LocalDate filterDate(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":311,"author":{"gitId":"jefrai"},"content":"        LocalDate res \u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":312,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":313,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":314,"author":{"gitId":"jefrai"},"content":"            if (i \u003e\u003d 2 \u0026\u0026 args.get(i).length() \u003d\u003d 4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":315,"author":{"gitId":"jefrai"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":316,"author":{"gitId":"jefrai"},"content":"                    res \u003d LocalDate.of(","lastModifiedDate":"2023-02-17"},{"lineNumber":317,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i)),","lastModifiedDate":"2023-02-17"},{"lineNumber":318,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i - 1)),","lastModifiedDate":"2023-02-17"},{"lineNumber":319,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i - 2)));","lastModifiedDate":"2023-02-17"},{"lineNumber":320,"author":{"gitId":"jefrai"},"content":"                    matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":321,"author":{"gitId":"jefrai"},"content":"                    args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":322,"author":{"gitId":"jefrai"},"content":"                    args.remove(i - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":323,"author":{"gitId":"jefrai"},"content":"                    args.remove(i - 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":324,"author":{"gitId":"jefrai"},"content":"                    i -\u003d 3;","lastModifiedDate":"2023-02-17"},{"lineNumber":325,"author":{"gitId":"jefrai"},"content":"                } catch (NumberFormatException | DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"jefrai"},"content":"                    // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":327,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":328,"author":{"gitId":"jefrai"},"content":"            } else if (i \u003c args.size() - 2 \u0026\u0026 args.get(i).length() \u003d\u003d 4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":329,"author":{"gitId":"jefrai"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":330,"author":{"gitId":"jefrai"},"content":"                    res \u003d LocalDate.of(","lastModifiedDate":"2023-02-17"},{"lineNumber":331,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i)),","lastModifiedDate":"2023-02-17"},{"lineNumber":332,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i + 1)),","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"jefrai"},"content":"                            Integer.parseInt(args.get(i + 2)));","lastModifiedDate":"2023-02-17"},{"lineNumber":334,"author":{"gitId":"jefrai"},"content":"                    matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":335,"author":{"gitId":"jefrai"},"content":"                    args.remove(i + 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":336,"author":{"gitId":"jefrai"},"content":"                    args.remove(i + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":337,"author":{"gitId":"jefrai"},"content":"                    args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"jefrai"},"content":"                    i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":339,"author":{"gitId":"jefrai"},"content":"                } catch (NumberFormatException | DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":340,"author":{"gitId":"jefrai"},"content":"                    // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":341,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":342,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":343,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":344,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":345,"author":{"gitId":"jefrai"},"content":"            return null;","lastModifiedDate":"2023-02-17"},{"lineNumber":346,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":347,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":348,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":349,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":350,"author":{"gitId":"jefrai"},"content":"    private static int filterYear(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":351,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":352,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":353,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":354,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003d\u003d 4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":355,"author":{"gitId":"jefrai"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":356,"author":{"gitId":"jefrai"},"content":"                    res \u003d Integer.parseInt(args.get(i));","lastModifiedDate":"2023-02-17"},{"lineNumber":357,"author":{"gitId":"jefrai"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":358,"author":{"gitId":"jefrai"},"content":"                    continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":359,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":360,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":361,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":362,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":363,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":364,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":365,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":366,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":367,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":368,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":369,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":370,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":371,"author":{"gitId":"jefrai"},"content":"    private static int filterDayOfMonth(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":372,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":373,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":374,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":375,"author":{"gitId":"jefrai"},"content":"            if (args.get(i).length() \u003c 2) {","lastModifiedDate":"2023-02-17"},{"lineNumber":376,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":377,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":378,"author":{"gitId":"jefrai"},"content":"            String suf \u003d args.get(i).substring(args.get(i).length() - 2).toLowerCase();","lastModifiedDate":"2023-02-17"},{"lineNumber":379,"author":{"gitId":"jefrai"},"content":"            if (suf.equals(\"st\") || suf.equals(\"nd\") || suf.equals(\"rd\") || suf.equals(\"th\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":380,"author":{"gitId":"jefrai"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":381,"author":{"gitId":"jefrai"},"content":"                    res \u003d Integer.parseInt(args.get(i).substring(0, args.get(i).length() - 2));","lastModifiedDate":"2023-02-17"},{"lineNumber":382,"author":{"gitId":"jefrai"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":383,"author":{"gitId":"jefrai"},"content":"                    continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":384,"author":{"gitId":"jefrai"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":385,"author":{"gitId":"jefrai"},"content":"                matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":386,"author":{"gitId":"jefrai"},"content":"                args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":387,"author":{"gitId":"jefrai"},"content":"                i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":388,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":389,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":390,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":391,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":392,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":393,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":394,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":395,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":396,"author":{"gitId":"jefrai"},"content":"    private static int filterResidualDayOfMonth(ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":397,"author":{"gitId":"jefrai"},"content":"        int res \u003d NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":398,"author":{"gitId":"jefrai"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":399,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":400,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":401,"author":{"gitId":"jefrai"},"content":"                res \u003d Integer.parseInt(args.get(i));","lastModifiedDate":"2023-02-17"},{"lineNumber":402,"author":{"gitId":"jefrai"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":403,"author":{"gitId":"jefrai"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":404,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":405,"author":{"gitId":"jefrai"},"content":"            matches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":406,"author":{"gitId":"jefrai"},"content":"            args.remove(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":407,"author":{"gitId":"jefrai"},"content":"            i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":408,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":409,"author":{"gitId":"jefrai"},"content":"        if (matches !\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":410,"author":{"gitId":"jefrai"},"content":"            return NAT_NONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":411,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":412,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":413,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":414,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":415,"author":{"gitId":"jefrai"},"content":"    private static LocalDateTime offsetDate(LocalDate date, ChronoUnit step, int amount, LocalTime time) {","lastModifiedDate":"2023-02-20"},{"lineNumber":416,"author":{"gitId":"jefrai"},"content":"        if (amount !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":417,"author":{"gitId":"jefrai"},"content":"            switch (step) {","lastModifiedDate":"2023-02-20"},{"lineNumber":418,"author":{"gitId":"jefrai"},"content":"            case DAYS:","lastModifiedDate":"2023-02-20"},{"lineNumber":419,"author":{"gitId":"jefrai"},"content":"                date \u003d date.plusDays(amount);","lastModifiedDate":"2023-02-20"},{"lineNumber":420,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":421,"author":{"gitId":"jefrai"},"content":"            case WEEKS:","lastModifiedDate":"2023-02-20"},{"lineNumber":422,"author":{"gitId":"jefrai"},"content":"                date \u003d date.plusWeeks(amount);","lastModifiedDate":"2023-02-20"},{"lineNumber":423,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":424,"author":{"gitId":"jefrai"},"content":"            case MONTHS:","lastModifiedDate":"2023-02-20"},{"lineNumber":425,"author":{"gitId":"jefrai"},"content":"                date \u003d date.plusMonths(amount);","lastModifiedDate":"2023-02-20"},{"lineNumber":426,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":427,"author":{"gitId":"jefrai"},"content":"            case YEARS:","lastModifiedDate":"2023-02-20"},{"lineNumber":428,"author":{"gitId":"jefrai"},"content":"                date \u003d date.plusYears(amount);","lastModifiedDate":"2023-02-20"},{"lineNumber":429,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":430,"author":{"gitId":"jefrai"},"content":"            case FOREVER:","lastModifiedDate":"2023-02-20"},{"lineNumber":431,"author":{"gitId":"jefrai"},"content":"            default:","lastModifiedDate":"2023-02-20"},{"lineNumber":432,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-20"},{"lineNumber":433,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":434,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":435,"author":{"gitId":"jefrai"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2023-02-20"},{"lineNumber":436,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":437,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":438,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":439,"author":{"gitId":"jefrai"},"content":"     * Parses a \u003ccode\u003eLocalDateTime\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e natural language expression.","lastModifiedDate":"2023-02-20"},{"lineNumber":440,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":441,"author":{"gitId":"jefrai"},"content":"     * @param dateStr                 \u003ccode\u003eString\u003c/code\u003e representing a natural-language date.","lastModifiedDate":"2023-02-20"},{"lineNumber":442,"author":{"gitId":"jefrai"},"content":"     * @param useLatestInterpretation whether to use the chronologically latest interpretation of \u003ccode\u003edateStr\u003c/code\u003e,","lastModifiedDate":"2023-02-20"},{"lineNumber":443,"author":{"gitId":"jefrai"},"content":"     *                                instead of the chronologically earliest.","lastModifiedDate":"2023-02-20"},{"lineNumber":444,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eLocalDateTime\u003c/code\u003e represented by \u003ccode\u003edateStr\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":445,"author":{"gitId":"jefrai"},"content":"     * @throws NatDateParseException if \u003ccode\u003edateStr\u003c/code\u003e could not be parsed as a natural-language date.","lastModifiedDate":"2023-02-20"},{"lineNumber":446,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":447,"author":{"gitId":"jefrai"},"content":"    public static LocalDateTime parseDate(String dateStr, boolean useLatestInterpretation)","lastModifiedDate":"2023-02-20"},{"lineNumber":448,"author":{"gitId":"jefrai"},"content":"            throws NatDateParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":449,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":450,"author":{"gitId":"jefrai"},"content":"            return LocalDateTime.parse(dateStr, DATE_IN_FMT);","lastModifiedDate":"2023-02-17"},{"lineNumber":451,"author":{"gitId":"jefrai"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":452,"author":{"gitId":"jefrai"},"content":"            // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":453,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":454,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":455,"author":{"gitId":"jefrai"},"content":"        String cleanDateStr \u003d dateStr.replace(\",\", \" \")","lastModifiedDate":"2023-02-20"},{"lineNumber":456,"author":{"gitId":"jefrai"},"content":"                .replace(\"-\", \" \")","lastModifiedDate":"2023-02-20"},{"lineNumber":457,"author":{"gitId":"jefrai"},"content":"                .replace(\"/\", \" \")","lastModifiedDate":"2023-02-20"},{"lineNumber":458,"author":{"gitId":"jefrai"},"content":"                .replace(\"\\\\\", \" \")","lastModifiedDate":"2023-02-20"},{"lineNumber":459,"author":{"gitId":"jefrai"},"content":"                .replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":460,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e(Arrays.asList(cleanDateStr.split(\" \")));","lastModifiedDate":"2023-02-17"},{"lineNumber":461,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":462,"author":{"gitId":"jefrai"},"content":"        // Parses natural date items out of supplied String.","lastModifiedDate":"2023-02-20"},{"lineNumber":463,"author":{"gitId":"jefrai"},"content":"        int dayOfWeek \u003d filterDayOfWeek(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":464,"author":{"gitId":"jefrai"},"content":"        int dayOfMonth \u003d filterDayOfMonth(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":465,"author":{"gitId":"jefrai"},"content":"        int month \u003d filterMonth(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":466,"author":{"gitId":"jefrai"},"content":"        int relativeDay \u003d filterRelativeDay(tokens);","lastModifiedDate":"2023-02-20"},{"lineNumber":467,"author":{"gitId":"jefrai"},"content":"        int relativeModifier \u003d filterRelativeModifier(tokens);","lastModifiedDate":"2023-02-20"},{"lineNumber":468,"author":{"gitId":"jefrai"},"content":"        LocalTime time \u003d filterTime(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":469,"author":{"gitId":"jefrai"},"content":"        int meridiem \u003d filterMeridiem(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":470,"author":{"gitId":"jefrai"},"content":"        LocalDate date \u003d filterDate(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":471,"author":{"gitId":"jefrai"},"content":"        int year \u003d filterYear(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":472,"author":{"gitId":"jefrai"},"content":"        int residualDayOfMonth \u003d filterResidualDayOfMonth(tokens);","lastModifiedDate":"2023-02-17"},{"lineNumber":473,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":474,"author":{"gitId":"jefrai"},"content":"        LocalTime altTime \u003d useLatestInterpretation ? LocalTime.MAX : LocalTime.MIN;","lastModifiedDate":"2023-02-20"},{"lineNumber":475,"author":{"gitId":"jefrai"},"content":"        if (time !\u003d null \u0026\u0026 meridiem !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":476,"author":{"gitId":"jefrai"},"content":"            if (meridiem \u003d\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":477,"author":{"gitId":"jefrai"},"content":"                time \u003d LocalTime.of(time.getHour() % 12 + 12, time.getMinute());","lastModifiedDate":"2023-02-17"},{"lineNumber":478,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":479,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":480,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":481,"author":{"gitId":"jefrai"},"content":"        // Constructs a LocalDateTime by trying combinations of natural date items, in increasing order of ambiguity.","lastModifiedDate":"2023-02-20"},{"lineNumber":482,"author":{"gitId":"jefrai"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":483,"author":{"gitId":"jefrai"},"content":"            return LocalDateTime.of(date, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-17"},{"lineNumber":484,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":485,"author":{"gitId":"jefrai"},"content":"        if (relativeDay !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":486,"author":{"gitId":"jefrai"},"content":"            date \u003d now().plusDays(relativeDay);","lastModifiedDate":"2023-02-20"},{"lineNumber":487,"author":{"gitId":"jefrai"},"content":"            return LocalDateTime.of(date, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":488,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":489,"author":{"gitId":"jefrai"},"content":"        if (dayOfMonth !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":490,"author":{"gitId":"jefrai"},"content":"            ChronoUnit relativeStep \u003d ChronoUnit.MONTHS;","lastModifiedDate":"2023-02-20"},{"lineNumber":491,"author":{"gitId":"jefrai"},"content":"            if (year \u003d\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":492,"author":{"gitId":"jefrai"},"content":"                year \u003d now().getYear();","lastModifiedDate":"2023-02-17"},{"lineNumber":493,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":494,"author":{"gitId":"jefrai"},"content":"                relativeStep \u003d ChronoUnit.FOREVER;","lastModifiedDate":"2023-02-20"},{"lineNumber":495,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":496,"author":{"gitId":"jefrai"},"content":"            if (month \u003d\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":497,"author":{"gitId":"jefrai"},"content":"                month \u003d now().getMonthValue();","lastModifiedDate":"2023-02-17"},{"lineNumber":498,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":499,"author":{"gitId":"jefrai"},"content":"                relativeStep \u003d ChronoUnit.YEARS;","lastModifiedDate":"2023-02-20"},{"lineNumber":500,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":501,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":502,"author":{"gitId":"jefrai"},"content":"                date \u003d LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2023-02-17"},{"lineNumber":503,"author":{"gitId":"jefrai"},"content":"                return offsetDate(date, relativeStep, relativeModifier, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":504,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":505,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":506,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":507,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":508,"author":{"gitId":"jefrai"},"content":"        if (residualDayOfMonth !\u003d NAT_NONE \u0026\u0026 month !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":509,"author":{"gitId":"jefrai"},"content":"            ChronoUnit relativeStep \u003d ChronoUnit.YEARS;","lastModifiedDate":"2023-02-20"},{"lineNumber":510,"author":{"gitId":"jefrai"},"content":"            if (year \u003d\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":511,"author":{"gitId":"jefrai"},"content":"                year \u003d now().getYear();","lastModifiedDate":"2023-02-17"},{"lineNumber":512,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":513,"author":{"gitId":"jefrai"},"content":"                relativeStep \u003d ChronoUnit.FOREVER;","lastModifiedDate":"2023-02-20"},{"lineNumber":514,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":515,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":516,"author":{"gitId":"jefrai"},"content":"                date \u003d LocalDate.of(year, month, residualDayOfMonth);","lastModifiedDate":"2023-02-17"},{"lineNumber":517,"author":{"gitId":"jefrai"},"content":"                return offsetDate(date, relativeStep, relativeModifier, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":518,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":519,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":520,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":521,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":522,"author":{"gitId":"jefrai"},"content":"        if (dayOfWeek !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":523,"author":{"gitId":"jefrai"},"content":"            date \u003d now().with(DayOfWeek.of(dayOfWeek));","lastModifiedDate":"2023-02-17"},{"lineNumber":524,"author":{"gitId":"jefrai"},"content":"            return offsetDate(date, ChronoUnit.WEEKS, relativeModifier, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":525,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":526,"author":{"gitId":"jefrai"},"content":"        if (residualDayOfMonth !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":527,"author":{"gitId":"jefrai"},"content":"            ChronoUnit relativeStep \u003d ChronoUnit.MONTHS;","lastModifiedDate":"2023-02-20"},{"lineNumber":528,"author":{"gitId":"jefrai"},"content":"            if (year \u003d\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":529,"author":{"gitId":"jefrai"},"content":"                year \u003d now().getYear();","lastModifiedDate":"2023-02-17"},{"lineNumber":530,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":531,"author":{"gitId":"jefrai"},"content":"                relativeStep \u003d ChronoUnit.FOREVER;","lastModifiedDate":"2023-02-20"},{"lineNumber":532,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":533,"author":{"gitId":"jefrai"},"content":"            month \u003d now().getMonthValue();","lastModifiedDate":"2023-02-17"},{"lineNumber":534,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":535,"author":{"gitId":"jefrai"},"content":"                date \u003d LocalDate.of(year, month, residualDayOfMonth);","lastModifiedDate":"2023-02-17"},{"lineNumber":536,"author":{"gitId":"jefrai"},"content":"                return offsetDate(date, relativeStep, relativeModifier, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":537,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":538,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":539,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":540,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":541,"author":{"gitId":"jefrai"},"content":"        if (month !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":542,"author":{"gitId":"jefrai"},"content":"            ChronoUnit relativeStep \u003d ChronoUnit.YEARS;","lastModifiedDate":"2023-02-20"},{"lineNumber":543,"author":{"gitId":"jefrai"},"content":"            if (year \u003d\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":544,"author":{"gitId":"jefrai"},"content":"                year \u003d now().getYear();","lastModifiedDate":"2023-02-17"},{"lineNumber":545,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":546,"author":{"gitId":"jefrai"},"content":"                relativeStep \u003d ChronoUnit.FOREVER;","lastModifiedDate":"2023-02-20"},{"lineNumber":547,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":548,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":549,"author":{"gitId":"jefrai"},"content":"                date \u003d useLatestInterpretation","lastModifiedDate":"2023-02-20"},{"lineNumber":550,"author":{"gitId":"jefrai"},"content":"                        ? YearMonth.of(year, month).atEndOfMonth()","lastModifiedDate":"2023-02-20"},{"lineNumber":551,"author":{"gitId":"jefrai"},"content":"                        : LocalDate.of(year, month, 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":552,"author":{"gitId":"jefrai"},"content":"                return offsetDate(date, relativeStep, relativeModifier, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":553,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":554,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":555,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":556,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":557,"author":{"gitId":"jefrai"},"content":"        if (year !\u003d NAT_NONE) {","lastModifiedDate":"2023-02-20"},{"lineNumber":558,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":559,"author":{"gitId":"jefrai"},"content":"                date \u003d useLatestInterpretation","lastModifiedDate":"2023-02-20"},{"lineNumber":560,"author":{"gitId":"jefrai"},"content":"                        ? LocalDate.of(year, 1, 1).with(TemporalAdjusters.lastDayOfYear())","lastModifiedDate":"2023-02-17"},{"lineNumber":561,"author":{"gitId":"jefrai"},"content":"                        : LocalDate.of(year, 1, 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":562,"author":{"gitId":"jefrai"},"content":"                return LocalDateTime.of(date, time !\u003d null ? time : altTime);","lastModifiedDate":"2023-02-17"},{"lineNumber":563,"author":{"gitId":"jefrai"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":564,"author":{"gitId":"jefrai"},"content":"                // Do nothing","lastModifiedDate":"2023-02-17"},{"lineNumber":565,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":566,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":567,"author":{"gitId":"jefrai"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":568,"author":{"gitId":"jefrai"},"content":"            return LocalDateTime.of(now(), time);","lastModifiedDate":"2023-02-17"},{"lineNumber":569,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":570,"author":{"gitId":"jefrai"},"content":"        throw new NatDateParseException(\"could not parse natural date\");","lastModifiedDate":"2023-02-17"},{"lineNumber":571,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":572,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":573,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":574,"author":{"gitId":"jefrai"},"content":"     * Recombines a fragmented \u003ccode\u003eString[]\u003c/code\u003e of consecutive","lastModifiedDate":"2023-01-30"},{"lineNumber":575,"author":{"gitId":"jefrai"},"content":"     * space-separated tokens into a single \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":576,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":577,"author":{"gitId":"jefrai"},"content":"     * @param args \u003ccode\u003eString[]\u003c/code\u003e to recombine.","lastModifiedDate":"2023-01-30"},{"lineNumber":578,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eString\u003c/code\u003e produced by recombining \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":579,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":580,"author":{"gitId":"jefrai"},"content":"    public static String recombine(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":581,"author":{"gitId":"jefrai"},"content":"        String arg \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":582,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":583,"author":{"gitId":"jefrai"},"content":"            arg +\u003d (i \u003e 0 ? \" \" : \"\") + args[i];","lastModifiedDate":"2023-01-30"},{"lineNumber":584,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":585,"author":{"gitId":"jefrai"},"content":"        return arg;","lastModifiedDate":"2023-01-30"},{"lineNumber":586,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":587,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":588,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":589,"author":{"gitId":"jefrai"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if the supplied line of input is requesting the program to exit.","lastModifiedDate":"2023-01-29"},{"lineNumber":590,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":591,"author":{"gitId":"jefrai"},"content":"     * @param cmdLine input to parse.","lastModifiedDate":"2023-01-30"},{"lineNumber":592,"author":{"gitId":"jefrai"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003ecmdLine\u003c/code\u003e represents an exit command.","lastModifiedDate":"2023-01-30"},{"lineNumber":593,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":594,"author":{"gitId":"jefrai"},"content":"    public static boolean isExitString(String cmdLine) {","lastModifiedDate":"2023-02-20"},{"lineNumber":595,"author":{"gitId":"jefrai"},"content":"        return cmdLine.split(\" \")[0].equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-01-30"},{"lineNumber":596,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":597,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":598,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":599,"author":{"gitId":"jefrai"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if the supplied command is a task-list display command.","lastModifiedDate":"2023-02-20"},{"lineNumber":600,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":601,"author":{"gitId":"jefrai"},"content":"     * @param cmd command to check.","lastModifiedDate":"2023-02-20"},{"lineNumber":602,"author":{"gitId":"jefrai"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if \u003ccode\u003ecmd\u003c/code\u003e represents a task-list display command.","lastModifiedDate":"2023-02-20"},{"lineNumber":603,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":604,"author":{"gitId":"jefrai"},"content":"    public static boolean isListCommand(Command cmd) {","lastModifiedDate":"2023-02-20"},{"lineNumber":605,"author":{"gitId":"jefrai"},"content":"        return cmd instanceof ListTasks || cmd instanceof Find;","lastModifiedDate":"2023-02-20"},{"lineNumber":606,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":607,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":608,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":609,"author":{"gitId":"jefrai"},"content":"     * Parses one supplied line of input String to create a \u003ccode\u003eCommand\u003c/code\u003e action.","lastModifiedDate":"2023-01-29"},{"lineNumber":610,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":611,"author":{"gitId":"jefrai"},"content":"     * @param cmdLine input denoting a \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":612,"author":{"gitId":"jefrai"},"content":"     * @return a \u003ccode\u003eCommand\u003c/code\u003e represented by \u003ccode\u003ecmdLine\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":613,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":614,"author":{"gitId":"jefrai"},"content":"    public static Command parse(String cmdLine) {","lastModifiedDate":"2023-01-27"},{"lineNumber":615,"author":{"gitId":"jefrai"},"content":"        String cmd \u003d cmdLine.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":616,"author":{"gitId":"jefrai"},"content":"        String[] args \u003d {};","lastModifiedDate":"2023-01-27"},{"lineNumber":617,"author":{"gitId":"jefrai"},"content":"        if (cmdLine.contains(\" \")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":618,"author":{"gitId":"jefrai"},"content":"            args \u003d cmdLine.substring(cmd.length() + 1).split(\" \", -1);","lastModifiedDate":"2023-01-30"},{"lineNumber":619,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":620,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":621,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":622,"author":{"gitId":"jefrai"},"content":"            switch (cmd) {","lastModifiedDate":"2023-01-27"},{"lineNumber":623,"author":{"gitId":"jefrai"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-27"},{"lineNumber":624,"author":{"gitId":"jefrai"},"content":"                return new Exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":625,"author":{"gitId":"jefrai"},"content":"            case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":626,"author":{"gitId":"jefrai"},"content":"                return parseList(args);","lastModifiedDate":"2023-01-27"},{"lineNumber":627,"author":{"gitId":"jefrai"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":628,"author":{"gitId":"jefrai"},"content":"                return new Mark(parseTaskIndex(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":629,"author":{"gitId":"jefrai"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":630,"author":{"gitId":"jefrai"},"content":"                return new Unmark(parseTaskIndex(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":631,"author":{"gitId":"jefrai"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":632,"author":{"gitId":"jefrai"},"content":"                return new AddTask(Todo.parseArgs(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":633,"author":{"gitId":"jefrai"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":634,"author":{"gitId":"jefrai"},"content":"                return new AddTask(Deadline.parseArgs(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":635,"author":{"gitId":"jefrai"},"content":"            case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":636,"author":{"gitId":"jefrai"},"content":"                return new AddTask(Event.parseArgs(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":637,"author":{"gitId":"jefrai"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":638,"author":{"gitId":"jefrai"},"content":"                return new Delete(parseTaskIndex(args));","lastModifiedDate":"2023-01-27"},{"lineNumber":639,"author":{"gitId":"jefrai"},"content":"            case \"save\":","lastModifiedDate":"2023-01-27"},{"lineNumber":640,"author":{"gitId":"jefrai"},"content":"                return new Save(recombine(args));","lastModifiedDate":"2023-01-30"},{"lineNumber":641,"author":{"gitId":"jefrai"},"content":"            case \"load\":","lastModifiedDate":"2023-01-27"},{"lineNumber":642,"author":{"gitId":"jefrai"},"content":"                return new Load(recombine(args));","lastModifiedDate":"2023-01-30"},{"lineNumber":643,"author":{"gitId":"jefrai"},"content":"            case \"find\":","lastModifiedDate":"2023-01-30"},{"lineNumber":644,"author":{"gitId":"jefrai"},"content":"                return new Find(\".*\" + recombine(args) + \".*\");","lastModifiedDate":"2023-01-30"},{"lineNumber":645,"author":{"gitId":"jefrai"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":646,"author":{"gitId":"jefrai"},"content":"                throw new MikiArgsException(\"\\\"\" + cmd + \"\\\" isn\u0027t a real word!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":647,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":648,"author":{"gitId":"jefrai"},"content":"        } catch (TaskParseException | MikiArgsException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":649,"author":{"gitId":"jefrai"},"content":"            return new ExceptionPrint(ex);","lastModifiedDate":"2023-01-27"},{"lineNumber":650,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":651,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":652,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":652}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":" * Represents a task with a textual objective, completion status,","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * and some chronological order.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    /** \u003ccode\u003eDateTimeFormatter\u003c/code\u003e format for parsing supplied time \u003ccode\u003eString\u003c/code\u003es. */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public static final String DATE_IN_FMT_STR \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    /** \u003ccode\u003eDateTimeFormatter\u003c/code\u003e format for outputting time \u003ccode\u003eString\u003c/code\u003es. */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    public static final String DATE_OUT_FMT_STR \u003d \"dd LLL yyyy hh:mm a\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    /** \u003ccode\u003eDateTimeFormatter\u003c/code\u003e for parsing supplied time \u003ccode\u003eString\u003c/code\u003es. */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    protected static final DateTimeFormatter DATE_IN_FMT \u003d DateTimeFormatter.ofPattern(DATE_IN_FMT_STR);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    /** \u003ccode\u003eDateTimeFormatter\u003c/code\u003e for outputting time \u003ccode\u003eString\u003c/code\u003es. */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    protected static final DateTimeFormatter DATE_OUT_FMT \u003d DateTimeFormatter.ofPattern(DATE_OUT_FMT_STR);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    /** The textual objective of this task. */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    protected String objective;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    /** The completion status of this task. */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * Creates a task with the specified textual objective.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     * @param objective description of this task\u0027s objective.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    public Task(String objective) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        assert objective !\u003d null : \"Task objective should be non-null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"     * Marks this task as completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e array encoding of this task,","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     * to be used to create an exact copy of this task.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eString[]\u003c/code\u003e encoding of this task.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"    public abstract String[] save();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this task occurs on","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"     * or before \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"     * @param date date to compare against.","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"     * @return true if this task occurs on or before \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public abstract boolean isBeforeDate(LocalDateTime date);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this task occurs on","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"     * or after \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"     * @param date date to compare against.","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"     * @return true if this task occurs on or after \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"    public abstract boolean isAfterDate(LocalDateTime date);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this task\u0027s objective","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"     * matches the specified regular expression.","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"     * @param regex regular expression to match against.","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"     * @return true if this task\u0027s objective matches \u003ccode\u003eregex\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"    public boolean hasMatchingObjective(String regex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        return objective.matches(regex);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"        return \"[\" + (isDone ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + objective;","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":94}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import exception.TaskListIndexException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * A wrapper for \u003ccode\u003eArrayList\u0026lt;Task\u0026gt;\u003c/code\u003e with custom","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * \u003ccode\u003eIndexOutOfBoundsException\u003c/code\u003e handling.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * Creates an empty tasklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e at the specified position of the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     * @param i index of the \u003ccode\u003eTask\u003c/code\u003e to return.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eTask\u003c/code\u003e at the specified position.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * @throws TaskListIndexException if no \u003ccode\u003eTask\u003c/code\u003e exists at the specified position.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    public Task get(int i) throws TaskListIndexException {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            return tasks.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            String message \u003d \"There\u0027s no task #\" + i + \"! \";","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                message +\u003d \"There is currently 1 task...\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                message +\u003d \"There are currently \" + tasks.size() + \" tasks...\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            throw new TaskListIndexException(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     * Appends the specified \u003ccode\u003eTask\u003c/code\u003e to the end of the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"     * @param t \u003ccode\u003eTask\u003c/code\u003e to be appended.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     * Deletes the \u003ccode\u003eTask\u003c/code\u003e at the specified position of the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"     * @param i index of the \u003ccode\u003eTask\u003c/code\u003e to return.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"     * @return the \u003ccode\u003eTask\u003c/code\u003e deleted from the specified position.","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"     * @throws TaskListIndexException if no \u003ccode\u003eTask\u003c/code\u003e exists at the specified position.","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    public Task delete(int i) throws TaskListIndexException {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            return tasks.remove(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            String message \u003d \"There\u0027s no task #\" + i + \"! \";","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"                message +\u003d \"There is currently 1 task...\";","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"                message +\u003d \"There are currently \" + tasks.size() + \" tasks...\";","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"            throw new TaskListIndexException(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"     * Clears the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"    public void clear() {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"     * Returns the size of the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"     * @return the size of the wrapped \u003ccode\u003eArrayList\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"    public int size() {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":87}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" * Implementation of a \u003ccode\u003eTask\u003c/code\u003e with no particular chronological position.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     * Creates a todo with the specified textual objective.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * @param objective description of this todo\u0027s objective.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    public Todo(String objective) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        super(objective);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e command-line arguments to create a todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * @param args arguments containing the todo to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * @return a todo represented by \u003ccode\u003eargs\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003eargs\u003c/code\u003e does not represent a valid todo.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    public static Todo parseArgs(String[] args) throws TaskParseException {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        String objective \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            objective +\u003d (objective.isEmpty() ? \"\" : \" \") + args[i];","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        if (objective.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"This todo is missing its body text!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        return new Todo(objective);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     * Parses the supplied \u003ccode\u003eString[]\u003c/code\u003e save data to create a todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     * @param data data containing the todo to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"     * @return a todo represented by \u003ccode\u003edata\u003c/code\u003e.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"     * @throws TaskParseException if \u003ccode\u003edata\u003c/code\u003e does not represent a valid todo.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    public static Todo parseLoad(String[] data) throws TaskParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"            String[] header \u003d data[0].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            if (!header[0].equals(\"T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"                throw new TaskParseException(\"Invalid todo data format\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            boolean isDone \u003d Boolean.parseBoolean(header[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            int objLines \u003d Integer.parseInt(header[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            String objective \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            int seek \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            for (int i \u003d 0; i \u003c objLines; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"                objective +\u003d (i \u003e 0 ? \"\\n\" : \"\") + data[seek++];","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            Todo todo \u003d new Todo(objective);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"            todo.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"            throw new TaskParseException(\"Todo data is malformed:\\n\" + ex.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    public String[] save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        ArrayList\u003cString\u003e repres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        String cur;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        cur \u003d \"T \" + isDone + \" \" + (objective.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count() + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        repres.add(cur);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"        Collections.addAll(repres, objective.split(\"\\n\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        return repres.toArray(new String[repres.size()]);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"    public boolean isBeforeDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"    public boolean isAfterDate(LocalDateTime date) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":104}},{"path":"src/main/java/ui/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":" * A UI controller for Miki interactive command-line I/O.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"public class Cli extends Ui {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"    private static final String DIV \u003d","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"            \"    ____________________________________________________________________________\";","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    private final boolean isAsciiOnly;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final boolean isAutoDiv \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * Creates a new CLI, optionally using ASCII-only versions of built-in \u003ccode\u003eStrings\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * @param isAsciiOnly whether this Cli shall operate in ASCII-only mode.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public Cli(boolean isAsciiOnly) {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        this.isAsciiOnly \u003d isAsciiOnly;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * Prints an output prompt and reads a single line of input.","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     * @return the read line of user input.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    public String readLine() {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        System.out.print(\"\u003e\");","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    public void printDiv() {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        System.out.println(DIV);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    public void printAutoDiv() {","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        if (isAutoDiv) {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            printDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"     * Prints a block of output to the user interface,","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"     * formatted with indentation for clarity.","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"     * @param s \u003ccode\u003eString\u003c/code\u003e to be printed.","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    private void print(String s) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        String[] lines \u003d s.split(\"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        for (String ln : lines) {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            System.out.println(\"     \" + ln);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"    public void printUser(String s) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public void printMiki(String s) {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        print(s);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    public void printTasks(String[] tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        for (String t : tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"            printMiki(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"    public void refreshTasks(String[] tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"    public void printIntro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        printAutoDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        String username \u003d System.getProperty(\"user.name\");","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"        if (!isAsciiOnly) {","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            printMiki(\"in honour / fuzuki miki / 2020 | 2021\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                    + \"\\uD83C\\uDF80✨\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"                    + \"Hello \" + username + \" !! Konmiki! ＼(￣▽￣)/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            printMiki(\"in honour / fuzuki miki / 2020 | 2021\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"                    + \"01 f3 80 / 27 28\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"                    + \"Hello \" + username + \" !! Konmiki! \\\\(^v^)/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"        printAutoDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"    public void clearInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"    public void close() {","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":108}},{"path":"src/main/java/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import ui.fxcontrol.DialogBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import ui.fxcontrol.MainWindow;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" * A UI controller for Miki interactive GUI I/O.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"public class Gui extends Ui {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    private final Stage stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private final boolean isAsciiOnly;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Creates a new GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     * @param mainWindow  \u003ccode\u003eJavaFX\u003c/code\u003e main window of the GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     * @param stage       \u003ccode\u003eJavaFX\u003c/code\u003e stage of the GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * @param isAsciiOnly whether this Cli shall operate in ASCII-only mode.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public Gui(MainWindow mainWindow, Stage stage, boolean isAsciiOnly) {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        this.isAsciiOnly \u003d isAsciiOnly;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public void printDiv() {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public void printAutoDiv() {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    public void printUser(String s) {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        mainWindow.addDialog(s, DialogBox.Pov.USER);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    public void printMiki(String s) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        mainWindow.addDialog(s, DialogBox.Pov.MIKI);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    public void printTasks(String[] tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        mainWindow.clearTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        for (String t : tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            mainWindow.addTask(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"    public void refreshTasks(String[] tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        printTasks(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public void printIntro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        String username \u003d System.getProperty(\"user.name\");","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        if (!isAsciiOnly) {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"            printMiki(\"Hello \" + username + \" !! Konmiki! \\uFF3C(\\uFFE3\\u25BD\\uFFE3)/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"            printMiki(\"Hello \" + username + \" !! Konmiki! \\\\(^v^)/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"    public void clearInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        mainWindow.clearInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"    public void close() {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        Timeline tl \u003d new Timeline(new KeyFrame(Duration.millis(1500), ae -\u003e stage.close()));","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        tl.setCycleCount(1);","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        tl.play();","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":85}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * A UI controller for Miki user interaction.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"public abstract class Ui {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"     * Prints a line divider to the user interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"    public abstract void printDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"     * Prints a line divider if automatic internal line dividers are enabled.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public abstract void printAutoDiv();","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * Prints a block of output to the user interface, quoted from the User.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     * @param s \u003ccode\u003eString\u003c/code\u003e to be printed.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public abstract void printUser(String s);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * Prints a block of output to the user interface, quoted as Miki.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     * @param s \u003ccode\u003eString\u003c/code\u003e to be printed.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    public abstract void printMiki(String s);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"     * Displays an array containing the \u003ccode\u003eString\u003c/code\u003e representations of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     * @param tasks \u003ccode\u003eString[]\u003c/code\u003e to display.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    public abstract void printTasks(String[] tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"     * Updates an existing task-list, if possible, with an array containing","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"     * the \u003ccode\u003eString\u003c/code\u003e representations of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     * @param tasks \u003ccode\u003eString[]\u003c/code\u003e to update with.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    public abstract void refreshTasks(String[] tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"     * Prints a welcome message to the user interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    public abstract void printIntro();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     * Clears the user input section, if necessary.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"    public abstract void clearInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"     * Closes the UI, if possible.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    public abstract void close();","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":61}},{"path":"src/main/java/ui/fxcontrol/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui.fxcontrol;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":" * A dialog box for the Miki JavaFX GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bobu_40x40.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    private final Image mikiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fuzuki_40x40.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     * Creates a new \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"     * @param text text contents of the \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"     * @param pov  quoted speaker of the \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    public DialogBox(String text, Pov pov) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"            dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            displayPicture.setClip(","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"                    new Circle(displayPicture.getX() + displayPicture.getFitWidth() / 2,","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"                            displayPicture.getY() + displayPicture.getFitHeight() / 2,","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"                            20));","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"            switch (pov) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            case MIKI:","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                displayPicture.setImage(mikiImage);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"                flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"            case USER:","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"                displayPicture.setImage(userImage);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            default:","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"                assert false : \"Invalid DialogBox dialogue perspective\";","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        ObservableList\u003cNode\u003e items \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        Collections.reverse(items);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        getChildren().setAll(items);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"     * Quoted speakers for a \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    public enum Pov {","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        MIKI,","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        USER","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":76}},{"path":"src/main/java/ui/fxcontrol/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui.fxcontrol;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import core.Miki;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" * A main window for the Miki JavaFX GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    private ImageView bgImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    private ScrollPane dialogScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    private ScrollPane taskScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    private VBox taskContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    private Miki miki;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        dialogScrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"     * Sets the \u003ccode\u003eMiki\u003c/code\u003e core used to respond to user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     * @param miki \u003ccode\u003eMiki\u003c/code\u003e core for responses.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    public void setMiki(Miki miki) {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        this.miki \u003d miki;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        miki.respond(userInput.getText());","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"     * Binds this \u003ccode\u003eMainWindow\u003c/code\u003e to a supplied \u003ccode\u003eStage\u003c/code\u003e for node resizing.","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"     * @param stage \u003ccode\u003eStage\u003c/code\u003e to bind to.","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    public void bindStage(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        bgImageView.setPreserveRatio(true);","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        bgImageView.fitWidthProperty().bind(stage.widthProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        bgImageView.fitHeightProperty().bind(stage.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"     * Adds a new \u003ccode\u003eDialogBox\u003c/code\u003e to the dialog panel.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"     * @param text text contents of the \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"     * @param pov  quoted speaker of the \u003ccode\u003eDialogBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    public void addDialog(String text, DialogBox.Pov pov) {","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        dialogContainer.getChildren().add(new DialogBox(text, pov));","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        assert !dialogContainer.getChildren().isEmpty() : \"Dialog Container should be non-empty after adding element\";","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"     * Adds a new \u003ccode\u003eTaskBox\u003c/code\u003e to the task-list panel.","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"     * @param text text contents of the \u003ccode\u003eTaskBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"    public void addTask(String text) {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        taskContainer.getChildren().add(new TaskBox(text));","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        assert !taskContainer.getChildren().isEmpty() : \"Task Container should be non-empty after adding element\";","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"     * Clears the user input \u003ccode\u003eTextField\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"    public void clearInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"        assert userInput.getText().isEmpty() : \"User Input field should be blank after clearing\";","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"     * Clears the task-list panel.","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"    public void clearTasks() {","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"        taskContainer.getChildren().clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"        assert taskContainer.getChildren().size() \u003d\u003d 0 : \"Task Container should be empty after clearing\";","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":100}},{"path":"src/main/java/ui/fxcontrol/TaskBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package ui.fxcontrol;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" * A task display box for the Miki JavaFX GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"public class TaskBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    private Label task;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"     * Creates a new \u003ccode\u003eTaskBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     * @param text text contents of the \u003ccode\u003eTaskBox\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public TaskBox(String text) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/TaskBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            task.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":33}},{"path":"src/main/resources/images/.credits.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"bobu.png","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"https://frame-illust.com/?p\u003d13713","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"fuzuki.png","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"https://web.archive.org/web/20220723003139/https://streamlabs.com/miki-eDI3kH/tip","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"background.png","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"https://twitter.com/ginga_elyka/status/1501093155638489088","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":8}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #101e39; -fx-background-insets: 3; -fx-background-radius: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"\u003cAnchorPane minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"1152.0\" style\u003d\"-fx-background-color: #000000;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.fxcontrol.MainWindow\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"        \u003cStackPane AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"                \u003cImageView fx:id\u003d\"bgImageView\" fitHeight\u003d\"600.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"                        \u003cImage url\u003d\"@../images/background.jpg\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.25, 0.75\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"                    \u003citems\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"                        \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-opacity: 0.95; -fx-background-color: #0d1117; -fx-border-color: #0d1117;\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"                                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"20.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"78.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"20.0\" prefWidth\u003d\"76.0\" text\u003d\"Post\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                                \u003cScrollPane fx:id\u003d\"dialogScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #0d1117; -fx-opacity: 1;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"                                    \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"                                        \u003cVBox fx:id\u003d\"dialogContainer\" mouseTransparent\u003d\"true\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #0d1117; -fx-opacity: 1;\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                                    \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"                                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                        \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" mouseTransparent\u003d\"true\" pickOnBounds\u003d\"false\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                        \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-opacity: 0.95;\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                                \u003cScrollPane fx:id\u003d\"taskScrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #0d1117; -fx-opacity: 1;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"                                    \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                                        \u003cVBox fx:id\u003d\"taskContainer\" mouseTransparent\u003d\"true\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #0d1117; -fx-opacity: 1;\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                                    \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"                                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                        \u003cInsets top\u003d\"-1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":54}},{"path":"src/main/resources/view/TaskBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #101e39; -fx-background-insets: 3; -fx-background-radius: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"        \u003cLabel fx:id\u003d\"task\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"        \u003cInsets bottom\u003d\"8.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"jefrai":14}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static task.Task.DATE_IN_FMT_STR;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import exception.TaskParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public void mark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        Event event \u003d new Event(\"Body\", LocalDateTime.of(2023, 3, 4, 11, 35), LocalDateTime.of(2023, 3, 4, 14, 20));","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"[E][X] Body (04 Mar 2023 11:35 AM - 04 Mar 2023 02:20 PM)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public void checkDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        Event event \u003d new Event(\"Body\", LocalDateTime.of(2023, 3, 4, 11, 35), LocalDateTime.of(2023, 3, 4, 14, 20));","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        assertTrue(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 35)));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        assertFalse(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 34)));","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        assertTrue(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 20)));","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        assertFalse(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 21)));","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    public void parse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            Event event \u003d Event.parseArgs(","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                    new String[]{\"Body\", \"/from\", \"2023-03-04\", \"11:35\", \"/to\", \"2023-03-04\", \"14:20\"});","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            assertEquals(\"[E][ ] Body (04 Mar 2023 11:35 AM - 04 Mar 2023 02:20 PM)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            assertTrue(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 35)));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"            assertFalse(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 34)));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            assertTrue(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 20)));","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"            assertFalse(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 21)));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        TaskParseException ex \u003d assertThrows(TaskParseException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"            Event.parseArgs(new String[]{\"Body\", \"/from\", \"malformed\", \"/to\", \"2023-03-04\", \"14:20\"});","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"\\\"malformed\\\"... is... when??!? write \" + DATE_IN_FMT_STR + \"!!\", ex.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    public void checkDate_parseLoad() {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            Event event \u003d Event.parseLoad(new String[]{\"E true 1 1 1\", \"Body\", \"2023-03-04 11:35\", \"2023-03-04 14:20\"});","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            assertEquals(\"[E][X] Body (04 Mar 2023 11:35 AM - 04 Mar 2023 02:20 PM)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            assertTrue(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 35)));","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            assertFalse(event.isBeforeDate(LocalDateTime.of(2023, 3, 4, 11, 34)));","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            assertTrue(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 20)));","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            assertFalse(event.isAfterDate(LocalDateTime.of(2023, 3, 4, 14, 21)));","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jefrai":60}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public void saveLoad() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        Storage storage \u003d new Storage(\"./data/.gradle/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        tasks.add(new Event(\"Body\", LocalDateTime.of(2023, 3, 4, 11, 35), LocalDateTime.of(2023, 3, 4, 14, 20)));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        tasks.get(0).mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        tasks.add(new Todo(\"Item\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e storage.save(\"saveLoad\", tasks));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e storage.load(\"saveLoad\", tasks));","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"[E][X] Body (04 Mar 2023 11:35 AM - 04 Mar 2023 02:20 PM)\", tasks.get(0).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"[T][ ] Item\", tasks.get(1).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    public void saveLoad_empty() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        Storage storage \u003d new Storage(\"./data/.gradle/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e storage.save(\"saveLoad_empty\", tasks));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        tasks.add(new Todo(\"Item\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        assertDoesNotThrow(() -\u003e storage.load(\"saveLoad_empty\", tasks));","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    public void load_noFile_exceptionThrown() {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        Storage storage \u003d new Storage(\"./data/.gradle/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        IOException ex \u003d assertThrows(IOException.class, () -\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"                storage.load(\"load_noFile_exceptionThrown\", new TaskList()));","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        assertEquals(\".\\\\data\\\\.gradle\\\\load_noFile_exceptionThrown\", ex.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jefrai":48}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.io.FileDescriptor;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import ui.Cli;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"public class UiTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public void printIntro_ascii() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"        Ui ui \u003d new Cli(true);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        ui.printIntro();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        String out \u003d outStream.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"        assertEquals(5, out.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    public void printIntro() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        Ui ui \u003d new Cli(false);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        ui.printIntro();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        String out \u003d outStream.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        assertEquals(5, out.codePoints().filter(c -\u003e c \u003d\u003d \u0027\\n\u0027).count());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    public void printRead_ascii() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        ByteArrayInputStream inStream \u003d new ByteArrayInputStream(\"Input text\".getBytes());","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        System.setIn(inStream);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        Cli ui \u003d new Cli(false);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"hello world\");","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        ui.printDiv();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"mint fantôme\");","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        String in \u003d ui.readLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        String out \u003d outStream.toString().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        System.setIn(new FileInputStream(FileDescriptor.in));","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"Input text\", in);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"     hello world\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"                        + \"    ____________________________________________________________________________\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"                        + \"     mint fantôme\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"                        + \"\u003e\",","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"                out);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    //@Test","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public void printRead() {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        ByteArrayInputStream inStream \u003d","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"                new ByteArrayInputStream(\"Input text \\u29CD\\u23E7\\u2A33\\u2A7C\\u299E\\u2A04\\u2B48\".getBytes());","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        ByteArrayOutputStream outStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        System.setIn(inStream);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(outStream));","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        Cli ui \u003d new Cli(false);","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"hello world\");","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"\\u6587\\u6708\\u307F\\u304D x fantôme\");","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        ui.printDiv();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        ui.printMiki(\"\\u225D\\u237C\\u2A50\\u2A69\\u2368\\u2118\");","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        String in \u003d ui.readLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        String out \u003d outStream.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        System.setIn(new FileInputStream(FileDescriptor.in));","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"Input text \\u29CD\\u23E7\\u2A33\\u2A7C\\u299E\\u2A04\\u2B48\", in);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"        assertEquals(\"    hello world\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"                        + \"    \\u6587\\u6708\\u307F\\u304D x fantôme\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"                        + \"    ____________________________________________________________________________\"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                        + \"    \\u225D\\u237C\\u2A50\\u2A69\\u2368\\u2118\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"                        + \"\u003e\",","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"                out);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jefrai":92}},{"path":"text-ui-test/data/autosave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"5","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"2","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"T true 1","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"read book","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"3","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"D false 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"get bread","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"2023-03-10 18:00","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"4","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"E false 1 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"lunch","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"2023-05-01 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"2023-05-01 13:00","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"2","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"T false 1","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"git-push","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"4","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"E false 1 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"lecture","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"2023-02-02 14:00","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"2023-02-02 16:00","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":21}},{"path":"text-ui-test/data/test1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"5","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"2","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"T true 1","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"read book","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"3","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"D false 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"get bread","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"2023-03-10 18:00","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"4","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"E false 1 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"lunch","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"2023-05-01 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"2023-05-01 13:00","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"2","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"T false 1","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"git-push","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"4","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"E false 1 1 1","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"lecture","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"2023-02-02 14:00","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"2023-02-02 16:00","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jefrai":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"deadline get bread /by 2023-03-10 18:00","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"eat bread","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"event lunch /from 2023-05-01 12:00 /to 2023-05-01 13:00 /from 2023-05-01 11:00","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"event lunch /from 2023-05-01 12:00 /to 2023-05-01 13:00","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"todo git-push","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"unmark bread","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"todo","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"find ^lunch$","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"unmark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"find bread","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"delete","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"deadline ip /by 2023-02-01 23:59 /by 2023-02-02 14:00","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"event lecture /to 2023-02-02 16:00 /from 2023-02-02 14:00","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"find [a-z]{5}","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"find \\b[a-z]{5}\\b","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"save test1.txt","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"find l.*c","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"mark 2","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"deadline bread /by 2023-03-17 18:00","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"delete 4","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"unmark 1","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"find bread","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"find  bread","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"load test1.txt","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"list","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"list /from 2023-02-02 14:00 /to 2023-05-01 13:00","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"list /from 2023-02-02 16:00 /to 2023-05-01 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"list /from 2023-02-02 16:00","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"list /from 2023-02-02 16:01","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"list /to 2023-05-01 11:59","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"list /to 2023-05-01 12:00","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"list /from 2023-02-02 14:00 /to 2023-03-10 17:59","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jefrai":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"call ..\\gradlew assemble -p ..\\","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"rmdir /s /q ..\\bin","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"mkdir ..\\bin","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"xcopy /s /y ..\\build\\classes\\java\\main ..\\bin","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"REM set environment variables","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"set username\u003duser","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"java -classpath ..\\bin core.Init --ascii-only --no-autoload --cli \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"jefrai":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"USER\u003d\"user\"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"java -classpath ../bin Miki --ascii-only --no-autoload --cli \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"jefrai":3}}]
