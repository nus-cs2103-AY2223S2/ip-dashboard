[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"jereldlimjy":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"# The Karen User Guide","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"## ðŸ‘‹ Introduction","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"The Karen is a chatbot to help keep track of your tasks. Be careful though, she is not the most polite woman out there.","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"## ðŸ‘© Features","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"### Add a Todo task","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"Adds a simple todo task with a description.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"`todo buy dinner`","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"You better finish this soon:","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"[T][ ] buy dinner","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"Can you finish all \u003cnumber of existing tasks\u003e tasks in your list?","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"### Add a Deadline task","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"Adds a deadline task with a description and deadline.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"`deadline do CS2103T quiz /by friday 2023-02-17 14:00`","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"You better finish this soon:","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"[D][ ] do CS2103T quiz (by: Feb 17 2023 2:00PM)","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"Can you finish all \u003cnumber of existing tasks\u003e tasks in your list?","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"### Add an Event task","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"Adds an event task with a description, start date and end date.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"`event pool party /from 2023-02-14 14:00 /to 2023-02-14 20:00`","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"You better finish this soon:","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"[E][ ] pool party (from: Feb 14 2023 2:00PM to: Feb 14 2023 8:00PM)","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"Can you finish all \u003cnumber of existing tasks\u003e tasks in your list?","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"### Mark a task","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"Marks a task as completed.","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"`mark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"Congrats, I guess you get a medal?","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"[T][X] buy dinner","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"### Unmark a task","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"Marks a previously completed task as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"jereldlimjy"},"content":"`unmark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"jereldlimjy"},"content":"Why are you so lazy?","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"jereldlimjy"},"content":"[T][ ] buy dinner","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"jereldlimjy"},"content":"### Delete a task","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"jereldlimjy"},"content":"Removes a task from the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"jereldlimjy"},"content":"`delete 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"jereldlimjy"},"content":"Okay okay, this has been removed:","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"jereldlimjy"},"content":"[T][ ] buy dinner","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"jereldlimjy"},"content":"Now you have \u003cnumber of existing tasks\u003e tasks left.","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"jereldlimjy"},"content":"### Delete tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"jereldlimjy"},"content":"Removes all tasks from the list which contain the specified keyword.","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"jereldlimjy"},"content":"`deleteAll party`","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"jereldlimjy"},"content":"Okay fine, I have removed these tasks which contain party:","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"jereldlimjy"},"content":"[E][ ] pool party (from: Feb 14 2023 2:00PM to: Feb 14 2023 8:00PM)","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"jereldlimjy"},"content":"Now you have \u003cnumber of existing tasks\u003e tasks left.","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"jereldlimjy"},"content":"### List tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"jereldlimjy"},"content":"Lists out all existing tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"jereldlimjy"},"content":"`list`","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"jereldlimjy"},"content":"1. [D][ ] do CS2103T quiz (by: Feb 17 2023 2:00PM)","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"jereldlimjy"},"content":"### Find tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"jereldlimjy"},"content":"Lists out all tasks which contain the specified keyword.","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"jereldlimjy"},"content":"`find CS2103T`","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"jereldlimjy"},"content":"**Expected outcome**:","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"jereldlimjy"},"content":"Here you go, do you need anything else?","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"jereldlimjy"},"content":"1. [D][ ] do CS2103T quiz (by: Feb 17 2023 2:00PM)","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"jereldlimjy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"jereldlimjy"},"content":"### Quit program","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"jereldlimjy"},"content":"Quits The Karen program.","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"jereldlimjy"},"content":"**Example of usage**:","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"jereldlimjy"},"content":"`bye`","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"jereldlimjy":142,"-":15}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     * @param tasks TaskList object containing list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     * @param response Response object for dealing with user interactions.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     * @param storage Storage object to save tasks to a file.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @throws IOException If I/O error occurs.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public abstract String execute(TaskList tasks, Response response, Storage storage) throws IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":15}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    private DateTimeFormatter formatterToString \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"     * @param by Due date and time of the task in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     * @throws DateTimeParseException If deadline cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"     * Returns deadline of the task as a string.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"     * @return Deadline as a String object.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"        return by.format(formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatterToString) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jereldlimjy":37}},{"path":"src/main/java/duke/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Deadline command.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description for the Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @param by Deadline for the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        return response.showAddTask(deadline, tasks.getTasks());","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":24}},{"path":"src/main/java/duke/DeleteAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"public class DeleteAllCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    private String keyword;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Delete All command.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     * @param keyword Keyword used to find tasks to delete from task list.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public DeleteAllCommand(String keyword) {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e tasksToRemove \u003d tasks.filter(keyword);","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        if (tasksToRemove.isEmpty()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"            return response.showNoTasksFound(keyword);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        for (Task t : tasksToRemove) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"            taskList.remove(t);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"        return response.showDeleteAllTasks(tasksToRemove, taskList, keyword);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"jereldlimjy":35}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Delete command.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskNumber Task number of the task to be deleted from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        Task taskToDelete \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        taskList.remove(taskToDelete);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        return response.showDeleteTask(taskToDelete, taskList);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":26}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"    private Response response;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     * Represents the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"     * @param filePath File path of task list in storage.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"        response \u003d new Response();","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"        return response.showGreeting();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"     * Returns Duke\u0027s response to user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"     * @param input User input.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"            assert c !\u003d null : \"command c should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"            return c.execute(tasks, response, storage);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"            return response.showError(e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"            return response.showError(\"Can you please double check your task number?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"            return response.showError(\"Can you please pass in a number?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"            return response.showError(\"Can you please ensure your dates are valid? (hint: yyyy-mm-dd)\");","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"            return response.showError(\"Sorry, something went wrong with saving\");","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jereldlimjy":53,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jereldlimjy":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"    private DateTimeFormatter formatterToString \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description for the event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     * @param from Start date and time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"     * @param to End date and time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"     * @throws DateTimeParseException If start or end dates and times cannot be parsed","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     * into LocalDateTime objects.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"     * Returns start date and time of the event as a string.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"     * @return Start date and time as a String object.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"        return from.format(formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"     * Returns end date and time of the event as a string.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"     * @return End date and time as a String object.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"        return to.format(formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatterToString)","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"                + \" to: \" + to.format(formatterToString) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jereldlimjy":51}},{"path":"src/main/java/duke/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    private Event event;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for an Event command.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @param from Start date and time of the event in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     * @param to End date and time of the event in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"        event \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        tasks.add(event);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        return response.showAddTask(event, tasks.getTasks());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":25}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    private String keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e filteredList \u003d tasks.filter(keyword);","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"        return response.showFoundTasks(filteredList);","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"jereldlimjy":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"        return response.showTaskList(tasks.getTasks());","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":8}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    private Duke duke \u003d new Duke(\"data/data.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"            stage.setTitle(\"The Karen\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"            String greetingMessage \u003d duke.getGreetingMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendWelcomeMessage(greetingMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import javafx.stage.Window;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    public void sendWelcomeMessage(String message) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"    private void handleUserInput(Event event) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"            handleExitProgram(event);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"    private void handleExitProgram(Event event) {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"        Object o \u003d event.getSource();","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"        if (o instanceof Button) {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"            Button button \u003d (Button) event.getSource();","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"            Window window \u003d button.getScene().getWindow();","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"            Stage stage \u003d (Stage) window;","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"            stage.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"            TextField textField \u003d (TextField) event.getSource();","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"            Window window \u003d textField.getScene().getWindow();","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"            Stage stage \u003d (Stage) window;","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"            stage.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":79}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Mark command.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskNumber Task number of the task in the task list to be marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        Task currTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        currTask.setDone(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"        return response.showTaskMarkDone(currTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"     * Parses input by the user and returns the corresponding Command object.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"     * @param command String input by the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     * @throws DukeException If command cannot be parsed into a known command.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"            int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"            int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        } else if (command.startsWith(\"deleteAll\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"            return new DeleteAllCommand(command.split(\" \")[1]);","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"            int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"            return new FindCommand(command.split(\" \")[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"            String type \u003d command.split(\" \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"            String[] commandArr \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"            switch (type) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"How are you gonna do an empty todo?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"                String todoDescription \u003d commandArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"                return new TodoCommand(todoDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"Deadline for...?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"                String[] deadlineArr \u003d commandArr[1].split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"                if (deadlineArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"What\u0027s the deadline for your task??\");","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"                return new DeadlineCommand(deadlineArr[0], deadlineArr[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"What event is this??\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"                String[] eventArr \u003d commandArr[1].split(\" /from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"                if (eventArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"When does your event start??\");","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"                String[] fromToArr \u003d eventArr[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"                if (fromToArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"                    throw new DukeException(\"When does your event end??\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"                return new EventCommand(eventArr[0], fromToArr[0], fromToArr[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"                throw new DukeException(\"Sorry I don\u0027t understand what you\u0027re talking about.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":75}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"public class Response {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the greeting message.","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    public String showGreeting() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"        return \"Karen:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"                + \"Can I speak to your manager?\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"                + \"Just kidding, this is Karen. How can I help you today?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the exit message.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    public String showExit() {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"        return \"Karen:\\n\" + \"Bye. This was of great inconvenience.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the tasks in the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    public String showTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"            taskListString +\u003d (i + 1) + \". \" + currTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"        return taskListString;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when a task is marked as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"     * @param task Task marked as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"    public String showTaskMarkDone(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"        return \"Congrats, I guess you get a medal?\\n\" + task;","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when a task is marked as not done.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"     * @param task Task marked as not done.","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"    public String showTaskMarkUndone(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"        return \"Why are you so lazy?\\n\" + task;","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when a task is deleted from the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"    public String showDeleteTask(Task task, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"        return \"Okay okay, this has been removed:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"                + task.toString()","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks left.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when tasks are deleted from the task list.","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"     * @param removedTasks Tasks that were removed from task list.","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"     * @param keyword Keyword that was used to remove tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"     * @return","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"    public String showDeleteAllTasks(List\u003cTask\u003e removedTasks, List\u003cTask\u003e taskList, String keyword) {","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"        String message \u003d \"Okay fine, I have removed these tasks which contain \" + keyword + \":\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"jereldlimjy"},"content":"        for (Task t : removedTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"jereldlimjy"},"content":"            message +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"jereldlimjy"},"content":"        message +\u003d \"Now you have \" + taskList.size() + \" tasks left.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"jereldlimjy"},"content":"        return message;","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when no tasks are found.","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"jereldlimjy"},"content":"     * @param keyword Keyword used to search for tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"jereldlimjy"},"content":"     * @return","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"jereldlimjy"},"content":"    public String showNoTasksFound(String keyword) {","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"jereldlimjy"},"content":"        return \"Are you sure there are any tasks which contain \"","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"jereldlimjy"},"content":"                + keyword + \"?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"jereldlimjy"},"content":"     * Returns message when a new task is added to the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"jereldlimjy"},"content":"     * @param task Task that was added.","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList Current list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"jereldlimjy"},"content":"    public String showAddTask(Task task, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"jereldlimjy"},"content":"        return \"You better finish this soon:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"jereldlimjy"},"content":"                + task","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"jereldlimjy"},"content":"                + \"\\nCan you finish all \" + taskList.size() + \" tasks in your list?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"jereldlimjy"},"content":"     * Returns list of found tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"jereldlimjy"},"content":"     * @return Found tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"jereldlimjy"},"content":"    public String showFoundTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"jereldlimjy"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"jereldlimjy"},"content":"            return \"What are you trying to find?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"jereldlimjy"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"jereldlimjy"},"content":"            String foundTasks \u003d \"Here you go, do you need anything else?\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"jereldlimjy"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"jereldlimjy"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"jereldlimjy"},"content":"                foundTasks +\u003d (i + 1) + \". \" + currTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"jereldlimjy"},"content":"            return foundTasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"jereldlimjy"},"content":"    /** Error methods */","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"jereldlimjy"},"content":"     * Returns error message.","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"jereldlimjy"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"jereldlimjy"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"jereldlimjy"},"content":"        return message;","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":141}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     * Loads task list from file.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     * @return List of tasks loaded from file.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"     * @throws FileNotFoundException If file does not exist.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        // check if file exists","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"                String currTask \u003d s.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"                String[] taskSplit \u003d currTask.split(\" \\\\| \");","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"                if (taskSplit[0].equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"                    task \u003d new Todo(taskSplit[2]);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"                } else if (taskSplit[0].equals(\"D\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"                    task \u003d new Deadline(taskSplit[2], taskSplit[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"                    String[] eventTime \u003d taskSplit[3].split(\" - \");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"                    task \u003d new Event(taskSplit[2], eventTime[0], eventTime[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"                if (Integer.parseInt(taskSplit[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"                    task.setDone(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"        return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"     * Saves current list of tasks to file.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskList List of tasks to be saved to file.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"     * @throws IOException If I/O error occurs.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"    public void save(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"        // check if directory exists","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"        // check if file exists","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"        if (!f.isFile()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jereldlimjy"},"content":"        PrintWriter output \u003d new PrintWriter(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jereldlimjy"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jereldlimjy"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jereldlimjy"},"content":"                output.printf(\"T | %d | %s%n\", task.getStatusIconInt(), task.getDescription());","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jereldlimjy"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jereldlimjy"},"content":"                output.printf(\"D | %d | %s | %s%n\",","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"jereldlimjy"},"content":"                        task.getStatusIconInt(),","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"                        task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"jereldlimjy"},"content":"                        ((Deadline) task).getBy());","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"jereldlimjy"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"jereldlimjy"},"content":"                output.printf(\"E | %d | %s | %s - %s%n\",","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"jereldlimjy"},"content":"                        task.getStatusIconInt(),","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"jereldlimjy"},"content":"                        task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"jereldlimjy"},"content":"                        ((Event) task).getFrom(),","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"jereldlimjy"},"content":"                        ((Event) task).getTo());","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"jereldlimjy"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"jereldlimjy"},"content":"                assert false : task;","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"jereldlimjy"},"content":"        output.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jereldlimjy":102}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"     * @return X or a single space depending on whether the task is done.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the status of the task as an integer.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"     * @return 1 or 0 depending on whether the task is done.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    public int getStatusIconInt() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"     * @return Description of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"        return description;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"     * Sets task as done or not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"     * @param isDone Status of the task to be set.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jereldlimjy":52}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    protected List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        return tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"     * Adds a task into the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"     * @param task Task object to be added into task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    public List\u003cTask\u003e filter(String keyword) {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"        return getTasks().stream().filter(task -\u003e task.toString().contains(keyword))","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":40}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jereldlimjy":18}},{"path":"src/main/java/duke/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"    private Todo todo;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for a Todo command.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"        todo \u003d new Todo(description);","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        return response.showAddTask(todo, tasks.getTasks());","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":23}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"     * Constructor for an Unmark command.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"     * @param taskNumber Task number of the task in the task list to be marked as not done.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    public String execute(TaskList tasks, Response response, Storage storage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        Task currTask \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        currTask.setDone(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"        return response.showTaskMarkUndone(currTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jereldlimjy":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: lightPink;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: lightBlue;\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"jereldlimjy":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    public void descriptionTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        Deadline deadline \u003d new Deadline(\"Eat lunch\", \"2023-02-04 14:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"Eat lunch\", deadline.getDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    public void byTimeTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"        Deadline deadline \u003d new Deadline(\"Eat lunch\", \"2023-02-04 14:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"2023-02-04 14:00\", deadline.getBy());","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    public void notDoneStatusIconTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        Deadline deadline \u003d new Deadline(\"Eat lunch\", \"2023-02-04 14:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\" \", deadline.getStatusIcon());","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    public void doneStatusIconTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"        Deadline deadline \u003d new Deadline(\"Eat lunch\", \"2023-02-04 14:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"        deadline.setDone(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"X\", deadline.getStatusIcon());","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jereldlimjy":33}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class EventTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    public void descriptionTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        Event event \u003d new Event(\"Party\", \"2023-02-01 18:00\", \"2023-02-01 22:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"Party\", event.getDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    public void fromTimeTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"        Event event \u003d new Event(\"Party\", \"2023-02-01 18:00\", \"2023-02-01 22:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"2023-02-01 18:00\", event.getFrom());","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    @Test void toTimeTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        Event event \u003d new Event(\"Party\", \"2023-02-01 18:00\", \"2023-02-01 22:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"2023-02-01 22:00\", event.getTo());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jereldlimjy":25}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"    public void descriptionTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"        Todo todo \u003d new Todo(\"Hello World\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(\"Hello World\", todo.getDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jereldlimjy":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"bye","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jereldlimjy":7}}]
