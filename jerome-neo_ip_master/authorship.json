[{"path":".github/workflows/gradle.yml.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"name: Java CI","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"on: [push, pull_request]","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"jobs:","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"  build:","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    strategy:","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"      matrix:","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    steps:","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"      - name: Set up repository","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"      - name: Set up repository","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"        with:","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"          ref: master","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"      - name: Merge to master","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        uses: gradle/wrapper-validation-action@v1","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"      - name: Setup JDK 11","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        uses: actions/setup-java@v1","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        with:","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"          java-version: \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"          java-package: jdk+fx","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        run: ./gradlew check","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"      - name: Perform IO redirection test (*NIX)","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        run: ./runtest.sh","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"      - name: Perform IO redirection test (MacOS)","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        run: ./runtest.sh","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"      - name: Perform IO redirection test (Windows)","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        shell: cmd","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        run: runtest.bat","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":50}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerome-neo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"checkstyle {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    mainClassName \u003d \"duke.launcher.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"// Additions for style checks","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"repositories {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"dependencies {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"// Additions for JavaFx","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"repositories {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"dependencies {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":39,"-":31}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"Last Saved at 2023-02-16T01:12:27.504549","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"Todo: run     \u003d\u003d\u003e INCOMPLETE!","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"Todo: wa ter platns     \u003d\u003d\u003e INCOMPLETE!","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"Todo: water plants     \u003d\u003d\u003e INCOMPLETE!","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"Todo: project meeting     \u003d\u003d\u003e INCOMPLETE!","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"jerome-neo":6}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.exception;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.exception.DukeException.java","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      Description: duke.exception.DukeException inherits from Exception.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for exception. Takes in the message you want to include in this custom exception.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"     * @param message","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"        super(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"jerome-neo":17}},{"path":"src/main/java/duke/launcher/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.launcher;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":" * DialogBox class for the dialog boxes in the GUI.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    private Label text;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * Creates a dialog box consisting two different controls. ImageView and Label.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     * @param l a label","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     * @param iv an image","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":55}},{"path":"src/main/java/duke/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.launcher;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import duke.main.Main;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":13}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.main;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import duke.launcher.DialogBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.parse.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import duke.store.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.main.Duke.java","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":" *      Description: The main class for the duke.main.Duke application.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    private static final String INSTRUCTIONS \u003d \"Didn\u0027t catch that, please input valid command. \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"            + \"Help me understand by following this format: \\n \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"            + \"todo ### \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"            + \"event ### /from dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"            + \"deadline ### /by dd/mm/yyyy hhmm \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"            + \"Do ensure that you date time is of the correct format. \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"            + \"\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"            + \"To query or make changes in the list, use: \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            + \"list \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"            + \"find ### \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"            + \"delete INDEX \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"            + \"mark INDEX \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"            + \"unmark INDEX \\n \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"            + \"### indicates the task and INDEX indicates the number on the list.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    private static Parser logic \u003d new Parser();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    private static Storage store \u003d new Storage();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alien.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    private Image jamie \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jamie.jpg\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string greeting.","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"     * @return String","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    public String greeting() {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        return \"Hi, I am Jamie. What should I put in your task management list?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        // Step 2","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        stage.setTitle(\"Jamie\");","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"        // You will need to import javafx.scene.Layout region for this","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"        //","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"        // Step 3","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jerome-neo"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jerome-neo"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jerome-neo"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jerome-neo"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jerome-neo"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jerome-neo"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jerome-neo"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jerome-neo"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jerome-neo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jerome-neo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jerome-neo"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"jerome-neo"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"jerome-neo"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"jerome-neo"},"content":"                .addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jerome-neo"},"content":"                        DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jerome-neo"},"content":"                        DialogBox.getDukeDialog(dukeText, new ImageView(jamie)));","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"jerome-neo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":166,"author":{"gitId":"jerome-neo"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jerome-neo"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"jerome-neo"},"content":"    public String getResponse(String input) throws DukeException, IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"jerome-neo"},"content":"        if (!logic.isValidCommand(input)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"jerome-neo"},"content":"            return INSTRUCTIONS;","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"jerome-neo"},"content":"        Storage.autoSave(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"jerome-neo"},"content":"        if (logic.isTaskCommand(input)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d logic.toTask(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"jerome-neo"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"jerome-neo"},"content":"            return tasks.announceAddedString();","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"jerome-neo"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"jerome-neo"},"content":"            return \"Thank you and goodbye.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":181,"author":{"gitId":"jerome-neo"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"jerome-neo"},"content":"            return tasks.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"jerome-neo"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"jerome-neo"},"content":"            int taskNumber \u003d logic.indexToMark(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":185,"author":{"gitId":"jerome-neo"},"content":"            return tasks.taskMarkedAtIndexString(--taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":186,"author":{"gitId":"jerome-neo"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"jerome-neo"},"content":"            int taskNumber \u003d logic.indexToUnmark(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"jerome-neo"},"content":"            return tasks.taskUnmarkedAtIndexString(--taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"jerome-neo"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"jerome-neo"},"content":"            int taskNumber \u003d logic.indexToDelete(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"jerome-neo"},"content":"            tasks.deleteTaskAtIndexString(--taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"jerome-neo"},"content":"            return tasks.deleteTaskAtIndexString(--taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":193,"author":{"gitId":"jerome-neo"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"jerome-neo"},"content":"            assert input.startsWith(\"find\") \u003d\u003d true : \"unhandled command.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"jerome-neo"},"content":"            String description \u003d logic.commandToDescription(input); // find command","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"jerome-neo"},"content":"            return tasks.matchDescriptionString(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":198,"-":2}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.main;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import duke.ux.MainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"            stage.setTitle(\"Jamie\");","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":33}},{"path":"src/main/java/duke/parse/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.parse;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.parse.Parser.java","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":" *      Description: duke.parse.Parser class deals with making sense of the user command.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    private static final String BYE_PATTERN \u003d \"bye\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    private static final String LIST_PATTERN \u003d \"list\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private static final String MARK_PATTERN \u003d \"mark\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    private static final String UNMARK_PATTERN \u003d \"unmark\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    private static final String DELETE_PATTERN \u003d \"delete\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    private static final String TODO_PATTERN \u003d \"todo\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    private static final String DEADLINE_PATTERN \u003d \"deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    private static final String EVENT_PATTERN \u003d \"event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    private static final String FIND_PATTERN \u003d \"find\\\\s+\\\\s*(.*)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    public Parser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean that checks if the command matches the aforementioned command formats.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"     * @return true if the command is recognised, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    public static boolean isValidCommand(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        String[] commandsCollection \u003d {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"            BYE_PATTERN, LIST_PATTERN, MARK_PATTERN, UNMARK_PATTERN, DELETE_PATTERN,","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            TODO_PATTERN, DEADLINE_PATTERN, EVENT_PATTERN, FIND_PATTERN","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        };","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        for (String pattern : commandsCollection) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"            if (command.matches(pattern)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean that checks if the command is a Task command and it matches the aforementioned command formats.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"     * @return true if the command is recognised as a Task, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    public static boolean isTaskCommand(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        String[] commandsCollection \u003d {TODO_PATTERN, DEADLINE_PATTERN, EVENT_PATTERN};","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"        for (String pattern : commandsCollection) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"            if (command.matches(pattern)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"     * Returns a Task object if the command is compatible.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"     * @return a Task object representation of the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"     * @throws DukeException is thrown if the command is incompatible.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"    public static Task toTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        if (!Parser.isTaskCommand(command)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"            throw new DukeException(\"☹ OOPS!!! You cannot convert a non-task command into a task.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        if (command.matches(TODO_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"            String taskDescription \u003d command.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"        } else if (command.matches(DEADLINE_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"            String description \u003d command.substring(9);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"            String[] temp \u003d description.split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"            String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"            String by \u003d temp[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"            task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        } else { // (command.matches(EVENT_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"            String description \u003d command.substring(6);","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"            String[] temp \u003d description.split(\"\\\\s*/from\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"            String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"            String[] time \u003d temp[1].split(\"\\\\s*/to\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"            String from \u003d time[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"            String to \u003d time[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"            task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be marked in a duke.task.TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToMark(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(5));","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be unmarked in a duke.task.TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToUnmark(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be deleted in a duke.task.TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToDelete(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string. Extracts the description of the find command.","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"     * @param command is equal to find.","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"     * @return the description only.","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"    public static String commandToDescription(String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"        String[] parts \u003d command.split(\"find\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"        return parts[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":138}},{"path":"src/main/java/duke/store/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.store;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.store.Storage.java","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":" *      Description: duke.store.Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    private static final String COMPLETE_MSG \u003d \"    \u003d\u003d\u003e COMPLETED!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    private static final String INCOMPLETE_MSG \u003d \"    \u003d\u003d\u003e INCOMPLETE!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    private static String savePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    private static String loadPath;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the storage.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        // Get the directory from our root.","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        String root;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"            root \u003d Paths.get(\".\").toRealPath().normalize().toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(root);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        // Make sure that it is independent of the OS.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        savePath \u003d java.nio.file.Paths.get(root, \"src\", \"data\", \"duke.txt\").toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(savePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     * Storage overloaded constructor.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"     * @param pathSave","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     * @param pathLoad","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    public Storage(String pathSave, String pathLoad) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        savePath \u003d pathSave;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        loadPath \u003d pathLoad;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"     * Checks the existence of file path for saving, else creates a directory for it.","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    public static void makeDirectory() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        String root \u003d Paths.get(\".\").toRealPath().normalize().toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        String dir \u003d java.nio.file.Paths.get(root, \"src\", \"data\").toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        File f \u003d new File(dir);","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        File src \u003d new File(java.nio.file.Paths.get(root, \"src\").toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        if (src.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"Recording changes as usual...\");","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"Missing file directory, creating one now.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"            f.mkdirs();","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"     * Saves all the tasks in the duke.task.TaskList objects by writing it into the savePath directory.","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"     * @throws IOException if the directory is invalid.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"    public static void autoSave(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"        makeDirectory();","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"        File f \u003d new File(savePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"        FileWriter fw \u003d new FileWriter(f.getAbsolutePath());","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        // Header of the save file","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        fw.write(\"Last Saved at \" + now);","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        fw.write(System.lineSeparator()); // new line","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        fw.write(System.lineSeparator()); // new line","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        // Body of the save file","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"                fw.write(\"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"                    Task task \u003d tasks.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(Storage.readerFriendly(task));","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(System.lineSeparator()); // new line","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"                fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"Unable to write to file, check path: \" + savePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string object of how the task object will be saved in the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"     * @param task is the task to be converted into a String to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"     * @return string that is to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"    private static String readerFriendly(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"        String status \u003d task.getStatus() ? COMPLETE_MSG : INCOMPLETE_MSG;","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"            Todo t \u003d (Todo) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"            return \"Todo: \" + t.getDescription() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"            return \"Deadline: \" + d.getDescription() + \" by \" + d.getBy() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"        } else { // instance of duke.task.Event","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"            return \"Event: \" + e.getDescription() + \" from \" + e.getFrom() + \" to \" + e.getTo() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jerome-neo":120}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      File name: Deadline.java","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":" *      Description: Deadline class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     * @param by the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        this.byDateTime \u003d Task.convertDateTime(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the deadline date.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     * @return by date.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        return by;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"            + this.getDescription() + \" (by: \" + dateTimeToString(byDateTime) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      File name: Event.java","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":" *      Description: Event class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * @param from the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     * @param to the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"        this.fromDateTime \u003d Task.convertDateTime(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        this.toDateTime \u003d Task.convertDateTime(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the date that the event starts.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        return from;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the date that the event ends.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        return to;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription()","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"            + \" (from: \" + dateTimeToString(fromDateTime) + \" to: \" + dateTimeToString(toDateTime) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":59}},{"path":"src/main/java/duke/task/FuzzySearch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" *      File name: FuzzySearch.java","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      Description: A class for matching a string with a list of strings.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"public class FuzzySearch {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     * Given an input String object, the fuzzy search will match the Task to options which is a TaskList.","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"     * The threshold is chosen such that the smaller the value, the stricter the matching.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"     * @param input String object","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"     * @param options TaskList object","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"     * @param threshold a non-negative integer, range from 0 to length of longer string compared.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     * @return a closest matched Task","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    public static Task fuzzySearch(String input, TaskList options, int threshold) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"        Task closestMatch \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"        int closestDistance \u003d Integer.MAX_VALUE;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"            Task option \u003d options.getTaskAtIndex(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"            String optionDescription \u003d option.getDescription();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"            int distance \u003d levenshteinDistance(input, optionDescription);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"            if (distance \u003c\u003d threshold \u0026\u0026 distance \u003c closestDistance) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"                closestMatch \u003d option;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"                closestDistance \u003d distance;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        return closestMatch;","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"     * This code was taken from the Levenshtein distance algorithm to compare strings.","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     * Referenced from:","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     * https://www.geeksforgeeks.org/java-program-to-implement-levenshtein-distance-computing-algorithm/","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     * The algorithm was first published by Vladimir Levenshtein in 1965.","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"     * @param s1 first string","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"     * @param s2 second string","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     * @return a value 0 to max{s1.length, s2.length}","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    private static int levenshteinDistance(String s1, String s2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        int[][] dp \u003d new int[s1.length() + 1][s2.length() + 1];","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c\u003d s1.length(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"            for (int j \u003d 0; j \u003c\u003d s2.length(); j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"                    dp[i][j] \u003d j;","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                } else if (j \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"                    dp[i][j] \u003d i;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"                } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                    int insertion \u003d dp[i][j - 1] + 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"                    int deletion \u003d dp[i - 1][j] + 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"                    int substitution \u003d dp[i - 1][j - 1];","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"                    if (s1.charAt(i - 1) !\u003d s2.charAt(j - 1)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"                        substitution++;","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"                    dp[i][j] \u003d Math.min(insertion, Math.min(deletion, substitution));","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"        return dp[s1.length()][s2.length()];","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" *      File name: Task.java","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":" *      Description: Task class that Todo, Event and Deadline inherits from.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    private static final String SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string denoting the if the task has been completed with a \"x\",","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     * else if it is not completed then \" \".","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     * @return a string of \"X\" or \" \".","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     * Returns the string description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"     * @return a string stored in task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        return description;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     * Sets the status of the Task object as being completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    public void taskDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"     * Identical to taskDone() but returns a String instead.","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"     * @return String message","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    public String taskDoneString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        sb.append(this.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"     * Sets the status of the Task object as being incomplete.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    public void taskNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"     * Identical to taskNotDone() but returns a String instead.","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"     * @return String message","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"    public String taskNotDoneString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"\\\"OK, I\u0027ve marked this task as not done yet:\\\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        sb.append(this.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean of the completion status of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"     * @return true if completed, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"     * Returns a LocalDateTime object that can be stored.","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"     * This method accepts Strings with the following format dd/MM/yyyy HHmm","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"     * where the time is in 24 hours.","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"     * @param stringDate","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"     * @return the LocalDateTime representation of the string.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"    public static LocalDateTime convertDateTime(String stringDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"        return LocalDateTime.parse(stringDate, formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"     * Returns a String object by formatting the LocalDateTime object into the","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"     * preferred String representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"     * @param dt","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"     * @return formatted date as e.g. \"1 January 2023, 1200H\".","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"    public String dateTimeToString(LocalDateTime dt) {","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, HHmm\u0027H\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"        return dt.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":121}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.task.TaskList.java","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":" *      Description: duke.task.TaskList class putting Task objects into a list.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the duke.task.TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the size of the duke.task.TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     * @return the size of the duke.task.TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    public static Integer size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"     * Adds a Task object into the duke.task.TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     * @param t the Task object to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        TaskList.announceAdded();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     * Returns a deep copy of a Task object at a specific index.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     * @return Task object at index.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"    public Task getTaskAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        Task original \u003d tasks.get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        if (original instanceof Todo) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"            Todo copy \u003d new Todo(original.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"            return copy;","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        } else if (original instanceof Deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"            Deadline copy \u003d new Deadline(original.getDescription(), ((Deadline) original).getBy());","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"            return copy;","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"        } else if (original instanceof Event) {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"            Event copy \u003d new Event(original.getDescription(), ((Event) original).getFrom(), ((Event) original).getTo());","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"            return copy;","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"            assert original instanceof Task : \"Something is not a task\";","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        return null;","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"     * Identical to matchDescription() but returns string instead.","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"     * @return a String","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"    public String matchDescriptionString(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Here are the tasks matched in your list: \\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"        FuzzySearch search \u003d new FuzzySearch();","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        Integer numMatches \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"        // Keep track what of duplicates","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"        HashSet\u003cString\u003e dictionary \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"            String taskDescriptionWithoutSpace \u003d task.getDescription().replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"            String descriptionWithoutSpace \u003d description.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"            if (description.equals(task.getDescription())) {","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"                dictionary.add(task.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"                sb.append((++numMatches) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"            } else if (taskDescriptionWithoutSpace.contains(descriptionWithoutSpace)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"                dictionary.add(task.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"                sb.append((++numMatches) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"        if (numMatches \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"            sb.append(\"\\n Unfortunately, I could not find any exact matches.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"        // Look for at least one similar match.","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"        Task taskSimilar \u003d search.fuzzySearch(description, this, 5);","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"        if (taskSimilar !\u003d null \u0026\u0026 !dictionary.contains(taskSimilar.toString())) {","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"            sb.append(\"\\n The following might be relevant to you: \\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"            sb.append((++numMatches) + \". \" + taskSimilar.toString() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to delete a Task object in the duke.task.TaskList at a specified index if it exists.","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"    public void deleteTaskAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"OOPS!!! The number to delete is invalid.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"        Task toDelete \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"        TaskList.announceRemoved(toDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"     * Identical to deleteTaskAtIndex() but returns a String.","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"     * @return  a String","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"    public String deleteTaskAtIndexString(Integer i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"            return \"OOPS!!! The number to delete is invalid.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"        Task toDelete \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"        return TaskList.announceRemovedString(toDelete);","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"jerome-neo"},"content":"     * Announces that the task has been added.","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"jerome-neo"},"content":"    public static void announceAdded() {","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"     * Similar to the announceAdded method.","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jerome-neo"},"content":"     * @return a String instead of printing out.","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jerome-neo"},"content":"    public static String announceAddedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Now we have \" + tasks.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"jerome-neo"},"content":"     * Announces that the task has been removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"jerome-neo"},"content":"     * @param t task removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"jerome-neo"},"content":"    public static void announceRemoved(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jerome-neo"},"content":"     * Similar to the announceRemoved method.","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jerome-neo"},"content":"     * @param t","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"jerome-neo"},"content":"     * @return a String instead of printing out.","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"jerome-neo"},"content":"    public static String announceRemovedString(Task t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"jerome-neo"},"content":"        sb.append(t.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Now we have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to mark a Task in duke.task.TaskList as completed if it exists.","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":183,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"jerome-neo"},"content":"    public void taskMarkedAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d this.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"☹ OOPS!!! The number to mark is invalid.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"jerome-neo"},"content":"        this.getTaskAtIndex(i).taskDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"jerome-neo"},"content":"     * Identical to taskMarkedAtIndex() but returns a String.","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"jerome-neo"},"content":"     * @param i","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"jerome-neo"},"content":"     * @return a String","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"jerome-neo"},"content":"    public String taskMarkedAtIndexString(Integer i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"jerome-neo"},"content":"        if (i \u003c 0 || i \u003e\u003d this.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"jerome-neo"},"content":"            return \"OOPS!!! The number to mark is invalid.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":204,"author":{"gitId":"jerome-neo"},"content":"        return this.getTaskAtIndex(i).taskDoneString();","lastModifiedDate":"2023-02-09"},{"lineNumber":205,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":206,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":207,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to mark a Task in duke.task.TaskList as incomplete if it exists.","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":210,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":211,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":212,"author":{"gitId":"jerome-neo"},"content":"    public void taskUnmarkedAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d this.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"OOPS!!! The number to unmark is invalid.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"jerome-neo"},"content":"        this.getTaskAtIndex(i).taskNotDoneString();","lastModifiedDate":"2023-02-09"},{"lineNumber":221,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":223,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":224,"author":{"gitId":"jerome-neo"},"content":"     * Identical to taskUnmarkedAtIndex() but returns a String.","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"jerome-neo"},"content":"     * @param i","lastModifiedDate":"2023-02-09"},{"lineNumber":226,"author":{"gitId":"jerome-neo"},"content":"     * @return a String","lastModifiedDate":"2023-02-09"},{"lineNumber":227,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":228,"author":{"gitId":"jerome-neo"},"content":"    public String taskUnmarkedAtIndexString(Integer i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":229,"author":{"gitId":"jerome-neo"},"content":"        if (i \u003c 0 || i \u003e\u003d this.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":230,"author":{"gitId":"jerome-neo"},"content":"            return \"OOPS!!! The number to unmark is invalid.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":232,"author":{"gitId":"jerome-neo"},"content":"        return this.getTaskAtIndex(i).taskNotDoneString();","lastModifiedDate":"2023-02-09"},{"lineNumber":233,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"jerome-neo"},"content":"     * Prints all Task objects in the duke.task.TaskList in a readable manner.","lastModifiedDate":"2023-02-03"},{"lineNumber":237,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"jerome-neo"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"jerome-neo"},"content":"            System.out.println((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":246,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":247,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":248,"author":{"gitId":"jerome-neo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":249,"author":{"gitId":"jerome-neo"},"content":"        sb.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":250,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":251,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":252,"author":{"gitId":"jerome-neo"},"content":"            sb.append((i + 1) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":253,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":254,"author":{"gitId":"jerome-neo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":255,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":256,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":257,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":258,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"jerome-neo":258}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" *      File name: Todo.java","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      Description: Todo class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":29}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" *      File name: duke.ui.Ui.java","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" *      @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" *      Description: duke.ui.Ui class deals with interaction with the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * Prints a line separator.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    public void line() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"     * Prints a greeting to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Hello! I\u0027m duke.main.Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     * Prints an exit message to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    public void farewell() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    public void announceFindResult() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here\u0027s what we found. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"     * Prints to notify the user that an unexpected error has occured.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    public void somethingWentWrong() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Invalid response. Please try: todo, deadline or event. :)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":54}},{"path":"src/main/java/duke/ux/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.ux;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":62}},{"path":"src/main/java/duke/ux/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.ux;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.main.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alien.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jamie.jpg\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"                DialogBox.getDukeDialog(duke.greeting(), dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: white; -fx-background-radius: 10; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ux.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" cache\u003d\"true\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0026quot;https://images.unsplash.com/photo-1579546928937-641f7ac9bced?ixlib\u003drb-4.0.3\u0026amp;ixid\u003dMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\u0026amp;auto\u003dformat\u0026amp;fit\u003dcrop\u0026amp;w\u003d1878\u0026amp;q\u003d80\u0026quot;); -fx-background-size: cover; -fx-background-position: center;\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jerome-neo":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    public void test1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        Event generate \u003d new Event(\"project meeting\", \"01/01/2023 1300\",  \"01/01/2023 1400\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        String correct \u003d \"[E]\" + \"[ ] \" + \"project meeting\" + \" (from: \" + \"1 January 2023, 1300H\" + \" to: \" + \"1 January 2023, 1400H\" + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(correct, generate.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    public void test1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        String correct \u003d \"[T]\" + \"[ ] \" + \"read a book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(correct, generate.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    public void test2() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(false, generate.getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public void test3() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        generate.taskDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(true, generate.getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerome-neo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerome-neo":1,"-":37}}]
