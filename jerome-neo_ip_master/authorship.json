[{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"Todo: run (｡-_-｡ ) INCOMPLETE ( ｡-_-｡)","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jerome-neo":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        this.byDateTime \u003d  Task.convertDateTime(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        return by;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"        return by;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        return \"[D]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription() + \" (by: \" + dateTimeToString(byDateTime) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"     * Prints the stored Tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"     * @param stored","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    public static void printList(ArrayList\u003cTask\u003e stored) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c stored.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d stored.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"            System.out.println((i+1) + \". \" + task.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        String separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        ArrayList\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"                printList(myTasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"mark \\\\d*\";","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a mark cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"                taskNumber--;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"                    if (taskNumber \u003c 0 || taskNumber \u003e\u003d myTasks.size()){","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The number to mark is invalid.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"                Task task \u003d myTasks.get(taskNumber);","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"                task.taskDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"unmark \\\\d*\";","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a unmark cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"                taskNumber--;","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"                    if (taskNumber \u003c 0 || taskNumber \u003e\u003d myTasks.size()){","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The number to unmark is invalid.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"                Task task \u003d myTasks.get(taskNumber);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"                task.taskNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"todo\\\\s+(.*)\\\\s+\";","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d input.substring(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"                Todo task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"                myTasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"                task.announceAdded(myTasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"                String[] temp \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"                String by \u003d temp[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"                Deadline task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"                myTasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"                task.announceAdded(myTasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"                String[] temp \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"                String[] time \u003d temp[1].split(\" /to \");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"                String from \u003d time[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"                String to \u003d time[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"                Event task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"                myTasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"jerome-neo"},"content":"                task.announceAdded(myTasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"jerome-neo"},"content":"                    String pattern \u003d \"delete\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"jerome-neo"},"content":"                    boolean isMatch \u003d input.matches(pattern);","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"jerome-neo"},"content":"                    if (!isMatch){","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"jerome-neo"},"content":"                taskNumber--;","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"jerome-neo"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"jerome-neo"},"content":"                    if (taskNumber \u003c 0 || taskNumber \u003e\u003d myTasks.size()){","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"jerome-neo"},"content":"                        throw new DukeException(\"☹ OOPS!!! The number to delete is invalid.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"jerome-neo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"jerome-neo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"jerome-neo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"jerome-neo"},"content":"                Task task \u003d myTasks.get(taskNumber);","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"jerome-neo"},"content":"                myTasks.remove(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"jerome-neo"},"content":"                task.announceRemoved(myTasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"jerome-neo"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"jerome-neo"},"content":"                System.out.println(\"Invalid response. Please try: todo, deadline or event. :)\");","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"jerome-neo"},"content":"            // Auto-save state in file","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"jerome-neo"},"content":"            Save.autoSave(myTasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":158,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jerome-neo":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        this.fromDateTime \u003d Task.convertDateTime(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"        this.toDateTime \u003d Task.convertDateTime(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"        return from;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        return to;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        return from;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        return to;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        return \"[E]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription() + \" (from: \" + dateTimeToString(fromDateTime) + \" to: \" + dateTimeToString(toDateTime)  + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":40}},{"path":"src/main/java/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"public class Save {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    private static String readerFriendly(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"        String status \u003d task.getStatus() ? \"๑(◕‿◕)๑ COMPLETED! ๑(◕‿◕)๑\" : \"(｡-_-｡ ) INCOMPLETE ( ｡-_-｡)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"            Todo t \u003d (Todo) task;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"            return \"Todo: \" + t.getDescription() + \" \" + status;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"            return \"Deadline: \" + d.getDescription() + \" by \" + d.getBy() + \" \" + status;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"        } else { // instance of Event","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"            return \"Event: \" + e.getDescription() + \" from \" + e.getFrom() + \" to \" + e.getTo() + \" \" + status;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    public static void autoSave(ArrayList\u003cTask\u003e listOfTasks) throws IOException{","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        // Get the directory of from our root.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        String root \u003d Paths.get(\".\").toRealPath().normalize().toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        // System.out.println(root);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"        // Make sure that it is independent of the OS.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        String PATH \u003d java.nio.file.Paths.get(root,\"src\", \"data\", \"duke.txt\").toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        // System.out.println(PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        // Ensures that even if the file does not exist, a new one is created each time.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        File f \u003d new File(PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        // System.out.println(f.exists());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        FileWriter fw \u003d new FileWriter(f.getAbsolutePath());","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"            if (listOfTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"                fw.write(\"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"                for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"                    Task task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(Save.readerFriendly(task));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(System.lineSeparator()); // new line","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"                fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"Unable to write to file, check path: \" + PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jerome-neo":49}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    private final String separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        return description;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    public void taskDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    public void taskNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    public void announceAdded(ArrayList\u003cTask\u003e myTask) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + myTask.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    public void announceRemoved(ArrayList\u003cTask\u003e myTask) {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + myTask.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"     * Returns a LocalDateTime object that can be stored.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"     * This method accepts Strings with the following format dd/MM/yyyy HHmm","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"     * where the time is in 24 hours.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"     * s","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"     * @param stringDate","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"     * @return the LocalDateTime representation of the string","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"    public static LocalDateTime convertDateTime(String stringDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"        return LocalDateTime.parse(stringDate, formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"     * Returns a String object by formatting the LocalDateTime object into the","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"     * preferred String representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"     * @param dt","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"     * @return formatted","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"    public String dateTimeToString(LocalDateTime dt) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, HHmm\u0027H\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"        return dt.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":83}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        return \"[T]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":15}}]
