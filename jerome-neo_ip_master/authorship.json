[{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"Todo: run     (｡-_-｡ ) INCOMPLETE ( ｡-_-｡)    git ","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"Event: project meeting from 01/01/2023 1200 to 01/01/2023 1300     (｡-_-｡ ) INCOMPLETE ( ｡-_-｡)    git ","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"Deadline: return book by 02/01/2023 1230     (｡-_-｡ ) INCOMPLETE ( ｡-_-｡)    git ","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jerome-neo":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Duke.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: The main class for the Duke application.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    private static Storage store \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    private static Ui display \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    private static Parser logic \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        display.greeting();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"        String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"            if (!logic.isValidCommand(input)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"                display.somethingWentWrong();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"            if (logic.isTaskCommand(input)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"                Task task \u003d logic.toTask(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"                TaskList.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"                display.farewell();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"                tasks.printTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d logic.indexToMark(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"                tasks.taskMarkedAtIndex(--taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d logic.indexToUnmark(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"                tasks.taskUnmarkedAtIndex(--taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"                int taskNumber \u003d logic.indexToDelete(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"                tasks.deleteTaskAtIndex(--taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                String description \u003d logic.commandToDescription(input); // find command","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"                display.announceFindResult();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"                tasks.matchDescription(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                display.line();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"            // Auto-save state in file","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"            store.autoSave(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":57,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: DukeException.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: DukeException inherits from Exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for exception. Takes in the message you want to include in this csutom exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"     * @param message","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jerome-neo":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Parser.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Parser class deals with making sense of the user command.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    private static final String BYE_PATTERN \u003d \"bye\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    private static final String LIST_PATTERN \u003d \"list\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    private static final String MARK_PATTERN \u003d \"mark\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    private static final String UNMARK_PATTERN \u003d \"unmark\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    private static final String DELETE_PATTERN \u003d \"delete\\\\s+\\\\d*\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private static final String TODO_PATTERN \u003d \"todo\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    private static final String DEADLINE_PATTERN \u003d \"deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    private static final String EVENT_PATTERN \u003d \"event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    private static final String FIND_PATTERN \u003d \"find\\\\s+\\\\s*(.*)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public Parser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean that checks if the command matches the aforementioned command formats.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     * @return true if the command is recognised, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    public static boolean isValidCommand(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        String[] commandsCollection \u003d {BYE_PATTERN, LIST_PATTERN, MARK_PATTERN, UNMARK_PATTERN,","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"                DELETE_PATTERN, TODO_PATTERN, DEADLINE_PATTERN, EVENT_PATTERN, FIND_PATTERN};","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        for (String pattern : commandsCollection) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"            if (command.matches(pattern)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean that checks if the command is a Task command and it matches the aforementioned command formats.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     * @return true if the command is recognised as a Task, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    public static boolean isTaskCommand(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        String[] commandsCollection \u003d {TODO_PATTERN, DEADLINE_PATTERN, EVENT_PATTERN};","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        for (String pattern : commandsCollection) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"            if (command.matches(pattern)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"     * Returns a Task object if the command is compatible.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"     * @return a Task object representation of the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"     * @throws DukeException is thrown if the command is incompatible.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"    public static Task toTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"        if (Parser.isTaskCommand(command)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"            if (command.matches(TODO_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d command.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"            } else if (command.matches(DEADLINE_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"                String description \u003d command.substring(9);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"                String[] temp \u003d description.split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"                String by \u003d temp[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"                task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"            } else { // (command.matches(EVENT_PATTERN)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"                String description \u003d command.substring(6);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"                String[] temp \u003d description.split(\"\\\\s*/from\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"                String taskDescription \u003d temp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"                String[] time \u003d temp[1].split(\"\\\\s*/to\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"                String from \u003d time[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"                String to \u003d time[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"                task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"            throw new DukeException(\"☹ OOPS!!! You cannot convert a non-task command into a task.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be marked in a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToMark(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(5));","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be unmarked in a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToUnmark(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the index to be deleted in a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"     * @param command is the raw string input.","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"     * @return an index.","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"    public static Integer indexToDelete(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"        return Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string. Extracts the description of the find command.","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"     * @param command is equal to find.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"     * @return the description only.","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"    public static String commandToDescription(String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"        String[] parts \u003d command.split(\"find\\\\s*\");","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"        return parts[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":134}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Storage.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    private static String savePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private static String loadPath;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the storage.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        // Get the directory of from our root.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        String root;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"            root \u003d Paths.get(\".\").toRealPath().normalize().toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        // Make sure that it is independent of the OS.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        savePath \u003d java.nio.file.Paths.get(root,\"src\", \"data\", \"duke.txt\").toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    public Storage(String pathSave, String pathLoad) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        savePath \u003d pathSave;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        loadPath \u003d pathLoad;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"     * Saves all the tasks in the TaskList objects by writing it into the savePath directory.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     * @param tasks is a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     * @throws IOException if the directory is invalid.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    public static void autoSave(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        File f \u003d new File(savePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        FileWriter fw \u003d new FileWriter(f.getAbsolutePath());","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                fw.write(\"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                    Task task \u003d tasks.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(Storage.readerFriendly(task));","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"                    fw.write(System.lineSeparator()); // new line","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"                fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"Unable to write to file, check path: \" + savePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string object of how the task object will be saved in the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"     * @param task is the task to be converted into a String to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"     * @return string that is to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"    private static String readerFriendly(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        String status \u003d task.getStatus() ? \"    ๑(◕‿◕)๑ COMPLETED! ๑(◕‿◕)๑    \" : \"    (｡-_-｡ ) INCOMPLETE ( ｡-_-｡)    git \";","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"            Todo t \u003d (Todo) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"            return \"Todo: \" + t.getDescription() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"            return \"Deadline: \" + d.getDescription() + \" by \" + d.getBy() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"        } else { // instance of duke.task.Event","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"            return \"Event: \" + e.getDescription() + \" from \" + e.getFrom() + \" to \" + e.getTo() + \" \" + status;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jerome-neo":83}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: TaskList.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: TaskList class putting Task objects into a list.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     * Returns an integer representing the size of the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"     * @return the size of the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    public static Integer size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     * Adds a Task object into the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"     * @param t the Task object to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        TaskList.announceAdded();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"     * Returns a Task object at a specific index.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     * @return Task object at index.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    public Task getTaskAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"     * Returns a TaskList of tasks matching the string description.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"     * @param description of a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"     * @return TaskList containing only those matched.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    public void matchDescription(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here are the tasks matched in your list: \");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"        Integer j \u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"            if (task.getDescription().equals(description)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"                System.out.println((++j) + \". \" + task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"        if  (j \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(\"It seems that there are no matches.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to delete a Task object in the TaskList at a specified index if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"    public void deleteTaskAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d tasks.size()){","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"☹ OOPS!!! The number to delete is invalid.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        Task toDelete \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        TaskList.announceRemoved(toDelete);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"     * Announces that the task has been added.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"    public static void announceAdded() {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"     * Announces that the task has been removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"     * @param t task removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"jerome-neo"},"content":"    public static void announceRemoved(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Now we have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to mark a Task in TaskList as completed if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"    public void taskMarkedAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d this.size()){","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"☹ OOPS!!! The number to mark is invalid.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"        this.getTaskAtIndex(i).taskDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"jerome-neo"},"content":"     * Attempts to mark a Task in TaskList as incomplete if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"     * @param i index.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"    public void taskUnmarkedAtIndex(Integer i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"            if (i \u003c 0 || i \u003e\u003d this.size()){","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"                throw new DukeException(\"☹ OOPS!!! The number to mark is invalid.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"jerome-neo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"jerome-neo"},"content":"        this.getTaskAtIndex(i).taskNotDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"jerome-neo"},"content":"     * Prints all Task objects in the TaskList in a readable manner.","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"jerome-neo"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"jerome-neo"},"content":"            Task task \u003d this.getTaskAtIndex(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"            System.out.println((i+1) + \". \" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":148}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Ui.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Ui class deals with interaction with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"    private final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Ui.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    public Ui () {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     * Prints a line separator.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    public void line() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     * Prints a greeting to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     * Prints an exit message to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    public void farewell() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    public void announceFindResult() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Here\u0027s what we found. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"     * Prints to notify the user that an unexpected error has occured.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    public void somethingWentWrong() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Invalid response. Please try: todo, deadline or event. :)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":59}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Deadline.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Deadline class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * @param by the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        this.byDateTime \u003d  Task.convertDateTime(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the deadline date.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     * @return by date.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        return by;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        return \"[D]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription() + \" (by: \" + dateTimeToString(byDateTime) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Event.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Event class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     * @param from the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * @param to the date in format dd/MM/yyyy HHmm.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        this.fromDateTime \u003d Task.convertDateTime(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"        this.toDateTime \u003d Task.convertDateTime(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the date that the event starts.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        return from;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string of the date that the event ends.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"        return to;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"        return \"[E]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription() + \" (from: \" + dateTimeToString(fromDateTime) + \" to: \" + dateTimeToString(toDateTime)  + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Task.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Task class that Todo, Event and Deadline inherits from.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    private final String SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string denoting the if the task has been completed with a \"x\",","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"     * else if it is not completed then \" \".","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"     * @return a string of \"X\" or \" \".","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     * Returns the string description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"     * @return a string stored in task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        return description;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"     * Sets the status of the Task object as being completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    public void taskDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"     * Sets the status of the Task object as being incomplete.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    public void taskNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"     * Returns a boolean of the completion status of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"     * @return true if completed, else false.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"     * Returns a LocalDateTime object that can be stored.","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"     * This method accepts Strings with the following format dd/MM/yyyy HHmm","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"     * where the time is in 24 hours.","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"     * @param stringDate","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"     * @return the LocalDateTime representation of the string.","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"    public static LocalDateTime convertDateTime(String stringDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"        return LocalDateTime.parse(stringDate, formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"jerome-neo"},"content":"     * Returns a String object by formatting the LocalDateTime object into the","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"jerome-neo"},"content":"     * preferred String representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"jerome-neo"},"content":"     * @param dt","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"jerome-neo"},"content":"     * @return formatted date as e.g. \"1 January 2023, 1200H\".","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"jerome-neo"},"content":"    public String dateTimeToString(LocalDateTime dt) {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, HHmm\u0027H\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jerome-neo"},"content":"        return dt.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":99}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":" * File name: Todo.java","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":" * @author: Jerome Neo","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Description: Todo class that inherits from the Task class.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"     * @param description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     * @return a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        return \"[T]\" + \"[\" +this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jerome-neo":29}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    public void test1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        Event generate \u003d new Event(\"project meeting\", \"01/01/2023 1300\",  \"01/01/2023 1400\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        String correct \u003d \"[E]\" + \"[ ] \" + \"project meeting\" + \" (from: \" + \"1 January 2023, 1300H\" + \" to: \" + \"1 January 2023, 1400H\" + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(correct, generate.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"    public void test1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"        String correct \u003d \"[T]\" + \"[ ] \" + \"read a book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(correct, generate.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    public void test2() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(false, generate.getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"    public void test3() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        Todo generate \u003d new Todo(\"read a book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"        generate.taskDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(true, generate.getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jerome-neo":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerome-neo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerome-neo":1,"-":37}}]
