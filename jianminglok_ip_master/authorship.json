[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    mainClassName \u003d \"twofive.TwoFive\"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    archiveBaseName \u003d \"TwoFive\"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jianminglok":7,"-":39}},{"path":"junit-fileparser-test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"T | 0 | read book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"D | 0 | return book | 2023-06-06 06:06","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"E | 0 | project meeting | 2023-08-06 14:00 | 2023-08-06 16:00","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":3}},{"path":"src/main/java/twofive/TwoFive.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TwoFiveException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import twofive.utils.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":" * Represents a chatbot that allows users to manage daily tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"public class TwoFive {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the TwoFive class.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param filePath String containing file path.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public TwoFive(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        } catch (IOException | TwoFiveException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            ui.showError(\"Deadline/start time/end time must be in the\"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"                    + \"format yyyy-MM-dd HH:mm, e.g. 2023-01-23 16:31\");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     * Starts the chatbot by providing the path to the local task file.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        new TwoFive(\"data/twofive.txt\").run();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"     * Runs the chatbot by showing a welcome message, then accepting commands","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     * from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"            } catch (TwoFiveException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"                ui.showError(\":( OOPS!!! The task number provided must be a number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"            } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jianminglok":69}},{"path":"src/main/java/twofive/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" * Results in the program saving current tasks and exiting when this command","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":" * is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"     * Saves current tasks into storage and displays exit message.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     * Displays error message if error encountered while saving tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of all current tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"            ui.showExit();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        return true;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":36}},{"path":"src/main/java/twofive/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TwoFiveException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" * Results in various actions being performed when commands are executed","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" * in initialized subclasses of this class.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"     * Returns boolean stating whether the command is a ByeCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     * @return true if command is a ByeCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     * Executes actions given a list of tasks, a UI object and a Storage object.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of all current tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws TwoFiveException;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":30}},{"path":"src/main/java/twofive/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" * Adds a new Deadline task given a description and a deadline","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":" * when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    private String deadlineString;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the DeadlineCommand class.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param taskDescription Description of the Deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @param deadlineString Deadline of the Deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    public DeadlineCommand(String taskDescription, String deadlineString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        this.deadlineString \u003d deadlineString;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"     * Adds a new Deadline task given a description and a deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"     * If task is added successfully, display success message.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"     * If deadline given is not in yyyy-MM-dd HH:mm format, display error message.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks to be added to.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"            Deadline newDeadline \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"            //Adds new task to list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"                    \"Got it. I\u0027ve added this task:\\n \" + newDeadline + \"\\n\" + \"Now you have \" + tasks.getTasksNum()","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"                            + \"this is a test test tasks in the list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"            ui.showError(\"Deadline must be in the format yyyy-MM-dd HH:mm, e.g. 2023-01-23 16:31\");","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":56}},{"path":"src/main/java/twofive/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" * Deletes a task given its number in a list of tasks when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    private int taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * Deletes a task from the given list of tasks using the provided task number.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks to delete the task from.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidTaskException if task number is invalid","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskException {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        if (this.taskNum \u003c 0 || this.taskNum \u003e\u003d tasks.getTasksNum()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            Task currentTask \u003d tasks.deleteTask(this.taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(\"Noted. I\u0027ve removed this task:\\n \" + currentTask + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"                    + \"Now you have \" + tasks.getTasksNum() + \" tasks in the list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":37}},{"path":"src/main/java/twofive/command/DueDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":" * Lists all tasks with a deadline, start time or end time, given a","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" * date when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"public class DueDateCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    private static DateTimeFormatter dueDateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private String dueDateString;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    public DueDateCommand(String dueDateString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"        this.dueDateString \u003d dueDateString;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * Prints out all tasks added given a task list with a deadline, start time","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * or end time on the same day as the date provided.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of all current tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            LocalDate dueDate \u003d LocalDate.parse(dueDateString, dueDateFormatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(tasks.getTasksOnDateList(dueDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"            ui.showError(\"Due date must be in the format yyyy-MM-dd, e.g. 2023-01-23\");","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":40}},{"path":"src/main/java/twofive/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" * Adds a new Event task given a description, a start time and an end time","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":" * when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    private String startTimeString;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    private String endTimeString;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the EventCommand class.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @param taskDescription Description of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * @param startTimeString Start time of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * @param endTimeString End time of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    public EventCommand(String taskDescription, String startTimeString, String endTimeString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        this.startTimeString \u003d startTimeString;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        this.endTimeString \u003d endTimeString;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * Adds a new Event task given a description, a start time and an end time.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     * If task is added successfully, display success message.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     * If start time or end time given is not in yyyy-MM-dd HH:mm format,","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     * display error message.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks to be added to.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(startTimeString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(endTimeString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"            Event newEvent \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"            //Adds new task to list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(\"Got it. I\u0027ve added this task:\\n \" + newEvent + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"                    + \"Now you have \" + tasks.getTasksNum() + \" tasks in the list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"            ui.showError(\"Start time and end time must be in the format yyyy-MM-dd HH:mm, e.g. 2023-01-23 16:31\");","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":60}},{"path":"src/main/java/twofive/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Filters task with description containing with keyword when the command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    private String keyword;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * Prints out all tasks added with the keyword in their description given a task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of all current tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        ui.showMessage(tasks.getKeywordString(this.keyword));","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":28}},{"path":"src/main/java/twofive/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Lists all tasks added when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"     * Prints out all tasks added given a task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of all current tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"        ui.showMessage(tasks.getTasksList());","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":22}},{"path":"src/main/java/twofive/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":" * Marks a task as done given its number in a list of tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":" * when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    private int taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * Marks a task as done from the given list of tasks using the provided task number.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks containing the task to be marked as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidTaskException if task number is invalid","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws TaskDoneException, InvalidTaskException {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        if (this.taskNum \u003c 0 || this.taskNum \u003e\u003d tasks.getTasksNum()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            Task currentTask \u003d tasks.setTaskAsDone(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(\"Nice! Congrats for completing this task:\\n \" + currentTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":38}},{"path":"src/main/java/twofive/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.task.ToDo;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" * Adds a new ToDo task given a description when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    public ToDoCommand(String taskDescription) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * Adds a new ToDo task given a description.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * If task is added successfully, display success message.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks to be added to.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        ToDo newToDo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        //Adds new task to list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(newToDo);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n \" + newToDo + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"                + \"Now you have \" + tasks.getTasksNum() + \" tasks in the list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":34}},{"path":"src/main/java/twofive/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskUndoneException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":" * Marks a task as not done given its number in a list of tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":" * when command is executed.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    private int taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * Marks a task asnot  done from the given list of tasks using the provided task number.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks containing the task to be marked as not done.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     * @param ui UI interacting with user.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidTaskException if task number is invalid","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws TaskUndoneException, InvalidTaskException {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        if (this.taskNum \u003c 0 || this.taskNum \u003e\u003d tasks.getTasksNum()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            Task currentTask \u003d tasks.setTaskAsUndone(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"            ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n \" + currentTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":38}},{"path":"src/main/java/twofive/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.data;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskUndoneException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":" * Represents a list of tasks currently added.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * Returns a String containing all tasks currently added, including","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * their type, whether it is done and the description.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     * Contains the deadline for Deadline tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     * Contains the start time and end time for Event tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"     * @return String containing all added tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    public String getTasksList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"            stringBuilder.append(taskIndex + \". \" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"            if (taskIndex - 1 \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"            taskIndex++;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"     * Returns number of tasks currently added.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    public int getTasksNum() {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"     * Deletes a task from the list given its number in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"     * @param taskNum Number of task in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"        Task currentTask \u003d tasks.get(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"        tasks.remove(currentTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        return currentTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"     * Sets a task as done given its number in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"     * @param taskNum Number of task in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskDoneException If task is already done.","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"    public Task setTaskAsDone(int taskNum) throws TaskDoneException {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"        Task currentTask \u003d tasks.get(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"        currentTask.setDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"        return currentTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"     * Sets a task as not done given its number in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"     * @param taskNum Number of task in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskUndoneException If task has not been done.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"    public Task setTaskAsUndone(int taskNum) throws TaskUndoneException {","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"        Task currentTask \u003d tasks.get(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"        currentTask.setUndone();","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"        return currentTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"     * Adds a given Task to the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"     * Returns a String containing all tasks which have a deadline, start time","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"     * or end time on the given date, including their type, whether it is","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"     * done and the description.","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"     * Contains the deadline for Deadline tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"     * Contains the start time and end time for Event tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"     * @param date Date in which tasks are due","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"     * @return String containing all added tasks with a deadline on the given date.","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"    public String getTasksOnDateList(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the tasks in your list due on \"","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"EEE MMM d yyyy\")) + \":\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"        int numTasksDue \u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"            if (task.isToday(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"                numTasksDue++;","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"jianminglok"},"content":"            if (task.isToday(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"jianminglok"},"content":"                stringBuilder.append(taskIndex + \". \" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"jianminglok"},"content":"                if (taskIndex - 1 \u003c numTasksDue - 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"jianminglok"},"content":"                    stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"jianminglok"},"content":"                taskIndex++;","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"jianminglok"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"jianminglok"},"content":"     * Returns a String containing all tasks to be saved into a file.","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"jianminglok"},"content":"     * @return String containing all added tasks for saving into a file.","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"jianminglok"},"content":"    public String getSaveTasksString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"jianminglok"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"jianminglok"},"content":"            stringBuilder.append(task.getFileWriteString() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"jianminglok"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"jianminglok"},"content":"     * Returns a String containing all tasks which have the specified keyword in their description,","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"jianminglok"},"content":"     * including their type, whether it is done and the description.","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"jianminglok"},"content":"     * Contains the deadline for Deadline tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"jianminglok"},"content":"     * Contains the start time and end time for Event tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"jianminglok"},"content":"     * @param keyword Keyword used to filter tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"jianminglok"},"content":"     * @return String containing all added tasks with the keyword in their description","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"jianminglok"},"content":"    public String getKeywordString(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"jianminglok"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"Here are the tasks in your list with keyword [\"","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"jianminglok"},"content":"                + keyword","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"jianminglok"},"content":"                + \"] in \"","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"jianminglok"},"content":"                + \"their description:\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"jianminglok"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"jianminglok"},"content":"        int numTasksWithKeyword \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"jianminglok"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"jianminglok"},"content":"                numTasksWithKeyword++;","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"jianminglok"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"jianminglok"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"jianminglok"},"content":"                stringBuilder.append(taskIndex + \". \" + task);","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"jianminglok"},"content":"                if (taskIndex - 1 \u003c numTasksWithKeyword - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"jianminglok"},"content":"                    stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"jianminglok"},"content":"                taskIndex++;","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"jianminglok"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":176}},{"path":"src/main/java/twofive/exception/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a date is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * in a DueCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyDateException extends TwoFiveException {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The due date cannot be empty.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a deadline is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * when adding a Deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyDeadlineException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The deadline of a deadline cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a description is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * when adding a new Task.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyDescriptionException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    private String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    public EmptyDescriptionException(String taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The description of a \" + taskType + \" cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":18}},{"path":"src/main/java/twofive/exception/EmptyEndTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when an end time is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * when adding an Event task.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyEndTimeException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The end time of a event cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/EmptyKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a keyword is not provided in a find command.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"public class EmptyKeywordException extends TwoFiveException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The keyword cannot be empty.\";","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":11}},{"path":"src/main/java/twofive/exception/EmptyStartTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a start time is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * when adding an Event task.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyStartTimeException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The start time of a event cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/EmptyTasknumException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a task number is not provided for parsing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * when marking a task as done or not done, or when deleting it.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyTasknumException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! The task number cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when an invalid command is provided for parsing.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"public class InvalidCommandException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":11}},{"path":"src/main/java/twofive/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a task cannot be found given a number.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"public class InvalidTaskException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! A task with the given number cannot be found.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":11}},{"path":"src/main/java/twofive/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when an invalid task type is specified","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * in the file responsible for saving tasks locally.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class InvalidTaskTypeException extends TwoFiveException {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! This task type is invalid.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when one or more arguments are missing","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * in the command typed by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class MissingArgumentException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    private String argumentType;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    public MissingArgumentException(String argumentType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"        this.argumentType \u003d argumentType;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! You are missing the argument \" + argumentType + \".\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":18}},{"path":"src/main/java/twofive/exception/TaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a task that is already done","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * is being marked as done again.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class TaskDoneException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! This task has already been done.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/TaskUndoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when a task that is not yet done","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" * is being marked as not done again.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class TaskUndoneException extends TwoFiveException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        return \":( OOPS!!! This task has not been done yet.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":12}},{"path":"src/main/java/twofive/exception/TwoFiveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents an error encountered when using the TwoFive chatbot.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"public abstract class TwoFiveException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":7}},{"path":"src/main/java/twofive/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import twofive.data.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDeadlineException;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyEndTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyStartTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskTypeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"import twofive.utils.FileParser;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":" * Represents a storage responsible for loading and saving tasks saved","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":" * in a local file.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    private File taskFile;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the Storage class.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     * @param filePath String containing file path.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"     * @throws IOException If an I/O error has occurred.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        this.taskFile \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        this.taskFile.getParentFile().mkdirs(); // Create parent directories if absent","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        this.taskFile.createNewFile(); // Create task file if absent","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     * Returns an ArrayList containing Task objects which are loaded from","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"     * the local task file.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"     * @return ArrayList consisting of all tasks saved locally.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"     * @throws FileNotFoundException If local file cannot be found.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDescriptionException If the description is absent in one or more tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidTaskTypeException If the task type is invalid for one or more tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDeadlineException If the deadline is absent in one or more Deadline tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyEndTimeException If the end time is absent in one or more Event tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyStartTimeException If the start time is absent in one or more Event tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskDoneException If a task that is already done is being marked as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"     * @throws DateTimeParseException If the date and time format retrieved from the file is invalid.","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, EmptyDescriptionException, InvalidTaskTypeException,","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"            EmptyDeadlineException, EmptyEndTimeException, EmptyStartTimeException, TaskDoneException,","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"            DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        FileParser fileParser \u003d new FileParser(this.taskFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"        return fileParser.parseFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"     * Saves the current list of tasks to the local task file.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"     * @param tasks List of tasks currently added.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"     * @throws IOException If an I/O error has occured","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"        FileWriter fw \u003d new FileWriter(taskFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"        fw.write(tasks.getSaveTasksString());","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"        fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":71}},{"path":"src/main/java/twofive/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Represents a Deadline task with a given description and deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the Deadline class.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     * @param taskDescription Description of the Deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     * @param deadline Deadline of the Deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    public Deadline(String taskDescription, LocalDateTime deadline) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        String deadlineString \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"                \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"EEE MMM d yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        return \"[D]\" + super.toString() + deadlineString;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"     * The type of task and its deadline is also included.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    public String getFileWriteString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        return \"D\" + super.getFileWriteString() + \" | \"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    public boolean isToday(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        return this.deadline.toLocalDate().isEqual(date);","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d (Deadline) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        return super.equals(deadlineTask) \u0026\u0026 deadlineTask.deadline.equals(this.deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jianminglok":60}},{"path":"src/main/java/twofive/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Represents an Event task with a given description, start time and end time.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the Event class.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     * @param taskDescription Description of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * @param startTime Start time of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * @param endTime End time of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    public Event(String taskDescription, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        String eventString \u003d \" (from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"EEE MMM d yyyy hh:mma\"))","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"EEE MMM d yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        return \"[E]\" + super.toString() + eventString;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * The type of task, its start time and its end time is also included.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    public String getFileWriteString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"        return \"E\" + super.getFileWriteString() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    public boolean isToday(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        return this.startTime.toLocalDate().isEqual(date) || this.endTime.toLocalDate().isEqual(date);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"        return super.equals(event) \u0026\u0026 event.startTime.equals(this.startTime) \u0026\u0026 event.endTime.equals(this.endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jianminglok":64}},{"path":"src/main/java/twofive/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskUndoneException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" * Represents a tasks which can either be a ToDo, a Deadline or an Event.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"     * Represents a constructor for the Task class.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"     * Returns a String with an \"X\" in a bracket if the task is done,","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"     * or an empty bracket otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     * @return String indicating whether the task is done.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * Marks the current task as done if it is not yet done previously.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskDoneException If task is already done.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    public void setDone() throws TaskDoneException {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"        // Only mark as done if task is not done","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"            throw new TaskDoneException();","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"     * Marks the current task as not done if it is already done previously.","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskUndoneException If task is not yet done.","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"    public void setUndone() throws TaskUndoneException {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        //Only remark as not done if task is done","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"            throw new TaskUndoneException();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"        return this.getTaskStatus() + \" \" + this.taskDescription;","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"     * Returns a String which includes whether the task is done and its","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"     * description to be saved into a local file.","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"     * @return String containing details of task to be saved to file.","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"    public String getFileWriteString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"        String isDoneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"        return \" | \" + isDoneString + \" | \" + this.taskDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"     * Returns whether the current task has the same deadline, start time","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"     * or end time as the given date.","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"     * @param date Due date","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"     * @return Boolean indicating whether the task is due on the given date.","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"    public abstract boolean isToday(LocalDate date);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"        return task.taskDescription.equals(this.taskDescription) \u0026\u0026 task.isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"     * Returns whether the current task has the specified keyword in its description.","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"     * @param keyword Keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"     * @return Boolean indicating whether the task description includes the keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"        return this.taskDescription","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"                .toLowerCase()","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"                .contains(keyword.toLowerCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jianminglok":114}},{"path":"src/main/java/twofive/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" * Represents a Todo task with a given description.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * The type of task is also included.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    public String getFileWriteString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        return \"T\" + super.getFileWriteString();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     * Always returns false for a TodoTask as we cannot assuming that the deadline","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     * is the same as the provided date.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"     * @return false.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    public boolean isToday(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jianminglok":40}},{"path":"src/main/java/twofive/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":" * Handles interaction with the user by reading inputs from the user","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":" * and displaying the corresponding outputs.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    private static final String LOGO \u003d \"  _______            ______ _\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"            + \" |__   __|          |  ____(_)\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"            + \"    | |_      _____ | |__   ___   _____\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"            + \"    | \\\\ \\\\ /\\\\ / / _ \\\\|  __| | \\\\ \\\\ / / _ \\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"            + \"    | |\\\\ V  V / (_) | |    | |\\\\ V /  __/\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"            + \"    |_| \\\\_/\\\\_/ \\\\___/|_|    |_| \\\\_/ \\\\___|\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    public Ui() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * Displays a welcome message to the user when they run the application.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        this.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\"In case you\u0027re still not clear, I\u0027m TwoFive!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\"I\u0027m your personal assistant chatbot\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        this.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     * @return String containing the full command entered by the user in the same line.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"     * Displays a given error message.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"        System.out.println(error);","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"     * Displays a divider.","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"     * Displays messages when the user exists the application.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"    public void showExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\" Tasks saved successfully.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"     * Displays a given message which is not an error.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"     * @param message A message to be displayed which is not an error.","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":76}},{"path":"src/main/java/twofive/utils/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.utils;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDeadlineException;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyEndTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyStartTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskTypeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"import twofive.task.ToDo;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":" * Parses the contents of a given file into a list of tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"public class FileParser {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    private File taskFile;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    public FileParser(File taskFile) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        this.taskFile \u003d taskFile;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"     * Parses the contents of the task file provided when initializing","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"     * the file parser into a list of objects of the type ToDo, Deadline","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * or Event.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     * @return ArrayList containing Task objects.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     * @throws FileNotFoundException If task file cannot be found.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDescriptionException If the description is absent in one or more tasks parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidTaskTypeException If the task type is invalid for one or more tasks parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDeadlineException If the deadline is absent in one or more Deadline tasks parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyEndTimeException If the end time is absent in one or more Event tasks parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyStartTimeException If the start time is absent in one or more Event tasks parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"     * @throws TaskDoneException If a parsed task that is already done is being marked as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"     * @throws DateTimeParseException If the date and time format retrieved from the file is invalid.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    public ArrayList\u003cTask\u003e parseFile()","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"            throws FileNotFoundException, EmptyDescriptionException, InvalidTaskTypeException,","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"            EmptyDeadlineException, EmptyEndTimeException, EmptyStartTimeException, TaskDoneException,","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"            DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        Scanner s \u003d new Scanner(this.taskFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        // Read tasks from file","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"            String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"            String[] taskSplit \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"            String taskType \u003d taskSplit[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"            String taskTypeFull \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"            case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"                taskTypeFull \u003d \"todo\";","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"            case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"                taskTypeFull \u003d \"deadline\";","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"            case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"                taskTypeFull \u003d \"event\";","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"                throw new InvalidTaskTypeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"            if (taskSplit.length \u003e\u003d 3) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"                boolean isTaskDone \u003d taskSplit[1].trim().equals(\"1\");","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"                String taskDescription \u003d taskSplit[2].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"                Task currentTask \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"                case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"                    currentTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"                case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"                    if (taskSplit.length \u003d\u003d 4) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"                        String deadlineString \u003d taskSplit[3].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"                        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"                        currentTask \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"                    } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"                        // Missing deadline for Deadline task","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"                        throw new EmptyDeadlineException();","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"                case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"                    if (taskSplit.length \u003d\u003d 5) {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"                        String startTimeString \u003d taskSplit[3].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"                        String endTimeString \u003d taskSplit[4].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"                        LocalDateTime startTime \u003d LocalDateTime.parse(startTimeString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"                        LocalDateTime endTime \u003d LocalDateTime.parse(endTimeString, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"                        currentTask \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"                    } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"                        if (taskSplit.length \u003d\u003d 4) {","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"                            // Missing end time for Event task","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"                            throw new EmptyEndTimeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"                        } else if (taskSplit.length \u003d\u003d 3) {","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"                            // Missing start time for Event task","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"                            throw new EmptyStartTimeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"                    throw new InvalidTaskTypeException();","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"                if (isTaskDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"                    currentTask.setDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"                tasks.add(currentTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"jianminglok"},"content":"                // Missing description for task","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"jianminglok"},"content":"                throw new EmptyDescriptionException(taskTypeFull);","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"jianminglok"},"content":"        return tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":123}},{"path":"src/main/java/twofive/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.utils;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import twofive.command.ByeCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import twofive.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import twofive.command.DeadlineCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import twofive.command.DeleteCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import twofive.command.DueDateCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import twofive.command.EventCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import twofive.command.FindCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import twofive.command.ListCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import twofive.command.MarkCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import twofive.command.ToDoCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import twofive.command.UnmarkCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDateException;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDeadlineException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyEndTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyKeywordException;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyStartTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyTasknumException;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidCommandException;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.MissingArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":" * Parses the contents of a given command to obtain the action","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":" * intended to be performed by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    // Ensure valid task number is provided","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    private static int validateTaskNum(String input) throws EmptyTasknumException, NumberFormatException {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        String[] taskNumSplit \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        if (taskNumSplit.length \u003c\u003d 1 || taskNumSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"            throw new EmptyTasknumException();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"            int taskNum \u003d Integer.parseInt(taskNumSplit[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"            return taskNum;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    // Ensure a valid description is provided when adding a new task","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    private static String validateDescription(String input, String commandWord) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        String[] descriptionSplit \u003d input.split(commandWord);","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        if (descriptionSplit.length \u003c\u003d 1 || descriptionSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"            //If task description is empty","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"            throw new EmptyDescriptionException(commandWord);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        return descriptionSplit[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"     * Parses input from user into different types of command depending","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"     * on the first word of the input and other arguments present.","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"     * @return Command according to user input.","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyTasknumException If a task number is not provided in relevant commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDescriptionException If the description is absent in the user\u0027s input.","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"     * @throws MissingArgumentException If one or more arguments are missing in the user\u0027s input.","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyStartTimeException If the start time is absent in an event command.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyEndTimeException If the end time is absent in an event command.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDeadlineException If the deadline is absent in a deadline command.","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"     * @throws EmptyDateException If the date is missing in a due command.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"     * @throws InvalidCommandException If the command entered cannot be recognized properly.","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"    public static Command parse(String command)","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"            throws EmptyTasknumException, EmptyDescriptionException,","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"            MissingArgumentException, EmptyStartTimeException, EmptyEndTimeException, EmptyDeadlineException,","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"            EmptyDateException, InvalidCommandException, EmptyKeywordException {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"        String commandWord \u003d command.split(\" \")[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"        case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"            return new DeleteCommand(validateTaskNum(command));","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"            return new UnmarkCommand(validateTaskNum(command));","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"            return new MarkCommand(validateTaskNum(command));","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"            return new ToDoCommand(validateDescription(command, commandWord));","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"            String descriptionSplit \u003d validateDescription(command, commandWord);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"            if (!descriptionSplit.contains((\"/by\"))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"                // If /by argument not used","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"                throw new MissingArgumentException(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"                String[] deadlineSplit \u003d descriptionSplit.split(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"                if (deadlineSplit.length \u003c\u003d 1 || deadlineSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"                    // If deadline is not given","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"                    throw new EmptyDeadlineException();","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"                    String taskDescription \u003d deadlineSplit[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"                    String deadlineString \u003d deadlineSplit[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"                    return new DeadlineCommand(taskDescription, deadlineString);","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"        case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"            descriptionSplit \u003d validateDescription(command, commandWord);","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"            if (!descriptionSplit.contains((\"/from\"))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"                // If /from argument not used","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"                throw new MissingArgumentException(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"            } else if (!descriptionSplit.contains((\"/to\"))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"                // If /to argument not used","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"                throw new MissingArgumentException(\"/to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"                String[] startTimeSplit \u003d descriptionSplit.split(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"                if (startTimeSplit.length \u003c\u003d 1 || startTimeSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"                    // If start time is not given","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"                    throw new EmptyStartTimeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"                    String[] endTimeSplit \u003d startTimeSplit[1].split(\"/to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"                    if (endTimeSplit[0].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"                        throw new EmptyStartTimeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"                    } else if (endTimeSplit.length \u003c\u003d 1 || endTimeSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"                        // If end time is not given","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"                        throw new EmptyEndTimeException();","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"jianminglok"},"content":"                    } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"jianminglok"},"content":"                        String taskDescription \u003d startTimeSplit[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"jianminglok"},"content":"                        String startTimeString \u003d endTimeSplit[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"jianminglok"},"content":"                        String endTimeString \u003d endTimeSplit[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"jianminglok"},"content":"                        return new EventCommand(taskDescription, startTimeString, endTimeString);","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"jianminglok"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"jianminglok"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"jianminglok"},"content":"        case \"due\":","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"jianminglok"},"content":"            String[] dueSplit \u003d command.split(commandWord);","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"jianminglok"},"content":"            if (dueSplit.length \u003c\u003d 1 || dueSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"jianminglok"},"content":"                // If task description is empty","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"jianminglok"},"content":"                throw new EmptyDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"jianminglok"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"jianminglok"},"content":"                String dueDateString \u003d dueSplit[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"jianminglok"},"content":"                return new DueDateCommand(dueDateString);","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"jianminglok"},"content":"        case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"jianminglok"},"content":"            String[] keywordSplit \u003d command.split(commandWord);","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"jianminglok"},"content":"            if (keywordSplit.length \u003c\u003d 1 || keywordSplit[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"jianminglok"},"content":"                // if no keyword provided","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"jianminglok"},"content":"                throw new EmptyKeywordException();","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"jianminglok"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"jianminglok"},"content":"                String keyword \u003d keywordSplit[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"jianminglok"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"jianminglok"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"jianminglok"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"jianminglok"},"content":"        default:","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"jianminglok"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jianminglok":150}},{"path":"src/test/java/twofive/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.data;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import twofive.task.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    public void getTasksListTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"        Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        String sampleTasksString \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"                \"Here are the tasks in your list:\\n1. [T][ ] read book\\n2. [D][ ] return book (by: Tue Jun 6 2023 \"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"                        + \"06:06AM)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        assertEquals(sampleTasksString, tasks.getTasksList());","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    public void getTasksNum() {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"        Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        assertEquals(2, tasks.getTasksNum());","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    public void getTasksOnDateListTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"        LocalDate sampleDate \u003d LocalDate.parse(\"2023-06-06\", dateOnlyFormatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        String sampleSaveTasksString \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"                \"Here are the tasks in your list due on Tue Jun 6 2023:\\n1. [D][ ] return book (by: Tue Jun 6 2023 \"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"                        + \"06:06AM)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        assertEquals(sampleSaveTasksString, tasks.getTasksOnDateList(sampleDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"    public void getSaveTasksStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"        Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"        String sampleSaveTasksString \u003d \"T | 0 | read book\\nD | 0 | return book | 2023-06-06 06:06\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"        assertEquals(sampleSaveTasksString, tasks.getSaveTasksString());","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"    public void getKeywordStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"        Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"        String sampleTasksString \u003d \"Here are the tasks in your list with keyword [book] in their description:\\n1. \"","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"                + \"[T][ ] read \"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"                + \"book\\n2. [D][ ] \"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"                + \"return book (by: Tue Jun 6 2023 06:06AM)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"        assertEquals(sampleTasksString, tasks.getKeywordString(\"book\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":100}},{"path":"src/test/java/twofive/exception/EmptyDescriptionExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class EmptyDescriptionExceptionTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public void emptyDescriptionExceptionTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        EmptyDescriptionException exception \u003d new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\":( OOPS!!! The description of a todo cannot be empty.\", exception.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":13}},{"path":"src/test/java/twofive/exception/MissingArgumentExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"public class MissingArgumentExceptionTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    public void missingArgumentExceptionTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"        MissingArgumentException exception \u003d new MissingArgumentException(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\":( OOPS!!! You are missing the argument /by.\", exception.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":13}},{"path":"src/test/java/twofive/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public void deadlineStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"[D][ ] return book (by: Tue Jun 6 2023 06:06AM)\", deadlineTask.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    public void deadlineFileWriteStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"D | 0 | return book | 2023-06-06 06:06\", deadlineTask.getFileWriteString());","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    public void deadlineIsTodayTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        LocalDate differentDate \u003d LocalDate.parse(\"2023-01-23\", dateOnlyFormatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        assertEquals(false, deadlineTask.isToday(differentDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":37}},{"path":"src/test/java/twofive/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public class EventTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public void eventStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2023-08-06 14:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2023-08-06 16:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"        Event event \u003d new Event(\"return book\", startTime, endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"[E][ ] return book (from: Sun Aug 6 2023 02:00PM to: Sun Aug 6 2023 04:00PM)\", event.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    public void eventFileWriteStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2023-08-06 14:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2023-08-06 16:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        Event event \u003d new Event(\"return book\", startTime, endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"E | 0 | return book | 2023-08-06 14:00 | 2023-08-06 16:00\", event.getFileWriteString());","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    public void eventIsTodayTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2023-08-06 14:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2023-08-06 16:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        Event event \u003d new Event(\"return book\", startTime, endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        LocalDate differentDate \u003d LocalDate.parse(\"2023-01-23\", dateOnlyFormatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        assertEquals(false, event.isToday(differentDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":40}},{"path":"src/test/java/twofive/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public void toDoStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"[T][ ] return book\", toDo.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    public void toDoFileStringTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"        assertEquals(\"T | 0 | return book\", toDo.getFileWriteString());","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    public void toDoIsTodayTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter dateOnlyFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        LocalDate differentDate \u003d LocalDate.parse(\"2023-01-23\", dateOnlyFormatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        assertEquals(false, toDo.isToday(differentDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":33}},{"path":"src/test/java/twofive/utils/FileParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package twofive.utils;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDeadlineException;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyEndTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.EmptyStartTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.InvalidTaskTypeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"import twofive.exception.TaskDoneException;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"import twofive.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"import twofive.task.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"public class FileParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public void fileParserTest()","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"            throws EmptyStartTimeException, TaskDoneException, EmptyDescriptionException, EmptyEndTimeException,","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"            FileNotFoundException, InvalidTaskTypeException, EmptyDeadlineException {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        File sampleTaskFile \u003d new File(\"junit-fileparser-test.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"        FileParser fileParser \u003d new FileParser(sampleTaskFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"        Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        sampleTasks.add(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(\"2023-06-06 06:06\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        Deadline deadlineTask \u003d new Deadline(\"return book\", deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"        sampleTasks.add(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"2023-08-06 14:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(\"2023-08-06 16:00\", formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        Task eventTask \u003d new Event(\"project meeting\", startTime, endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        sampleTasks.add(eventTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        assertEquals(sampleTasks, fileParser.parseFile());","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jianminglok":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"blah blah","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"delete","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"mark","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"unmark","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"delete abc","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"mark def","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"unmark ghi","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"deadline return book","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"deadline return book /by","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"event project meeting","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"event project meeting /from","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"event project meeting /to","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"event project meeting /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"event project meeting /from 2023-08-06 14:00 /to","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"event project meeting /from /to 2023-08-06 16:00","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"due","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"delete 1","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"deadline return book /by 2023-06-06 06:06","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"event project meeting /from 2023-08-06 14:00 /to 2023-08-06 16:00","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"deadline return book /by 2023-01-29 15:00","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"event project meeting /from 2023-08-07 14:00 /to 2023-08-07 16:00","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"delete 0","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"delete 8","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"mark 8","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"unmark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"unmark 8","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"delete 7","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"delete 7","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"due 2023-06-06","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"due 2023-08-06","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jianminglok":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\twofive\\*.java","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"java -classpath ..\\bin TwoFive \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jianminglok":2,"-":19}}]
