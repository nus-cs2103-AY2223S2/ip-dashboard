[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"    public Deadline(String input, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"        super(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jinnieshin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jinnieshin"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jinnieshin"},"content":"        return \"D\" + super.toTxtString() + \"|\" + this.deadline.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"    public static String line \u003d \"    ______________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"    public static final String PATH \u003d \"./duke.txt\";","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"    private static List list \u003d new List();","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"        startDuke();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jinnieshin"},"content":"    public static void startDuke() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jinnieshin"},"content":"        greeting();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jinnieshin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jinnieshin"},"content":"            openSavedList();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jinnieshin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jinnieshin"},"content":"            File newFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jinnieshin"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jinnieshin"},"content":"                boolean createdNewFile \u003d newFile.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jinnieshin"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jinnieshin"},"content":"                System.out.println(\"Could not create new file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jinnieshin"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jinnieshin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jinnieshin"},"content":"        boolean active \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jinnieshin"},"content":"        while (active) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jinnieshin"},"content":"            String command \u003d sc.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jinnieshin"},"content":"            boolean needUpdate \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jinnieshin"},"content":"            switch (command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jinnieshin"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jinnieshin"},"content":"                end();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"jinnieshin"},"content":"                active \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jinnieshin"},"content":"            case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jinnieshin"},"content":"                list.print();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jinnieshin"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jinnieshin"},"content":"                int markIdx \u003d sc.nextInt();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"jinnieshin"},"content":"                if (markIdx \u003e\u003d list.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jinnieshin"},"content":"                    DukeException noTaskIdx \u003d new DukeException(","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jinnieshin"},"content":"                        \"The task with the given index does not exist.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(noTaskIdx);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jinnieshin"},"content":"                list.get(markIdx).markDone(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jinnieshin"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jinnieshin"},"content":"                int unmarkIdx \u003d sc.nextInt();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"jinnieshin"},"content":"                if (unmarkIdx \u003e\u003d list.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jinnieshin"},"content":"                    DukeException noTaskIdx \u003d new DukeException(","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jinnieshin"},"content":"                        \"The task with the given index does not exist.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(noTaskIdx);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jinnieshin"},"content":"                list.get(unmarkIdx).unmark(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"jinnieshin"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"jinnieshin"},"content":"                String todoTask \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"jinnieshin"},"content":"                todoTask \u003d removeSpaces(todoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"jinnieshin"},"content":"                    list.add(todoTask, true);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"jinnieshin"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"jinnieshin"},"content":"                String temp \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"jinnieshin"},"content":"                if (!temp.matches(\"^.+(\\\\s)/by(\\\\s).+$\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"jinnieshin"},"content":"                    DukeException msgMismatch \u003d new DukeException(","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"jinnieshin"},"content":"                            \"Please use the correct format to add a deadline.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(msgMismatch);","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"jinnieshin"},"content":"                String[] dlTask \u003d temp.split(\"/by\");","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"jinnieshin"},"content":"                dlTask[0] \u003d removeSpaces(dlTask[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"jinnieshin"},"content":"                dlTask[1] \u003d removeSpaces(dlTask[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"jinnieshin"},"content":"                    list.add(dlTask[0], dlTask[1], true);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"jinnieshin"},"content":"            case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"jinnieshin"},"content":"                String temp2 \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"jinnieshin"},"content":"                if (!temp2.matches(\"^.+(\\\\s)/from(\\\\s).+(\\\\s)/to.*$\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"jinnieshin"},"content":"                    DukeException msgMismatch \u003d new DukeException(","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"jinnieshin"},"content":"                        \"Please use the correct format to add an event.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(msgMismatch);","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"jinnieshin"},"content":"                String[] eventTask \u003d temp2.split(\"/from|/to\");","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"jinnieshin"},"content":"                eventTask[0] \u003d removeSpaces(eventTask[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"jinnieshin"},"content":"                eventTask[1] \u003d removeSpaces(eventTask[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"jinnieshin"},"content":"                eventTask[2] \u003d removeSpaces(eventTask[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"jinnieshin"},"content":"                    list.add(eventTask[0], eventTask[1], eventTask[2], true);","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"jinnieshin"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"jinnieshin"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"jinnieshin"},"content":"                int deleteIdx \u003d sc.nextInt();","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"jinnieshin"},"content":"                list.remove(deleteIdx);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"jinnieshin"},"content":"                needUpdate \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"jinnieshin"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"jinnieshin"},"content":"                DukeException unknowCmd \u003d new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"jinnieshin"},"content":"                System.out.println(unknowCmd);","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"jinnieshin"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"jinnieshin"},"content":"            if (needUpdate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"jinnieshin"},"content":"                    writeToFile(list.toTxtString());","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"jinnieshin"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(\"Error during saving\");","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"jinnieshin"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(line + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"jinnieshin"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"jinnieshin"},"content":"    public static void greeting() {","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"jinnieshin"},"content":"    public static void openSavedList() throws FileNotFoundException {","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"jinnieshin"},"content":"        File f \u003d new File(PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"jinnieshin"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"jinnieshin"},"content":"        ArrayList\u003cString\u003e rawData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"jinnieshin"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"jinnieshin"},"content":"            rawData.add(sc.nextLine());","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"jinnieshin"},"content":"        if (rawData.isEmpty()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"There is no task in the list!\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"jinnieshin"},"content":"            sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"jinnieshin"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"jinnieshin"},"content":"        for (int i \u003d 0; i \u003c rawData.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"jinnieshin"},"content":"            String[] taskData \u003d rawData.get(i).split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"jinnieshin"},"content":"            switch(taskData[0]) {","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"jinnieshin"},"content":"            case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"jinnieshin"},"content":"                    list.add(taskData[2], false);","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"jinnieshin"},"content":"                    if (taskData[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"jinnieshin"},"content":"                        list.get(i + 1).markDone(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"jinnieshin"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"jinnieshin"},"content":"            case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"jinnieshin"},"content":"                    list.add(taskData[2], taskData[3], false);","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"jinnieshin"},"content":"                    if (taskData[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"jinnieshin"},"content":"                        list.get(i + 1).markDone(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"jinnieshin"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"jinnieshin"},"content":"            case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"jinnieshin"},"content":"                String[] duration \u003d taskData[3].split(\"-\");","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"jinnieshin"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"jinnieshin"},"content":"                    list.add(taskData[2], duration[0], duration[1], false);","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"jinnieshin"},"content":"                    if (taskData[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"jinnieshin"},"content":"                        list.get(i + 1).markDone(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"jinnieshin"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"jinnieshin"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"jinnieshin"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"jinnieshin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":189,"author":{"gitId":"jinnieshin"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"jinnieshin"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":192,"author":{"gitId":"jinnieshin"},"content":"        list.print();","lastModifiedDate":"2023-01-24"},{"lineNumber":193,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-24"},{"lineNumber":194,"author":{"gitId":"jinnieshin"},"content":"        sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":196,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":197,"author":{"gitId":"jinnieshin"},"content":"    public static String removeSpaces(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"jinnieshin"},"content":"        String str \u003d input.replaceFirst(\" \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":199,"author":{"gitId":"jinnieshin"},"content":"        if (str.charAt(str.length() - 1) \u003d\u003d \u0027 \u0027) { ","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"jinnieshin"},"content":"            str \u003d str.substring(0, str.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"jinnieshin"},"content":"        return str;","lastModifiedDate":"2023-01-24"},{"lineNumber":203,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":204,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"jinnieshin"},"content":"    public static void end() {","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":209,"author":{"gitId":"jinnieshin"},"content":"    public static void writeToFile(String dukeData) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":210,"author":{"gitId":"jinnieshin"},"content":"        FileWriter fw \u003d new FileWriter(PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":211,"author":{"gitId":"jinnieshin"},"content":"        fw.write(dukeData);","lastModifiedDate":"2023-01-24"},{"lineNumber":212,"author":{"gitId":"jinnieshin"},"content":"        fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":213,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":11,"jinnieshin":203}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"    private String message;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"        return \"    OOPS!!! \" + this.message;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"    public Event(String input, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"        super(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"        this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"        this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jinnieshin"},"content":"        return \"[E]\" + super.toString() + \"(from: \" ","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jinnieshin"},"content":"        + this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \" to: \" ","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jinnieshin"},"content":"        + this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jinnieshin"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jinnieshin"},"content":"        return \"E\" + super.toTxtString() + \"|\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jinnieshin"},"content":"        + this.from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \"-\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jinnieshin"},"content":"        + this.to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":27}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"public class List {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"    public List() {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"        this.list.add(new ToDo(\"zeroth\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"    public void add(String input, boolean needPrint) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"        if (isEmpty(input)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"        ToDo newTask \u003d new ToDo(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"        this.list.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jinnieshin"},"content":"        if (needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Now you have \" + (this.list.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jinnieshin"},"content":"    public void add(String input, String deadline, boolean needPrint) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jinnieshin"},"content":"        if (isEmpty(input) || isEmpty(deadline)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jinnieshin"},"content":"            throw new DukeException(\"The description and deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jinnieshin"},"content":"        Deadline newTask \u003d new Deadline(input, deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jinnieshin"},"content":"        this.list.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jinnieshin"},"content":"        if (needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Now you have \" + (this.list.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jinnieshin"},"content":"    public void add(String input, String from, String to, boolean needPrint) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jinnieshin"},"content":"        if (input.equals(\"\") || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jinnieshin"},"content":"            throw new DukeException(\"The descriptiom and duration of an event cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jinnieshin"},"content":"        Event newTask \u003d new Event(input, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jinnieshin"},"content":"        this.list.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jinnieshin"},"content":"        if (needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Now you have \" + (this.list.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jinnieshin"},"content":"    public boolean isEmpty(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jinnieshin"},"content":"        String temp \u003d str.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jinnieshin"},"content":"        if (temp.equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jinnieshin"},"content":"            return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jinnieshin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"jinnieshin"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"jinnieshin"},"content":"        Task removedTask \u003d this.list.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"jinnieshin"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(\"    \" + removedTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(\"    Now you have \" + (this.list.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"jinnieshin"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"jinnieshin"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"jinnieshin"},"content":"    public void print() {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"jinnieshin"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"jinnieshin"},"content":"        for (int i \u003d 1; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + i + \". \" + this.list.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"jinnieshin"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"jinnieshin"},"content":"        String data \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"jinnieshin"},"content":"        for (int i \u003d 1; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"jinnieshin"},"content":"            data +\u003d this.list.get(i).toTxtString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jinnieshin"},"content":"        return data;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"jinnieshin"},"content":"    public int size() {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"jinnieshin"},"content":"        return list.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":87}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"    private String task;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"    public Task(String title) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"        this.task \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"    public void markDone(boolean needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"        if (needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + this.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jinnieshin"},"content":"    public void unmark(boolean needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jinnieshin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jinnieshin"},"content":"        if (needPrint) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jinnieshin"},"content":"            System.out.println(\"    \" + this.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jinnieshin"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jinnieshin"},"content":"    public boolean checkDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jinnieshin"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jinnieshin"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jinnieshin"},"content":"        return this.task;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jinnieshin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jinnieshin"},"content":"        String mark \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jinnieshin"},"content":"        return \"[\" + mark + \"] \" + this.task;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jinnieshin"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jinnieshin"},"content":"        String mark2 \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jinnieshin"},"content":"        return \"|\" + mark2 + \"|\" + this.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinnieshin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jinnieshin"},"content":"    public ToDo(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jinnieshin"},"content":"        super(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jinnieshin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jinnieshin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jinnieshin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jinnieshin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jinnieshin"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jinnieshin"},"content":"        return \"T\" + super.toTxtString();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jinnieshin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jinnieshin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jinnieshin":15}}]
