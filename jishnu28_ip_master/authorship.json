[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"T |   | borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"D | X | return book | 2019-10-15","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"T |   | sell book","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"D | X | eat banana | 2020-02-23","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"E |   | meeting bob | 2021-03-15 | 2022-04-23","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":4,"-":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Deadline type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /** The end date of this deadline object stored as a String*/","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    protected String byDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    /** The end date of this deadline object stored as a LocalDate*/","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     * Constructor for objects of type Deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     * @param userInput specifies the byDate and title of a Deadline object","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    public Deadline(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(9, userInput.indexOf(\"/by \") - 1), \u0027D\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        this.byDate \u003d userInput.substring(userInput.indexOf(\"/by \") + 4);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        this.endDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        return super.toString() + \" (by: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        return super.encode() + \" | \" + this.byDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":36}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Duke task list manager","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    /** Array of tasks */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    /** Number of tasks in list */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    private static int listIndex \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * Adds a task to the taskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * @param listItem Task to be added to taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    public static void addToList(Task listItem) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        taskList.addTask(listItem);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        listIndex++;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"I\u0027ve added the following task to your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        System.out.println(listItem.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Current tasks count: \" + (listIndex));","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * Removes the task at a specified position in taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * @param pos Position in taskList at which the task to be removed is stored","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public static void removeFromList(int pos) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"        Task curr \u003d taskList.deleteTask(pos - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        listIndex--;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"I\u0027ve removed the following task from your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Current tasks count: \" + (listIndex));","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"     * Prints the contents of the taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public static void displayList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        int pos \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"        while (pos \u003c taskList.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"            System.out.println((pos + 1) + \". \" + taskList.getTask(pos).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"            pos++;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"End of list!\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * Throws an exception","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"     * @param exceptionType Describes the type of DukeException to be thrown","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"     * @throws DukeException If input is invalid","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"    public static void throwException(String exceptionType) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        throw new DukeException(exceptionType);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * Greets user, awaits user input and updates/displays taskList accordingly.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"     * @param args Commands from user, to interact with taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"        Storage fileManager \u003d new Storage();","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"        taskList \u003d fileManager.read();","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        listIndex \u003d taskList.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"        Ui.greet();","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"        String userInput \u003d  sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"        String exitCommand \u003d \"bye\";","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"        while (!userInput.equals(exitCommand)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"            parser.parse(userInput, taskList, fileManager);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"        Ui.exit();","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jishnu28":89,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines types of exceptions specific to Duke","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /** Error message to be displayed when a DukeException is thrown*/","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * Constructor for DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     * @param taskType Specifies the type of error in user input","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    DukeException(String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid todo task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"                    \"   todo borrow book\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid deadline task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"                    \"   deadline return book /by Sunday\";","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid event task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"                    \"   event project meeting /from Mon 2pm /to 4pm\";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for non-specific cases of exception","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    DukeException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        message \u003d \"OOPS!! I\u0027m sorry, I don\u0027t know what that means :(\";","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"        return message;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jishnu28":42}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Event type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /** Start date for this event stored as a String*/","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    protected String fromDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    /** Start date for this event stored as a LocalDate*/","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /** End date for this event */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    protected String toDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    /** End date for this event stored as a LocalDate*/","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * Constructor for objects of type Event","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * @param userInput specifies the fromDate, toDate and title of an Event object","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    public Event(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(6, userInput.indexOf(\"/from \") - 1), \u0027E\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        this.fromDate \u003d userInput.substring(userInput.indexOf(\"/from \") + 6, userInput.indexOf(\"/to \") - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        this.startDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        this.toDate \u003d userInput.substring(userInput.indexOf(\"/to \") + 4);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"        this.endDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        return super.toString() + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        return super.encode() + \" | \" + this.fromDate + \" | \" + this.toDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":43}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that deals with making sense of the user command","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"     * Makes sense of the user command and calls corresponding methods","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     * @param userInput String of user input read from command line","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"     * @param taskList TaskList object to which tasks are added to or deleted from","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * @param fileManager Storage object that deals with loading tasks from file and saving tasks in file","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    public void parse(String userInput, TaskList taskList, Storage fileManager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"        if (!userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"            // If input \u003d \"mark x\" set task x completed? to True","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"            if (userInput.startsWith(\"mark \")){","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"                int taskNum \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"                taskList.getTask(taskNum - 1).setCompleted(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"            // If input \u003d \"unmark x\" set task x completed? to False","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"            else if (userInput.startsWith(\"unmark \")){","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"                int taskNum \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"                taskList.getTask(taskNum - 1).setCompleted(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            // If input is a deadline, create deadline and add to task list","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"            else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"                if (userInput.contains(\"/by \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"                    Duke.addToList(new Deadline(false, userInput));","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"                    try {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"                        Duke.throwException(\"deadline\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"                    } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"                        System.out.println(de.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"            // If input is an event, create event and add to task list","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"            else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"                if (userInput.contains(\"/from \") \u0026\u0026 userInput.contains(\"/to \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"                    Duke.addToList(new Event(false, userInput));","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"                    try {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"                        Duke.throwException(\"event\");","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"                    } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"                        System.out.println(de.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"            // If input is a ToDos item, create ToDos item and add to task list","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"            else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"                if (userInput.length() \u003e 5) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"                    Duke.addToList(new Todo(false, userInput));","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"                    try {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"                        Duke.throwException(\"todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"                    } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                        System.out.println(de.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"            // If command is delete, then remove from task list and return deleted task","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"            else if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"                // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!___________handle non-int input","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"                    int num \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"                    Duke.removeFromList(num);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"                    ex.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"            // Else create and add task to list","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"                    Duke.addToList(new Task());","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"                catch (DukeException de){","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"                    System.out.println(de.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"            // Insert call on method that writes curr version of taskList to data/duke.txt","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"            fileManager.writeToFile(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"        else {","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"            Duke.displayList();","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":95}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":" * Class that deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     * Constructor for a Storage object","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    public Storage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        File dataFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"                folder.mkdir();","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        } catch (IOException  e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     * Writes tasks to a specified file for it to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     * @param taskList TaskList object from which the tasks to be written are taken","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"            for (int pos \u003d 0; pos \u003c taskList.size(); pos++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"                Task task \u003d taskList.getTask(pos);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"                myWriter.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"                myWriter.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"     * Decodes String version of tasks from text file into corresponding Task objects","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     * @param data String version of a task object","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * @return A task object","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    public Task decode(String data) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        // Use examples in qn page to decode into tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        char taskType \u003d data.charAt(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"        Task currentTask \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Todo(true, \"todo \" + data.substring(8));","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Todo(false, \"todo \" + data.substring(8));","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"                String tempString \u003d data.substring(8);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"                String taskName \u003d tempString.substring(0, tempString.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"                String deadline \u003d tempString.substring(tempString.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"                String reformattedInput \u003d \"deadline \" + taskName + \" /by \" + deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"                if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Deadline(true, reformattedInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Deadline(false, reformattedInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"                String temp \u003d data.substring(8);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"                String taskTitle \u003d temp.substring(0, temp.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"                String datesString \u003d temp.substring(temp.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"                String fromDate \u003d datesString.substring(0, datesString.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"                String toDate \u003d datesString.substring(datesString.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"                String newInput \u003d \"event \" + taskTitle + \" /from \" + fromDate + \" /to \" + toDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"                if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Event(true, newInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"                    currentTask \u003d new Event(false, newInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"        return currentTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"     * Reads tasks from text file and stored them in a TaskList object","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"     * @return TaskList object that contains the tasks read from specified text file","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"    public TaskList read() {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"        TaskList retrievedList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"            File myObj \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"                retrievedList.addTask(this.decode(data));","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"            myReader.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"        return retrievedList;","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":119}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Task object","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    /** Whether the task is completed or not */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    /** Description of the task */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    protected String title;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /** Type of Task */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    protected char taskType; // can be T, D or E","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for Task objects","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     * @param title specifies the description of this task object","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * @param taskType specifies whether the task is a deadline, todo or event","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    public Task(boolean isCompleted, String title, char taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"     *Constructor for invalid input that throws general DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    public Task() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        throw new DukeException();","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    // Methods:","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"            return \"[\" + taskType + \"]\" + \" [X] \" + title;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"        return \"[\" + taskType + \"]\" + \" [ ] \" + title;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    public void setCompleted(boolean setting) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        this.isCompleted \u003d setting;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"        if (setting) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as completed:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\" \" + this.toString() + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        else {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as incomplete:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\" \" + this.toString() + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * Encodes a Task object into an \u0027easy to decode\u0027 String object","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     * @return String representation of a Task object, for storage in a text file","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"            return taskType + \" | \" + \"X\" + \" | \" + this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        else {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            return taskType + \" | \" + \" \" + \" | \" + this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":" * Class that contains the task list","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    /** ArrayList of tasks*/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for TaskList object","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * Adds specified task to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * @param currentTask Task to be added to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    public void addTask(Task currentTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        this.taskList.add(currentTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     * Deletes the task at a specified position in TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @param taskPosition Position of the task to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * @return deleted Task","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public Task deleteTask(int taskPosition) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.remove(taskPosition - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     *  Returns the task at a specified position in TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     * @param pos Position of the task to be retrieved","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"     * @return Task object","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"    public Task getTask(int pos) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.get(pos);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"     * Returns the number of Tasks in the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     * @return number of Tasks in the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jishnu28":56}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Todo type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     * Constructor for Todo objects","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"     * @param userInput Specifies the todo task\u0027s title","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    public Todo(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(5), \u0027T\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        return super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class to define the methods used to interact with user","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     * Prints greeting text","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + logo);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"How may I help you today?\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     * Prints the user\u0027s input","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    public static void echo(String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        System.out.println(userInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * Prints exit message","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    public static void exit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"buy","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"sell","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"unmark 3","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":8}}]
