[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jishnu28":16,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"T |   | borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"D | X | return book | 2019-10-15","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"T |   | sell book","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"D | X | eat banana | 2020-02-23","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"T |   | pre-test","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"D | X | say bye | 2019-10-15","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"E |   | meeting bob | 2019-10-15 | 2019-10-15","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"D |   | buy bananas | 2021-11-12","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"E |   | make banana milkshake | 2021-11-12 | 2021-12-12","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"jishnu28":9}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Deadline type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    protected String byDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     * Constructor for objects of type Deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     * @param userInput specifies the byDate and title of a Deadline object","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    public Deadline(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(9, userInput.indexOf(\"/by \") - 1), TaskType.D);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        this.byDate \u003d userInput.substring(userInput.indexOf(\"/by \") + 4);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        this.endDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        return super.toString() + \" (by: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        return super.encode() + \" | \" + this.byDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    private Label text;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * Creates and returns a new DialogBox object containing user\u0027s label and image","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @return DialogBox containing user\u0027s label and image","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"     * Creates and returns a new DialogBox object containing Duke\u0027s label and image","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"     * @return DialogBox containing Duke\u0027s label and image","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jishnu28":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Duke task list manager","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static Storage fileManager \u003d new Storage();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    private static TaskList taskList \u003d fileManager.read();","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user_img.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke_img.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"     *  Returns a response based on the user\u0027s input","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"     * @param input The user\u0027s input","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"     * @return String that is Duke\u0027s response based on the user\u0027s input","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"        return parser.parse(input, taskList, fileManager);","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"jishnu28"},"content":"     * Adds a task to the taskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"     * @param listItem Task to be added to taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"     * @return String to inform the user that the specified task has been added to the taskList","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"jishnu28"},"content":"    public static String addToList(Task listItem) {","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"        taskList.addTask(listItem);","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"jishnu28"},"content":"        String result \u003d \"\u003e Duke\u0027s response:\\n\" + \"I\u0027ve added the following task to your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"        result +\u003d listItem.toString() + \"\\nCurrent tasks count: \" + (taskList.size()) +","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jishnu28"},"content":"                \"\\n--------------------------------\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"     * Removes the task at a specified position in taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"     * @param pos Position in taskList at which the task to be removed is stored","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"     * @return String to inform the user that the specified task has been removed from the taskList","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"    public static String removeFromList(int pos) {","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"        Task curr \u003d taskList.deleteTask(pos - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"        String result \u003d \"\u003e Duke\u0027s response:\\n\" + \"I\u0027ve removed the following task from your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jishnu28"},"content":"        result +\u003d curr.toString() + \"\\nCurrent tasks count: \" + (taskList.size()) +","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"                \"\\n--------------------------------\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jishnu28"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"jishnu28"},"content":"     * Prints the contents of the taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"     * @return String listing the tasks in taskList","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"jishnu28"},"content":"    public static String displayList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jishnu28"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList.printList();","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"jishnu28"},"content":"     * Greets user, awaits user input and updates/displays taskList accordingly.","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"jishnu28"},"content":"     * @param args Commands from user, to interact with taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"        Ui.greet();","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"jishnu28"},"content":"        String userInput \u003d  sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"jishnu28"},"content":"        String exitCommand \u003d \"bye\";","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"jishnu28"},"content":"        while (!userInput.equals(exitCommand)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"jishnu28"},"content":"            System.out.println(parser.parse(userInput, taskList, fileManager));","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"jishnu28"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"        Ui.exit();","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jishnu28":181,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines types of exceptions specific to Duke","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /** Error message to be displayed when a DukeException is thrown*/","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * Constructor for DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     * @param taskType Specifies the type of error in user input","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    DukeException(String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid todo task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"                    \"   todo borrow book\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid deadline task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"                    \"   deadline return book /by Sunday\";","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"            message \u003d \"OOPS!! This is an invalid event task.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"                    \"Here\u0027s a valid example:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"                    \"   event project meeting /from Mon 2pm /to 4pm\";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for non-specific cases of exception","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    DukeException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        message \u003d \"OOPS!! I\u0027m sorry, I don\u0027t know what that means :(\";","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"        return message;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jishnu28":42}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Event type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    protected String fromDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    /** Same value as fromDate, but stored as a LocalDate object */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    protected String toDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /** Same value as toDate, but stored as a LocalDate object */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     * Constructor for objects of type Event","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * @param userInput specifies the fromDate, toDate and title of an Event object","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    public Event(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(6, userInput.indexOf(\"/from \") - 1), TaskType.E);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        this.fromDate \u003d userInput.substring(userInput.indexOf(\"/from \") + 6, userInput.indexOf(\"/to \") - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        this.startDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        this.toDate \u003d userInput.substring(userInput.indexOf(\"/to \") + 4);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        this.endDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"        return super.toString() + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        return super.encode() + \" | \" + this.fromDate + \" | \" + this.toDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":41}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jishnu28":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that deals with making sense of the user command","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"     * Parses user input and executes the specified commands","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     * @param userInput String of user input read from command line","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"     * @param taskList TaskList object to which tasks are added to or deleted from","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * @param fileManager Storage object that deals with loading tasks from file and saving tasks in file","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     * @return String that is Duke\u0027s response to the user\u0027s input","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public String parse(String userInput, TaskList taskList, Storage fileManager) {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"            result +\u003d \"Bye, hope to see you again soon!\\nClick on the \u0027close window\u0027 icon to exit\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"            Ui.exit();","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        case \"list\":","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"            result +\u003d Duke.displayList();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        case \"find\":","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"            String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            TaskList tempTaskList \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"            result +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"            result +\u003d tempTaskList.printList();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"            int markTaskNum \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"            assert markTaskNum \u003c taskList.size() \u0026\u0026 markTaskNum \u003e 0: \"index of task to mark is out of range\";","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"            result +\u003d taskList.getTask(markTaskNum - 1).setCompleted(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"            int unmarkTaskNum \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"            assert unmarkTaskNum \u003c taskList.size() \u0026\u0026 unmarkTaskNum \u003e 0: \"index of task to unmark is out of range\";","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"            result +\u003d taskList.getTask(unmarkTaskNum - 1).setCompleted(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"            if (userInput.contains(\"/by \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"                result +\u003d Duke.addToList(new Deadline(false, userInput));","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"                    throw new DukeException(\"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"                    result +\u003d de.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        case \"event\":","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"            if (userInput.contains(\"/from \") \u0026\u0026 userInput.contains(\"/to \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"                result +\u003d Duke.addToList(new Event(false, userInput));","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"                    throw new DukeException(\"event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"                    result +\u003d de.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            if (userInput.length() \u003e 5) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"                result +\u003d Duke.addToList(new Todo(false, userInput));","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"                    throw new DukeException(\"todo\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"                    result +\u003d de.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"                int num \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"                assert num \u003c taskList.size() \u0026\u0026 num \u003e 0: \"index of task to delete is out of range\";","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"                result +\u003d Duke.removeFromList(num);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"            } catch (NumberFormatException ex) { // To handle non-int input","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"                ex.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"                result +\u003d de.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"        fileManager.writeToFile(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":95}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":" * Class that handles loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     * Constructor for a Storage object","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    public Storage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        File dataFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"                folder.mkdir();","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        } catch (IOException  e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     * Writes tasks to a specified file for it to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     * @param taskList TaskList object from which the tasks to be written are taken","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"            for (int pos \u003d 0; pos \u003c taskList.size(); pos++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"                Task task \u003d taskList.getTask(pos);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"                myWriter.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"                myWriter.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"     * Decodes String version of tasks from text file into corresponding Task objects","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     * @param data String version of a task object","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * @return A task object created with the attributes specified in the data argument","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    public Task decode(String data) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        // Use examples in qn page to decode into tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        char taskType \u003d data.charAt(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"        Task currentTask \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"            if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Todo(true, \"todo \" + data.substring(8));","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Todo(false, \"todo \" + data.substring(8));","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"            String tempString \u003d data.substring(8);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"            String taskName \u003d tempString.substring(0, tempString.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"            String deadline \u003d tempString.substring(tempString.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"            String reformattedInput \u003d \"deadline \" + taskName + \" /by \" + deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"            if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Deadline(true, reformattedInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Deadline(false, reformattedInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"            String temp \u003d data.substring(8);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"            String taskTitle \u003d temp.substring(0, temp.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"            String datesString \u003d temp.substring(temp.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"            String fromDate \u003d datesString.substring(0, datesString.indexOf(\" | \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"            String toDate \u003d datesString.substring(datesString.indexOf(\" | \") + 3);","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"            String newInput \u003d \"event \" + taskTitle + \" /from \" + fromDate + \" /to \" + toDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"            if (data.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Event(true, newInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"                currentTask \u003d new Event(false, newInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"        return currentTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"     * Reads tasks from text file and stored them in a TaskList object","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"     * @return TaskList object that contains the tasks read from specified text file","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"    public TaskList read() {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        TaskList retrievedList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"            File myObj \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"                retrievedList.addTask(this.decode(data));","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"            myReader.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"        return retrievedList;","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":123}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Task object","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    protected String title;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    public enum TaskType {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"        T,D,E;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for Task objects","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * @param isCompleted Boolean that specifies whether the task is completed","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     * @param title String that specifies the description of this task object","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     * @param taskType specifies whether the task is a deadline, todo or event","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    public Task(boolean isCompleted, String title, TaskType taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"            return \"[\" + taskType + \"]\" + \" [X] \" + title;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        return \"[\" + taskType + \"]\" + \" [ ] \" + title;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     *  Sets the isCompleted to be True or False","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * @param setting boolean representing the completion status of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     * @return String to inform the user that the task has been marked complete/incomplete","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    public String setCompleted(boolean setting) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        this.isCompleted \u003d setting;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        if (setting) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"            result +\u003d \"Nice! I\u0027ve marked this task as completed:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"        else {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"            result +\u003d \"OK, I\u0027ve marked this task as incomplete:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        result +\u003d \" \" + this.toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     * Encodes a Task object into an \u0027easy to decode\u0027 String object","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * @return String representation of a Task object, for storage in a text file","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    public String encode() {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"            return taskType + \" | \" + \"X\" + \" | \" + this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        else {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            return taskType + \" | \" + \" \" + \" | \" + this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":" * Class that contains the task list","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     * Default constructor for TaskList object","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     * Adds specified task to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     * @param currentTask Task to be added to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    public void addTask(Task currentTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        this.taskList.add(currentTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     * Deletes the task at a specified position in TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * @param taskPosition Position of the task to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @return deleted Task","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    public Task deleteTask(int taskPosition) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.remove(taskPosition);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     *  Returns the task at a specified position in TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param pos Position of the task to be retrieved","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     * @return Task object","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    public Task getTask(int pos) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.get(pos);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"     * Returns the number of Tasks in the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * @return number of Tasks in the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Finds all tasks in tasklist that contains keyword in task title","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     * @param keyword String of matching text to be found","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @return TaskList containing all tasks in tasklist that contain keyword in task title","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        for (Task currTask : this.taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            if (currTask.title.contains(keyword)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"                resultList.addTask(currTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"        return resultList;","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     * Prints the tasks in taskList in an indexed manner","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"     * @return String that describes the tasks in the taskList and their completion status","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"    public String printList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"        int pos \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"        while (pos \u003c this.taskList.size()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"            result.append(pos + 1).append(\". \").append(this.taskList.get(pos).toString()).append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"            pos++;","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"        return result.append(\"End of list!\\n\").toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jishnu28":88}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class that defines the Todo type of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     * Constructor for Todo objects","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"     * @param userInput Specifies the todo task\u0027s title","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    public Todo(boolean isCompleted, String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"        super(isCompleted, userInput.substring(5),TaskType.T);","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        return super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * Class to define the methods used to interact with user","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     * Prints greeting text","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + logo);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"How may I help you today?\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     * Prints the user\u0027s input","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    public static void echo(String userInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        System.out.println(userInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * Prints exit message","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    public static void exit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"\u003e Duke\u0027s response:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"        System.out.println(\"--------------------------------\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jishnu28":39}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class to define the tests for the Deadline class methods","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * Testing the encode method of the Deadline class","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public void encodeTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        assertEquals(\"D | X | return book | 2019-10-15\",","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"                (new Deadline(true, \"deadline return book /by 2019-10-15\")).encode());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jishnu28":24}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class to define the tests for the Event class methods","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * Testing the encode method of the Event class","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public void encodeTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        assertEquals(\"E |   | meeting bob | 2021-03-15 | 2022-04-23\",","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"                (new Event(false,","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"                        \"event meeting bob /from 2021-03-15 /to 2022-04-23\")).encode());","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jishnu28":25}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":" * Class to define tests for Todo class methods","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"     * Testing the encode method of the Todo class","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    public void encodeTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"        assertEquals(\"T |   | borrow book\",","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"                (new Todo(false, \"todo borrow book\")).encode());","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jishnu28":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"buy","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"sell","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"deadline buy bananas /by 2021-11-12","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"event make banana milkshake /from 2021-11-12 /to 2021-12-12","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"unmark 3","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jishnu28":10}}]
