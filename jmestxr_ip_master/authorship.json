[{"path":"data/smartduke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"D | 1 | read book | 2023-1-1 1200","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"E | 0 | play ball | 2023-1-5 1800 | 2023-1-5 2300","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":2}},{"path":"src/main/java/smartduke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":" * DukeException represents an exception specific to Duke.","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":10}},{"path":"src/main/java/smartduke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.command.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * Enumerates the different types of string patterns of user commands available on SmartDuke.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    enum CommandPattern {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        ADD_TODO(\"todo.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        ADD_DEADLINE(\"deadline.*/by.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"        ADD_EVENT(\"event.*/from.*/to.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        DELETE_TASK(\"delete[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        MARK_TASK(\"mark[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        UNMARK_TASK(\"unmark[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        LIST_TASKS(\"list\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        END_CHAT(\"bye\");","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"         * The regex pattern of this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        private Pattern pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"         * Checks if the given string matches this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"         * @param userCommand The given string provided by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"         * @return True if the given string matches this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"        public boolean match(String userCommand) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"            return this.pattern.matcher(userCommand).matches();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        private CommandPattern(String regex) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"            this.pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"     * Convert user-input datetime string to LocalDateTime object.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"     * @param dateTimeString The user-input datetime string.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"     * @return The input datetime represented as a LocalDateTime object.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the input string is not of the supported format: yyyy-M-d HHmm.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"You have provided an invalid date format. Make sure it is in yyyy-M-d HHmm format!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"     * Pretty-formats the input datetime for display.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"     * @param dateTime The input datetime.","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"     * @return A datetime string in the format: d MMM yyyy h:mma.","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"    public static String prettifyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"     * Undo the pretty-formatted datetime string into the user-input datetime string format.","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"     * @param dateTime The pretty-formatted datetime string","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"     * @return A datetime string in the format: yyyy-M-d HHmm.","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"    public static String dePrettifyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"     * Parses the user input command string.","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"     * @param userCommand The user input string.","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"     * @return The user command encapsulated in the form a Command object.","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If an invalid or unsupported command is provided by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"    public static Command parse(String userCommand) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"        if (CommandPattern.ADD_TODO.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"            /* add todo task */","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d userCommand.substring(4).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"            Task todoTask \u003d new ToDo(taskDesc);","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(todoTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.ADD_DEADLINE.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"            /* add deadline task */","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"            String[] parsedCommand \u003d userCommand.substring(8).split(\"/by\", -1);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d parsedCommand[0].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"            String by \u003d parsedCommand[1].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"            Task deadlineTask \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(deadlineTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.ADD_EVENT.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"            /* add event task */","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"            String[] parsedCommand \u003d userCommand.substring(5).split(\"/from|/to\", -1);","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d parsedCommand[0].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"            String from \u003d parsedCommand[1].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"            String to \u003d parsedCommand[2].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"            Task eventTask \u003d new Event(taskDesc, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(eventTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.DELETE_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"            /* delete task */","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(6).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"            return new DeleteCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.MARK_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"            /* mark task */","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(4).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"            return new MarkCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.UNMARK_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"jmestxr"},"content":"            /* unmark task */","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(6).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"jmestxr"},"content":"            return new UnmarkCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.LIST_TASKS.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"jmestxr"},"content":"            /* list tasks */","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"jmestxr"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.END_CHAT.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"jmestxr"},"content":"            /* End the session */","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"jmestxr"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"jmestxr"},"content":"        } else throw new DukeException(\"Huh? I don\u0027t understand you...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":128}},{"path":"src/main/java/smartduke/SmartDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.command.Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"public class SmartDuke {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    public SmartDuke() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"        this.startSession();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * Begins the chat session with the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    private void startSession() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        /* Greet the user */","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"                String userCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"                Command c \u003d Parser.parse(userCommand);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"                c.execute(this.taskList, this.ui);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"            } finally {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        ui.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"        new SmartDuke();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":50}},{"path":"src/main/java/smartduke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * The list of tasks added by the user and currently recorded by SmartDuke.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public TaskList() throws DukeException  {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        this.load();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"     * Add the given task to list.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     * @param task the given task","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     * Delete the task with the given task number from the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"    public Task delete(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"            return this.tasks.remove(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"     * Get the list of tasks currently recorded.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"     * @return The list of tasks in the form of an iterator.","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"    public Iterator\u003cTask\u003e list() {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"     * Marks the task with the given task number as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"     * @return The marked task.","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"    public Task mark(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"            task.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"            return task;","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"     * Marks the task with the given task number as not done.","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"    public Task unmark(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"            task.markNotDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"            return task;","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"     * Loads the saved tasks from local file into the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the directory that stores the tasks data does not exist.","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"    private void load() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"            /* Reset the taskList */","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"            Path path \u003d Paths.get(\".\", \"data\", \"smartduke.txt\");","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"            File tasksData \u003d path.toFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"            if (!tasksData.exists()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"                tasksData.createNewFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"            Scanner fileReader \u003d new Scanner(tasksData);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"                    String taskData \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"                    String[] parsedTaskData \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"                    String taskSymbol \u003d parsedTaskData[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"                    boolean isTaskDone \u003d parsedTaskData[1].equals(\"1\");","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"jmestxr"},"content":"                    String taskDescription \u003d parsedTaskData[2];","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"jmestxr"},"content":"                    /* Add the task to taskList */","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"jmestxr"},"content":"                    Task task \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"jmestxr"},"content":"                    switch (taskSymbol) {","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"jmestxr"},"content":"                        case \"T\":","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"jmestxr"},"content":"                            task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"jmestxr"},"content":"                            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"jmestxr"},"content":"                        case \"D\":","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"jmestxr"},"content":"                            String by \u003d parsedTaskData[3];","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"jmestxr"},"content":"                            task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"jmestxr"},"content":"                            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"jmestxr"},"content":"                        case \"E\":","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"jmestxr"},"content":"                            String from \u003d parsedTaskData[3];","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"jmestxr"},"content":"                            String to \u003d parsedTaskData[4];","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"jmestxr"},"content":"                            task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"jmestxr"},"content":"                            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"jmestxr"},"content":"                        default:","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"jmestxr"},"content":"                            throw new DukeException(\"Task is not recorded in a valid format...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"jmestxr"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"jmestxr"},"content":"                    if (isTaskDone) task.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"jmestxr"},"content":"                    this.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"jmestxr"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"jmestxr"},"content":"                    System.err.println(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"jmestxr"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"jmestxr"},"content":"            fileReader.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"The directory that stores the tasks data does not exist...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"jmestxr"},"content":"     * Loads the current tasks from the list into local file.","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the directory that stores the tasks data does not exist.","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"jmestxr"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"jmestxr"},"content":"            Path path \u003d Paths.get(\".\", \"data\", \"smartduke.txt\");","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"jmestxr"},"content":"            File tasksData \u003d path.toFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"jmestxr"},"content":"            tasksData.createNewFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"jmestxr"},"content":"            FileWriter fileWriter \u003d new FileWriter(tasksData);","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"jmestxr"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"jmestxr"},"content":"                Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"jmestxr"},"content":"                fileWriter.write(task.getSavedFormat());","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"jmestxr"},"content":"                fileWriter.write(\u0027\\n\u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"jmestxr"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"The directory that stores the tasks data does not exist...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":169}},{"path":"src/main/java/smartduke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"    Scanner userInput;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"    public Ui() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"        this.userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"        String greeting \u003d \"Yo i\u0027m SmartDuke.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"                \"     how can i help you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    public void showSuccess(String succMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        System.out.println(succMsg);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    public void showError(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        String userCommand \u003d this.userInput.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"        return userCommand;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    public void close() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"        this.userInput.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":38}},{"path":"src/main/java/smartduke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"    private Task task;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(this.task.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"Now there are \" + tasks.getNoOfTasks() + \" tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":27}},{"path":"src/main/java/smartduke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"    public abstract void execute(TaskList tasks, Ui ui) throws DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":10}},{"path":"src/main/java/smartduke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        Task removedTask \u003d tasks.delete(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(removedTask.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"Now there are \" + tasks.getNoOfTasks() + \" tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":27}},{"path":"src/main/java/smartduke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"        /* Put this line before tasks.save() because we want it to be executed regardless of whether the tasks could be saved to local file. */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"ok bye\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"        tasks.save(); /* save the new tasks to local file */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":20}},{"path":"src/main/java/smartduke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"        Iterator\u003cTask\u003e tasksIterator \u003d tasks.list();","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"        if (!tasksIterator.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"            ui.showSuccess(\"There are currently no tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        int taskNo \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        while (tasksIterator.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d tasksIterator.next();","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"            ui.showSuccess(taskNo + \". \" + task.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"            taskNo +\u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":31}},{"path":"src/main/java/smartduke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    public MarkCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        Task markedTask \u003d tasks.mark(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"ok i\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(markedTask.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":26}},{"path":"src/main/java/smartduke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import smartduke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import smartduke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    public UnmarkCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        Task unmarkedTask \u003d tasks.unmark(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(\"ok i\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        ui.showSuccess(unmarkedTask.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":26}},{"path":"src/main/java/smartduke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.Parser;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Deadline is a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"Deadline\" type task.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description or deadline indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        if (by.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"☹ OOPS!!! You need to indicate a deadline for this task...\");","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        this.by \u003d Parser.parseDateTime(by);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + Parser.dePrettifyDateTime(this.by);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Parser.prettifyDateTime(this.by) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":37}},{"path":"src/main/java/smartduke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import smartduke.Parser;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Event is a Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    protected LocalDateTime from, to;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"Event\" type task.","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     * @param from The start date/time of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * @param to The end date/time of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description or start or end date/time indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        if (from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"☹ OOPS!!! You need to indicate a start and end date/time for this task...\");","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        this.from \u003d Parser.parseDateTime(from);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        this.to \u003d Parser.parseDateTime(to);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + Parser.dePrettifyDateTime(this.from) + \" | \" + Parser.dePrettifyDateTime(this.to);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Parser.prettifyDateTime(this.from) + \" to: \" + Parser.prettifyDateTime(this.to) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":39}},{"path":"src/main/java/smartduke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * Task encapsulates the description of a task and its \u0027done\u0027 status.","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    protected String description;","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     * Get icon representing the \u0027done\u0027 status of this Task.","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     * @return the \u0027done\u0027 status icon","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done smartduke.task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     * Mark this task as done.","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     * Mark this task as not done","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"    public abstract String getSavedFormat();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":53}},{"path":"src/main/java/smartduke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package smartduke.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import smartduke.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * ToDo is a Task without any date/time attached to it.","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"ToDo\" type task.","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"todo todo smartduke.task","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"deadline deadline smartduke.task /by 25/04/2022","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"event event smartduke.task /from 12 Mar 22 /to 5 Dec 22","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"mark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"mark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"unmark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"java -classpath ../bin SmartDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jmestxr":1,"-":37}}]
