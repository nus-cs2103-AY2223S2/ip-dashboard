[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"checkstyle {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"javafx {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":30,"-":37}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"D | 1 | read book | 2023-1-1 1200","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"E | 0 | play ball | 2023-1-5 1800 | 2023-1-5 2300","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"T | 1 | read newspaper","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"D | 0 | play game | 2022-1-1 1600","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"T | 0 | sing song","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"T | 0 | drink beer","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"E | 0 | dance party | 2023-5-4 1000 | 2023-5-4 1700","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":7}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" * Command to add a task.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    private Task task;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     * Adds the task to the existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\n\" + this.task + \"\\n\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"                + \"Now there are \" + tasks.getNoOfTasks()","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"                + \" tasks in your list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     * @return False.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":41}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" * Command deals with executing a user command.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"     * Executes the command which might cause changes to the existing task list and ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is an error encountered during the execution of the command.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * @return True if the current command is an exit command; false if otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":22}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" * Command to delete a task.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo The task number of the task to delete.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     * Deletes the task with the task no.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there are no task with the task number, i.e. the task to be","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     *     deleted does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        Task removedTask \u003d tasks.delete(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\n\" + removedTask + \"\\n\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"                + \"Now there are \" + tasks.getNoOfTasks() + \" tasks in your list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"     * @return False","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":42}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * Command to exit the chat session.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"     * Shows a goodbye greeting indicating the end of the chat session.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        return \"ok bye\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * @return True.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":26}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Command to find tasks given a query string.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    private String query;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * @param query The query string.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * Finds tasks with a description that contains the query string.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        Iterator\u003cTask\u003e resultsIterator \u003d tasks.find(this.query).iterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        if (!resultsIterator.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"            return \"There are no matching tasks in your list...\";","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"        response.append(\"Here are the matching tasks in your list:\\n\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"        int taskNo \u003d 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        while (resultsIterator.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d resultsIterator.next();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"            response.append(taskNo + \". \" + task + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"            taskNo +\u003d 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"        return response.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"     * @return False.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jmestxr":56}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Command to list all the latest recorded tasks of the current chat session.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * Lists all tasks currently recorded in the chat session.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        Iterator\u003cTask\u003e tasksIterator \u003d tasks.list().iterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        if (!tasksIterator.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"            return \"There are currently no tasks in your list...\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        response.append(\"Here are the tasks in your list:\\n\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        int taskNo \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        while (tasksIterator.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d tasksIterator.next();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"            response.append(taskNo + \". \" + task + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"            taskNo +\u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        return response.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     * @return False.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":46}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" * Command to mark a task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo The task number of the task to be marked.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public MarkCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     * Marks the task with the task no as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there are no task with the task number, i.e. the task to be","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     *     marked does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        Task markedTask \u003d tasks.mark(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        return \"ok i\u0027ve marked this task as done:\\n\\n\" + markedTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     * @return False.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":41}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" * Command to unmark a task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Unmark Command.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo The task number of the task to be unmarked.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public UnmarkCommand(int taskNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     * Unmarks the task with the task no as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The existing task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there are no task with the task number, i.e. the task to be","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     *     unmarked does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        Task unmarkedTask \u003d tasks.unmark(this.taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        return \"ok i\u0027ve marked this task as not done yet:\\n\\n\" + unmarkedTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     * Determines if the current command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     * @return False.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import command.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" * The Duke ChatBot.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"public class Duke {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    private MainWindow app;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * @param app The GUI instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     * @param filePath The path of the local file where tasks are stored from the previous session.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public Duke(MainWindow app, Path filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        this.app \u003d app;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        this.ui \u003d new Ui(app);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"            this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"            assert taskList !\u003d null : \"taskList should not be null.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"            this.app.addDukeDialog(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"            this.ui.showWelcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     * Comprehends the user text input and execute the relevant action and producing a response","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     * corresponding to the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     * @param input The user text input.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    public void handleUserInput(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"            this.ui.showUserInput(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"            String response \u003d c.execute(this.taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"            this.ui.showSuccess(response);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"            if (isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"                this.storage.save(this.taskList); /* save tasks at the end of the chat session */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"            this.ui.showError(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"        } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"            if (isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"                this.app.terminate();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":63}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":" * DukeException represents an exception specific to Duke.","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":14}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.controllers.Main;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"public class Launcher {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    public Launcher() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import command.AddCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import command.Command;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import command.FindCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"import command.ListCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"import task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":" * Parser deals with making sense of the user command and input date strings.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     * Enumerates the different types of string patterns of user commands available on SmartDuke.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    private enum CommandPattern {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        ADD_TODO(\"todo.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        ADD_DEADLINE(\"deadline.*/by.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        ADD_EVENT(\"event.*/from.*/to.*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"        DELETE_TASK(\"delete[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        MARK_TASK(\"mark[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"        UNMARK_TASK(\"unmark[\\\\s]*[0-9]+[\\\\s]*\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        FIND_TASK(\"find\\\\s.*\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"        LIST_TASKS(\"list\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"        END_CHAT(\"bye\");","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"         * The regex pattern of this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        private Pattern pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        CommandPattern(String regex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"            this.pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"         * Checks if the given string matches this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"         * @param userCommand The given string provided by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"         * @return True if the given string matches this Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"        public boolean match(String userCommand) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"            return this.pattern.matcher(userCommand).matches();","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"     * Convert user-input datetime string to LocalDateTime object.","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"     * @param dateTimeString The user-input datetime string.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"     * @return The input datetime represented as a LocalDateTime object.","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the input string is not of the supported format: yyyy-M-d HHmm.","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"You have provided an invalid date format. \"","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"                    + \"Make sure it is in yyyy-M-d HHmm format!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"     * Pretty-formats the input datetime for display.","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"     * @param dateTime The input datetime.","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"     * @return A datetime string in the format: d MMM yyyy h:mma.","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"    public static String prettifyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"     * Undo the pretty-formatted datetime string into the user-input datetime string format.","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"     * @param dateTime The pretty-formatted datetime string","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"     * @return A datetime string in the format: yyyy-M-d HHmm.","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"    public static String dePrettifyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"     * Parses the user input command string.","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"     * @param userCommand The user input string.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"     * @return The user command represented as a Command object.","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If an invalid or unsupported command is provided by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"    public static Command parse(String userCommand) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"        if (CommandPattern.ADD_TODO.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"            /* add todo task */","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d userCommand.substring(4).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"            if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"            Task todoTask \u003d new ToDo(taskDesc);","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(todoTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.ADD_DEADLINE.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"            /* add deadline task */","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"            String[] parsedCommand \u003d userCommand.substring(8).split(\"/by\", -1);","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d parsedCommand[0].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"            String by \u003d parsedCommand[1].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"            if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"jmestxr"},"content":"            if (by.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"jmestxr"},"content":"                throw new DukeException(\"OOPS!!! You need to indicate a deadline for this task...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"jmestxr"},"content":"            Task deadlineTask \u003d new Deadline(taskDesc, Parser.parseDateTime(by));","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(deadlineTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.ADD_EVENT.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"jmestxr"},"content":"            /* add event task */","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"jmestxr"},"content":"            String[] parsedCommand \u003d userCommand.substring(5).split(\"/from|/to\", -1);","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"jmestxr"},"content":"            String taskDesc \u003d parsedCommand[0].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"jmestxr"},"content":"            if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"jmestxr"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"jmestxr"},"content":"            String from \u003d parsedCommand[1].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"jmestxr"},"content":"            String to \u003d parsedCommand[2].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"jmestxr"},"content":"            if (from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"jmestxr"},"content":"                throw new DukeException(\"OOPS!!! You need to indicate a start and end date/time for this task...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"jmestxr"},"content":"            Task eventTask \u003d new Event(taskDesc, Parser.parseDateTime(from), Parser.parseDateTime(to));","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"jmestxr"},"content":"            return new AddCommand(eventTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.DELETE_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"jmestxr"},"content":"            /* delete task */","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(6).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"jmestxr"},"content":"            return new DeleteCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.MARK_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"jmestxr"},"content":"            /* mark task */","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(4).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"jmestxr"},"content":"            return new MarkCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.UNMARK_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"jmestxr"},"content":"            /* unmark task */","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"jmestxr"},"content":"            int taskNo \u003d Integer.parseInt(userCommand.substring(6).trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"jmestxr"},"content":"            return new UnmarkCommand(taskNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.LIST_TASKS.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"jmestxr"},"content":"            /* list tasks */","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"jmestxr"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.FIND_TASK.match(userCommand)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"jmestxr"},"content":"            String query \u003d userCommand.substring(5);","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"jmestxr"},"content":"            return new FindCommand(query);","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"jmestxr"},"content":"        } else if (CommandPattern.END_CHAT.match(userCommand)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"jmestxr"},"content":"            /* End the session */","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"jmestxr"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"jmestxr"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Huh? I don\u0027t understand you...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":160}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    private Path filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @param filePath The path of the local file where tasks are stored from the previous session.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"     * Retrieves saved tasks from local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"     * @return The list of tasks stored in the local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the directory that stores the tasks data does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"            File tasksData \u003d this.filePath.toFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"            if (!tasksData.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"                tasksData.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"            Scanner fileReader \u003d new Scanner(tasksData);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"                    String taskData \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"                    String[] parsedTaskData \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"                    String taskSymbol \u003d parsedTaskData[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"                    boolean isTaskDone \u003d parsedTaskData[1].equals(\"1\");","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"                    String taskDescription \u003d parsedTaskData[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"                    /* Add the task to taskList */","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"                    Task task \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"                    switch (taskSymbol) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"                        task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"                        String by \u003d parsedTaskData[3];","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"                        task \u003d new Deadline(taskDescription, Parser.parseDateTime(by));","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"                        String from \u003d parsedTaskData[3];","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"                        String to \u003d parsedTaskData[4];","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"                        task \u003d new Event(taskDescription, Parser.parseDateTime(from), Parser.parseDateTime(to));","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"                    default:","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"                        throw new DukeException(\"Task is not recorded in a valid format...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"                    assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"                    if (isTaskDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"                        task.markDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"                        assert task.getStatusIcon().equals(\"X\") : \"task should be marked done\";","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"                    System.err.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"            fileReader.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"            return tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"The directory that stores the tasks data does not exist...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"     * Saves the current tasks from the task list into local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"     * @param taskList The latest updated task list of the current chat session.","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If the directory that stores the tasks data does not exist.","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.list();","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"            File tasksData \u003d this.filePath.toFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"            tasksData.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"            FileWriter fileWriter \u003d new FileWriter(tasksData);","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"                fileWriter.write(task.getSavedFormat());","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"                fileWriter.write(\u0027\\n\u0027);","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"The directory that stores the tasks data does not exist...\");","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jmestxr":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * Ui collates methods to deal with display of text messages on the GUI.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    private MainWindow app;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Ui to instantiate the GUI (app).","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    public Ui(MainWindow app) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        this.app \u003d app;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * Displays the user text input on the GUI.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * @param input The user text input.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    public void showUserInput(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        this.app.addUserDialog(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     * Displays a greeting message on the GUI by Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"        String greeting \u003d \"Yo how can I help you?\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        this.app.addDukeDialog(greeting);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     * Displays a success message on the GUI when a successful task is completed by Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"     * @param succMsg The success message.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    public void showSuccess(String succMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        this.app.addDukeDialog(succMsg);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"     * Displays an error message on the GUI when there is a failure encountered by Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"     * @param errMsg The error message.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"    public void showError(String errMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"        this.app.addDukeDialog(errMsg);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":49}},{"path":"src/main/java/duke/controllers/DukeDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":" * A control that represents a dialog box by Duke consisting of a dialog to represent the text response","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":" * and an ImageView to represent the Duke image.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"public class DukeDialog extends HBox {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * The text response of Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * The image of Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"     * Constructor for DukeDialog.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"     * @param text The text response of Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"     * @param img The image of Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    public DukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/duke-dialog/DukeDialog.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":48}},{"path":"src/main/java/duke/controllers/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/main-window/MainWindow.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"            BorderPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"            stage.setMinHeight(200);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"            stage.setMinWidth(600);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"            stage.show();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":29}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"public class MainWindow extends BorderPane {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     * The scroll container that contains dialogContainer.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     * The container that contains all the dialogs between Duke and the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     * The footer section where the user inputs the desired command and sends it to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    private UserControl userControl;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     * The Duke chatbot instance for this application.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"     * The image of Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mascot.png\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"        this.duke \u003d new Duke(this, Paths.get(\".\", \"data\", \"duke.txt\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"        userControl.setMainWindow(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"    public void addUserDialog(String msg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"        UserDialog dialog \u003d new UserDialog(msg);","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"        dialogContainer.getChildren().add(dialog);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"    public void addDukeDialog(String msg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"        DukeDialog dialog \u003d new DukeDialog(msg, dukeImage);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"        dialogContainer.getChildren().add(dialog);","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"     * Closes the GUI application after 0.5 seconds.","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"    public void terminate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"        /* Wait for 0.5 seconds before closing the app */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(0.5), e -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"            Platform.exit();","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"            System.exit(0); /* close the app */","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"        }));","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"        timeline.play();","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"    public void handleUserInput(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"        if (input.length() \u003e 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"            this.duke.handleUserInput(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":87}},{"path":"src/main/java/duke/controllers/UserControl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":" * Controller for the footer section of the GUI where user inputs the desired commands","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":" * for Duke to execute.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"public class UserControl extends StackPane {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * The component for user to input the desired text command.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     * The button that the user clicks to send the desired command for Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"     * The icon of the sendButton.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    private ImageView sendIcon;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     * Constructor for UserControl.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"    public UserControl() {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/user-control/UserControl.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"            userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"                sendInput();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"            });","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"            throw new RuntimeException(exception);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"        Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"        this.sendIcon.setImage(sendIcon);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"            sendInput();","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"        sendButton.setOnAction((event) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"            sendInput();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"     * Handler to execute when user clicks on sendButton to post the desired text command to Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"    public void sendInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"        this.mainWindow.handleUserInput(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":81}},{"path":"src/main/java/duke/controllers/UserDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":" * A control that represents a dialog box by the user consisting of a dialog to represent","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":" * the user\u0027s text input.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"public class UserDialog extends StackPane {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * The user\u0027s text input.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     * Constructor for UserDialog.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * @param text The user\u0027s text input.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    public UserDialog(String text) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/user-dialog/UserDialog.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":38}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Deadline is a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"Deadline\" type task.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description or deadline indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     * Gets the formatted string representing this task to be saved to the local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"                + Parser.dePrettifyDateTime(this.by);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"     * Gets the string representation of this task to be displayed on the Ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"                + Parser.prettifyDateTime(this.by) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":44}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * Event is a Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"Event\" type task.","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * @param from The start date/time of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * @param to The end date/time of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description or start or end date/time indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"     * Gets the formatted string representing this task to be saved to the local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"                + Parser.dePrettifyDateTime(this.from) + \" | \" + Parser.dePrettifyDateTime(this.to);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     * Gets the string representation of this task to be displayed on the Ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Parser.prettifyDateTime(this.from)","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"                + \" to: \" + Parser.prettifyDateTime(this.to) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * Task encapsulates the description of a task and its \u0027done\u0027 status.","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    protected String description;","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"     * Gets icon representing the \u0027done\u0027 status of this Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"     * @return the \u0027done\u0027 status icon","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done smartduke.task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"     * Marks this task as not done","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"     * Gets the formatted string representing this task to be saved to the local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    public abstract String getSavedFormat();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"     * Gets the string representation of this task to be displayed on the Ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-14"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":58}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":" * TaskList contains the task list which stores tasks and has operations to add/delete tasks in the list.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     * The list of tasks added by the user and currently recorded by SmartDuke.","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"     * @param tasks The initial tasks in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"     * Add the given task to list.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"     * @param task the given task","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"     * Delete the task with the given task number from the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"    public Task delete(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"            return this.tasks.remove(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"     * Get the list of tasks currently recorded.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"    public ArrayList\u003cTask\u003e list() {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"     * Marks the task with the given task number as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"     * @return The marked task.","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"    public Task mark(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"            task.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"            assert task.getStatusIcon().equals(\"X\") : \"task should be marked done\";","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"            return task;","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"     * Marks the task with the given task number as not done.","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"     * @param taskNo the given task number","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no such task in the list with the given task number.","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"    public Task unmark(int taskNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"            task.markNotDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"            assert task.getStatusIcon().equals(\" \") : \"task should be marked done\";","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"            return task;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"            throw new DukeException(\"Sorry you have provided an invalid task number...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"     * Finds tasks with description containing the query string.","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"     * @param query The query string.","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"     * @return The matched tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"    public ArrayList\u003cTask\u003e find(String query) {","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"        Iterator\u003cTask\u003e tasksIterator \u003d this.tasks.iterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"        while (tasksIterator.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"jmestxr"},"content":"            Task task \u003d tasksIterator.next();","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"jmestxr"},"content":"            if (task.description.contains(query)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"jmestxr"},"content":"                results.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"jmestxr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"jmestxr"},"content":"        return results;","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jmestxr":123}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":" * ToDo is a Task without any date/time attached to it.","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"     * Constructor for \"ToDo\" type task.","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"     * @param description The task description.","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"     * @throws DukeException If there is no description indicated.","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"     * Gets the formatted string representing this task to be saved to the local file.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"     * Gets the string representation of this task to be displayed on the Ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":35}},{"path":"src/main/resources/view/duke-dialog/DukeDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"duke-dialog-outer-container\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"\u003c!--    \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003cHBox styleClass\u003d\"duke-dialog-inner-container\"\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"\u003c!--            \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"\u003c!--                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"\u003c!--                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-weight:bolder;\" /\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"\u003c!--            \u003c/children\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003c/HBox\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"\u003c!--    \u003c/children\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"duke-dialog-text\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"        \u003cURL value\u003d\"@duke-dialog.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":24}},{"path":"src/main/resources/view/main-window/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"\u003c?import duke.controllers.UserControl?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\" styleClass\u003d\"app-container\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"    \u003ctop\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"        \u003cLabel text\u003d\"/* ask-prof-duke */\" styleClass\u003d\"header-title\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"    \u003c/top\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    \u003ccenter\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" styleClass\u003d\"scroll-pane\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"dialog-container\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    \u003c/center\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"\u003c!--    \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"        \u003cbottom\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"            \u003cUserControl fx:id\u003d\"userControl\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        \u003c/bottom\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"100.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" styleClass\u003d\"text-field\" /\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"\u003c!--    \u003c/children\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        \u003cURL value\u003d\"@main-window.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":33}},{"path":"src/main/resources/view/user-control/UserControl.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.StackPane\" xmlns:fx\u003d\"http://javafx.com/fxml\" styleClass\u003d\"user-control-outer-container\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        \u003cStackPane alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"            \u003cBorderPane styleClass\u003d\"user-control-inner-container\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"                \u003cleft\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" promptText\u003d\"Ask prof duke to do something...\" styleClass\u003d\"user-input\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"                \u003c/left\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"                \u003cright\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"send-button\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"                        \u003cgraphic\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"                            \u003cImageView fx:id\u003d\"sendIcon\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"                        \u003c/graphic\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"                \u003c/right\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"            \u003c/BorderPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"        \u003cURL value\u003d\"@user-control.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":37}},{"path":"src/main/resources/view/user-dialog/UserDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.StackPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"user-dialog-container\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" styleClass\u003d\"user-dialog-text\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003cVBox styleClass\u003d\"user-dialog-bubble\"\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"\u003c!--            \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"\u003c!--                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" styleClass\u003d\"user-dialog-text\" /\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"\u003c!--            \u003c/children\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"\u003c!--        \u003c/VBox\u003e--\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        \u003cURL value\u003d\"@user-dialog.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jmestxr":22}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import command.AddCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import command.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import command.FindCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import command.ListCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":" * Driver to test the parsing commands of Parser.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"     * Tests for correct parsing of valid commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    public void parse_validCommands() {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 1: add event */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"            Command addTodo \u003d Parser.parse(\"todo task 1\");","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"            assertEquals(AddCommand.class, addTodo.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 2: add deadline */","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"            Command addDeadline \u003d Parser.parse(\"deadline task 2 /by 2023-01-22 1600\");","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"            assertEquals(AddCommand.class, addDeadline.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 3: add event */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"            Command addEvent \u003d Parser.parse(\"event task 3 /from 2023-1-2 0000 /to 2023-1-2 1200\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"            assertEquals(AddCommand.class, addEvent.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 4: delete task */","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"            Command deleteTask \u003d Parser.parse(\"delete 0\");","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"            assertEquals(DeleteCommand.class, deleteTask.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 5: mark task */","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"            Command markTask \u003d Parser.parse(\"mark 0\");","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"            assertEquals(MarkCommand.class, markTask.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 6: unmark task */","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"            Command unmarkTask \u003d Parser.parse(\"unmark 0\");","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"            assertEquals(UnmarkCommand.class, unmarkTask.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 7: list tasks */","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"            Command listTasks \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"            assertEquals(ListCommand.class, listTasks.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 8: find tasks */","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"            Command findTasks \u003d Parser.parse(\"find query\");","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"            assertEquals(FindCommand.class, findTasks.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 9: end chat session */","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"            Command endChat \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"            assertEquals(ExitCommand.class, endChat.getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"jmestxr"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"jmestxr"},"content":"     * Tests for correct parsing of invalid commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"jmestxr"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"jmestxr"},"content":"    public void parse_invalidCommands() {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 1: missing task name */","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 2: missing /by */","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"deadline task 1\");","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 3: empty /from and /to */","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"event task 2 /from /to\");","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 4: unsupported datetime string format */","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"deadline task 3 /by 01/02/2023 1600\");","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 5: unsupported datetime string format */","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"deadline task 3 /by 2023-01-02 4.00pm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 6: missing task no */","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"delete \");","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":147,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 7: missing task no */","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":153,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":154,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":159,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 8: missing query string */","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"find \");","lastModifiedDate":"2023-01-22"},{"lineNumber":162,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":163,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":165,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":166,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":167,"author":{"gitId":"jmestxr"},"content":"        /* Test Case 9: totally unrecognised command */","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"jmestxr"},"content":"            Parser.parse(\"add task 1\");","lastModifiedDate":"2023-01-22"},{"lineNumber":170,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":171,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":174,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jmestxr":175}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":" * Driver to test the actions available on TaskList.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    public void add() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummyTask \u003d new TaskStub(\"Dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummyTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"        assertEquals(1, taskList.getNoOfTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"        assertEquals(\"Dummy Task\", taskList.list().get(0).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"    public void delete_valid() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummyTask \u003d new TaskStub(\"Dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummyTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"            taskList.delete(1);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"    public void delete_invalid() {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummyTask \u003d new TaskStub(\"Dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummyTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"            taskList.delete(0);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"            return; /* passed */","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"    public void markAndUnmark_valid() {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummyTask \u003d new TaskStub(\"Dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummyTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"            taskList.mark(1);","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"            assertEquals(\"X\", dummyTask.getStatusIcon());","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"            taskList.unmark(1);","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"jmestxr"},"content":"            assertEquals(\" \", dummyTask.getStatusIcon());","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"jmestxr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"            fail();","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"jmestxr"},"content":"    public void find() {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"jmestxr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummy1 \u003d new TaskStub(\"Dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"        TaskStub dummy2 \u003d new TaskStub(\"dummy Task\");","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummy1);","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"jmestxr"},"content":"        taskList.add(dummy2);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"jmestxr"},"content":"        assertEquals(1, taskList.find(\"Dum\").size());","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":" * Stub class for Task, used in TaskListTest.","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"class TaskStub extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"    public TaskStub(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"    public String getSavedFormat() {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"jmestxr"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"jmestxr"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"jmestxr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"jmestxr"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jmestxr":93}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"todo todo task 1","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"deadline task 2 /by 2022-01-01 1600","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"event task 2 /from 2022-01-01 1600 /to 2023-01-12 0000","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"mark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"mark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"unmark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"jmestxr":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"java -classpath ../bin/duke Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jmestxr":2,"-":36}}]
