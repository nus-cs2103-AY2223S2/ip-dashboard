[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jnjy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"javafx {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jnjy":28,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"D | 0 | return book | 2020-06-12","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"E | 0 | project meeting | 2020-06-12 | 2021-11-12","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"E | 1 | test | 2020-08-15 | 2021-12-12","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"T | 0 | test","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"T | 0 | nth","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"T | 0 | what","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"T | 0 | 2101","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"T | 0 | ma2001","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":9}},{"path":"data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"T | 1 | read book","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"E | 1 | test | Aug 6th 2-4am","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"T | 0 | test","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jnjy":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import duke.storage.LocalStorage;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * duke.Duke Chat Bot!","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private LocalStorage localStorage;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     * Constructor for duke.Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public Duke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     * Constructor to instantiate duke.Duke bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * @param filePath path of local storage file.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        this.localStorage \u003d new LocalStorage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        this.localStorage.loadTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     * Function to run duke.Duke bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        UI.greet();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"                Command com \u003d new Parser(input, tasks).processRequest();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                String response \u003d com.execute(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                UI.printRes(response);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"                UI.printRes(error.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        localStorage.saveFile(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        UI.exit();","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"     * Function to handle the user\u0027s request","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    public static void handleRequest() {","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"            Command com \u003d new Parser(input, tasks).processRequest();","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"            String response \u003d com.execute(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"            UI.printRes(response);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        new Duke(\"./data/duke.txt\").run();;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jnjy":86,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" * A JAVAFx launcher class.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":34}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: add deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * Allows user to add deadline into the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     * Constructor to create deadline task according user\u0027s request.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into deadline duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public AddDeadlineCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d request.split(\"deadline \");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        // check presence of task description","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"☹ OOPS!!! You\u0027re missing the task description\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        req \u003d req[1].split(\"/by \");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        // check presence of argument","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"☹ OOPS!!! You\u0027re missing the task deadline\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        String task \u003d req[0].strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        String deadline \u003d req[1].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"            LocalDate dueDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"            Deadline newDeadline \u003d tasks.addDeadline(task, dueDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"            return \"Great! I\u0027ve added this task for you \\n\" + newDeadline","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                    + \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        } catch (DateTimeException error) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"            throw new InvalidArgumentException(\"Please insert your date using the format, \"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"                    + \"YYYY-MM-DD (e.g. 2000-01-01)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":59}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: add event.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * Allows user to add event into the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     * Constructor to add event task according to user\u0027s request.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into event duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public AddEventCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d request.split(\"event \");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        // check missing `task description`","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Missing task description!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        req \u003d req[1].split(\"/from \");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        String task \u003d req[0].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        // check missing `task description` and `start date`","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Missing task description!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        } else if (req.length \u003c 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Please insert an start date.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        String[] duration \u003d req[1].split(\" /to \");","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        // check missing `end date`","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        if (duration.length \u003c 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Please insert an end date.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        String from \u003d duration[0].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        String to \u003d duration[1].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        // check missing `start date` and ` end date`","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        if (from.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Please insert a start date.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        } else if (duration.length \u003c 2 || to.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Please insert an end date.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"            LocalDate startDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"            LocalDate endDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"            Event newEvent \u003d tasks.addEvent(task, startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"            // check valid `duration`","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"            if (startDate.isAfter(endDate)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"                throw new InvalidArgumentException(\"Your start date should be before your end date!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"            return \"Great! I\u0027ve added this task for you \\n\" + newEvent","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"                    + \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        } catch (DateTimeException error) {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"            throw new InvalidArgumentException(\"Wrong date format! \"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"                    + \"Please follow the format YYYY-MM-DD (e.g. 2000-01-01)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":81}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: add todo.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Allows user to add todo task into the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * Constructor to create add todo task according to user\u0027s request","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public AddTodoCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String[] task \u003d request.strip().split(\"todo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // check missing description of todo task","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        if (task.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        Todo newTodo \u003d tasks.addTodo(task[1].strip());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        return \"Great! I\u0027ve added this task for you \\n\" + newTodo","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"                + \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" * Abstract class that is the parent class for all commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * abstract method to execute the user\u0027s request and return the response","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * @param taskList the list to store new task","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * @return response after execution of command","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public abstract String execute(TaskList taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":15}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" * Command to search task with specific keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     * Constructor method to create find command.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"     * @param request User\u0027s request to find duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public FindCommand(String request) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        String[] inquiry \u003d request.trim().split(\"find\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        // check missing enquiry","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        if (inquiry.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"What do you wish to find?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        ArrayList\u003cTask\u003e result \u003d tasks.find(inquiry[1].strip());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        // no task with enquired keyword in the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        if (result.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"            return \"Sorry, I couldn\u0027t find what you want. :(\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        for (Task task : result) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"            list.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        return list.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jnjy":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: view task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" * Allows user to view the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"        // if there is no task in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        if (tasks.numOfTask() \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"            return \"List is empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        return tasks.getTaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: mark duke.task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Allows user to mark specific in the duke.task list as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * Constructor to create mark task command according to user\u0027s request.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to mark the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public MarkCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\"mark \");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // check missing index","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Missing index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        // check valid index","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        tasks.getTask(idx).markComplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        return \"Nice! I have marked this task as done \\n\" + tasks.getTask(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":43}},{"path":"src/main/java/duke/command/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: delete duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Allows user to delete specific task from the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * Constructor to remove task command according to user\u0027s request.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to remove the duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public RemoveCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d request.trim().split(\"delete \");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // check missing index","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Missing index for deletion!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        // check valid index","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        String deletedTask \u003d tasks.getTask(idx).toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        tasks.deleteTask(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"                + \"\\nNow you have \" + tasks.numOfTask() + \" in the list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":45}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Class use to handle command: unmark duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Allows user to unmark specific duke.task in the duke.task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * Constructor to create unmark command","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to unmark duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public UnmarkCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\"unmark \");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // check missing index","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"Missing index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        // check valid index","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        tasks.getTask(idx).unmarkComplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        return \"Aww! One more task on the list \\n\" + tasks.getTask(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":43}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Runtime duke.exception specially made to handle duke.exception duke.Duke may encounter.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * Constructor to create duke.Duke Exception","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * @param message error message of the exception","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        return \"YIKES!! \" + super.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":20}},{"path":"src/main/java/duke/exception/IndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Exception when index requested by the user is out of range.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class IndexOutOfBoundException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    public IndexOutOfBoundException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"        super(\"Index out of bound\");","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":10}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Exception when user inserted invalid argument for specific command.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    public InvalidArgumentException(String msg) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"        super(msg);","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jnjy":10}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Exception for when user missed out arguments that are supposed to be in the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * Constructor to create an exception for Missing argument.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * @param message error message for the missing argument duke.exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":15}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Exception for when users keyed in an unknown command.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" * duke.Duke doesn\u0027t know what to do.","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * Constructor to create an exception for unknown command","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.command.RemoveCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" * Class to parse user\u0027s request and perform user\u0027s desired action.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    private final String request;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    private String response;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * Constructor for Parser.Request class","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     * @param request request by the user","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     * @param tasks duke.task array to store the tasks added by the user","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public Parser(String request, TaskList tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * Function to process the user\u0027s request and get the response","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    public Command processRequest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        String command \u003d req[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        switch (command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        case \"list\":","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"            return new MarkCommand(this.request);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"            return new UnmarkCommand(this.request);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"            return new AddTodoCommand(this.request);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"            return new AddDeadlineCommand(this.request);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        case \"event\":","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"            return new AddEventCommand(this.request);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"            return new RemoveCommand(this.request);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        case \"find\":","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"            return new FindCommand(this.request);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        return response;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jnjy":67}},{"path":"src/main/java/duke/storage/LocalStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":" * Local storage to store the data from local file.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"public class LocalStorage {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    private File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a local storage using the data from local file.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     * @param path","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public LocalStorage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        File localFile \u003d readFile(path);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        this.file \u003d localFile;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * Read from file in local duke.storage.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     * @param path Path to the file in the local duke.storage.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * @return File obtained from local storage","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public static File readFile(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            return file;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        } catch (IOException io_error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"            io_error.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        return file;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"     * Load tasks from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"     * @param tasks List to add the tasks read from file.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    public void loadTasks(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(this.file));","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"                    String[] args \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"                    String taskType \u003d args[0].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"                    String taskStatus \u003d args[1].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"                    String taskDesc \u003d args[2].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"                        Todo todo \u003d new Todo(taskDesc);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"                        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"                            todo.markComplete();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"                        String dueDate \u003d args[3].trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"                        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"                            LocalDate formattedDueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"                            Deadline deadline \u003d new Deadline(taskDesc, formattedDueDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"                            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"                                deadline.markComplete();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"                            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"                        } catch (DateTimeException error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"                            throw new InvalidArgumentException(\"Wrong date format! Please follow the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"                                    + \"YYYY-MM-DD (e.g. 2000-01-01)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"                        String from \u003d args[3].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"                        String to \u003d args[4].strip();","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"                        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"                            LocalDate startDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"                            LocalDate endDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"                            Event event \u003d new Event(taskDesc, startDate, endDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"                            if (startDate.isAfter(endDate)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"                                throw new InvalidArgumentException(\"Your start date should be before your end date!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"                            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"                                event.markComplete();","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"                            tasks.add(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"                            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"                        } catch (DateTimeException error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"                            throw new InvalidArgumentException(\"Wrong date format! Please follow the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"                                    + \"YYYY-MM-DD (e.g. 2000-01-01)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"                    default:","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"                    line \u003d reader.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"                } catch (DukeException duke_error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"                    duke_error.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"            reader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"            error.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"     * Save tasks in the list into local storage before leaving the program.","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"     * @param tasks list to be saved into the file in local duke.storage.","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file));","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"            for (Task task: tasks.getTasks()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"                writer.write(task.toData());","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"                writer.newLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"            writer.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"            error.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jnjy":143}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * List to keep track of user\u0027s tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    private File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new Task List","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * Constructor to instantiate new task list with data from local file prepended.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * @param file","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public TaskList(File file) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * Return the task array list.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     * @return the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     * Add new duke.task to current duke.task list","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added into the duke.task list","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     * Add new duke.task to current duke.task list","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     * @param task new duke.task to be added into the duke.task list","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * @return the Added Todo","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    public Todo addTodo(String task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(todo);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        return todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"     * Add new deadline to current task list","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"     * @param task new duke.task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"     * @param dueDate the deadline of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"     * @return the added Deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    public Deadline addDeadline(String task, LocalDate dueDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        Deadline taskDeadline \u003d new Deadline(task, dueDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(taskDeadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        return taskDeadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"     * Add new event to current task list","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"     * @param task event task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"     * @param from start time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"     * @param to end time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"     * @return the added Event","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    public Event addEvent(String task, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(event);","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        return event;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"     * Get the specific task at given index, idx","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"     * @param idx Given index of the task in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"     * @return Task at index, idx","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"    public Task getTask(Integer idx) {","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"     * Delete task at specific index, idx","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"     * @param idx index of the task in the array to be deleted","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    public void deleteTask(Integer idx) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        this.tasks.remove(idx.intValue());","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"     * Getter method to get the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"     * @return task list","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"    public String getTaskList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"            if (i \u003d\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"                taskList.append(i + \": \" + this.tasks.get(i - 1));","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"            taskList.append(i + \": \" + this.tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        return taskList.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"     * Function to find tasks using keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"     * @param keyword keyword the user wish to find the task","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"     * @return list of tasks that contain the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"                result.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"        return result;","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"     * Get the number of tasks in the list","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"     * @return number of tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"    public int numOfTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jnjy":144}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" * Task with a deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * Constructor method for Deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * @param dueDate deadline of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public Deadline(String task, LocalDate dueDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public String toData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        String status \u003d this.completed ? \"1\" : \"0\";","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        return \"D | \" + status + \" | \" + this.task + \" | \" + this.dueDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        String formattedDueDate \u003d dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        return \"[D][\" + statusIcon + \"] \" + this.task + \" (by: \" + formattedDueDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" * Event that runs for a duration.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a new event","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * @param task Event task","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * @param from start time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     * @param to end time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public Event(String task, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public String toData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        String status \u003d this.completed ? \"1\" : \"0\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        return \"E | \" + status + \" | \" + this.task + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        String formatted_start \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        String formatted_end \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return \"[E][\" + statusIcon + \"] \" + this.task + \" (from: \" + formatted_start + \" to: \" + formatted_end + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * General duke.task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    protected String task;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    protected boolean completed;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new task","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * @param task","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Mark the task as complete","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public void markComplete() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * Unmark the task to be incomplete","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public void unmarkComplete() {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        return \"[\" + statusIcon + \"] \" + this.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * Abstract method for toData function for Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * @return Empty String","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    public abstract String toData();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jnjy":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Todo item of the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new duke.task","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * @param task new duke.task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public String toData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        String status \u003d this.completed ? \"1\" : \"0\";","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        return \"T | \" + status + \" | \" + this.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        return \"[T][\" + statusIcon + \"] \" + this.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":28}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" * Dialog Box to show the user\u0027s conversation with Duke Bot","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    private Label text;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private Circle icon;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * Constructor class to instantiate new Dialog Box","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * @param message Response to be printed","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * @param img image of the user or duke bot","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public DialogBox(String message, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        text.setText(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        icon.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     * Flips the dialog box for Duke\u0027s response","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     * Display user dialog on GUI","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"     * @param text user\u0027s message","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"     * @param img user\u0027s image","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     * @return dialog box node to display message","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        return new DialogBox(\"You: \" + text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"     * Display Duke\u0027s response","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"     * @param text duke\u0027s message","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     * @param img duke\u0027s image","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     * @return dialog box to display duke\u0027s message","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        DialogBox dialogBox \u003d  new DialogBox(\"Duke: \" + text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":76}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/meme.jpg\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(UI.showWelcomeMsg(), user));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                DialogBox.getDukeDialog(userText, user)","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":59}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" * duke.ui.UI to print the response after performing action.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"public class UI {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * Prints response","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * @param res duke.Duke\u0027s response(String) to print","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static void printRes(String res) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Greet the user","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        final String logo \u003d \"██████   █████  ██████   █████  \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"                    + \"██   ██ ██   ██ ██   ██ ██   ██ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"                    + \"██   ██ ██   ██ ██████  ███████ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"                    + \"██   ██ ██   ██ ██   ██ ██   ██ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"                    + \"██████   █████  ██   ██ ██   ██ \\n\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        final String intro \u003d \"Hola! Soy \\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        final String icebreaker \u003d \"What can I do for you?\";","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        System.out.println(intro + logo + icebreaker);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"________________________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        System.out.println();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * Echo the user\u0027s response","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public static void echo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            printRes(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"     * Exit the program with an outro","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public static void exit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        String outro \u003d \"bella ciao\";","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        printRes(outro);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    public static String showWelcomeMsg() {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        return \"Hola! Soy Dora\";","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"jnjy":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.paint.ImagePattern?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"86.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"         prefWidth\u003d\"480.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    \u003cLabel fx:id\u003d\"text\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    \u003cCircle fx:id\u003d\"icon\" radius\u003d\"25.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003cAnchorPane prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"665.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"                  vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"665.0\" prefWidth\u003d\"485.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"         \u003c/content\u003e\u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"      \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" layoutY\u003d\"665.0\" prefHeight\u003d\"35.0\" prefWidth\u003d\"430.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"                 AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"      \u003cButton fx:id\u003d\"sendButton\" onAction\u003d\"#handleUserInput\" layoutX\u003d\"430.0\" layoutY\u003d\"665.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"              mnemonicParsing\u003d\"false\" prefHeight\u003d\"35.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"              AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jnjy":20}},{"path":"src/test/java/command/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void init() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public void deadlineTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        Command addDeadlineTest \u003d new AddDeadlineCommand(\"deadline test /by 2023-01-29\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        addDeadlineTest.execute(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String expected \u003d \"[D][ ] test (by: Jan 29 2023)\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        assertEquals(expected, tasks.getTask(0).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jnjy":29}},{"path":"src/test/java/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void init() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public void eventTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        Command addEventTest \u003d new AddEventCommand(\"event testing /from 2023-01-27 /to 2023-01-29\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        addEventTest.execute(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String expected \u003d \"[E][ ] testing (from: Jan 27 2023 to: Jan 29 2023)\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        assertEquals(expected, tasks.getTask(0).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jnjy":28}},{"path":"src/test/java/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void init() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public void todoTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        Command addTodoTest \u003d new AddTodoCommand(\"todo testing\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        addTodoTest.execute(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String expected \u003d \"[T][ ] testing\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        assertEquals(expected, tasks.getTask(0).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jnjy":28}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public void testDeadlineString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"        Deadline deadline \u003d new Deadline(\"test\", LocalDate.parse(\"2023-01-30\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        String expected \u003d \"[D][ ] test (by: Jan 30 2023)\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public void testDeadlineData() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        Deadline deadline \u003d new Deadline(\"test\", LocalDate.parse(\"2023-01-30\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        String expected \u003d \"D | 0 | test | 2023-01-30\";","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        assertEquals(expected, deadline.toData());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jnjy":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"todo CS2103T ip","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"deadline CS2109S Problem set /by 28 Jan","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"event CS2103T Lecture /from Friday 2pm /to Friday 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jnjy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"# run the program, feed commands from input.txt","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"# file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jnjy":2,"-":37}}]
