[{"path":"src/main/java/Command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import DukeException.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import Task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * Constructor to create deadline according user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public AddDeadlineCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        req \u003d request.split(\"deadline\")[1].split(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"â˜¹ OOPS!!! You\u0027re missing either the task or the deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        String task \u003d req[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        String deadline \u003d req[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        Deadline newDeadline \u003d tasks.addDeadline(task, deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        return \"Great! I\u0027ve added this task for you \\n\" + newDeadline +","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"                \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":32}},{"path":"src/main/java/Command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import DukeException.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import Task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * Constructor to add event according to user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into event","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public AddEventCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        req \u003d request.split(\"event\")[1].split(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        String task \u003d req[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        String duration[] \u003d req[1].split(\" /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        String from \u003d duration[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        String to \u003d duration[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        Event newEvent \u003d tasks.addEvent(task, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        return \"Great! I\u0027ve added this task for you \\n\" + newEvent +","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"                \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":31}},{"path":"src/main/java/Command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Task.Todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import DukeException.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * Constructor to create add todo according to user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request to be processed into todo","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public AddTodoCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws MissingArgumentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        String[] task \u003d request.trim().split(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        if (task.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            throw new MissingArgumentException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        Todo newTodo \u003d tasks.addTodo(task[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        return \"Great! I\u0027ve added this task for you \\n\" + newTodo +","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"                \"\\nYou have \" + tasks.numOfTask() + \" tasks in the list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":28}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"     * abstract method to execute the user\u0027s request and return the response","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     * @param taskList the list to store new task","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * @return response after execution of command","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public abstract String execute(TaskList taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":12}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"        if (tasks.numOfTask() \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"            return \"List is empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"        return tasks.getTaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":13}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import DukeException.IndexOutOfBoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import Task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * Constructor to create mark command according to user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public MarkCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        tasks.getTask(idx).markComplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        return \"Nice! I have marked this task as done \\n\" + tasks.getTask(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":28}},{"path":"src/main/java/Command/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import DukeException.IndexOutOfBoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import Task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public RemoveCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d request.trim().split(\"delete \");","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        String deleted_task \u003d tasks.getTask(idx).toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        tasks.deleteTask(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deleted_task +","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"                \"\\nNow you have \"+ tasks.numOfTask() + \" in the list.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":26}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import DukeException.IndexOutOfBoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    private String request;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * Constructor to create unmark command","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * @param request user\u0027s request","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    public UnmarkCommand(String request) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public String execute(TaskList tasks) throws IndexOutOfBoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        Integer idx \u003d Integer.parseInt(req[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        if (idx \u003e\u003d tasks.numOfTask()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            throw new IndexOutOfBoundException();","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        tasks.getTask(idx).unmarkComplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        return \"Aww! One more task on the list \\n\" + tasks.getTask(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"        greet();","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"        // echo();","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"        handleRequest();","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"        exit();","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     * Prints response","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * @param res Duke\u0027s response(String) to print","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public static void printRes(String res) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * Greet the user","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        final String logo \u003d \"â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"                    + \"â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"                    + \"â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"                    + \"â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"                    + \"â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ \\n\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        final String intro \u003d \"Hola! Soy \\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        final String icebreaker \u003d \"What can I do for you?\";","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        System.out.println(intro + logo + icebreaker);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        System.out.println(\"________________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        System.out.println();","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Echo the user\u0027s response","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    public static void echo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        while(!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"            printRes(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * Function to handle the user\u0027s request","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    public static void handleRequest() {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        while(!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"            Request request \u003d new Request(input, tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"            printRes(request.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"     * Exit the program with an outro","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    public static void exit() {","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        String outro \u003d \"bella ciao\";","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        printRes(outro);","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jnjy":74,"-":4}},{"path":"src/main/java/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"     * Constructor to create Duke Exception","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"     * @param message error message of the exception","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        return \"YIKES!! \" + super.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":17}},{"path":"src/main/java/DukeException/IndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class IndexOutOfBoundException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"    public IndexOutOfBoundException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"        super(\"Index out of bound\");","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":7}},{"path":"src/main/java/DukeException/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Task.Todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * Constructor to create an exception for Missing argument","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * @param message error message for the missing argument exception","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":15}},{"path":"src/main/java/DukeException/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"     * Constructor to create an exception for unknown command","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":11}},{"path":"src/main/java/Request.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"import Command.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"import DukeException.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Storage.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"public class Request {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    final private String request;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    final private TaskList tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    private String response;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * Constructor for Request class","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * @param request request by the user","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     * @param tasks task array to store the tasks added by the user","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public Request(String request, TaskList tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        this.request \u003d request;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        processRequest();","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     * Function to process the user\u0027s request and get the response","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    public void processRequest() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        String[] req \u003d this.request.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        String command \u003d req[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            switch (command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"                case \"list\":","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"                    Command com \u003d new ListCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"                    com \u003d new MarkCommand(this.request);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"                    com \u003d new UnmarkCommand(this.request);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"                    com \u003d new AddTodoCommand(this.request);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"                    com \u003d new AddDeadlineCommand(this.request);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"                    com \u003d new AddEventCommand(request);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"                    com \u003d new RemoveCommand(request);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"                    response \u003d com.execute(this.tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"                default:","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        return response;","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jnjy":71}},{"path":"src/main/java/Storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import Task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import Task.Todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import Task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import Task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new Task.Task List","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Add new task to current task list","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added into the task list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public void addTask(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(new Task(task));","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * Add new task to current task list","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added into the task list","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     * @return the Added Todo","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    public Todo addTodo(String task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(todo);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Add new deadline to current task list","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * @param deadline the deadline of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     * @return the added Deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    public Deadline addDeadline(String task, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        Deadline taskDeadline \u003d new Deadline(task, deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(taskDeadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        return taskDeadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"     * Add new event to current task list","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     * @param task event task to be added","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     * @param from start time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * @param to end time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     * @return the added Event","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    public Event addEvent(String task, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        this.tasks.add(event);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        return event;","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"     * Get the specific task at given index, idx","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"     * @param idx Given index of the task in the list","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"     * @return Task.Task at index, idx","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    public Task getTask(Integer idx) {","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"     * Delete task at specific index, idx","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"     * @param idx index of the task in the array to be deleted","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    public void deleteTask(Integer idx) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        this.tasks.remove(idx.intValue());","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"     * Getter method to get the task list","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"     * @return task list","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    public String getTaskList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"            if (i \u003d\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"                taskList.append(i + \": \" + this.tasks.get(i - 1));","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"            taskList.append(i + \": \" + this.tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        return taskList.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"     * Get the number of tasks in the list","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"     * @return number of tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    public int numOfTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jnjy":106}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"    final private String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"     * Constructor method for Deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * @param deadline deadline of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        return \"[D][\" + statusIcon + \"]\" + this.task + \"(by:\" + this.deadline + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":21}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"    final private String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    final private String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a new event","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * @param task Event task","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * @param from start time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     * @param to end time of the event","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        return \"[E][\" + statusIcon + \"]\" + this.task + \"(from:\" + this.from + \" to: \" + this.to +\")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":24}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    protected String task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"    protected boolean completed;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new task","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     * @param task","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"     * Mark the task as complete","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public void markComplete() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * Unmark the task to be incomplete","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public void unmarkComplete() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        return \"[\" + statusIcon + \"] \" + this.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"jnjy":36}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"     * Constructor to create new task","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     * @param task new task to be added","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        String statusIcon \u003d this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        return \"[T][\" + statusIcon + \"]\" + this.task;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"todo CS2103T ip","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"deadline CS2109S Problem set /by 28 Jan","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"event CS2103T Lecture /from Friday 2pm /to Friday 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"jnjy":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"# run the program, feed commands from input.txt","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"# file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jnjy":2,"-":37}}]
