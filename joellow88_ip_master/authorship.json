[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joellow88":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joellow88":1,"-":40}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"public class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"    private final String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    private final List\u003cString\u003e arguments;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"    public Command(String description, List\u003cString\u003e arguments) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    public List\u003cString\u003e getArguments() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"        return arguments;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        if (!(o instanceof Command)) return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        Command command \u003d (Command) o;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        if (!description.equals(command.description)) return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        return arguments.equals(command.arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    public int hashCode() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"        int result \u003d description.hashCode();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"        result \u003d 31 * result + arguments.hashCode();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":37}},{"path":"src/main/java/duke/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import duke.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"public class CommandHandler {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"    CommandHandler() {}","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    public String handleCommand(Command command, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"        switch (command.getDescription()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"            return endDuke();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"            //Fallthrough (java doesn\u0027t let me compile if I add a break)","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"            return showTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"            //Fallthrough","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"            return markTask(command.getArguments().get(0), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"            return unmarkTask(command.getArguments().get(0), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"            return addTodo(command.getArguments().get(0), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"            return addDeadline(command.getArguments().get(0), command.getArguments().get(1), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"            return addEvent(command.getArguments().get(0), command.getArguments().get(1), command.getArguments().get(2), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"            return deleteEvent(command.getArguments().get(0), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"        case \"noMatch\":","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"            return noMatch();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        case \"invalid\":","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"            return invalid(command.getArguments().get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"            //Fallthrough ","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"    public boolean isByeCommand(Command command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        return command.getDescription().equals(\"bye\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"    private String endDuke() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"        return \"Bye! Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"    private String showTasks(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"                response +\u003d String.format(\"%d.%s\", i, tasks.get(i - 1).printTask()) + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"            response \u003d \"You currently have no items in your to-do list!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"    private String markTask(String index, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"            int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"            tasks.get(taskIndex).setDone(true);","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"            response +\u003d \"Okay! I\u0027ve marked this task as done!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"            response +\u003d tasks.get(taskIndex).printTask() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"            response \u003d \"You don\u0027t have that many tasks!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"    private String unmarkTask(String index, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"            int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"            tasks.get(taskIndex).setDone(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"            response +\u003d \"Okay! I\u0027ve marked this task as not done yet!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"            response +\u003d tasks.get(taskIndex).printTask() + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"            response \u003d \"You don\u0027t have that many tasks!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"    private String addTodo(String description, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"        response \u003d String.format(\"Added: %s\\n\", newTask.printTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"    private String addDeadline(String description, String by, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"        Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"        response \u003d String.format(\"Added: %s\\n\", newTask.printTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"    private String addEvent(String description, String from, String to, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"        Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"        response \u003d String.format(\"Added: %s\\n\", newTask.printTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"    private String noMatch() {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"        return \"Sorry, I didn\u0027t understand that, please ask again.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"joellow88"},"content":"    private String deleteEvent(String index, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"joellow88"},"content":"            int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"            response \u003d String.format(\"Okay! I deleted task %s\\n\", tasks.get(taskIndex).printTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"joellow88"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"joellow88"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"joellow88"},"content":"            response \u003d \"You don\u0027t have that many tasks!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"joellow88"},"content":"        return response;","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"    private String invalid(String reply) {","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"        return reply;","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joellow88":124}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"    private String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"                (super.isDone() ? \"X\" : \" \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"                super.getDescription(),","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"                this.deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"joellow88":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"    private final UiHandler ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"    Duke() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"        this.ui \u003d new UiHandler();","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"        d.ui.showStartingDialogue();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        while (d.isRunning) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"            d.isRunning \u003d d.ui.run(d.tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"joellow88":18,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"    private String startTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"    private String endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        return String.format(\"[E][%s] %s (%s - %s)\",","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"                (super.isDone() ? \"X\" : \" \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"                super.getDescription(),","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"                this.startTime,","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"                this.endTime);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"joellow88":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import duke.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"    Parser() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e arguments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"            return new Command(\"bye\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"            return new Command(\"list\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^mark \\\\d+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Please enter one task which you would like to mark as done.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"                String taskIndex \u003d input.split(\" \")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"                return new Command(\"mark\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^unmark \\\\d+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Please enter one task which you would like to mark as undone.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"                String taskIndex \u003d input.split(\" \")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"                return new Command(\"unmark\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^todo .+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Please enter the task you would like to do in the format \\n\u003e\u003e todo [task]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"                String taskDescription \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"                return new Command(\"todo\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^deadline .+ /by .+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Sorry, that command is invalid. Specify a deadline task with \\n \u003e\u003e deadline [description] /by [time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"                String delimiter \u003d \"/by \";","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"                String taskDescription \u003d input.substring(\"deadline \".length(), input.indexOf(delimiter) - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"                String taskBy \u003d input.substring(input.indexOf(delimiter) + delimiter.length());","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskBy);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"                return new Command(\"deadline\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^event .+ /from .+ /to .+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Sorry, that command is invalid. Specify an event task with \\n \u003e\u003e event [description] /from [start time] /to [end time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"                String startDelimiter \u003d \"/from \";","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"                String endDelimiter \u003d \"/to \";","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"                String taskDescription \u003d input.substring(\"event \".length(), input.indexOf(startDelimiter) - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"                String startTime \u003d input.substring(","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"                        input.indexOf(startDelimiter) + startDelimiter.length(),","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"                        input.indexOf(endDelimiter) - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"                String endTime \u003d input.substring(","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"                        input.indexOf(endDelimiter) + endDelimiter.length());","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"                arguments.add(startTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"                arguments.add(endTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"                return new Command(\"event\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"            if (! input.matches(\"^delete \\\\d+$\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"                arguments.add(\"Tell me the index of the event you want to delete! Type \u003e\u003elist to view your events again.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"                return new Command(\"invalid\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"                String taskIndex \u003d input.split(\" \")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"                arguments.add(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"                return new Command(\"delete\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"            return new Command(\"noMatch\", arguments);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":87}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"            throw new IllegalArgumentException(\"duke.Task cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        return description;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        return isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        return String.format(\"[%s] %s\", (isDone ? \"X\" : \" \"), description);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"joellow88":26}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import duke.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"    private final List\u003cTask\u003e lst;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"        this.lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"        return lst;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"        return this.lst.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        return this;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    public TaskList remove(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        this.lst.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        return this;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"        return this.lst.isEmpty();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"        return this.lst.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":41}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import duke.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"        return String.format(\"[T][%s] %s\",","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"                (super.isDone() ? \"X\" : \" \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"                super.getDescription());","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"joellow88":16}},{"path":"src/main/java/duke/UiHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import duke.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import duke.CommandHandler;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"public class UiHandler {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    private static final String separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    private CommandHandler commandHandler;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    UiHandler() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"        this.commandHandler \u003d new CommandHandler();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    public void showStartingDialogue() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        System.out.println(logo + \"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        System.out.println(\"Duke: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        System.out.println(\"Hello! I\u0027m DUKE!\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    public boolean run(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        System.out.println(\"You: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        Command command \u003d this.parser.parseCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        System.out.println(\"Duke: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        ","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"        response \u003d this.commandHandler.handleCommand(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        System.out.print(response);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"        if (this.commandHandler.isByeCommand(command)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"            isRunning \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"        return isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joellow88":55}},{"path":"src/test/java/duke/CommandHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"public class CommandHandlerTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    public void testEndDuke() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Bye! Hope to see you again soon!\\n\", ","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"                        new Command(\"bye\", new ArrayList\u003cString\u003e()), ","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"                        new TaskList()));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public void testShowTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"1.[T][ ] CS2103\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"                        new Command(\"list\", new ArrayList\u003cString\u003e()),","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"                        new TaskList().add(new Todo(\"CS2103\"))));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    public void showTasks_noTasks_noItemsResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"You currently have no items in your to-do list!\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"                        new Command(\"list\", new ArrayList\u003cString\u003e()),","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"                        new TaskList()));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    public void markTask_taskPresent_markedResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        argument.add(\"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Okay! I\u0027ve marked this task as done!\\n[D][X] Tutorial (by: Tomorrow 3pm)\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"                        new Command(\"mark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"                        new TaskList().add(new Deadline(\"Tutorial\", \"Tomorrow 3pm\"))));","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"    public void markTask_taskNotPresent_failedResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"        argument.add(\"3\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"You don\u0027t have that many tasks!\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"                        new Command(\"mark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"                        new TaskList().add(new Deadline(\"Tutorial\", \"Tomorrow 3pm\"))));","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"    public void unmarkTask_taskPresent_unmarkedResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"        argument.add(\"2\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Okay! I\u0027ve marked this task as not done yet!\\n[T][ ] Find girlfriend\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"                        new Command(\"unmark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"                                .add(new Deadline(\"Tutorial\", \"Tomorrow 3pm\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"                                .add(new Todo(\"Find girlfriend\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"    public void unmarkTask_taskNotPresent_failedResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"        argument.add(\"5\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"You don\u0027t have that many tasks!\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"                        new Command(\"unmark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"                                .add(new Deadline(\"Tutorial\", \"Tomorrow 3pm\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"                                .add(new Todo(\"Find girlfriend\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    public void testAddTodo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Find girlfriend\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Added: [T][ ] Find girlfriend\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"                        new Command(\"todo\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Project\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"        argument.add(\"4pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Added: [D][ ] Project (by: 4pm)\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"                        new Command(\"deadline\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"joellow88"},"content":"    public void testAddEvent() {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Project meeting\");","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"joellow88"},"content":"        argument.add(\"4pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"joellow88"},"content":"        argument.add(\"5pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Added: [E][ ] Project meeting (4pm - 5pm)\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"joellow88"},"content":"                        new Command(\"event\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"    public void testNoMatch() {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Sorry, I didn\u0027t understand that, please ask again.\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"joellow88"},"content":"                        new Command(\"noMatch\", new ArrayList\u003cString\u003e()),","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"joellow88"},"content":"    public void deleteEvent_taskPresent_deletedResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"joellow88"},"content":"        argument.add(\"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Okay! I deleted task [D][ ] Tutorial (by: Tomorrow 3pm)\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"joellow88"},"content":"                        new Command(\"delete\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"joellow88"},"content":"                        new TaskList().add(new Deadline(\"Tutorial\", \"Tomorrow 3pm\"))));","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"joellow88"},"content":"    public void testInvalid() {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter one task which you would like to mark as done.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"Please enter one task which you would like to mark as done.\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"joellow88"},"content":"                new CommandHandler().handleCommand(","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"joellow88"},"content":"                        new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"joellow88"},"content":"                        new TaskList()","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"joellow88"},"content":"                )","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"joellow88"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":154}},{"path":"src/test/java/duke/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    public void testGetDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"        assertEquals(\"todo\", new Command(\"todo\", new ArrayList\u003cString\u003e()).getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    public void testGetArguments() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        lst.add(\"3pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"        lst.add(\"tomorrow\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"        assertEquals(lst, new Command(\"event\", lst).getArguments());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_commandBye() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"bye\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"bye\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_commandList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"list\", new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"list\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_markValidInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        argument.add(\"12\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"mark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"mark 12\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_markInvalidArgument() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter one task which you would like to mark as done.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"mark cxvx\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_markNoArgument() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter one task which you would like to mark as done.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"mark\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_unmarkValidInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"        argument.add(\"12\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"unmark\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"unmark 12\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_unmarkInvalidArgument() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter one task which you would like to mark as undone.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"unmark 345f\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_unmarkNoArgument() {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter one task which you would like to mark as undone.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"unmark\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_todoValidInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Get some sleep\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"todo\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"todo Get some sleep\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_todoNoInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter the task you would like to do in the format \\n\u003e\u003e todo [task]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"todo\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_todoNoSpaceInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Please enter the task you would like to do in the format \\n\u003e\u003e todo [task]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"todoget some sleep\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_deadlineValidInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"        argument.add(\"homework\");","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"        argument.add(\"4pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"deadline\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"deadline homework /by 4pm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_deadlineNoInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify a deadline task with \\n \u003e\u003e deadline [description] /by [time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"deadline\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_deadlineNoArgumentBy() {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify a deadline task with \\n \u003e\u003e deadline [description] /by [time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"deadline do homework\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_deadlineNoTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify a deadline task with \\n \u003e\u003e deadline [description] /by [time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"deadline /by tomorrow\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_eventValidInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"joellow88"},"content":"        argument.add(\"AnimeFest2023\");","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"joellow88"},"content":"        argument.add(\"June\");","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"joellow88"},"content":"        argument.add(\"July\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"event\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"event AnimeFest2023 /from June /to July\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_eventNoInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify an event task with \\n \u003e\u003e event [description] /from [start time] /to [end time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"event\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_eventNoArgumentTo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify an event task with \\n \u003e\u003e event [description] /from [start time] /to [end time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"event AnimeFest2023 /from today\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_eventNoArgumentFrom() {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify an event task with \\n \u003e\u003e event [description] /from [start time] /to [end time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"event AnimeFest2023 /to next year\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_eventNoTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"joellow88"},"content":"        List\u003cString\u003e argument \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"joellow88"},"content":"        argument.add(\"Sorry, that command is invalid. Specify an event task with \\n \u003e\u003e event [description] /from [start time] /to [end time]\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"joellow88"},"content":"        assertEquals(new Command(\"invalid\", argument),","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"joellow88"},"content":"                new Parser().parseCommand(\"event /from today /to next year\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joellow88":151}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"todo do quiz","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"deadline print hello world /by tonight","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"event career fair /from 11am /to 3pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"event meet friends /from sat 10am /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"deadline do stuff /limit 3am","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"event midterms /from3pm/to5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"event midterms /from 3pm","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"event midterms /from 3pm /until 5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"delete 4","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"joellow88":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"javac -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joellow88":2,"-":19}}]
