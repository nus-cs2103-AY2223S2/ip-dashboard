[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"# Sunday project template","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"3. After that, locate the `src/main/java/Sunday.java` file, right-click it, and choose `Run Sunday.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joshua-tyh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    mainClassName \u003d \"Sunday\"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"    archiveBaseName \u003d \"sunday\"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joshua-tyh":7,"-":39}},{"path":"src/main/java/Sunday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"import command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import utilities.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import utilities.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * Sunday is the main class that runs the application.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" * It initializes the UI and runs the command loop.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"public class Sunday {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     * The user interface instance","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"     * Constructs a new Sunday instance and initializes the UI.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"     * The constructor also executes the INITIALIZE command with the given filepath.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     * @param filepath The filepath used to initialize the application.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"    public Sunday(String filepath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"            Command.INITIALIZE.execute(filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"        } catch (SundayException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"            Ui.printException(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"     * Runs the command loop that reads and executes user commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"     * The loop continues until the user enters the BYE command.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"    private void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"        while (command !\u003d Command.BYE) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"                String[] fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"                command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"                command.execute(fullCommand[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"            } catch (SundayException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printException(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"        this.ui.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"     * The main method that creates a new Sunday instance and starts the application.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"        new Sunday(\"../data/sunday.txt\").run();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":60}},{"path":"src/main/java/collections/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"import task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"import utilities.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":" * TaskList class represents a collection of tasks with methods to add, mark, unmark, delete, save, and load tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"     * The list of Tasks stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * Marks a task as completed at the specified index in the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"     * @param index The index of the task to mark.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"     * @return The marked task.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"    public Task mark(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"        this.list.get(index).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"     * Unmarks a task as completed at the specified index in the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"        this.list.get(index).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"     * Deletes a task at the specified index in the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"        return this.list.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"     * Gets a task at the specified index in the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"joshua-tyh"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"joshua-tyh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"joshua-tyh"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"joshua-tyh"},"content":"     * Gets the number of uncompleted tasks in the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"joshua-tyh"},"content":"     * @return The number of uncompleted tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"joshua-tyh"},"content":"    public int getUncompletedSize() {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"joshua-tyh"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"joshua-tyh"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"joshua-tyh"},"content":"            if (!this.list.get(i).isComplete()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"joshua-tyh"},"content":"                count++;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"joshua-tyh"},"content":"        return count;","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"joshua-tyh"},"content":"     * Saves the list of tasks to the data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"joshua-tyh"},"content":"     * @return True if the save operation is successful, otherwise false.","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If the data file could not be written to.","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"joshua-tyh"},"content":"    public boolean save() throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"joshua-tyh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"joshua-tyh"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"joshua-tyh"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"joshua-tyh"},"content":"            sb.append(this.list.get(i).save());","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"joshua-tyh"},"content":"        return Storage.writeToDataFile(sb.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"joshua-tyh"},"content":"     * Loads the list of tasks from the data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"joshua-tyh"},"content":"     * @return True if the save operation is successful, otherwise false.","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If the data file could not be read from.","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"joshua-tyh"},"content":"    public boolean load() throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"joshua-tyh"},"content":"        if (Storage.createDataFile()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"joshua-tyh"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"joshua-tyh"},"content":"        Storage.readFromDataFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"joshua-tyh"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"joshua-tyh"},"content":"     * Method to check if the task list is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"joshua-tyh"},"content":"     * @return True if the list is empty, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"joshua-tyh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"joshua-tyh"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"joshua-tyh"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"joshua-tyh"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"joshua-tyh"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"joshua-tyh"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"joshua-tyh"},"content":"            if (task.match(keyword)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"joshua-tyh"},"content":"                found.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"joshua-tyh"},"content":"        return found;","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"joshua-tyh"},"content":"     * Overrides the toString() method to display the TaskList object in a formatted manner.","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"joshua-tyh"},"content":"     * @return A formatted string representation of the TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"joshua-tyh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"joshua-tyh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"joshua-tyh"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"joshua-tyh"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"joshua-tyh"},"content":"            sb.append(this.getTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":162}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import collections.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"import task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"import task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"import utilities.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":" * Enum representing different commands that can be executed in the task management system.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":" * The commands include INITIALIZE, LIST, DEADLINE, EVENT, TODO, MARK, UNMARK, DELETE, and BYE.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"public enum Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     * Initializes the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"    INITIALIZE(\"init\") {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String filepath) throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"            Ui.printWelcome();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"            boolean isFirstLaunch \u003d list.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"            if (isFirstLaunch) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printCreatedSaveFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printLoadedSaveFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"    LIST(\"list\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"            if (list.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printEmptyTaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printTaskList(list);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    DEADLINE(\"deadline\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"                input \u003d input.substring(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"                String[] strArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"                int i \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"                while (!(strArr[i].equals(\"/by\") || strArr[i].equals(\"(by:\"))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(strArr[i]);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"                    i++;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"                String description \u003d sb.toString().substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"                i++; // skip \"/by\" or \"(by:\"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"                while (i \u003c strArr.length) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(strArr[i]);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"joshua-tyh"},"content":"                    i++;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"joshua-tyh"},"content":"                String by \u003d sb.toString().substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"joshua-tyh"},"content":"                Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"joshua-tyh"},"content":"                list.add(deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printAddedTask(deadline, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"joshua-tyh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"joshua-tyh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! The description of this deadline is invalid.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"joshua-tyh"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"joshua-tyh"},"content":"                        \"OOPS! It appears the deadline given was not of the format dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"joshua-tyh"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"joshua-tyh"},"content":"    EVENT(\"event\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"joshua-tyh"},"content":"                input \u003d input.substring(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"joshua-tyh"},"content":"                String[] strArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"joshua-tyh"},"content":"                int j \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"joshua-tyh"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"joshua-tyh"},"content":"                while (!(strArr[j].equals(\"/from\") || strArr[j].equals(\"(from:\"))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(strArr[j]);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"joshua-tyh"},"content":"                    j++;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"joshua-tyh"},"content":"                String description \u003d sb.toString().substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"joshua-tyh"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"joshua-tyh"},"content":"                j++; // skip \"/from\" or \"(from:\"","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"joshua-tyh"},"content":"                while (!(strArr[j].equals(\"/to\") || strArr[j].equals(\"to:\"))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(strArr[j]);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"joshua-tyh"},"content":"                    j++;","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"joshua-tyh"},"content":"                String start \u003d sb.toString().substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"joshua-tyh"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"joshua-tyh"},"content":"                j++; // skip \"/to\" or \"to:\"","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"joshua-tyh"},"content":"                while (j \u003c strArr.length) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(strArr[j]);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"joshua-tyh"},"content":"                    sb.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"joshua-tyh"},"content":"                    j++;","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"joshua-tyh"},"content":"                String end \u003d sb.toString().substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"joshua-tyh"},"content":"                Task event \u003d new Event(description, start, end);","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"joshua-tyh"},"content":"                list.add(event);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printAddedTask(event, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"joshua-tyh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"joshua-tyh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! The description of this event is invalid.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"joshua-tyh"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"joshua-tyh"},"content":"                        \"OOPS! It appears the deadline given was not of the format dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"joshua-tyh"},"content":"     * Adds a to-do task to the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"joshua-tyh"},"content":"    TODO(\"todo\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"joshua-tyh"},"content":"                String description \u003d input.substring(1);","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"joshua-tyh"},"content":"                Task toDo \u003d new ToDo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"joshua-tyh"},"content":"                list.add(toDo);","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printAddedTask(toDo, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"joshua-tyh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"joshua-tyh"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"joshua-tyh"},"content":"    MARK(\"mark\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"joshua-tyh"},"content":"                int index \u003d Integer.parseInt(input.substring(1)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"joshua-tyh"},"content":"                Task marked \u003d list.mark(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printMarkedTask(marked, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"joshua-tyh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! You did not specify which task you wanted me to mark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"joshua-tyh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! Seems like that task does not exist.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"joshua-tyh"},"content":"     * Unmarks a task as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"joshua-tyh"},"content":"    UNMARK(\"unmark\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"joshua-tyh"},"content":"                int index \u003d Integer.parseInt(input.substring(1)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"joshua-tyh"},"content":"                Task unmarked \u003d list.unmark(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printUnmarkedTask(unmarked, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"joshua-tyh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! You did not specify which task you wanted me to unmark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"joshua-tyh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! Seems like that task does not exist.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"joshua-tyh"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"joshua-tyh"},"content":"    DELETE(\"delete\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"joshua-tyh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"joshua-tyh"},"content":"                int index \u003d Integer.parseInt(String.valueOf(input.substring(1))) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"joshua-tyh"},"content":"                Task deleted \u003d list.delete(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"joshua-tyh"},"content":"                Ui.printDeletedTask(deleted, list.getUncompletedSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"joshua-tyh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! You did not specify which task you wanted me to delete\");","lastModifiedDate":"2023-01-27"},{"lineNumber":207,"author":{"gitId":"joshua-tyh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"joshua-tyh"},"content":"                throw new SundayException(\"OOPS!!! Seems like that task does not exist\");","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":213,"author":{"gitId":"joshua-tyh"},"content":"    FIND(\"find\") {","lastModifiedDate":"2023-02-01"},{"lineNumber":214,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"joshua-tyh"},"content":"            String keyword \u003d input.substring(1);","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"joshua-tyh"},"content":"            TaskList found \u003d list.find(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"joshua-tyh"},"content":"            Ui.printListFound(found);","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"joshua-tyh"},"content":"    },","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"joshua-tyh"},"content":"     * Exits the task management system.","lastModifiedDate":"2023-02-01"},{"lineNumber":224,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":225,"author":{"gitId":"joshua-tyh"},"content":"    BYE (\"bye\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":226,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":227,"author":{"gitId":"joshua-tyh"},"content":"        public void execute(String input) throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"joshua-tyh"},"content":"            boolean didSave \u003d list.save();","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"joshua-tyh"},"content":"            Ui.printGoodbye(didSave);","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"joshua-tyh"},"content":"    };","lastModifiedDate":"2023-01-26"},{"lineNumber":232,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":234,"author":{"gitId":"joshua-tyh"},"content":"     * A static instance of TaskList to store tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":235,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":236,"author":{"gitId":"joshua-tyh"},"content":"    private static TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"joshua-tyh"},"content":"     * The command string.","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"joshua-tyh"},"content":"    private String command;","lastModifiedDate":"2023-02-01"},{"lineNumber":242,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"joshua-tyh"},"content":"     * Constructor for the Command enum.","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"joshua-tyh"},"content":"     * @param command The string representation of the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":248,"author":{"gitId":"joshua-tyh"},"content":"    Command(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"joshua-tyh"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":251,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":252,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":253,"author":{"gitId":"joshua-tyh"},"content":"     * Executes the command with the given input.","lastModifiedDate":"2023-02-01"},{"lineNumber":254,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":255,"author":{"gitId":"joshua-tyh"},"content":"     * @param input The input to be used for executing the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":256,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If any error occurs during the execution of the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":257,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":258,"author":{"gitId":"joshua-tyh"},"content":"    public abstract void execute(String input) throws SundayException;","lastModifiedDate":"2023-01-26"},{"lineNumber":259,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":259}},{"path":"src/main/java/exceptions/SundayException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":" * SundayException is a custom exception class that extends the Exception class.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":" * This exception will be thrown when a specific event related to Sunday occurs.","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"public class SundayException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"     * Constructor for SundayException that takes a string message as input.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"     * This message will be passed to the parent class (Exception) via the super() call.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     * @param message The message to be associated with the exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    public SundayException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"joshua-tyh":20}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * Deadline is a class that extends the Task class and adds a deadline property.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" * The class takes a description and a string representation of the deadline as inputs and sets the deadline property.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     * The deadline date and time of the Deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    private Date deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"     * Constructor for Deadline that takes a description and a string representation of the deadline as inputs.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"     * The constructor uses the super class\u0027s readFormat to parse the deadline string into a Date object.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"     * The constructor throws a ParseException if the deadline string cannot be parsed into a Date object.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"     * @param deadline The string representation of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"     * @throws ParseException If the deadline string cannot be parsed into a Date object.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"    public Deadline(String description, String deadline) throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"        this.deadline \u003d super.getReadFormat().parse(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden save() method for Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the task with deadline in the Read Format.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"    public String save() {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[D]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.toString()).append(\" (by: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getReadFormat().format(this.deadline));","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\")\");","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden toString() method for Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the task with deadline in the Write Format.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[D]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.toString()).append(\" (by: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getWriteFormat().format(this.deadline));","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\")\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":64}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":" * Event is a class that extends the Task class and adds start and end properties.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * The class takes a description, a string representation of the start time, and a string representation","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" * of the end time as inputs and sets the start and end properties.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"     * The start date and time of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"    private Date start;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"     * The end date and time of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    private Date end;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"     * Constructor for Event that takes a description, a string representation of the start time,","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     * and a string representation of the end time as inputs.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     * The constructor uses the super class\u0027s readFormat to parse the start and end strings into Date objects.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"     * The constructor throws a ParseException if the start or end strings cannot be parsed into Date objects.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"     * @param start The string representation of the start time.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"     * @param end The string representation of the end time.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"     * @throws ParseException If the start or end strings cannot be parsed into Date objects.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"    public Event(String description, String start, String end) throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"        this.start \u003d super.getReadFormat().parse(start);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"        this.end \u003d super.getReadFormat().parse(end);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden save() method for Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the task with start and end in the Read Format.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"    public String save() {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[E]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\" (from: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getReadFormat().format(this.start));","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\" to: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getReadFormat().format(this.end));","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\")\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden toString() method for Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the task with start and end in the Read Format.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[E]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\" (from: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getWriteFormat().format(this.start));","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\" to: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.getWriteFormat().format(this.end));","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\")\");","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":73}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * The abstract class Task represents a task with a description and completion status.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" * This class provides basic properties and methods for all task subclasses.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     * The description of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    private String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"     * The readFormat attribute is a {@link SimpleDateFormat} object used to parse the date input.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"    private DateFormat readFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"     * The writeFormat attribute is a {@link SimpleDateFormat} object used to format the date output.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"    private DateFormat writeFormat \u003d new SimpleDateFormat(\"E, MMM dd yyyy, h:mm aa\");","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"     * The isComplete attribute stores the completion status of a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"     * A task is considered complete if the isComplete value is set to true,","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"     * otherwise, it is considered incomplete if the isComplete value is set to false.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"     * Constructor for Task class","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * @param description String to describe the task","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"     * @return String representation of the task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"     * @return Boolean indicating if the task is complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"        return this.isComplete;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"     * Mark the task as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"     * Mark the task as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"joshua-tyh"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"joshua-tyh"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"joshua-tyh"},"content":"     * Abstract method to save the task as a string representation.","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"joshua-tyh"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"joshua-tyh"},"content":"    public abstract String save();","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"joshua-tyh"},"content":"     * Returns the format that Dates are read.","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"joshua-tyh"},"content":"     * @return DateFormat for reading Dates.","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"joshua-tyh"},"content":"    public DateFormat getReadFormat() {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"joshua-tyh"},"content":"        return this.readFormat;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"joshua-tyh"},"content":"     * Returns the format that Dates are written.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"joshua-tyh"},"content":"     * @return DateFormat for writing Dates.","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"joshua-tyh"},"content":"    public DateFormat getWriteFormat() {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"joshua-tyh"},"content":"        return this.writeFormat;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"joshua-tyh"},"content":"    ","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"joshua-tyh"},"content":"    public boolean match(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"joshua-tyh"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"joshua-tyh"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"joshua-tyh"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"joshua-tyh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[] \");","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(this.description);","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"joshua-tyh"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"joshua-tyh"},"content":"            sb.insert(1, \"X\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":122}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":" * To-Do extends Task and is used to represent a To-Do task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":" * This class extends the Task class and implements its abstract method save().","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"     * Constructs a To-Do task with the given description.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"     * @param description a string that describes the task","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden save() method for To-Do.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the To-Do task.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the To-Do task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"    public String save() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"        return this.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"     * Overridden toString() method for To-Do.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"     * The method returns a string representation of the To-Do task.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"     * @return A string representation of the To-Do task in a specific format.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(\"[T]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"        sb.append(super.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":44}},{"path":"src/main/java/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package utilities;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":" * The Parser class is used to parse the user input and convert it into a {@link Command} object.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"     * @param fullCommand A string array that contains the user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"     * @return The corresponding Command object based on the user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If the user input is not a valid command.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    public static Command parse(String[] fullCommand) throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"            return Command.valueOf(fullCommand[0].toUpperCase());","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"            throw new SundayException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"joshua-tyh":27}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package utilities;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"import command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":" * The Storage class is responsible for managing file I/O operations for the Sunday task manager.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":" * It provides methods for creating, reading from, and writing to a data file that stores the list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"     * Retrieves the file path of the \"sunday.txt\" file in the \"data\" directory.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"     * If the \"data\" directory does not exist, it will be created.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"     * @return The file path of the \"sunday.txt\" file","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"     * @throws IOException If the \"data\" directory failed to be created.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"    private static String getFilepath() throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"        Path dataDir \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"        if (!Files.exists(dataDir)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"            Files.createDirectory(dataDir);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"        Path saveFilepath \u003d Paths.get(dataDir.toString(), \"sunday.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"        return saveFilepath.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * Creates a new data file at the specified file path.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"     * @return True if the file was created successfully, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If there was an error creating the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"    public static boolean createDataFile() throws SundayException {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"            String filepath \u003d getFilepath();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"            File dataFile \u003d new File(filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"            return dataFile.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"            throw new SundayException(\"ERROR: Unable to initialise data file\");","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"     * Reads data from a file at the specified file path and executes relevant","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"     * commands based on the data read.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If there was an error reading the file or executing the commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"    public static void readFromDataFile() throws SundayException {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"            String filepath \u003d getFilepath();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"            File dataFile \u003d new File(filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"            Scanner reader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"            Ui.setDummyStream();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"            int itemIndex \u003d 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"                String[] strArr \u003d data.split(\"]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"                switch (strArr[0].charAt(1)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"joshua-tyh"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"joshua-tyh"},"content":"                    Command.TODO.execute(strArr[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"joshua-tyh"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"joshua-tyh"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"joshua-tyh"},"content":"                    Command.DEADLINE.execute(strArr[2].substring(0, strArr[2].length() - 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"joshua-tyh"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"joshua-tyh"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"joshua-tyh"},"content":"                    Command.EVENT.execute(strArr[2].substring(0, strArr[2].length() - 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"joshua-tyh"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"joshua-tyh"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"joshua-tyh"},"content":"                    throw new SundayException(\"ERROR 1: unable to read file\");","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"joshua-tyh"},"content":"                switch (strArr[1].length()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"joshua-tyh"},"content":"                case 1:","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"joshua-tyh"},"content":"                    Command.UNMARK.execute(\" \" + String.valueOf(itemIndex));","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"joshua-tyh"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"joshua-tyh"},"content":"                case 2:","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"joshua-tyh"},"content":"                    Command.MARK.execute(\" \" + String.valueOf(itemIndex));","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"joshua-tyh"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"joshua-tyh"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"joshua-tyh"},"content":"                    throw new SundayException(\"ERROR 2: unable to read file\");","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"joshua-tyh"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"joshua-tyh"},"content":"                itemIndex++;","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"joshua-tyh"},"content":"            Ui.setDefaultStream();","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"joshua-tyh"},"content":"            reader.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"joshua-tyh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"joshua-tyh"},"content":"            Ui.setDefaultStream();","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"joshua-tyh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"joshua-tyh"},"content":"            throw new SundayException(\"ERROR: Unable to read from data file\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"joshua-tyh"},"content":"     * Writes a line of data to the specified file path.","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"joshua-tyh"},"content":"     * @param line The line of data to write to the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"joshua-tyh"},"content":"     * @return True if write was successful, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"joshua-tyh"},"content":"     * @throws SundayException If there was an error writing to the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"joshua-tyh"},"content":"    public static boolean writeToDataFile(String line) throws SundayException {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"joshua-tyh"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"joshua-tyh"},"content":"            String filepath \u003d getFilepath();","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"joshua-tyh"},"content":"            FileWriter myWriter \u003d new FileWriter(filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"joshua-tyh"},"content":"            myWriter.write(line);","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"joshua-tyh"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"joshua-tyh"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"joshua-tyh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"joshua-tyh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"joshua-tyh"},"content":"            throw new SundayException(\"ERROR: Unable to write to data file\");","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"joshua-tyh":127}},{"path":"src/main/java/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package utilities;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"import collections.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"import exceptions.SundayException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"import task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":" * The Ui class is a user interface for the Sunday task manager.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":" * It contains methods for reading user input, printing output to the console, and closing the user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":" * @author Tan Yan-Hao Joshua","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    private static String bar \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"joshua-tyh"},"content":"    private static String indent \u003d \"    \";","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"joshua-tyh"},"content":"    private static PrintStream dummyStream \u003d new PrintStream(new OutputStream() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"joshua-tyh"},"content":"        @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"joshua-tyh"},"content":"        public void write(int b) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"joshua-tyh"},"content":"            // Empty to hide prints while reading from file","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"joshua-tyh"},"content":"    });","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"joshua-tyh"},"content":"    private static PrintStream defaultStream \u003d System.out;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"joshua-tyh"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"joshua-tyh"},"content":"     * Reads a user\u0027s command as a string array containing two elements.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"joshua-tyh"},"content":"     * The first element is the command and the second is the input.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"joshua-tyh"},"content":"     * @return The user\u0027s command as a string array.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"joshua-tyh"},"content":"    public String[] readCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"joshua-tyh"},"content":"        String command \u003d this.sc.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"joshua-tyh"},"content":"        String input \u003d this.sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"joshua-tyh"},"content":"        String[] fullCommand \u003d new String[2];","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"joshua-tyh"},"content":"        fullCommand[0] \u003d command;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"joshua-tyh"},"content":"        fullCommand[1] \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"joshua-tyh"},"content":"        return fullCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"joshua-tyh"},"content":"     * Closes the user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"joshua-tyh"},"content":"    public void close() {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"joshua-tyh"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"joshua-tyh"},"content":"        dummyStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"joshua-tyh"},"content":"        defaultStream.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"joshua-tyh"},"content":"     * Sets the output stream to a dummy stream.","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"joshua-tyh"},"content":"    public static void setDummyStream() {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"joshua-tyh"},"content":"        System.setOut(dummyStream);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"joshua-tyh"},"content":"     * Sets the output stream back to the default stream.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"joshua-tyh"},"content":"    public static void setDefaultStream() {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"joshua-tyh"},"content":"        System.setOut(defaultStream);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a bar to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"joshua-tyh"},"content":"    private static void printBar() {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"joshua-tyh"},"content":"        System.out.println(indent + bar);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"joshua-tyh"},"content":"     * Prints text to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"joshua-tyh"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"joshua-tyh"},"content":"    private static void printText(String text) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"joshua-tyh"},"content":"        System.out.println(indent + text);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a welcome message to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"joshua-tyh"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Hi! I\u0027m Sunday, pleasure to meet you!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"How can I help?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a new save file has been created.","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"joshua-tyh"},"content":"    public static void printCreatedSaveFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"It appears we haven\u0027t met!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Start typing away your tasks and I\u0027ll note them down accordingly :)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a saved file has been loaded.","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"joshua-tyh"},"content":"    public static void printLoadedSaveFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"It appears we\u0027ve met! I\u0027ve restored your task list from our last session.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a task list to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"joshua-tyh"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"joshua-tyh"},"content":"    public static void printTaskList(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Here\u0027s everything I\u0027ve noted down for you:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"joshua-tyh"},"content":"        String[] strArr \u003d taskList.toString().split(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"joshua-tyh"},"content":"        for (int i \u003d 0; i \u003c strArr.length; i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"joshua-tyh"},"content":"            printText(indent + (i + 1) + \". \" + strArr[i]);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a task has been added to the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"joshua-tyh"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"joshua-tyh"},"content":"     * @param uncompletedSize The number of uncompleted tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"joshua-tyh"},"content":"    public static void printAddedTask(Task task, int uncompletedSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"  \" + task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Now you have \" + uncompletedSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a task has been marked as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"joshua-tyh"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"joshua-tyh"},"content":"     * @param uncompletedSize The number of uncompleted tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"joshua-tyh"},"content":"    public static void printMarkedTask(Task task, int uncompletedSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Well Done! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"  \" + task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Now you have \" + uncompletedSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a task has been unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"joshua-tyh"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"joshua-tyh"},"content":"     * @param uncompletedSize The number of uncompleted tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"joshua-tyh"},"content":"    public static void printUnmarkedTask(Task task, int uncompletedSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"  \" + task);","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Now you have \" + uncompletedSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"joshua-tyh"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"joshua-tyh"},"content":"     * @param uncompletedSize The number of uncompleted tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"joshua-tyh"},"content":"    public static void printDeletedTask(Task task, int uncompletedSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"  \" + task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Now you have \" + uncompletedSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"joshua-tyh"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"joshua-tyh"},"content":"     * @param e The exception that was thrown.","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"joshua-tyh"},"content":"    public static void printException(SundayException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"joshua-tyh"},"content":"        printText(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a goodbye message to the console.","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"joshua-tyh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"joshua-tyh"},"content":"     * @param didSave Indicates whether the task list was saved before the program exited.","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"joshua-tyh"},"content":"    public static void printGoodbye(boolean didSave) {","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"joshua-tyh"},"content":"        if (didSave) {","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"joshua-tyh"},"content":"            printSavedToFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":211,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Goodbye and have a pleasant day!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":214,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":215,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"joshua-tyh"},"content":"    private static void printSavedToFile() {","lastModifiedDate":"2023-01-31"},{"lineNumber":217,"author":{"gitId":"joshua-tyh"},"content":"        Ui.printText(\"Okay, I\u0027ve save your list for the next session!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"joshua-tyh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"joshua-tyh"},"content":"     * Prints a message to the console indicating that the task list is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"joshua-tyh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"joshua-tyh"},"content":"    public static void printEmptyTaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Your list is currently empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"joshua-tyh"},"content":"        printText(\"Tell me what to note down and I\u0027ll remember it accordingly!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"joshua-tyh"},"content":"    public static void printListFound(TaskList taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":230,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"joshua-tyh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":232,"author":{"gitId":"joshua-tyh"},"content":"            printText(\"Looks like you don\u0027t have any tasks matching that description.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"joshua-tyh"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":234,"author":{"gitId":"joshua-tyh"},"content":"            Ui.printText(\"Here are the task(s) I\u0027ve found:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":235,"author":{"gitId":"joshua-tyh"},"content":"            String[] strArr \u003d taskList.toString().split(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":236,"author":{"gitId":"joshua-tyh"},"content":"            for (int i \u003d 0; i \u003c strArr.length; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":237,"author":{"gitId":"joshua-tyh"},"content":"                printText(indent + (i+1) + \". \" + strArr[i]);","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"joshua-tyh"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"joshua-tyh"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"joshua-tyh"},"content":"        printBar();","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":242,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"joshua-tyh":242}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"    public void createDeadlineTest() throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[D][] TASK DESCRIPTION (by: Tue, Jan 31 2023, 11:59 PM)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"                new Deadline(\"TASK DESCRIPTION\", \"31/01/2023 2359\").toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    public void saveDeadlineTest() throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[D][] TASK DESCRIPTION (by: 31/01/2023 2359)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"                new Deadline(\"TASK DESCRIPTION\", \"31/01/2023 2359\").save());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"joshua-tyh":21}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"public class EventTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"    public void createEventTest() throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[E][] TASK DESCRIPTION (from: Mon, Jan 30 2023, 8:00 AM to: Tue, Jan 31 2023, 8:00 PM)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"                new Event(\"TASK DESCRIPTION\", \"30/01/2023 0800\", \"31/01/2023 2000\").toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"    public void saveDeadlineTest() throws ParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[E][] TASK DESCRIPTION (from: 30/01/2023 0800 to: 31/01/2023 2000)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"joshua-tyh"},"content":"                new Event(\"TASK DESCRIPTION\", \"30/01/2023 0800\", \"31/01/2023 2000\").save());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"joshua-tyh":21}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"    public void createToDoTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[T][] TASK DESCRIPTION\", new ToDo(\"TASK DESCRIPTION\").toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"    public void saveToDoTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"joshua-tyh"},"content":"        assertEquals(\"[T][] TASK DESCRIPTION\", new ToDo(\"TASK DESCRIPTION\").save());","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"joshua-tyh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"joshua-tyh"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"joshua-tyh":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joshua-tyh"},"content":"deadline Complete CS2103 Individual Project Week 2 /by 20/01/2023 2359","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"joshua-tyh"},"content":"todo Check email for updates on NOC","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"joshua-tyh"},"content":"event DJ gig at Cherry Discotheque /from 21/01/23 2200 /to 21/01/2023 0400","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"joshua-tyh"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"joshua-tyh"},"content":"todo Finalise DJ setlist","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"joshua-tyh"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"joshua-tyh"},"content":"todo Buy body soap and cleaning wipes","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"joshua-tyh"},"content":"unmark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"joshua-tyh"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"joshua-tyh"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"joshua-tyh"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"joshua-tyh"},"content":"delete 2","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"joshua-tyh"},"content":"list","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"joshua-tyh"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"joshua-tyh":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"joshua-tyh"},"content":"java -classpath ..\\bin Sunday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joshua-tyh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"joshua-tyh"},"content":"java -classpath ../bin Sunday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joshua-tyh":1,"-":37}}]
