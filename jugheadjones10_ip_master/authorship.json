[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"    mainClassName \u003d \"yj.YJ\"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    archiveBaseName \u003d \"yj\"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jugheadjones10":3,"-":39}},{"path":"src/main/java/yj/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"public enum Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"    UNKNOWN,","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"    BYE,","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"    LIST,","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"    DELETE,","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"    MARK,","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"    UNMARK,","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    TODO,","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    EVENT,","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jugheadjones10":13}},{"path":"src/main/java/yj/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        // Parse the by string as a LocalDateTime","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"        this.by \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the formatted deadline of the deadline.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     * @return deadline of the deadline formatted as MMM dd yyyy h:mma.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        return outputFormatter.format(by);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the deadline of the deadline and saves as a LocalDateTime.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"     * @param by deadline of the deadline in the format d/M/yyyy HHmm.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        this.by \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"        // [D][ ] return book (by: June 6th)","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"        return \"[D]\" + \" \" + super.getStatusIcon() + \" \" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the string representation of the deadline to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"     * @return string representation of the deadline to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"        return \"D | \" + (isDone ? 1 : 0) + \" | \" + super.toString() + \" | \" + by.format(dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jugheadjones10":52}},{"path":"src/main/java/yj/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        this.from \u003d LocalDateTime.parse(from, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"        this.to \u003d LocalDateTime.parse(to, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the formatted start time of the event.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     * @return start time of the event formatted as MMM dd yyyy h:mma.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        return outputFormatter.format(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the start time of the event and saves as a LocalDateTime.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"     * @param from start time of the event in the format d/M/yyyy HHmm.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        this.from \u003d LocalDateTime.parse(from, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the formatted end time of the event.","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"     * @return end time of the event formatted as MMM dd yyyy h:mma.","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"        return outputFormatter.format(to);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the end time of the event and saves as a LocalDateTime.","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"     * @param to end time of the event in the format d/M/yyyy HHmm.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        this.to \u003d LocalDateTime.parse(to, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"        return \"[E]\" + \" \" + super.getStatusIcon() + \" \" + super.toString() + \" (from: \" + getFrom() + \" to: \" + getTo() + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the string representation of the event to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"     * @return string representation of the event to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"        // E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"        return \"E | \" + (isDone ? 1 : 0) + \" | \" + super.toString() + \" | \" + from.format(dateTimeFormatter) + \" | \" + to.format(dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jugheadjones10":69}},{"path":"src/main/java/yj/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"    static public Integer parseDeleteCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"        Integer taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"        return taskNumber;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the mark command.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"     * @return The task number.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    static public Integer parseMarkCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        Integer taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        return taskNumber;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the unmark command.","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"     * @return The task number.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    static public Integer parseUnMarkCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        Integer taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        return taskNumber;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the todo command.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"     * @return The todo description.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    static public String parseToDoCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"        String description \u003d input.replaceAll(\"todo \", \"\").trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"        return description;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the deadline command.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"     * @return A map containing the description and the deadline.","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    static public Map\u003cString, String\u003e parseDeadlineCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"        String by \u003d input.split(\"/by\")[1].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"        String description \u003d input.split(\"/by\")[0].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"        Map\u003cString, String\u003e result \u003d new HashMap\u003cString, String\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        result.put(\"description\", description);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"        result.put(\"by\", by);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the event command.","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"     * @return A map containing the description, the start time and the end time.","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"    static public Map\u003cString, String\u003e parseEventCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"        String from \u003d input.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"        String to \u003d input.split(\"/to\")[1].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"        String description \u003d input.split(\"/from\")[0].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"        Map\u003cString, String\u003e result \u003d new HashMap\u003cString, String\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"        result.put(\"description\", description);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"        result.put(\"from\", from);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        result.put(\"to\", to);","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"     * Parses the command.","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"     * @param command The command string.","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"     * @return The command enum.","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"    static public Command parseCommand(String command) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"jugheadjones10"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jugheadjones10"},"content":"            return Command.BYE;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"            return Command.LIST;","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"jugheadjones10"},"content":"            return Command.MARK;","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"jugheadjones10"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"            return Command.TODO;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"jugheadjones10"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"jugheadjones10"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"jugheadjones10"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"jugheadjones10"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"jugheadjones10"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jugheadjones10":101}},{"path":"src/main/java/yj/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"    private File tasksFile;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"        // Create tasks file if it doesn\u0027t exist","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"        tasksFile \u003d new File(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        if (!tasksFile.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"                tasksFile.createNewFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"                System.out.println(\"Crapadoodle! I couldn\u0027t create a new file. Something went wrong.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"     * Saves tasks to file.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"            FileWriter fileWriter \u003d new FileWriter(tasksFile);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"                fileWriter.write(task.toSaveString() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"            System.out.println(\"Crapadoodle! I couldn\u0027t write to the file. Something went wrong.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"     * Loads tasks from file.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"     * @return List of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"        // Read tasks from file","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"            Scanner scanner \u003d new Scanner(tasksFile);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"                String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"                String[] taskLineParts \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"                String taskType \u003d taskLineParts[0].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"                int isDone \u003d Integer.parseInt(taskLineParts[1].trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"                String description \u003d taskLineParts[2].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"                Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"                        String by \u003d taskLineParts[3].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"                        String from \u003d taskLineParts[3].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"                        String to \u003d taskLineParts[4].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"                    default:","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"                        task \u003d new Task(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"                if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"jugheadjones10"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jugheadjones10"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"            return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jugheadjones10":87}},{"path":"src/main/java/yj/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the status icon of the task - either [X] or [].","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"     * @return status icon of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"        return description;","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"     * @return string representation of the task to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jugheadjones10":48}},{"path":"src/main/java/yj/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     * @return List of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     * @param task Task to add","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"     * @param i Index of task","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"     * @return Task at index i","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"     * @param i Index of task","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"     * @return Task at index i","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"        return tasks.remove(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"     * @return Number of tasks","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"    public int getNumberofTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"    public void forEachTask(BiConsumer\u003cTask, Integer\u003e consumer) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"            consumer.accept(task, i);","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"    public Task deleteTask(int i) throws IndexOutOfBoundsException{","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"        if (tasks.get(i - 1) !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"            Task task \u003d removeTask(i - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"            return task;","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"            throw  new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jugheadjones10":78}},{"path":"src/main/java/yj/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"    public ToDo(String description) throws IllegalArgumentException {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalArgumentException(\"Crapadoodle! the description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        // [T][X] read book","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"        return \"[T]\" + \" \" + super.getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"     * Returns the string representation of the todo to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     * @return string representation of the todo to be saved in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jugheadjones10":28}},{"path":"src/main/java/yj/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"    public void print(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"     * Prints the loading error message.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"        System.out.println(\"Crapadoodle! I couldn\u0027t load. Too bad man.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jugheadjones10":14}},{"path":"src/main/java/yj/YJ.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"public class YJ {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public YJ(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        new YJ(\"tasks.txt\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        ui.print(\"Hello! I\u0027m YJ. What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        while (true) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"            switch (command) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"                case LIST:","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"                    tasks.forEachTask((task, i) -\u003e ui.print((i + 1) + \".\" + task.toString()));","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"                case DELETE:","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"                        Integer taskNumber \u003d Parser.parseDeleteCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"                        Task task \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"I\u0027ve removed this task as u lazily requested:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Now you have like this many tasks left: \" + tasks.getNumberofTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Crapadoodle! You need to specify a task number or a valid task to delete.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"                case MARK: {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"                    Integer taskNumber \u003d Parser.parseMarkCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"                    if (taskNumber !\u003d null \u0026\u0026 tasks.getTask(taskNumber - 1) !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"                        Task task \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"                        task.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Niceoooo you\u0027re done wit this: \");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"                case UNMARK: {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"                    Integer taskNumber \u003d Parser.parseUnMarkCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"                    if (taskNumber !\u003d null \u0026\u0026 tasks.getTask(taskNumber - 1) !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"                        Task task \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"                        task.markAsNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Ok lah you haven\u0027t finish this yet\");","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"                case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"                        String description \u003d Parser.parseToDoCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"                        ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"                        tasks.addTask(newToDo);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Ok! I\u0027ve added this todo! \" + newToDo.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"You now have this many tasks: \" + tasks.getNumberofTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jugheadjones10"},"content":"                case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"                        Map\u003cString, String\u003e result \u003d Parser.parseDeadlineCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"                        Deadline newDeadline \u003d new Deadline(result.get(\"description\"), result.get(\"by\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"                        tasks.addTask(newDeadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Ok! I\u0027ve added this deadline!\" + newDeadline.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"You now have this many tasks: \" + tasks.getNumberofTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"jugheadjones10"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Crapadoodle! You need to specify a deadline in the correct format!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jugheadjones10"},"content":"                case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"jugheadjones10"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"jugheadjones10"},"content":"                        Map\u003cString, String\u003e result \u003d Parser.parseEventCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"jugheadjones10"},"content":"                        Event newEvent \u003d new Event(result.get(\"description\"), result.get(\"from\"), result.get(\"to\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"jugheadjones10"},"content":"                        tasks.addTask(newEvent);","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Ok! I\u0027ve added this event!\" + newEvent.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"You now have this many tasks: \" + tasks.getNumberofTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jugheadjones10"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"jugheadjones10"},"content":"                        ui.print(\"Crapadoodle! You need to specify an event in the correct format!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"jugheadjones10"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"jugheadjones10"},"content":"                case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"jugheadjones10"},"content":"                    // Write tasks to file","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"jugheadjones10"},"content":"                    storage.save(tasks.getTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"jugheadjones10"},"content":"                    ui.print(\"Byebye, YJ will miss you :(\");","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"jugheadjones10"},"content":"                    sc.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"jugheadjones10"},"content":"                    System.exit(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"jugheadjones10"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"jugheadjones10"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"jugheadjones10"},"content":"                    ui.print(\"Crapdoodledy, I don\u0027t know what that means man\");","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"jugheadjones10"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"jugheadjones10"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":118,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugheadjones10":118}},{"path":"src/test/java/yj/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package yj;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public void parseToDoCommand_validToDo_correctParse() {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        String input \u003d \"todo return book\";","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"        String result \u003d Parser.parseToDoCommand(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"return book\", result);","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"    public void parseDeadlineCommand_validDeadline_correctParse() {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        String input \u003d \"return book /by 2/12/2019 1800\";","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"        Map\u003cString, String\u003e result \u003d Parser.parseDeadlineCommand(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"return book\", result.get(\"description\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"2/12/2019 1800\", result.get(\"by\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"    public void parseEventCommand_validEvent_correctParse() {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        String input \u003d \"project meeting /from 2/12/2019 1800 /to 2/12/2019 1900\";","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        Map\u003cString, String\u003e result \u003d Parser.parseEventCommand(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"project meeting\", result.get(\"description\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"2/12/2019 1800\", result.get(\"from\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        assertEquals(\"2/12/2019 1900\", result.get(\"to\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"jugheadjones10":33}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"D | 1 | deadline fwef | 12/12/2000 1400","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"D | 0 | deadline wefwef wefwefwe | 1/1/2000 1200","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"E | 1 | event wefwe | 12/12/2000 1200 | 13/10/2002 1300","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"T | 0 | he","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"jugheadjones10":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"todo cny dinner","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"deadline nus hw /by 23rd Jan","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"even cny dinnerzzzzz /from 3pm /to 7pm","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"event cny dinnerrzzz /from 3pm /to 8pm","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"bye","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jugheadjones10":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"java -classpath ../bin YJ \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jugheadjones10":1,"-":37}}]
