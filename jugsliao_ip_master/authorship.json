[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"jugsliao":21,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    private void flip() {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        db.flip();","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        return db;","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" * Main logic of Duke the chat bot which tracks the user\u0027s tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"public class Duke {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    public Duke() {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        storage \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            System.out.println(\"Unrecognized command\");","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":47}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"public class Launcher {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"            stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"                DialogBox.getDukeDialog(ui.showWelcomeMessage(), dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":56}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":" * Executes a command based on parsed inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"public class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    private String commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    private String taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    private String by;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    private String from;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    private String to;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    private int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    private enum CommandName {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Constructor for commands \u0027bye\u0027 and \u0027list\u0027.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    public Command(String commandName) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"     * Constructor for commands \"mark\", \"unmark\" and \"delete\".","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"     * @param index The index of the task in taskList to be executed on.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    public Command(String commandName, int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"     * Constructor for command \"todo\" and \"find\".","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"    public Command(String commandName, String taskName) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"     * Constructor for command \"deadline\".","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"     * @param by The date of the deadline, must be in yyyy-mm-dd format.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"    public Command(String commandName, String taskName, String by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"     * Constructor for command \"deadline\".","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"     * @param from The event start date.","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"     * @param to The event end date.","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    public Command(String commandName, String taskName, String from, String to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"     * Executes the given command.","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"     * Throws exception if the argument is not recognized or in a wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"     * @param tasks TaskList object containing the list of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"     * @param ui The Ui object to display messages.","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"     * @param storage The Storage object to save the task after execution.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        CommandName cn \u003d CommandName.valueOf(this.commandName.toUpperCase());","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"        Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"        switch(cn) {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"        case BYE:","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"            return ui.farewellMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"        case LIST:","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"            StringBuilder listOfTasks \u003d new StringBuilder(\"Here are your tasks: \\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"                listOfTasks.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"jugsliao"},"content":"            return listOfTasks.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"jugsliao"},"content":"        case MARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"            if (index + 1 \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"                throw new DukeException(\"cannot mark a number not in the list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"            task \u003d tasks.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"            task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"            if (index + 1 \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"jugsliao"},"content":"                throw new DukeException(\"cannot unmark a number not in the list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"            task \u003d tasks.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"jugsliao"},"content":"            task.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"jugsliao"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"jugsliao"},"content":"        case DELETE:","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"            task \u003d tasks.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"            tasks.delete(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"            return \"Noted. I\u0027ve removed this task: \\n\" + task +","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"jugsliao"},"content":"        case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"jugsliao"},"content":"            Todo todo \u003d new Todo(taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"            tasks.add(todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"            return \"Got it. I\u0027ve added this task: \\n\" + todo +","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"        case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"jugsliao"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"            StringBuilder matchingTasks \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"jugsliao"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"jugsliao"},"content":"                Task findTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"                if (findTask.contains(taskName)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"                    counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"                    matchingTasks.append(counter).append(\". \").append(findTask).append(\"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":155,"author":{"gitId":"jugsliao"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"jugsliao"},"content":"            return matchingTasks.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"jugsliao"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"            Deadline deadline \u003d new Deadline(taskName, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"jugsliao"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"jugsliao"},"content":"            return \"Got it. I\u0027ve added this task: \\n\" + deadline +","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"jugsliao"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"jugsliao"},"content":"        case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"jugsliao"},"content":"            Event event \u003d new Event(taskName, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"jugsliao"},"content":"            tasks.add(event);","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"jugsliao"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"jugsliao"},"content":"            return \"Got it. I\u0027ve added this task: \" + event +","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"                    \"\\now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"jugsliao"},"content":"     * Returns false by default and true if \"bye\" command is executed","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"jugsliao"},"content":"     * @return false by default and true if \"bye\" command is executed","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"jugsliao"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"jugsliao"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"jugsliao"},"content":"     * Returns command name for testing","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"jugsliao"},"content":"     * @return String of command name of the command object.","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"jugsliao"},"content":"        return \"commandName \u003d \" + commandName;","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":196}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * Deals with making sense of the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"     * Deals with making sense of the user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"     * Returns a command object after decoding the user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"     * Throws exception if user input is not a recognizable command.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"     * @param input Contains the command name or other information to create command object.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"     * @return The appropriate command object that can be executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"        String[] commandString \u003d input.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"bye\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"list\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"            int index \u003d Integer.parseInt(commandString[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"mark\", index);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"            int index \u003d Integer.parseInt(commandString[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"unmark\", index);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"            int index \u003d Integer.parseInt(commandString[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"delete\", index);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            String keyword \u003d input.substring(5);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"find\", keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            String taskName \u003d input.substring(5);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"todo\", taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"            int dashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"            String taskName \u003d input.substring(9, dashIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"            String by \u003d input.substring(dashIndex + 4);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"deadline\", taskName, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"            int firstDashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"            int secondDashIndex \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"            String taskName \u003d input.substring(6, firstDashIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"            String from \u003d input.substring(firstDashIndex + 6, secondDashIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"            String to \u003d input.substring(secondDashIndex + 4);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"            return new Command(\"event\", taskName, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":65}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":" * Exception class for exceptions related to duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"     * Constructor of DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"     * @param error The error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"        super(error);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"jugsliao":15}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import java.io.EOFException;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import java.io.File;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":" * Stores and loads tasks from a text file.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    private String filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     * @param filePath The path of where tasks objects are stored.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"     * Loop through taskList and store each task object into a file.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     * @param taskList TaskList object containing the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    //Solution below adapted from https://www.youtube.com/watch?v\u003dTkC3sZxW2wY\u0026list\u003dLL\u0026index\u003d8","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"                oos.writeObject(taskList.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"     * Loop through all objects in the file and stores each into an arrayList to be returned.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"     * If file has not been created yet, create the file for future use.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"     * @return ArrayList of task objects that are read from a text file.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"                FileInputStream fis \u003d new FileInputStream(this.filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"                Object o;","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"                while (true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"                    try {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"                        o \u003d ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"                        if (o instanceof Task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"                            tasks.add((Task) o);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"                        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"                            System.out.println(\"Object is not a task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"                    } catch (EOFException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"                        System.out.println(\"what happened\");","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"                        break;","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"                ois.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"                System.out.println(\"Unable to create new file\");","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"jugsliao":90}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":" * Class for deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"     * Constructor for deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"     * Input of string deadline is parsed as a LocalDate object.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"     * String deadline must be in YYYY-MM-DD format or exception is thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"     * @param deadline The date of the deadline of task, must be in YYYY-MM-DD format.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    public Deadline(String taskName, String deadline) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"            throw new DukeException(\"Invalid date format, please input as YYYY-MM-DD\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Returns string representation of the deadline task and the status of it.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     * Deadline format is represented as MMM dd yyyy.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     * @return String representation of the task and the marked status.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        DateTimeFormatter newFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline.format(newFormat) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugsliao":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":" * Class for event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"    private String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"    private String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"     * @param from The start date of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"     * @param to The end date of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     * Returns string representation of the task and its status.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     * @return String representation of the task and the marked status.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugsliao":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * Class for task object.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"    private String taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"    private boolean done;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"     * Unmark the task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"     * Returns true if taskName contains keyword and false otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"     * @return True if taskName contains keyword and false otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        return this.taskName.contains(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"     * Returns string representation of the task and its status.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"     * @return String representation of the task and the marked status.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        if (this.done) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugsliao":58}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":" * Class that contains the list of task objects.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"     * @param tasks An ArrayList of task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"     * Takes in an integer and outputs the task object at that index.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"     * @param index An ArrayList of task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * @return The Task at the index of the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"     * Takes in a task object and append it to the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"     * @param task The task object to be put into the tasks list.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"     * Takes in an integer and deletes the task object at that index.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"     * @param index The index of the task in the list of tasks to be deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"     * Returns the size of the tasks list.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"     * @return The size of the tasks list.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"    public int size() {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"     * Returns string representation of the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"     * @return String representation of the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        return this.tasks.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":" * Class for Todo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"        super(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"     * Returns string representation of the task and its status.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"     * @return String representation of the task and the marked status.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugsliao":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"        return \"Hello, I am Duke. \\nWhat can I do for you?\";","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"     * Prints farewell message when user exits.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    public String farewellMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"\u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"\u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jugsliao":19}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"    public void listTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"        Command listCommand \u003d new Command(\"list\");","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Parser.parse(\"list\").toString(), listCommand.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    public void deleteTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        Command deleteCommand \u003d new Command(\"delete\", 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Parser.parse(\"delete 1\").toString(), deleteCommand.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"    public void addToDoTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"        Deadline task \u003d new Deadline(\"Finish cs2107 tutorial\", \"2023-01-29\");","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[D][ ] Finish cs2107 tutorial(by: Jan 29 2023)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    public void markTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        Deadline task \u003d new Deadline(\"Finish cs2107 tutorial\", \"2023-01-29\");","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[D][X] Finish cs2107 tutorial(by: Jan 29 2023)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    public void unmarkTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        Deadline task \u003d new Deadline(\"Finish cs2107 tutorial\", \"2023-01-29\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        task.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[D][ ] Finish cs2107 tutorial(by: Jan 29 2023)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"    public void addToDoTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"        Event task \u003d new Event(\"project meeting\", \"Saturday 3pm\", \"4pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[E][ ] project meeting(from: Saturday 3pm to: 4pm)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"        Event task \u003d new Event(\"project meeting\", \"Saturday 3pm\", \"4pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[E][X] project meeting(from: Saturday 3pm to: 4pm)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"        Event task \u003d new Event(\"project meeting\", \"Saturday 3pm\", \"4pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        task.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[E][ ] project meeting(from: Saturday 3pm to: 4pm)\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":27}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"    public void addToDoTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"        Todo task \u003d new Todo(\"Bench press 100kg\");","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[T][ ] Bench press 100kg\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"        Todo task \u003d new Todo(\"Bench press 100kg\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[T][X] Bench press 100kg\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"        Todo task \u003d new Todo(\"Bench press 100kg\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        task.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        task.unmark();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        assertEquals(\"[T][ ] Bench press 100kg\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jugsliao":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jugsliao":11}},{"path":"tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"jugsliao":0}}]
