[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"T | 0 | 123","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"E | 0 | 123 | 1222 | 12222","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"T | 0 | 111","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jundatan":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is for the Deadlines Task added by the User.","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Deadline.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     * @param by The deadline of the deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" )\";","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":35}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is the main class for the duke ip.","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public enum Commands {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        bye,","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        mark,","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        unmark,","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        list,","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        todo,","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        deadline,","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        event,","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        delete","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        //Scanner to scan user input.","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        // User input.","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        // Description of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        //Storage for the list function.","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        //Counter to count the number of items in the list.","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        //Logo of Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        //Start of program.","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"            counter \u003d readAddFileContents(storage, \"data/duke.txt\");","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        while(true) {","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"            description \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"            try {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"                Commands userCommand \u003d checkCommand(inputArr[0]);","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"                switch(userCommand) {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"                    case bye:","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"                    case mark:","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"                        storage.get(Integer.parseInt(inputArr[1]) - 1).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"                        System.out.println(storage.get(Integer.parseInt(inputArr[1]) - 1).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"                    case unmark:","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-15"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"                        storage.get(Integer.parseInt(inputArr[1]) - 1).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"                        System.out.println(storage.get(Integer.parseInt(inputArr[1]) - 1).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"                    case list:","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"                        int numbering \u003d 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"                        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"                            System.out.println(numbering + \". \" + storage.get(i).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"                            numbering++;","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"                    case todo:","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"                        for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"                            description \u003d description + inputArr[i];","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"                            if (i !\u003d inputArr.length - 1) description +\u003d \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"                        storage.add(new Todo(checkDescription(description, \"todo\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"                        System.out.println(storage.get(counter).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"                        counter++;","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Now you have \" + counter + \" task(s) in the list.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"                    case deadline:","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"                        String deadline \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"                        for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"                            if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-15"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"                                i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"                                while (i \u003c inputArr.length) {","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"                                    deadline +\u003d inputArr[i];","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"                                    if (i !\u003d inputArr.length - 1) deadline +\u003d \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"                                    i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                                }","lastModifiedDate":"2023-01-15"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"                                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"                            }","lastModifiedDate":"2023-01-15"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"                            description \u003d description + inputArr[i] + \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"                        storage.add(new Deadline(checkDescription(description, \"deadline\"),","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"                                checkTime(deadline, \"deadline\", \"by\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"                        System.out.println(storage.get(counter).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"                        counter++;","lastModifiedDate":"2023-01-15"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Now you have \" + counter + \" task(s) in the list.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"                    case event:","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"                        String from \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"                        String to \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"                        for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"                            if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-15"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"                                i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"                                while (i \u003c inputArr.length) {","lastModifiedDate":"2023-01-15"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"                                    if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-15"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"                                        i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                                        while (i \u003c inputArr.length) {","lastModifiedDate":"2023-01-15"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"                                            to +\u003d inputArr[i];","lastModifiedDate":"2023-01-15"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"                                            if (i !\u003d inputArr.length - 1) to +\u003d \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"                                            i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"                                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"                                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"                                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"                                    from +\u003d inputArr[i] + \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"                                    i++;","lastModifiedDate":"2023-01-15"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"                                }","lastModifiedDate":"2023-01-15"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"                                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"                            }","lastModifiedDate":"2023-01-15"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"                            description \u003d description + inputArr[i] + \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"                        storage.add(new Event(checkDescription(description, \"event\"),","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"                                checkTime(from, \"event\", \"from\"),","lastModifiedDate":"2023-01-16"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"                                checkTime(to, \"event\", \"to\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"                        System.out.println(storage.get(counter).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"                        counter++;","lastModifiedDate":"2023-01-15"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Now you have \" + counter + \" task(s) in the list.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"                    case delete:","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"                        Task deleted \u003d storage.remove(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"                        counter--;","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"                        System.out.println(deleted.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"                        System.out.println(\"Now you have \" + counter + \" task(s) in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"                    writeToFile(storage, \"data/duke.txt\");","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"                if(userCommand.name().equals(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"            } catch (DukeException e) { // Catches the DukeException.","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"     * Checks for an empty description.","lastModifiedDate":"2023-01-16"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"     * @param str The description of the task.","lastModifiedDate":"2023-01-16"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"     * @param task The type of task.","lastModifiedDate":"2023-01-16"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"     * @return The description of the task if it is not empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"    public static String checkDescription(String str, String task) throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"        if(str.equals(\"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\";","lastModifiedDate":"2023-01-16"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"        return str;","lastModifiedDate":"2023-01-16"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"     * Checks for an empty time.","lastModifiedDate":"2023-01-16"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"     * @param str The time for that specific task type.","lastModifiedDate":"2023-01-16"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"     * @param task The current task.","lastModifiedDate":"2023-01-16"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"     * @param type The type of timeline from the task. (ie, by, from, to).","lastModifiedDate":"2023-01-16"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"     * @return The time if it is not empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If there is an empty time.","lastModifiedDate":"2023-01-16"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"    public static String checkTime(String str, String task, String type) throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"        if(str.equals(\"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"☹ OOPS!!! The /\" + type + \" part of a \" + task + \" cannot be empty.\";","lastModifiedDate":"2023-01-16"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"        return str;","lastModifiedDate":"2023-01-16"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"     * Checks for an invalid command.","lastModifiedDate":"2023-01-16"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"     * @return The command for enum Commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If there is an invalid Command.","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":215,"author":{"gitId":"jundatan"},"content":"    public static Commands checkCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"jundatan"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"jundatan"},"content":"        for(Commands c : Commands.values()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"jundatan"},"content":"            if(command.equals(c.name())) flag \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"jundatan"},"content":"        if(flag) {","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":222,"author":{"gitId":"jundatan"},"content":"                    + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-16"},{"lineNumber":223,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":224,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"        return Commands.valueOf(command);","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":228,"author":{"gitId":"jundatan"},"content":"    private static int readAddFileContents(List\u003cTask\u003e storage, String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-21"},{"lineNumber":229,"author":{"gitId":"jundatan"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":230,"author":{"gitId":"jundatan"},"content":"        Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-21"},{"lineNumber":231,"author":{"gitId":"jundatan"},"content":"        while(fileScanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":232,"author":{"gitId":"jundatan"},"content":"            String[] currArray \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-01-21"},{"lineNumber":233,"author":{"gitId":"jundatan"},"content":"            boolean mark \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":234,"author":{"gitId":"jundatan"},"content":"            if(currArray[1].trim().equals(\"1\")) mark \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":235,"author":{"gitId":"jundatan"},"content":"            if(currArray[0].trim().equals(\"T\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":236,"author":{"gitId":"jundatan"},"content":"                Todo t \u003d new Todo(currArray[2]);","lastModifiedDate":"2023-01-21"},{"lineNumber":237,"author":{"gitId":"jundatan"},"content":"                if(mark) {","lastModifiedDate":"2023-01-21"},{"lineNumber":238,"author":{"gitId":"jundatan"},"content":"                    t.mark();","lastModifiedDate":"2023-01-21"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"                storage.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"            } else if(currArray[0].trim().equals(\"D\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"                Deadline d \u003d new Deadline(currArray[2], currArray[3]);","lastModifiedDate":"2023-01-21"},{"lineNumber":243,"author":{"gitId":"jundatan"},"content":"                if(mark) {","lastModifiedDate":"2023-01-21"},{"lineNumber":244,"author":{"gitId":"jundatan"},"content":"                    d.mark();","lastModifiedDate":"2023-01-21"},{"lineNumber":245,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"                storage.add(d);","lastModifiedDate":"2023-01-21"},{"lineNumber":247,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":248,"author":{"gitId":"jundatan"},"content":"                Event e \u003d new Event(currArray[2], currArray[3], currArray[4]);","lastModifiedDate":"2023-01-21"},{"lineNumber":249,"author":{"gitId":"jundatan"},"content":"                if(mark) {","lastModifiedDate":"2023-01-21"},{"lineNumber":250,"author":{"gitId":"jundatan"},"content":"                    e.mark();","lastModifiedDate":"2023-01-21"},{"lineNumber":251,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":252,"author":{"gitId":"jundatan"},"content":"                storage.add(e);","lastModifiedDate":"2023-01-21"},{"lineNumber":253,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":254,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":255,"author":{"gitId":"jundatan"},"content":"        return storage.size();","lastModifiedDate":"2023-01-21"},{"lineNumber":256,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":257,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":258,"author":{"gitId":"jundatan"},"content":"    private static void writeToFile(List\u003cTask\u003e storage, String filePath) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"        for(Task element : storage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"            String mark \u003d \"0\";","lastModifiedDate":"2023-01-21"},{"lineNumber":262,"author":{"gitId":"jundatan"},"content":"            if(element.getStatusIcon().equals(\"X\")) mark \u003d \"1\";","lastModifiedDate":"2023-01-21"},{"lineNumber":263,"author":{"gitId":"jundatan"},"content":"            if(element instanceof Todo) {","lastModifiedDate":"2023-01-21"},{"lineNumber":264,"author":{"gitId":"jundatan"},"content":"                fw.write(\"T | \" + mark + \" | \" + element.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":265,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":266,"author":{"gitId":"jundatan"},"content":"            if(element instanceof Deadline) {","lastModifiedDate":"2023-01-21"},{"lineNumber":267,"author":{"gitId":"jundatan"},"content":"                fw.write(\"D | \" + mark + \" | \" + element.description + \" | \" + ((Deadline) element).by);","lastModifiedDate":"2023-01-21"},{"lineNumber":268,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":269,"author":{"gitId":"jundatan"},"content":"            if(element instanceof Event){","lastModifiedDate":"2023-01-21"},{"lineNumber":270,"author":{"gitId":"jundatan"},"content":"                fw.write(\"E | \" + mark + \" | \" + element.description + \" | \" + ((Event) element).from + \" | \" + ((Event) element).to);","lastModifiedDate":"2023-01-21"},{"lineNumber":271,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":272,"author":{"gitId":"jundatan"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":273,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":274,"author":{"gitId":"jundatan"},"content":"        fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jundatan":265,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is for all the Dukes Exception.","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"     * @param message The message to be shown when there is an Exception.","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"        super(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jundatan":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is for the Events Task added by the User.","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    protected String from;","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    protected String to;","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Event object.","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     * @param from The start timeline of the Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * @param to The end timeline of the Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Event task.","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Event task.","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + from + \" to: \" + to + \" )\";","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":34}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is for the Task added by the User.","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the object Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * Method to get the status of the Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @return A string indicating X for done and space for not done.","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"     * Setter method to set the Task to marked.","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     * Setter method to set the Task to unmarked.","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     * Override toString method to get the icon and description of this object.","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"     * @return The String icon and description of this object.","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":52}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * Author: Tan Jun Da","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" * Student Number: A0234893U","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":" * This class is for the Todos Task added by the User.","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class.","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"event meeting /from Mon 3pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":8}}]
