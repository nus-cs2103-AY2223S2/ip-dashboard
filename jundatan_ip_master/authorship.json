[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jundatan":20,"-":40}},{"path":"src/main/java/seedu/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * @param text The text to be set in the dialog box.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * @param img The image to be set in the dialog box.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"     * Factory method for the constructor for user dialog.","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"     * @param text The text the user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"     * @param img The image of the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"     * @return The DialogBox of the user dialog.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     * Factory method for the constructor for duke dialog.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"     * @param text The text the duke output.","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     * @param img The image of duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     * @return The DialogBox of the duke dialog.","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":86}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":" * Represents the main program of Duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    private static final String EXIT_FIND_MESSAGE \u003d \"Exiting out of \\\"found\\\" list\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private static boolean isFind \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    private static boolean isDisplayList \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private static TaskList tempTasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"     * Represents the set of commands by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    protected enum Commands {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        bye,","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        mark,","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"        unmark,","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        list,","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        todo,","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        deadline,","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        event,","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        delete,","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        tag,","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"        find,","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        originalList","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     * @param filepath The file path for the data stored in the txt file.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        assert filepath.equals(\"\") : \"File path should not be empty\";","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        if (!isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"                tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"                ui.showLoadingError();","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"     * The start of the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"    public String run(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        // Description of the task.","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"        // Return of the final String to add.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        String dukeText \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        Parser userParse \u003d new Parser(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"            Commands userCommand \u003d userParse.checkCommand(userParse.command);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"            switch(userCommand) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"            case bye:","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d byeCommand(ui, storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"            case mark:","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d markCommand(ui, userParse, storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"            case unmark:","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d unmarkCommand(ui, userParse, storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"            case list:","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d listCommand(ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"            case todo:","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d todoCommand(ui, storage, userParse, description);","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"            case deadline:","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d deadlineCommand(ui, storage, userParse, description);","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"            case event:","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d eventCommand(ui, storage, userParse, description);","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"            case delete:","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d deleteCommand(ui, storage, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"            case tag:","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d addTagCommand(ui, storage, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"            case find:","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d findCommand(ui, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"            case originalList:","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"                dukeText +\u003d originalListCommand(ui, storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"            default:","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"            dukeText +\u003d e.getMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        return dukeText;","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"     * Returns the duke response.","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"     * @return The response of Duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"        Duke currDuke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"        return \"Duke: \\n\" + currDuke.run(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"     * Returns the list of Commands.","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"     * @return A String of List of commands.","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"    public static String getCommands() {","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"        String commandsMessage;","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        for (Commands curr : Commands.values()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"            commandList.add(curr.name() + \"\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"        commandsMessage \u003d commandList.stream().collect(Collectors.joining());","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"        return commandsMessage;","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"     * Returns the exit find list message and storing some variable settings.","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"     * @return The exit find list message.","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"    public static String exitFindMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"        isFind \u003d false;","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"        tempTasks \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"        return EXIT_FIND_MESSAGE;","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"     * Returns delete message for find command.","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"     * @param ui The Ui of the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"     * @return The string message for the deleted task while in find command.","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if there is an out of bound delete index or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"    public static String deleteInFindMessage(Parser userParse, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"        Task deleted;","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        deleted \u003d tempTasks.delete(userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 0; i \u003c tasks.tasksCounter; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"            if (deleted \u003d\u003d tasks.tasksList.get(i)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"                tasks.tasksList.remove(deleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"                tasks.tasksCounter--;","lastModifiedDate":"2023-02-05"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"        return ui.deleteMessage(tempTasks, deleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"     * Returns a bye message. Stores the required data.","lastModifiedDate":"2023-02-05"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"     * @param storage The Storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"     * @return The bye message.","lastModifiedDate":"2023-02-05"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if filepath cannot be found.","lastModifiedDate":"2023-02-05"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"    public static String byeCommand(Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"        return ui.bye();","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"     * Returns a marked message. Stores the required data.","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"     * @return The marked message for the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if mark index is out of bound or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"    public static String markCommand(Ui ui, Parser userParse, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"        int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"        if (!isDisplayList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"            isDisplayList \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"            ui.noListError(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"            TaskList marked \u003d tempTasks.mark(userParse);","lastModifiedDate":"2023-02-01"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.markDisplay(marked, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"            for (int i \u003d 0; i \u003c tasks.tasksCounter; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"                if (marked.tasksList.get(userIndex)","lastModifiedDate":"2023-02-01"},{"lineNumber":213,"author":{"gitId":"jundatan"},"content":"                        \u003d\u003d tasks.tasksList.get(i)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":214,"author":{"gitId":"jundatan"},"content":"                    tasks.tasksList.get(i).mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.markDisplay(tasks.mark(userParse), userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":219,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":222,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":223,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":224,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"     * Returns an unmarked message. Stores the required data.","lastModifiedDate":"2023-02-05"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":227,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":228,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":229,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":230,"author":{"gitId":"jundatan"},"content":"     * @return The unmarked message for the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":231,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if unmark index is out of bound or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":232,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":233,"author":{"gitId":"jundatan"},"content":"    public static String unmarkCommand(Ui ui, Parser userParse, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":234,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":235,"author":{"gitId":"jundatan"},"content":"        int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":236,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":237,"author":{"gitId":"jundatan"},"content":"        if (!isDisplayList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"jundatan"},"content":"            isDisplayList \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"            ui.noListError(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"jundatan"},"content":"            TaskList unmarked \u003d tempTasks.unmark(userParse);","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.unmarkDisplay(unmarked, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":245,"author":{"gitId":"jundatan"},"content":"            for (int i \u003d 0; i \u003c tasks.tasksCounter; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"                if (unmarked.tasksList.get(userIndex)","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"jundatan"},"content":"                        \u003d\u003d tasks.tasksList.get(i)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":248,"author":{"gitId":"jundatan"},"content":"                    tasks.tasksList.get(i).unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":249,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":250,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":251,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":252,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.unmarkDisplay(tasks.unmark(userParse), userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":253,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":254,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":255,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":256,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":257,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":258,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"     * Returns the list messages for the list command.","lastModifiedDate":"2023-02-05"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":262,"author":{"gitId":"jundatan"},"content":"     * @return The list message.","lastModifiedDate":"2023-02-05"},{"lineNumber":263,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":264,"author":{"gitId":"jundatan"},"content":"    public static String listCommand(Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":265,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":266,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":267,"author":{"gitId":"jundatan"},"content":"        isDisplayList \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":268,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":269,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"Here are the list of found tasks:\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":270,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.list(tempTasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":271,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":272,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"Here are the list of tasks:\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":273,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.list(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":274,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":275,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":276,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":277,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":278,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":279,"author":{"gitId":"jundatan"},"content":"     * Returns the todo command message. Add todo tasks to the taskList and store it.","lastModifiedDate":"2023-02-05"},{"lineNumber":280,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":281,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":282,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":283,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":284,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":285,"author":{"gitId":"jundatan"},"content":"     * @return The string of the todo message.","lastModifiedDate":"2023-02-05"},{"lineNumber":286,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if the todo command is empty or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":287,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":288,"author":{"gitId":"jundatan"},"content":"    public static String todoCommand(Ui ui, Storage storage, Parser userParse, String description)","lastModifiedDate":"2023-02-05"},{"lineNumber":289,"author":{"gitId":"jundatan"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":290,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":291,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":292,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":293,"author":{"gitId":"jundatan"},"content":"            message +\u003d exitFindMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":294,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":295,"author":{"gitId":"jundatan"},"content":"        tasks.addTodo(description, userParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":296,"author":{"gitId":"jundatan"},"content":"        message +\u003d ui.addTodoMessage(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":297,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":298,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":299,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":300,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":301,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":302,"author":{"gitId":"jundatan"},"content":"     * Returns the deadline command message. Add deadline tasks to the taskList and store it.","lastModifiedDate":"2023-02-05"},{"lineNumber":303,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":304,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":305,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":306,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":307,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":308,"author":{"gitId":"jundatan"},"content":"     * @return The string of the deadline message.","lastModifiedDate":"2023-02-05"},{"lineNumber":309,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if any part of the deadline command is empty or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":310,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":311,"author":{"gitId":"jundatan"},"content":"    public static String deadlineCommand(Ui ui, Storage storage, Parser userParse, String description)","lastModifiedDate":"2023-02-05"},{"lineNumber":312,"author":{"gitId":"jundatan"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":313,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":314,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":315,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":316,"author":{"gitId":"jundatan"},"content":"            message +\u003d exitFindMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":317,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":318,"author":{"gitId":"jundatan"},"content":"        tasks.addDeadline(description, userParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":319,"author":{"gitId":"jundatan"},"content":"        message +\u003d ui.addDeadlineMessage(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":320,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":321,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":322,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":323,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":324,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":325,"author":{"gitId":"jundatan"},"content":"     * Returns the event command message. Add event tasks to the taskList and store it.","lastModifiedDate":"2023-02-05"},{"lineNumber":326,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":327,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":328,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":329,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":330,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":331,"author":{"gitId":"jundatan"},"content":"     * @return The string of the event message.","lastModifiedDate":"2023-02-05"},{"lineNumber":332,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if any part of the event command is empty or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":333,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":334,"author":{"gitId":"jundatan"},"content":"    public static String eventCommand(Ui ui, Storage storage, Parser userParse, String description)","lastModifiedDate":"2023-02-05"},{"lineNumber":335,"author":{"gitId":"jundatan"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":336,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":337,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":338,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":339,"author":{"gitId":"jundatan"},"content":"            message +\u003d exitFindMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":340,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":341,"author":{"gitId":"jundatan"},"content":"        tasks.addEvent(description, userParse);","lastModifiedDate":"2023-01-24"},{"lineNumber":342,"author":{"gitId":"jundatan"},"content":"        message +\u003d ui.addEventMessage(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":343,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":344,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":345,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":346,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":347,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":348,"author":{"gitId":"jundatan"},"content":"     * Returns the deleted command message. Stores the new data into the txt file.","lastModifiedDate":"2023-02-05"},{"lineNumber":349,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":350,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":351,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":352,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":353,"author":{"gitId":"jundatan"},"content":"     * @return The string of the deleted command message.","lastModifiedDate":"2023-02-05"},{"lineNumber":354,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if there is no list command beforehand or filepath not found for storing.","lastModifiedDate":"2023-02-05"},{"lineNumber":355,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":356,"author":{"gitId":"jundatan"},"content":"    public static String deleteCommand(Ui ui, Storage storage, Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":357,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":358,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":359,"author":{"gitId":"jundatan"},"content":"        if (!isDisplayList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":360,"author":{"gitId":"jundatan"},"content":"            isDisplayList \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":361,"author":{"gitId":"jundatan"},"content":"            ui.noListError(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":362,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":363,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-01"},{"lineNumber":364,"author":{"gitId":"jundatan"},"content":"            message +\u003d deleteInFindMessage(userParse, ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":365,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":366,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.deleteMessage(tasks, tasks.delete(userParse));","lastModifiedDate":"2023-02-05"},{"lineNumber":367,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":368,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":369,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":371,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":372,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":373,"author":{"gitId":"jundatan"},"content":"     * Returns the find message for the find command.","lastModifiedDate":"2023-02-05"},{"lineNumber":374,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":375,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":376,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":377,"author":{"gitId":"jundatan"},"content":"     * @return The string of the find lists.","lastModifiedDate":"2023-02-05"},{"lineNumber":378,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":379,"author":{"gitId":"jundatan"},"content":"    public static String findCommand(Ui ui, Parser userParse) {","lastModifiedDate":"2023-02-05"},{"lineNumber":380,"author":{"gitId":"jundatan"},"content":"        isDisplayList \u003d true;","lastModifiedDate":"2023-02-05"},{"lineNumber":381,"author":{"gitId":"jundatan"},"content":"        isFind \u003d true;","lastModifiedDate":"2023-02-05"},{"lineNumber":382,"author":{"gitId":"jundatan"},"content":"        tempTasks \u003d tasks.find(userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":383,"author":{"gitId":"jundatan"},"content":"        return ui.findMessage(tempTasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":384,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":385,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":386,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":387,"author":{"gitId":"jundatan"},"content":"     * Returns the original list. Stores the original list into the txt file.","lastModifiedDate":"2023-02-05"},{"lineNumber":388,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":389,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":390,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":391,"author":{"gitId":"jundatan"},"content":"     * @return The string for the original list.","lastModifiedDate":"2023-02-05"},{"lineNumber":392,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if there is no file path.","lastModifiedDate":"2023-02-05"},{"lineNumber":393,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":394,"author":{"gitId":"jundatan"},"content":"    public static String originalListCommand(Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":395,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":396,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":397,"author":{"gitId":"jundatan"},"content":"        isFind \u003d false;","lastModifiedDate":"2023-02-05"},{"lineNumber":398,"author":{"gitId":"jundatan"},"content":"        tempTasks \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":399,"author":{"gitId":"jundatan"},"content":"        message +\u003d \"Here are the list of tasks:\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":400,"author":{"gitId":"jundatan"},"content":"        message +\u003d ui.list(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":401,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":402,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":403,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":404,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":405,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":406,"author":{"gitId":"jundatan"},"content":"     * Returns the tag message for the command tag.","lastModifiedDate":"2023-02-05"},{"lineNumber":407,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":408,"author":{"gitId":"jundatan"},"content":"     * @param ui The UI for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":409,"author":{"gitId":"jundatan"},"content":"     * @param storage The storage for the program.","lastModifiedDate":"2023-02-05"},{"lineNumber":410,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":411,"author":{"gitId":"jundatan"},"content":"     * @return The string of the tag message after tagging.","lastModifiedDate":"2023-02-05"},{"lineNumber":412,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if there is an invalid command index","lastModifiedDate":"2023-02-05"},{"lineNumber":413,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":414,"author":{"gitId":"jundatan"},"content":"    public static String addTagCommand(Ui ui, Storage storage, Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":415,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":416,"author":{"gitId":"jundatan"},"content":"        int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":417,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":418,"author":{"gitId":"jundatan"},"content":"        if (!isDisplayList) {","lastModifiedDate":"2023-02-05"},{"lineNumber":419,"author":{"gitId":"jundatan"},"content":"            isDisplayList \u003d true;","lastModifiedDate":"2023-02-05"},{"lineNumber":420,"author":{"gitId":"jundatan"},"content":"            ui.noListError(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":421,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":422,"author":{"gitId":"jundatan"},"content":"        if (isFind) {","lastModifiedDate":"2023-02-05"},{"lineNumber":423,"author":{"gitId":"jundatan"},"content":"            TaskList marked \u003d tempTasks.tag(userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":424,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.tagDisplay(marked, userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":425,"author":{"gitId":"jundatan"},"content":"            for (int i \u003d 0; i \u003c tasks.tasksCounter; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":426,"author":{"gitId":"jundatan"},"content":"                if (marked.tasksList.get(userIndex)","lastModifiedDate":"2023-02-05"},{"lineNumber":427,"author":{"gitId":"jundatan"},"content":"                        \u003d\u003d tasks.tasksList.get(i)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":428,"author":{"gitId":"jundatan"},"content":"                    tasks.tasksList.get(i).addTag(marked.tasksList.get(userIndex));","lastModifiedDate":"2023-02-05"},{"lineNumber":429,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":430,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":431,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":432,"author":{"gitId":"jundatan"},"content":"            message +\u003d ui.tagDisplay(tasks.tag(userParse), userParse);","lastModifiedDate":"2023-02-05"},{"lineNumber":433,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":434,"author":{"gitId":"jundatan"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":435,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":436,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jundatan":434,"-":3}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" * Represents any Duke Exceptions.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"     * @param message The message to be shown when there is a DukeException.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"        super(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"jundatan":21}},{"path":"src/main/java/seedu/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * This class represents the Launcher.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":17}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":36}},{"path":"src/main/java/seedu/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * Initialization of the application. Bind the scroll pane and also print out the welcome message.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.welcome(Duke.getCommands()), dukeImage));","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     * Setter for the Duke d.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     * @param d The Duke object to be set in d.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"                DialogBox.getUserDialog(\"User:\\n\" + input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":67}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":" * Represents the String of input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object corresponds to an input.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * e.g., \u003ccode\u003e\"todo read books\"\u003c/code\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    protected String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    protected String[] inputArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    protected String command;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     * Constructor for the Parser class.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"        this.inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        this.command \u003d this.inputArr[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"     * Returns the String description of the task from the input.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"     * If the description is empty, throw a DukeException.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     * @param str The description and name of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If str is empty.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    public String checkDescription(String... str) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"        if (str[0].equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"OOPS!!! The description of a \" + str[1] + \" cannot be empty.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"            if (str.length \u003e 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"                for (int i \u003d 2; i \u003c str.length; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"                    message +\u003d str[i] + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        return str[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     * Returns the String time of the task from the input.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     * If the time is empty, throw a DukeException.","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * @param str The time, type and name of the task. (extra stuff will be added to the message)","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     * @return The time of the task in String.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If str is empty.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"    public String checkTime(String... str) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"        if (str[0].equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"OOPS!!! The /\" + str[2] + \" part of a \" + str[1] + \" cannot be empty.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"            if (str.length \u003e 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"                for (int i \u003d 2; i \u003c str.length; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"                    message +\u003d str[i] + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        return str[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"     * Returns the Duke command of the task from the input.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * If the command is unknown, throw a DukeException.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"     * @param command The command from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"     * @return The Duke command.","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If command is unknown.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    public Duke.Commands checkCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        for (Duke.Commands c : Duke.Commands.values()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"            if (command.equals(c.name())) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"                flag \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"        if (flag) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"            String message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"        return Duke.Commands.valueOf(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"     * Returns the String for find.","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"     * @return The String to match in find.","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    public String findMatchDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"            temp \u003d temp + inputArr[i];","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"        return temp.trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"     * Check if the Index is valid.","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"     * @param userIndex The user index input for the command.","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"     * @return The valid index input","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if the index input is not a number.","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"    public int checkValidIndex(String userIndex) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"            int index \u003d Integer.parseInt(userIndex);","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"            return index;","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(\"Index should be a number!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jundatan":122}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":" * Represents the storage for the Duke program.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":" * the filepath of the text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * @param filePath The filepath to the storage text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     * Returns a List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     * If file not found, throw DukeException.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     * @return The List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If file not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"            return readAddFileContents(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * Write to the storage text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"     * @param tasks The tasks that need to be written.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If no such text file is found.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    public void write(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"            writeToFile(tasks.tasksList, \"data/duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"     * Writes to text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"     * If file not found, throw IOException.","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"     * @param storage","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"     * @param filePath","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * @throws IOException If no such text file is found.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"    public void writeToFile(List\u003cTask\u003e storage, String filePath) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"        assert filePath !\u003d \"\" : \"File Path should not be empty!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        String tagsString \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        for (Task element : storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"            String mark \u003d \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"            if (element.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"                mark \u003d \"1\";","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"            if (element.getTags().size() !\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"                for (String curr : element.getTags()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"                    tagsString +\u003d \" | \" + curr;","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"            if (element instanceof Todo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"                fw.write(\"T | \" + mark + \" | \" + element.getDescription() + tagsString);","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"            if (element instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"                fw.write(\"D | \" + mark + \" | \" + element.getDescription() + \" | \" + ((Deadline) element).getBy()","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"                        + tagsString);","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"            if (element instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"                fw.write(\"E | \" + mark + \" | \" + element.getDescription() + \" | \"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"                        + ((Event) element).getFrom() + \" | \" + ((Event) element).getTo()","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"                        + tagsString);","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"        fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"     * Returns the List of tasks added from the text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"     * If file not found, throw FileNotFoundException.","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"     * @param filePath The filepath for the text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"     * @return The List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"     * @throws FileNotFoundException If file not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"    public List\u003cTask\u003e readAddFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"        assert filePath !\u003d \"\" : \"File Path should not be empty!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"        Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"            String[] currArray \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"            boolean mark \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"            if (currArray[1].trim().equals(\"1\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"                mark \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"            if (currArray[0].trim().equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"                Todo t \u003d new Todo(currArray[2].trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"                if (mark) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"                    t.mark();","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"                if (currArray.length \u003e 3) {","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"                    for (int i \u003d 3; i \u003c currArray.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"                        t.addTag(currArray[i].trim());","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"                    }","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"                storage.add(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"            } else if (currArray[0].trim().equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"                Deadline d \u003d new Deadline(currArray[2], currArray[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"                if (mark) {","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"                    d.mark();","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"                if (currArray.length \u003e 3) {","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"                    for (int i \u003d 3; i \u003c currArray.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"                        d.addTag(currArray[i].trim());","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"                    }","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"                storage.add(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"                Event e \u003d new Event(currArray[2], currArray[3], currArray[4]);","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"                if (mark) {","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"                    e.mark();","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"                if (currArray.length \u003e 3) {","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"                    for (int i \u003d 3; i \u003c currArray.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"                        e.addTag(currArray[i].trim());","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"                    }","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"                storage.add(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"        return storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jundatan":164}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":" * Represents a taskList in an ArrayList format.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":" * an ArrayList.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    protected List\u003cTask\u003e tasksList;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    protected int tasksCounter;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     * @param tasksList The List of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    public TaskList(List\u003cTask\u003e tasksList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        this.tasksCounter \u003d tasksList.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"        this.tasksCounter \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     * Constructor for the Copy of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"     * @param original The original TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"    public TaskList(TaskList original) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e(original.tasksList);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"        this.tasksCounter \u003d original.tasksCounter;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"     * Returns a TaskList after marking a specified task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"     * @return The TaskList with the specified marked task.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if user index is more than the list or command index is not a number.","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"    public TaskList mark(Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"            int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"            if (userIndex \u003e\u003d tasksCounter || userIndex \u003c 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"                String message \u003d \"There is no such index.\\n Please try again with the correct indexing.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"                throw new DukeException(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"                tasksList.get(userIndex).mark();","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"                return this;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     * Returns a TaskList after marking a specified task as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"     * @return The TaskList with the specified unmarked task.","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if user index is more than the list or command index is not a number.","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"    public TaskList unmark(Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"            int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"            if (userIndex \u003e\u003d tasksCounter || userIndex \u003c 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"                String message \u003d \"There is no such index.\\n Please try again with the correct indexing.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"                throw new DukeException(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"                tasksList.get(userIndex).unmark();","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"                return this;","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"     * Add a Todo task to the TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If there is an empty description.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"    public void addTodo(String description, Parser userParse) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"        int inputArrLength \u003d userParse.inputArr.length;","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        String[] inputArr \u003d userParse.inputArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 1; i \u003c inputArrLength; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"            description \u003d description + inputArr[i];","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"            if (i !\u003d inputArrLength - 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"                description +\u003d \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"            tasksList.add(new Todo(userParse.checkDescription(description, \"todo\")));","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"            tasksCounter++;","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"     * Add a Deadline task to the TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If there is an empty description or time.","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"    public void addDeadline(String description, Parser userParse) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"        String deadline \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"        int inputArrLength \u003d userParse.inputArr.length;","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"        String[] inputArr \u003d userParse.inputArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 1; i \u003c inputArrLength; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"            if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"                i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"                while (i \u003c inputArrLength) {","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"                    deadline +\u003d inputArr[i];","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"                    if (i !\u003d inputArrLength - 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"                        deadline +\u003d \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"                    i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"            description \u003d description + inputArr[i] + \" \";","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"            tasksList.add(new Deadline(userParse.checkDescription(description, \"deadline\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"                    userParse.checkTime(deadline, \"deadline\", \"by\")));","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"            tasksCounter++;","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"     * Add an Event task to the TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException If there is an empty description or time.","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"    public void addEvent(String description, Parser userParse) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"        int inputArrLength \u003d userParse.inputArr.length;","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"        String[] inputArr \u003d userParse.inputArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 1; i \u003c inputArrLength; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"            if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"                i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"                while (i \u003c inputArrLength) {","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"                    if (inputArr[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"                        i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"                        while (i \u003c inputArr.length) {","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"                            to +\u003d inputArr[i];","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"                            if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"                                to +\u003d \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"                            }","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"                            i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"                    from +\u003d inputArr[i] + \" \";","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"                    i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"            description \u003d description + inputArr[i] + \" \";","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"            tasksList.add(new Event(userParse.checkDescription(description, \"event\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"                    userParse.checkTime(from, \"event\", \"from\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"jundatan"},"content":"                    userParse.checkTime(to, \"event\", \"to\")));","lastModifiedDate":"2023-01-24"},{"lineNumber":196,"author":{"gitId":"jundatan"},"content":"            tasksCounter++;","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":200,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":202,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"jundatan"},"content":"     * Returns the Task that has been deleted from the TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"jundatan"},"content":"     * @return The Task deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if user index is more than the list or command index is not a number.","lastModifiedDate":"2023-02-05"},{"lineNumber":208,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"jundatan"},"content":"    public Task delete(Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":210,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"jundatan"},"content":"            int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":212,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":213,"author":{"gitId":"jundatan"},"content":"            if (userIndex \u003e\u003d tasksCounter || userIndex \u003c 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":214,"author":{"gitId":"jundatan"},"content":"                String message \u003d \"There is no such index.\\n Please try again with the correct indexing.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"jundatan"},"content":"                throw new DukeException(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"jundatan"},"content":"                String[] inputArr \u003d userParse.inputArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":218,"author":{"gitId":"jundatan"},"content":"                Task deleted \u003d tasksList.remove(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":219,"author":{"gitId":"jundatan"},"content":"                tasksCounter--;","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"jundatan"},"content":"                return deleted;","lastModifiedDate":"2023-01-24"},{"lineNumber":221,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":222,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":223,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-02-05"},{"lineNumber":224,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":225,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":226,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"jundatan"},"content":"     * Returns the TaskList for all possible match.","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"jundatan"},"content":"     * @return The TaskList for all possible match.","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"jundatan"},"content":"    public TaskList find(Parser userParse) {","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"jundatan"},"content":"        TaskList tempFind \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"jundatan"},"content":"        String toMatch \u003d userParse.findMatchDescription();","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"jundatan"},"content":"        for (Task curr : this.tasksList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"jundatan"},"content":"            if (curr.getDescription().contains(toMatch)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"jundatan"},"content":"                tempFind.tasksList.add(curr);","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"jundatan"},"content":"                tempFind.tasksCounter++;","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"jundatan"},"content":"        return tempFind;","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":245,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":246,"author":{"gitId":"jundatan"},"content":"     * Tag a tasks in the list with the tag description.","lastModifiedDate":"2023-02-05"},{"lineNumber":247,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":248,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":249,"author":{"gitId":"jundatan"},"content":"     * @return The tasks of tag items.","lastModifiedDate":"2023-02-05"},{"lineNumber":250,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if the command index is out of bounds or invalid number.","lastModifiedDate":"2023-02-05"},{"lineNumber":251,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":252,"author":{"gitId":"jundatan"},"content":"    public TaskList tag(Parser userParse) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":253,"author":{"gitId":"jundatan"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":254,"author":{"gitId":"jundatan"},"content":"            int userIndex \u003d userParse.checkValidIndex(userParse.inputArr[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":255,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":256,"author":{"gitId":"jundatan"},"content":"            if (userIndex \u003e\u003d tasksCounter || userIndex \u003c 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":257,"author":{"gitId":"jundatan"},"content":"                String message \u003d \"There is no such index.\\n Please try again with the correct indexing.\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":258,"author":{"gitId":"jundatan"},"content":"                throw new DukeException(message);","lastModifiedDate":"2023-02-05"},{"lineNumber":259,"author":{"gitId":"jundatan"},"content":"            } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":260,"author":{"gitId":"jundatan"},"content":"                String tagMessage \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":261,"author":{"gitId":"jundatan"},"content":"                for (int i \u003d 2; i \u003c userParse.inputArr.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":262,"author":{"gitId":"jundatan"},"content":"                    tagMessage +\u003d userParse.inputArr[i] + \" \";","lastModifiedDate":"2023-02-05"},{"lineNumber":263,"author":{"gitId":"jundatan"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":264,"author":{"gitId":"jundatan"},"content":"                tasksList.get(userIndex).addTag(userParse.checkDescription(tagMessage.trim()));","lastModifiedDate":"2023-02-05"},{"lineNumber":265,"author":{"gitId":"jundatan"},"content":"                return this;","lastModifiedDate":"2023-02-05"},{"lineNumber":266,"author":{"gitId":"jundatan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":267,"author":{"gitId":"jundatan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":268,"author":{"gitId":"jundatan"},"content":"            throw e;","lastModifiedDate":"2023-02-05"},{"lineNumber":269,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":270,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":271,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jundatan":271}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * Represents an Ui interface.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     * Welcome message.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    public String welcome(String commands) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"        //Logo of Duke","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        logo \u003d \"Hello from\\n\" + logo;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"        logo +\u003d \"Here are the lists of commands:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        logo +\u003d commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        return logo;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"     * Loading error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"File not found\\n\" + \"Creating temporary Task List.\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"     * Task Marked message.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"    public String markDisplay(TaskList tasks, Parser userParse) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(Integer.parseInt(userParse.inputArr[1]) - 1).toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"     * Task Unmarked message.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"     * @param userParse The input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"    public String unmarkDisplay(TaskList tasks, Parser userParse) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(Integer.parseInt(userParse.inputArr[1]) - 1).toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * List message.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"    public String list(TaskList tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"        for (int i \u003d 0; i \u003c tasks.tasksCounter; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"            uiText +\u003d numbering + \". \" + tasks.tasksList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"            numbering++;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"     * Added Todo message.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"    public String addTodoMessage(TaskList tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(tasks.tasksCounter - 1).toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d \"Now you have \" + tasks.tasksCounter + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"jundatan"},"content":"     * Added Deadline message.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"jundatan"},"content":"    public String addDeadlineMessage(TaskList tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(tasks.tasksCounter - 1).toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d \"Now you have \" + tasks.tasksCounter + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"jundatan"},"content":"     * Added Event message.","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"jundatan"},"content":"    public String addEventMessage(TaskList tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(tasks.tasksCounter - 1).toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d \"Now you have \" + tasks.tasksCounter + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"jundatan"},"content":"     * Delete message.","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"jundatan"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"jundatan"},"content":"     * @param deleted The Task deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"jundatan"},"content":"    public String deleteMessage(TaskList tasks, Task deleted) {","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"jundatan"},"content":"        uiText \u003d deleted.toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"jundatan"},"content":"        uiText \u003d \"Now you have \" + tasks.tasksCounter + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"jundatan"},"content":"     * Goodbye message.","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"jundatan"},"content":"    public String bye() {","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"jundatan"},"content":"     * Found or not found matching tasks message.","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"jundatan"},"content":"     * @param tasks The temporary TaskList for the find.","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"jundatan"},"content":"     * @return The String for Duke reply.","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"jundatan"},"content":"    public String findMessage(TaskList tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"jundatan"},"content":"        if (tasks.tasksList.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"jundatan"},"content":"            uiText +\u003d \"Sorry! There are no matching tasks in your list.\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"jundatan"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"jundatan"},"content":"            uiText +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"jundatan"},"content":"            uiText +\u003d list(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"jundatan"},"content":"     * Throws a DukeException when there is no list or find command used yet.","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"jundatan"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"jundatan"},"content":"     * @throws DukeException if there is no list or find command used.","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"jundatan"},"content":"    public void noListError(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"You have not used the list or find command yet!\\n Here is the list of tasks:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"jundatan"},"content":"        message +\u003d list(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"jundatan"},"content":"        message +\u003d \"Enter your command again. :)\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"jundatan"},"content":"        throw new DukeException(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":182,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"jundatan"},"content":"     * Returns the tag message for the display.","lastModifiedDate":"2023-02-05"},{"lineNumber":184,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":185,"author":{"gitId":"jundatan"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"jundatan"},"content":"     * @param userParse The user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":187,"author":{"gitId":"jundatan"},"content":"     * @return The tag message for the display.","lastModifiedDate":"2023-02-05"},{"lineNumber":188,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"jundatan"},"content":"    public String tagDisplay(TaskList tasks, Parser userParse) {","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"jundatan"},"content":"        String uiText \u003d \"Nice! I\u0027ve tagged this task:\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"jundatan"},"content":"        uiText +\u003d tasks.tasksList.get(Integer.parseInt(userParse.inputArr[1]) - 1).toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"jundatan"},"content":"        return uiText;","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":194,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"jundatan":194}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" * description and deadline by two strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":" * e.g., \u003ccode\u003e\"read book\",\"2019-12-12\"\u003c/code\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Deadline.","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     * @param by The deadline of the deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Getter for the variable by of this object instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * @return The string of the variable by.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return this.by.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Deadline task.","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" )\";","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"        if (tags.size() !\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"#\" + tags.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":56}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * Represents an event task. An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * description and deadline (from and to) by three strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * e.g., \u003ccode\u003e\"read book\",\"Monday 2pm\",\"3pm\"\u003c/code\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    protected String from;","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    protected String to;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Event object.","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     * @param from The start timeline of the Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @param to The end timeline of the Event.","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Getter for the variable from of this object instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * @return The string of the variable from.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return this.from;","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * Getter for the variable to of this object instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"     * @return The string of the variable to.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"        return this.to;","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Event task.","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Event task.","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"[E] \" + super.toString()","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"                + \" (from: \" + from + \" to: \" + to + \" )\";","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"        if (tags.size() !\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"#\" + tags.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":65}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * description by a string.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" * e.g., \u003ccode\u003e\"read book\"\u003c/code\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"    protected List\u003cString\u003e tags;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the object Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"     * Method to get the status of the Task.","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"     * @return A String indicating X for done and space for not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"     * Setter to set the Task to marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"jundatan"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"jundatan"},"content":"     * Setter to set the Task to unmarked.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"jundatan"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"jundatan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"jundatan"},"content":"     * Getter for the variable description of this object instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"jundatan"},"content":"     * @return The string of the variable description.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"jundatan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"jundatan"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"jundatan"},"content":"     * Getter for the variable tag of this object instance.","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"jundatan"},"content":"     * @return The list of tags.","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"jundatan"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"jundatan"},"content":"        return this.tags;","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"jundatan"},"content":"     * Adding tag to this task.","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"jundatan"},"content":"     * @param tagDescription The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"jundatan"},"content":"    public void addTag(String tagDescription) {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"jundatan"},"content":"        tags.add(tagDescription);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"jundatan"},"content":"     * Copy the tags from one object to another.","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"jundatan"},"content":"     * @param task The task with tags to copy from.","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"jundatan"},"content":"    public void addTag(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"jundatan"},"content":"        tags \u003d new ArrayList\u003c\u003e(task.tags);","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":92,"author":{"gitId":"jundatan"},"content":"     * Override toString method to get the icon and description of this object.","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"jundatan"},"content":"     * @return The String icon and description of this object.","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":96,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"jundatan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":100}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":" * Represents a todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":" * description by a string.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * e.g., \u003ccode\u003e\"read book\"\u003c/code\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Constructor for the class.","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"     * @param description The description of the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"        super(description.trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Override the toString method to return the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"     * @return The String of the Todos task.","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"        String message \u003d \"[T] \" + super.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"        if (tags.size() !\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"            message +\u003d \"#\" + tags.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"        return message;","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"757.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"758.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"758.0\" prefWidth\u003d\"488.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jundatan":19}},{"path":"src/test/java/seedu/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Represents a test for Deadline class.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Test on converting object to String.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"[D] [ ] 123 (by: Dec 12 2019 )\",","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"                    new Deadline(\"123\", \"2019-12-12\").toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Test on getting the by variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public void getBySuccess() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"2019-12-12\", new Deadline(\"123\", \"2019-12-12\").getBy());","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jundatan":33}},{"path":"src/test/java/seedu/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Represents a test for Event class.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class EventTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Test on converting object to String.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"[E] [ ] 123 (from: 123 to: 123 )\",","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"                new Event(\"123\", \"123\", \"123\").toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Test on getting the from variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public void getFromSuccess() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"123\",","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"                new Event(\"123\", \"123\", \"123\").getFrom());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * Test on getting the to variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    public void getToSuccess() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"123\",","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                new Event(\"123\", \"123\", \"123\").getTo());","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jundatan":43}},{"path":"src/test/java/seedu/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Represents a test for Task class.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Test on converting object to String.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"[ ] 123\",","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"                new Task(\"123\").toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"jundatan"},"content":"     * Test on getting the status of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jundatan"},"content":"    public void getStatusIconSuccess() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jundatan"},"content":"        assertEquals(\" \",","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jundatan"},"content":"                new Task(\"123\").getStatusIcon());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jundatan"},"content":"     * Test on getting the description.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jundatan"},"content":"    public void getDescriptionSuccess() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"123\",","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jundatan"},"content":"                new Task(\"123\").getDescription());","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jundatan":43}},{"path":"src/test/java/seedu/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":" * Project name: Duke","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":" * @author Tan Jun Da A023489eU","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jundatan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jundatan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jundatan"},"content":" * Represents a test for Todo class.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jundatan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jundatan"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jundatan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jundatan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jundatan"},"content":"     * Test on converting object to String.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jundatan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jundatan"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"jundatan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jundatan"},"content":"        assertEquals(\"[T] [ ] 123\", new Todo(\"123\").toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"jundatan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jundatan"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jundatan":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jundatan"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"jundatan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"jundatan"},"content":"event meeting /from Mon 3pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"jundatan"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"jundatan"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"jundatan"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"jundatan"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"jundatan"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"jundatan":8}}]
