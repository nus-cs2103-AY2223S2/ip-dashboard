{"authorDailyContributionsMap":{"jundatan":[{"date":"2023-01-15","commitResults":[{"hash":"d249ae88f1217bd5a5890f664ae0e8389c1739d4","messageTitle":"Added Greet, Echo, Exit features.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"9bafd6090fcaf924399e8742a9cd0eae541c2a22","messageTitle":"Added Add to List and List feature.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":3}}},{"hash":"f3b56cf32517026b146c6acbbae027a56329c1e8","messageTitle":"Added Mark as Done/Not Done feature.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":6}}},{"hash":"2ee5b8bfa427c4893debbbfd855bd1ddd08311fc","messageTitle":"Added Todos, Events Deadlines features.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":160,"deletions":12}}},{"hash":"c5282535de2f70ad6fbc5b01ec2d13a169b321bf","messageTitle":"Added Automated Text UI Testing.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0}}}]},{"date":"2023-01-16","commitResults":[{"hash":"b8416de9c7d3500c939cf73dcaffec008800a0c4","messageTitle":"Added Handling of Errors.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":139,"deletions":71}}}]},{"date":"2023-01-17","commitResults":[{"hash":"38e14dca4395044f1e1518bab43fb906b3b21fba","messageTitle":"Added Delete feature.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":17}}},{"hash":"9d4db2404d59ab6ffa972a7c21f06fc1d3bb90ec","messageTitle":"Added Enums for Commands.","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":85}}}]},{"date":"2023-01-21","commitResults":[{"hash":"fda266e0a39f7fba85e95145374fdcfcc8ee0ab3","messageTitle":"Add Save feature","messageBody":"Duke is running on data that is not saved and resets every time the\nDuke program is rerun.\n\nTasks should be saved and used for future rerun of Duke for the users.\n\nLet\u0027s add a folder with a text file and call Scanner class to read the\ntext file and FileWriter class to write in the text file.\n\nUsing Scanner class to read the text file and FileWriter class to write\n in the text file helps to store task in a text file as expected.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":74,"deletions":6}}},{"hash":"f8d113aed1ab7dd73d061ac5bac567e4c760eb6e","messageTitle":"Add dates formatting for deadline","messageBody":"The toString method in Deadline class prints the deadline in a String\nformat provided by the user.\n\nThe toString method should print in the mmm-dd-yyyy format instead of a\nstring.\n\nLet\u0027s import the LocalDate class and parse in the date to the var by.\nUse the var by of type LocalDate to print the date in mmm-dd-yyyy format\n.\n\nLocalDate class helps to provide a format that can be printed out for\nthe user.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}}]},{"date":"2023-01-24","commitResults":[{"hash":"3e6e5985ae19b94996cfbf0488e2f3857d8bd38b","messageTitle":"Add more classes for OOP","messageBody":"Program is cluttered in static main with little OOP.\n\nProgram code looks untidy with no OOP in mind.\n\nLet\u0027s add more OOP classes such as Parser to deal with making sense of\nthe user command, Storage to deal with loading tasks from the file and\nsaving tasks in the file, TaskList to contain the task list and UI to\ndeal with user interactions.\n\nThese classes can help to further categorize the different objects in\nan OOP way which makes the code more readable.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":343,"deletions":214}}}]},{"date":"2023-01-25","commitResults":[{"hash":"00b25f1258a150759ff9e221bddc3bee6c390f87","messageTitle":"Divide classes into packages","messageBody":"Classes are all inside java folder with no clear packaging.\n\nPackaging of classes offer better classification of classes which makes\nfile management neater and clearer.\n\nLet\u0027s group most of the task in duke folder while grouping tasks in\ntask folder.\n\nTask class and its subclasses should be in a different package from the\nrest of the duke classes.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":9}}},{"hash":"815c08c474589d2c8a6ca9278b7f4a297cea1cb7","messageTitle":"Resolve packaging issues","messageBody":"Packages and import having issues but still able to run on IDE.\n\nLet\u0027s fix the packages and other related issues for declaration of\npackages and import.\n\nProblem with syntax. Only way to fix this.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":23}}},{"hash":"2c94924287630460736634b2a8954ea1e3b3f3c8","messageTitle":"Update build.gradle file path","messageBody":"Unable to run the application.\n\nCannot run the application due to file path being directed to the wrong\npath.\n\nLet\u0027s change the file path for application to the correct path.\n\nOnly way to run the application is to change the file path to the\ncorrect path.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"a7bad75ae7874bfd80e7df7ea490dbc1ed90c437","messageTitle":"Add JUnit tests for classes in task package and move some classes into extra folder","messageBody":"Classes are not in the right folder. No JUnit tests currently available.\n\nJUnit tests are required to test the different classes. Classes are not\nin right folder will affect the test.\n\nLet\u0027s create a seedu folder for easier navigation and create JUnit tests\nclasses for the classes in the task package.\n\nJUnit tests allow semi-automation of test for the respective classes.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":99,"deletions":23}}},{"hash":"f695d68adbeaeb126fad85eaeca557c417cf463f","messageTitle":"Add javadoc for all classes/methods","messageBody":"Minimal javadoc in the some classes.\n\nEasier to read the uses of methods and classes.\n\nLet\u0027s add comments to the methods and classes.\n\nOnly way to make a javadoc for methods and classes.\n","fileTypesAndContributionMap":{"java":{"insertions":345,"deletions":25}}},{"hash":"fb680b6313ea39c4bc67e01fa890c017ec3ca723","messageTitle":"Follow coding standard","messageBody":"Some parts of the code is not following the coding standard.\n\nFollowing the coding standard improve the readability of the code.\n\nLet\u0027s follow the coding standard by doing proper indentations etc.\n\nBest way to follow the coding standard is to follow it.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":51}}},{"hash":"450eed457fc8bc01a82e74ba42d2bde5b2ce82b7","messageTitle":"Add Find feature","messageBody":"No find feature for the user to find what tasks is in the TaskList.\n\nUser must be able to find their tasks if it is done or not.\n\nLet\u0027s add some find methods in TaskList and Ui to support this issue.\n\nTaskList helps to find the matching tasks and Ui helps to display the\ntasks and messages.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":4}}}]},{"date":"2023-01-29","commitResults":[{"hash":"4891569c21d324275e79a1f8fd23c25764dd786b","messageTitle":"Add checkstyle","messageBody":"There is no checkstyle available in the program.\n\nRequire checkstyle to follow the coding standard.\n\nLet\u0027s add checkstyle.xml and suppression.xml and use gradle for\ncheckstyle checking.\n\nOne of the way to check the checkstyle is through gradle.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"2ebb5bfe95bc3463eb4bc954fd54b494b3cb835f","messageTitle":"Update code according to checkstyle","messageBody":"Code is not passing checkstyle.\n\nCode not following coding standard. Hence, changes are needed to follow\nthe coding standard.\n\nLet\u0027s change up our code according to the checkstyle.\n\nFollowing checkstyle to correct any coding standard violations.\n","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":88}}}]},{"date":"2023-01-31","commitResults":[{"hash":"1e5ae7102e423ef64fa948d799a708a17e7da236","messageTitle":"Add GUI to the program","messageBody":"The program is using the terminal to print out the outputs.\n\nPrinting of the outputs does not look like a chatbot. Using an\napplication will make it look like a chatbot.\n\nLet\u0027s add the classes for GUI and fxml files to use to build the app.\n\nMore efficient to use fxml file. Main class and Launcher class for easy\ndifferentiation.\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"txt":{"insertions":1,"deletions":3},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":342,"deletions":100}}},{"hash":"abdace88a8a42f2f2d224cee314effb5be45026c","messageTitle":"Add var-args","messageBody":"There is no var-args usage in the current code.\n\nAllow any number of var-args in the method.\n\nLet\u0027s add some var-args into the methods if applicable.\n\nOnly way to add var-args.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":35}}},{"hash":"b1a9006b4a618c6b350a69548a5a277ae0f50645","messageTitle":"Add welcome message to initialization","messageBody":"Welcome message after the user types in something.\n\nIt is better to have the welcome message and list of commands when the\nprogram begins.\n\nLet\u0027s add the welcome message to the initialization with extra methods.\n\nBest way to show the welcome message is during the initialization of the\napp.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":22,"deletions":8}}}]},{"date":"2023-02-01","commitResults":[{"hash":"8b26d450c5140f2d610042a385278b26e0963b7f","messageTitle":"Fix find feature","messageBody":"The current find feature does not allow users to delete, mark and unmark\nin the current find list. list command does not show the users the list\nof found tasks.\n\nList and any actions other than adding tasks should be working on the\nfound tasks.\n\nLet\u0027s change up the find command to deliver marking, unmarking,\nlist and delete command functions on the same find list by using static\nvariables and checking for same object.\n\nThis is the more efficient way of fixing find command.\n","fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":31}}},{"hash":"eaf531cdc6386e11fc5e48504f5a442dd152ebae","messageTitle":"Update some methods from Parser class","messageBody":"Current methods are not as useful.\n\nAdded more conditions to make the methods more useful.\n\nLet\u0027s add an if statement to check if the var-args exceed a certain\namount.\n\nThis is the best way to make use of var-args.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"b2961c2c6ef305c087e4bf1d479dc1323840546f","messageTitle":"Fix some checkstyle erorrs","messageBody":"There are some checkstyle errors in the code.\n\nRequire fixing to match the coding standard.\n\nLet\u0027s fix the checkstyle errors.\n\nChanging the code is the only way to fix it.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"6f6e0dc02e563e03822fa6c0c16ecfd79326fe73","messageTitle":"Fix some errors","messageBody":"There are errors like index out of bound and list or find command should\nbe use first before any delete, mark or unmark command.\n\nThe program is not working as intended and will cause error.\n\nLet\u0027s add more methods and variables to check if list or find command is\nused before using the other commands. Additional exception checking to\ncounter out of bound indexing issues.\n\nAdding more exception checks in the TaskList is optimal.\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":13}}},{"hash":"8c8c31f6b2dcb45a465b82d717ab7c3ae42bf81a","messageTitle":"Update javadocs","messageBody":"Missing throw comment in the method comments.\n\nRequired to fix the javadoc.\n\nLet\u0027s update the javadoc.\n\nUpdating the javadoc is the only way.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2023-02-05","commitResults":[{"hash":"23d743c9ddc440efc787a7edcf0e768008a8ee63","messageTitle":"Add assertions","messageBody":"There are no assertions in the code.\n\nAssertions provide error handling on programmer mistakes in the code.\n\nLet\u0027s add assertions for the filepath.\n\nIt is one of the ways to use assertions effectively to check the file\npath.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"960bf3e9fea22d65af8b847fe7135db66075505e","messageTitle":"Update on code quality","messageBody":"The duke code quality is poor as there is no much abstraction and SLAP.\n\nPoor code quality can lead to poor readability.\n\nLet\u0027s improve on the code quality.\n\nBest way to improve code quality is to use SLAP.\n","fileTypesAndContributionMap":{"java":{"insertions":274,"deletions":100}}},{"hash":"aefcdd3e5273eec9cc8590103f9fb4633c8c97ff","messageTitle":"Add streams to the code","messageBody":"There is currently no stream usage in the code\n\nBetter practice for streams.\n\nLet\u0027s add streams to the getCommand method.\n\nOne way to use streams effectively.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":3}}},{"hash":"6d8801d6abb317a8f1138d25f3c45e40e7a9cc62","messageTitle":"Fix some checkstyle issues","messageBody":"There are some checkstyle issues.\n\nRequired to fix to achieve no coding standard violations.\n\nLet\u0027s fix all the checkstyle errors.\n\nOnly way to fix the checkstyle errors is to follow coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"541303c0d8fc013906b0699075f79c8fbadb4396","messageTitle":"Add tagging features and handle some errors","messageBody":"There are currently no tagging features and some errors.\n\nFix errors to prevent application from failing. Adding tagging features\nallow users to tag their tasks.\n\nLet\u0027s handle more errors and allow user to tag their tasks by adding\na list of tags in task class.\n\nBest way to add tags is to put a list of tags in the task class for each\ntag object.\n","fileTypesAndContributionMap":{"java":{"insertions":218,"deletions":35}}},{"hash":"57dacc4dce8e559aeaf6a8c09d2ac4ba27aabc39","messageTitle":"Update GUI","messageBody":"The current GUI has no application header and icon.\n\nThe GUI is currently ugly with the default Java icon and header.\n\nLet\u0027s add the GUI header and icon by using scene Image and some String\nname called Duke in the Main class start method.\n\nBest way to change the Icon and header of the application to look better\n.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2023-02-08","commitResults":[{"hash":"bb1e76f8edef59f392936c805c3d116d39e95a1a","messageTitle":"Update build.gradle to target launcher for shadowjar","messageBody":"The current build.gradle is targetted towards duke class.\n\nRequired to build jar file successfully.\n\nLet\u0027s change the application build.gradle destination to the launcher\ninstead.\n\nBest and easiest way to build a working shadowjar.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"bb69b6bf5e4ab7bbcfab3e5781a46154ab3c6f4a","messageTitle":"Update on minor coding standard violation","messageBody":"Switch case has no egyptian type brackets.\n\nAdd egyptian type brackets to follow coding standards.\n\nLet\u0027s add some egyptian type brackets.\n\nOnly way to follow the coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":12}}}]},{"date":"2023-02-09","commitResults":[{"hash":"4523c22cc4a6427a7fcb9f4c854a177f12d0cf36","messageTitle":"Improve code quality and fix a bug","messageBody":"There are still some room of improvement for the code quality. There is\na bug where the tag will duplicate.\n\nThe bug can cause major issues.\n\nLet\u0027s add some more inline methods and remove the bug by resetting the\ntag string for each element in the writing method for the storage.\n\nBest way to fix the current bug.\n","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":28}}}]}]},"authorFileTypeContributionMap":{"jundatan":{"java":1883,"md":0,"fxml":35,"sh":0,"bat":0,"gradle":20,"txt":8}},"authorContributionVariance":{"jundatan":50600.49},"authorDisplayNameMap":{"jundatan":"CS2103T-T15-2 TAN ..N DA"}}
