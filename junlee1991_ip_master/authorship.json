[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junlee1991":2,"-":22}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"/***","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" * This class has to do with exiting the program","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"     * constructor for command.ByeCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * Exits the program","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     * // reused from github: https://github.com/nus-cs2103-AY2223S1/forum/issues/287","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"            setExitTrue();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"            return ui.exit();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"//        try","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"//        finally","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"//            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"//                @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"//                public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"//                    Platform.exit();","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"//                    System.exit(0);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"//                }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"//            }, 2000);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"//        }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":43}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"/***","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" * Serves as a blueprint for the other commands to follow","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"public abstract class Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     * Constructor that initializes whether the program should exit or not","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public Command() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     * return isExit status","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     * @return boolean","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * Sets isExit as true","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    public void setExitTrue(){","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"     * abstract method to execute a command","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":45}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" * this class handles when a deadline command is called and executed","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"     * constructor for tasks.Deadline command.Command","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"     * @param input","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    public DeadlineCommand(String input){","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     * splits the input and adds a deadline task into duke.TaskList","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     * if duplicate detected, no changes made to taskList or storage","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        input \u003d input.substring(9);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        String[] split \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        String description \u003d split[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        String time \u003d split[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        Task task \u003d new Deadline(description, time);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"            taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"            return ui.printAddTask(taskList.size(),task);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":46}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"/***","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" * this class handles deleting a task as a command","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     * Constructor for command.DeleteCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public DeleteCommand(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * removes the task from taskList and updates the storage file","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        int taskNumMinusOne \u003d index - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        Task taskToDelete \u003d taskList.get(taskNumMinusOne);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        taskList.remove(taskNumMinusOne);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        return ui.printDelete(index, taskToDelete,taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":42}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"     * Adds an tasks.Event tasks.Task into the taskList and updates storage files","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * if duplicate detected, no changes made to taskList or storage","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        input \u003d input.substring(6);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        String[] s \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        String[] timing \u003d s[1].split(\"/to\");","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        String from \u003d timing[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        String to \u003d timing[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        String description \u003d s[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"            taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"            return ui.printAddTask(taskList.size(), task);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":41}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":" * This class handles listing the entire duke.TaskList","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"     * Constructor for listCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public ListCommand(){","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"     * Prints the entire taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        return ui.printList(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":29}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import exceptions.InvalidNumberException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" * This class handles marking a task as complete","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     * Constructor for command.MarkCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public MarkCommand(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"//    public void validate() throws Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"//    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     * marks task as done and update storage","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        int taskNumMinusOne \u003d index - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        if(taskNumMinusOne \u003c 0 || taskNumMinusOne \u003e taskList.size() - 1)","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        taskList.markTask(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        return ui.printMark(index, taskList.get(taskNumMinusOne));","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":44}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import tasks.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" * This class handles when a tasks.Todo task is added","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"     * Constructor for command.TodoCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"     * @param input","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    public TodoCommand(String input){","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     * adds todo task into Tasklist and updates storage","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     * if duplicate detected, no changes made to taskList or storage","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     * @param ui","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * @param storage","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        Task task\u003d new Todo(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"            taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"            return ui.printAddTask(taskList.size(), task);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":41}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import exceptions.InvalidNumberException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    public UnmarkCommand(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        int taskNumMinusOne \u003d index - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        if(taskNumMinusOne \u003c 0 || taskNumMinusOne \u003e taskList.size() - 1)","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"        return ui.printUnmark(index , taskList.get(taskNumMinusOne));","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"/***","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" * Main class","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"class Duke {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public static final String DIRECTORY_NAME \u003d System.getProperty(\"user.dir\") + File.separator + \"data\";","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    // once duke gets initiated, create duke.duke.Ui object, create storage","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    public Duke(String directory, String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        storage \u003d new Storage(directory, filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"            // print some error","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        System.out.println(Ui.greet());","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"            try {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"                // ui should scan for input.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"                System.out.println(c.execute(tasks, ui, storage));","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"        new Duke(DIRECTORY_NAME, FILE_NAME).run();","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junlee1991":55,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import command.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import exceptions.BlankException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import exceptions.InvalidInstructionException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import exceptions.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" * Handles user input.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" *","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" * @author Julio Harjo","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     * Stores tasks in a text file.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    protected static Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"     * Handles User interaction.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    protected static Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * Constructor.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     * @param storage The storage list used.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     * @param ui   The duke.duke.Ui interface used.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    public Parser(Storage storage, Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    public static Command parse(String command) throws DukeException{","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        String[] c \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        String instruction \u003d c[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        Command com \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"            switch(instruction){","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"                case(\"list\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new ListCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"                case(\"mark\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"                    checkIfValidInteger(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"                    String number \u003d command.substring(5);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"                    int taskNum \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new MarkCommand(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"                case(\"unmark\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"                    checkIfValidInteger(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"                    number \u003d command.substring(7);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"                    int index \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new UnmarkCommand(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"                case(\"todo\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new TodoCommand(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"                case(\"deadline\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"                    String[] stuff \u003d c[1].split(\" /by \");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(stuff);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new DeadlineCommand(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"                case(\"event\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"                    String[] stuff2 \u003d c[1].split(\" /from \");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(stuff2);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new EventCommand(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"                case(\"delete\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"                    checkIfBlank(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"                    checkIfValidInteger(c);","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"                    int taskNum2 \u003d Integer.parseInt(c[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new DeleteCommand(taskNum2);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"                case(\"bye\"):","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"                    com \u003d new ByeCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"                default:","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"                    throw new InvalidInstructionException();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"junlee1991"},"content":"            throw new NumberFormatException(\"some msg\");","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"junlee1991"},"content":"        return com;","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"junlee1991"},"content":"    public static void checkIfBlank(String[] arr) throws BlankException{","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"junlee1991"},"content":"            if (arr[1].trim().isBlank())","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"junlee1991"},"content":"                throw new BlankException();","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"junlee1991"},"content":"        }catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"junlee1991"},"content":"            throw new BlankException();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"    public static void checkIfValidInteger(String[] arr) throws NumberFormatException{","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"        try{","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"            Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"            throw new NumberFormatException(\"Please provide a valid number\");","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":109}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import tasks.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    protected String directory;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public Storage(String directory, String filePath){","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException{","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        // make a file","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        String FULL_FILE \u003d directory  + File.separator + filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        File file \u003d new File(FULL_FILE);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"            if(!file.exists()){","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"            al \u003d readFile(file);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        return al;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"    public static ArrayList\u003cTask\u003e readFile(File file) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"                String[] split \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"                String task \u003d split[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"                String mark \u003d split[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"                switch (task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"                        Todo todo \u003d new Todo(split[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"                            todo.setAsMarked();","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"                        Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"                            deadline.setAsMarked();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"                        String[] s \u003d split[3].split(\"-\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"                        String from \u003d s[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"                        String to \u003d s[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"                        Event event \u003d new Event(split[2], from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"                            event.setAsMarked();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"            return tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"        return tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"junlee1991"},"content":"    //overwrites and rewrite to the text file","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"junlee1991"},"content":"    public void writeFile(TaskList taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"junlee1991"},"content":"        try{","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"junlee1991"},"content":"            String FULL_FILE \u003d directory  + File.separator + filePath;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"junlee1991"},"content":"            File newFile \u003d new File(FULL_FILE);","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"junlee1991"},"content":"            FileWriter fw \u003d new FileWriter(newFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"junlee1991"},"content":"            for(int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"junlee1991"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"junlee1991"},"content":"                String done \u003d task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"junlee1991"},"content":"                String write \u003d \"|\" + done + \"|\" + task.getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"junlee1991"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"T\" + write;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"D\" + write + \"|\" + ((Deadline) task).getBy();","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"E\" + write + \"|\" + ((Event) task).getTime();","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"                fw.write(write);","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"junlee1991"},"content":"        } catch (IOException e ) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":114}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public TaskList(){","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    public int size(){","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    public void add(Task task){","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    public void markTask(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"        taskList.get(index - 1).setAsMarked();","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    // check whether it\u0027s i -1 for this one","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    public void unmarkTask(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        taskList.get(index - 1).setAsUnmarked();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    public Task get(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    public void remove(int index){","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"/***","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" * A class that deals with interactions with the user","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     * Initialises a new UI with a scanner to get user input","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     * read command of user","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     * @return input in the form of a string","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"            s \u003d scanner.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        return s;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"     * prints greet message","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    public static String greet() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        return \"Hello! I\u0027m duke.Duke.\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"     * prints farewell message","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"    public String exit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        this.scanner.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"     * prints loading error message","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    // later","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"        System.out.println(\"Loading Error Encountered\");","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"     * List the items in the list","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"    public String printList(TaskList taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"            s +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"        return s;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"     * prints message after task is marked","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"    public String printMark(int index, Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"        response +\u003d index + \". \" + task;","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"        return response;","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"     * prints message after task is unmarked","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"    public String printUnmark(int index, Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"        String response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"        response +\u003d index + \". \" + task;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"        return response;","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"junlee1991"},"content":"     * prints message after task is added to taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"junlee1991"},"content":"    public String printAddTask(int size, Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"junlee1991"},"content":"        String response \u003d \"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"junlee1991"},"content":"        response +\u003d String.format(\"Now you have %s tasks in the list.\\n\", size);","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"junlee1991"},"content":"        return response;","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"     * prints message when task is deleted","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"     * @param task","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"     * @param taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"    public String printDelete(int index, Task task, TaskList taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"        String s \u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"        s +\u003d index + \". \" + task + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"        s +\u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"junlee1991"},"content":"        return s;","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"     * Prints the error message when Exception occurred","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"junlee1991"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"junlee1991"},"content":"     * @param s string that gets printed","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"junlee1991"},"content":"    public void showError(String s) {","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"junlee1991"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"junlee1991"},"content":"     * prints a line","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"junlee1991"},"content":"    public String showLine() {","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"junlee1991"},"content":"        return \"____________________________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"junlee1991"},"content":"    public String printFind(ArrayList\u003cTask\u003e res) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"        String s \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"        for (int j \u003d 0; j \u003c res.size(); j++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"            s +\u003d (j + 1) + \". \" + res.get(j) + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"junlee1991"},"content":"        return s;","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"junlee1991"},"content":"    public String printDuplicates(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"junlee1991"},"content":"        return String.format(\"Duplicate task detected\\n 1. %s\", task.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"junlee1991":140}},{"path":"src/main/java/exceptions/BlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if description is empty","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"public class BlankException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"    public BlankException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"        super(\"OOPS!!! This command needs a description. See instruction for more details\");","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"junlee1991":10}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class that handles all variety of DukeException","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"        super(s);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":11}},{"path":"src/main/java/exceptions/InvalidInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if an inappropriate command is given","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class InvalidInstructionException extends DukeException{","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    public InvalidInstructionException(){","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":12}},{"path":"src/main/java/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if an input is not an integer from the list","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class InvalidNumberException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"        super(\"Error...Please fill in an appropriate number from the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":12}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"     * Constructor that takes in description of deadline and","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"     * @param description of deadline","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"     * @param by in the format of a string in the format of day/month/year time eg. 02/05/2019 1800","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    public String getBy(){","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"        return by;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * Method to covert String into formatted string in date format.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     * @param str with the exact format day/month/year time(24 hour format)","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    public String dateConvert(String str){","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        // String to LocalDate","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(str, format1);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        // DateTime to String","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        return formattedDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateConvert(by) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":43}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    protected String from;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    protected String to;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"     * Constructor to instantiate an tasks.Event object","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"     * @param description of tasks.Event","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"     * @param from in the format of a string in the format of day/month/year time eg. 02/05/2019 1800","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"     * @param to in the format of a string in the format of day/month/year time eg. 02/05/2019 1800","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    public String getTime(){","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        return from + \" - \" + to;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    public String dateCovert(String str){","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        // String to LocalDate","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(str, format1);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        // DateTime to String","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        return formattedDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + dateCovert(from) + \" to: \" + dateCovert(to) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":43}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"    private String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"     * Constructor to create task object","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    public Task(String name){","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"//    public boolean getStatus(){","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"//        return this.isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"//    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    public void setAsMarked(){","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    public String getDescription(){","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"        return this.name;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"     * retrieves status of task","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"     * set task as not done","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    public void setAsUnmarked(){","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"     * Returns the string representation of the tasks.Task object.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"     * @return the string listing the elements in duke.TaskList","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"    public String toString(){","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        if(isDone)","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        else","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":53}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"todo watch movie","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junlee1991":1,"-":20}}]
