[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    public String getBy(){","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"        return by;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import exceptions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    private static List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"     * Prints Welcome message","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    private static void greet(){","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * Prints Exit message","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    private static void exit(){","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args)  {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        String directoryName \u003d System.getProperty(\"user.dir\") + File.separator + \"data\";","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"        String fileName \u003d \"duke.txt\";","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        File file \u003d new File(directoryName + File.separator + fileName);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"            readFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"            return;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"        greet();","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        while (!input.startsWith(\"bye\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"            String[] c \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"                if (c[0].equals(\"list\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"                    listItOut();","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"                } else if (c[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"                    mark(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"                } else if (c[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"                    unmark(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"                } else if (c[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"                    todo(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"                } else if (c[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"                    deadline(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"                } else if (c[0].equals(\"event\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"                    event(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"                }  else if (c[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"                    delete(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"                    writeFile(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"                }else {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"                    throw new InvalidInstructionException();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"        exit();","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"        sc.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"     * List the items in the list","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"junlee1991"},"content":"    public static void listItOut(){","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"junlee1991"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"junlee1991"},"content":"            System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"junlee1991"},"content":"     * Executes the marking of task as done.","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"junlee1991"},"content":"    public static void mark(String input) throws NumberFormatException{","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"            String number \u003d input.substring(5);","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"            int taskNum \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"            int taskNumMinusOne \u003d taskNum - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"            if(taskNumMinusOne \u003c 0 || taskNumMinusOne \u003e list.size() - 1)","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"            list.get(taskNumMinusOne).setAsMarked();","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"            System.out.println(taskNum + \".\" + list.get(taskNumMinusOne));","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"        }catch(InvalidNumberException e){","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"junlee1991"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Please input a valid number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"junlee1991"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"junlee1991"},"content":"    public static void delete(String input){","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"junlee1991"},"content":"        String[] c \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"junlee1991"},"content":"        int taskNum \u003d Integer.parseInt(c[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"junlee1991"},"content":"        int taskNumMinusOne \u003d taskNum - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"junlee1991"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"junlee1991"},"content":"        System.out.println(taskNum + \".\" + list.get(taskNumMinusOne));","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"junlee1991"},"content":"        list.remove(taskNumMinusOne);","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"junlee1991"},"content":"        System.out.println(\"Now you have \" + list.size()  +\" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"     * Executes the marking of task as not complete.","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"junlee1991"},"content":"    public static void unmark(String input) throws NumberFormatException{","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":138,"author":{"gitId":"junlee1991"},"content":"            String number \u003d input.substring(7);","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"junlee1991"},"content":"            int taskNum \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"junlee1991"},"content":"            int taskNumMinusOne \u003d taskNum - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"junlee1991"},"content":"            if(taskNumMinusOne \u003c 0 || taskNumMinusOne \u003e list.size() - 1)","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"junlee1991"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2023-01-16"},{"lineNumber":143,"author":{"gitId":"junlee1991"},"content":"            list.get(taskNumMinusOne).setAsUnmarked();","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":145,"author":{"gitId":"junlee1991"},"content":"            System.out.println(taskNum + \".\" + list.get(taskNumMinusOne));","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"junlee1991"},"content":"        }catch(InvalidNumberException e){","lastModifiedDate":"2023-01-16"},{"lineNumber":147,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":148,"author":{"gitId":"junlee1991"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Please input a valid number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":152,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":153,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"junlee1991"},"content":"     * Produce a new todo object and places inside list","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"junlee1991"},"content":"     * @throws BlankException if there\u0027s nothing written todo.","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"junlee1991"},"content":"    public static void todo(String input) throws BlankException {","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"junlee1991"},"content":"        if(!(input.substring(4).trim().isBlank())){","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"junlee1991"},"content":"            Task task\u003d new Todo(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"junlee1991"},"content":"            list.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"junlee1991"},"content":"            System.out.format(\"Now you have %s tasks in the list.\\n\", list.size());","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"junlee1991"},"content":"        }else{","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"junlee1991"},"content":"            throw new BlankException();","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":168,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"junlee1991"},"content":"     * Produce a new deadline object and places inside list","lastModifiedDate":"2023-01-23"},{"lineNumber":172,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"junlee1991"},"content":"    public static void deadline(String input) throws BlankException{","lastModifiedDate":"2023-01-23"},{"lineNumber":176,"author":{"gitId":"junlee1991"},"content":"        if(!(input.substring(8).trim().isBlank())){","lastModifiedDate":"2023-01-23"},{"lineNumber":177,"author":{"gitId":"junlee1991"},"content":"            input \u003d input.substring(9);","lastModifiedDate":"2023-01-23"},{"lineNumber":178,"author":{"gitId":"junlee1991"},"content":"            String[] split \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"junlee1991"},"content":"            String description \u003d split[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":180,"author":{"gitId":"junlee1991"},"content":"            String time \u003d split[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":181,"author":{"gitId":"junlee1991"},"content":"            Task task \u003d new Deadline(description, time);","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"junlee1991"},"content":"            list.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"junlee1991"},"content":"            System.out.format(\"Now you have %s tasks in the list.\\n\", list.size());","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"junlee1991"},"content":"        }else{","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"junlee1991"},"content":"            throw new BlankException();","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":188,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":189,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":190,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":191,"author":{"gitId":"junlee1991"},"content":"     * Produce a new event object and places inside list","lastModifiedDate":"2023-01-23"},{"lineNumber":192,"author":{"gitId":"junlee1991"},"content":"     * @param input in the form of a string","lastModifiedDate":"2023-01-23"},{"lineNumber":193,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":194,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"junlee1991"},"content":"    public static void event(String input) throws BlankException{","lastModifiedDate":"2023-01-23"},{"lineNumber":196,"author":{"gitId":"junlee1991"},"content":"        if(!(input.substring(5).trim().isBlank())){","lastModifiedDate":"2023-01-23"},{"lineNumber":197,"author":{"gitId":"junlee1991"},"content":"            String[] s \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"junlee1991"},"content":"            String[] timing \u003d s[1].split(\"/to\");","lastModifiedDate":"2023-01-16"},{"lineNumber":199,"author":{"gitId":"junlee1991"},"content":"            String from \u003d timing[0].trim();","lastModifiedDate":"2023-01-16"},{"lineNumber":200,"author":{"gitId":"junlee1991"},"content":"            String to \u003d timing[1].trim();","lastModifiedDate":"2023-01-16"},{"lineNumber":201,"author":{"gitId":"junlee1991"},"content":"            String description \u003d s[0].substring(5).trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":202,"author":{"gitId":"junlee1991"},"content":"            Task task \u003d new Event(description, from, to );","lastModifiedDate":"2023-01-23"},{"lineNumber":203,"author":{"gitId":"junlee1991"},"content":"            list.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"junlee1991"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"junlee1991"},"content":"            System.out.format(\"Now you have %s tasks in the list.\\n\", list.size());","lastModifiedDate":"2023-01-23"},{"lineNumber":206,"author":{"gitId":"junlee1991"},"content":"        }else{","lastModifiedDate":"2023-01-23"},{"lineNumber":207,"author":{"gitId":"junlee1991"},"content":"            throw new BlankException();","lastModifiedDate":"2023-01-23"},{"lineNumber":208,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":209,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":210,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":211,"author":{"gitId":"junlee1991"},"content":"    public static void writeFile(File file) {","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":213,"author":{"gitId":"junlee1991"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":214,"author":{"gitId":"junlee1991"},"content":"            for(int i \u003d 0; i \u003c list.size(); ++i) {","lastModifiedDate":"2023-01-23"},{"lineNumber":215,"author":{"gitId":"junlee1991"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":216,"author":{"gitId":"junlee1991"},"content":"                String done \u003d task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-23"},{"lineNumber":217,"author":{"gitId":"junlee1991"},"content":"                String write \u003d \"|\" + done + \"|\" + task.getDescription();","lastModifiedDate":"2023-01-23"},{"lineNumber":218,"author":{"gitId":"junlee1991"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-01-23"},{"lineNumber":219,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"T\" + write;","lastModifiedDate":"2023-01-23"},{"lineNumber":220,"author":{"gitId":"junlee1991"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-23"},{"lineNumber":221,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"D\" + write + \"|\" + ((Deadline) task).getBy();","lastModifiedDate":"2023-01-23"},{"lineNumber":222,"author":{"gitId":"junlee1991"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-01-23"},{"lineNumber":223,"author":{"gitId":"junlee1991"},"content":"                    write \u003d \"E\" + write + \"|\" + ((Event) task).getTime();","lastModifiedDate":"2023-01-23"},{"lineNumber":224,"author":{"gitId":"junlee1991"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":225,"author":{"gitId":"junlee1991"},"content":"                fw.write(write);","lastModifiedDate":"2023-01-23"},{"lineNumber":226,"author":{"gitId":"junlee1991"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":227,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":228,"author":{"gitId":"junlee1991"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":229,"author":{"gitId":"junlee1991"},"content":"        } catch (IOException e ) {","lastModifiedDate":"2023-01-23"},{"lineNumber":230,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":231,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":232,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":233,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":234,"author":{"gitId":"junlee1991"},"content":"    public static void readFile(File file) {","lastModifiedDate":"2023-01-23"},{"lineNumber":235,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":236,"author":{"gitId":"junlee1991"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":237,"author":{"gitId":"junlee1991"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":238,"author":{"gitId":"junlee1991"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":239,"author":{"gitId":"junlee1991"},"content":"                String[] split \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-01-23"},{"lineNumber":240,"author":{"gitId":"junlee1991"},"content":"                String task \u003d split[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":241,"author":{"gitId":"junlee1991"},"content":"                String mark \u003d split[1];","lastModifiedDate":"2023-01-23"},{"lineNumber":242,"author":{"gitId":"junlee1991"},"content":"                switch (task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":243,"author":{"gitId":"junlee1991"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":244,"author":{"gitId":"junlee1991"},"content":"                        Todo todo \u003d new Todo(split[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":245,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":246,"author":{"gitId":"junlee1991"},"content":"                            todo.setAsMarked();","lastModifiedDate":"2023-01-23"},{"lineNumber":247,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":248,"author":{"gitId":"junlee1991"},"content":"                        list.add(todo);","lastModifiedDate":"2023-01-23"},{"lineNumber":249,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":250,"author":{"gitId":"junlee1991"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":251,"author":{"gitId":"junlee1991"},"content":"                        Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":252,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":253,"author":{"gitId":"junlee1991"},"content":"                            deadline.setAsMarked();","lastModifiedDate":"2023-01-23"},{"lineNumber":254,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":255,"author":{"gitId":"junlee1991"},"content":"                        list.add(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":256,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":257,"author":{"gitId":"junlee1991"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":258,"author":{"gitId":"junlee1991"},"content":"                        String[] s \u003d split[3].split(\"-\");","lastModifiedDate":"2023-01-23"},{"lineNumber":259,"author":{"gitId":"junlee1991"},"content":"                        String from \u003d s[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":260,"author":{"gitId":"junlee1991"},"content":"                        String to \u003d s[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":261,"author":{"gitId":"junlee1991"},"content":"                        Event event \u003d new Event(split[2], from, to);","lastModifiedDate":"2023-01-23"},{"lineNumber":262,"author":{"gitId":"junlee1991"},"content":"                        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":263,"author":{"gitId":"junlee1991"},"content":"                            event.setAsMarked();","lastModifiedDate":"2023-01-23"},{"lineNumber":264,"author":{"gitId":"junlee1991"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":265,"author":{"gitId":"junlee1991"},"content":"                        list.add(event);","lastModifiedDate":"2023-01-23"},{"lineNumber":266,"author":{"gitId":"junlee1991"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":267,"author":{"gitId":"junlee1991"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":268,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":269,"author":{"gitId":"junlee1991"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":270,"author":{"gitId":"junlee1991"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":271,"author":{"gitId":"junlee1991"},"content":"            return;","lastModifiedDate":"2023-01-23"},{"lineNumber":272,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junlee1991":270,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"    protected String from;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"    protected String to;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    public String getTime(){","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"        return from + \" - \" + to;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"    private String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"     * Constructor to create task object","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    public Task(String name){","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"//    public boolean getStatus(){","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"//        return this.isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"//    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public void setAsMarked(){","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    public String getDescription(){","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        return this.name;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     * retrieves status of task","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     * set task as not done","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    public void setAsUnmarked(){","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"     * Returns the string representation of the Task object.","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"     * @return the string listing the elements in TaskList","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"    public String toString(){","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        if(isDone)","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        else","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":51}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"    TaskManager(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    public int getSize(){","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    public void remove(int index){","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public void printAllOut(){","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"            System.out.println(index + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":11}},{"path":"src/main/java/exceptions/BlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if description is empty","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"public class BlankException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"    public BlankException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"        super(\"OOPS!!! This command needs a description. See instruction for more details\");","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"junlee1991":10}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class that handles all variety of DukeException","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"        super(s);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":11}},{"path":"src/main/java/exceptions/InvalidInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if an inappropriate command is given","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class InvalidInstructionException extends DukeException{","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    public InvalidInstructionException(){","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":12}},{"path":"src/main/java/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package exceptions;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":" * Exception class handles if an input is not an integer from the list","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"public class InvalidNumberException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"        super(\"Error...Please fill in an appropriate number from the list\");","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"todo watch movie","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"junlee1991":3}}]
