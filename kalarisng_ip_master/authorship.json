[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kalarisng":16,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"T|  | borrow book","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"E|  | project meeting | 4pm - 6pm","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":" * Represents a Task that with a deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    protected final String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"     * @return Deadline task.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"     * @throws DateTimeParseException If the date is in the wrong format.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    public static Deadline createDeadline(String description) throws DateTimeParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        String[] split \u003d description.split(\"/by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        LocalDate d1 \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        return new Deadline(split[0], d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"     * Overrides the default Object::toString","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"     * @return String representation of a Deadline object.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"        return \"[D]\" + super.toString() + \" \" + description + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":38}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        this.style();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"    private void style() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        Rectangle r \u003d new Rectangle();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        r.setHeight(50.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        r.setArcHeight(25.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        r.setArcWidth(25.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        r.setWidth(50.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        displayPicture.setClip(r);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        this.setSpacing(10);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        this.setFillHeight(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        BorderStroke borderStroke \u003d new BorderStroke(Color.GRAY, BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"                new CornerRadii(20.0), new BorderWidths(1.0));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        Border dialogBorder \u003d new Border(borderStroke);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        dialog.setBorder(dialogBorder);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"        dialog.setPadding(new Insets(15, 15, 15, 15));","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":83}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Main class.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    public Duke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"        taskList \u003d storage.loadFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    public String greeting() {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        return ui.dukeGreeting();","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        Parser parser \u003d new Parser(taskList, ui, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        output \u003d parser.parse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        return output;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kalarisng":27,"-":3}},{"path":"src/main/java/duke/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represents an Exception due to absence of description following task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class EmptyDescription extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public EmptyDescription(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"kalarisng":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represents a Task that is an event.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    protected final String from;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    protected final String to;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"     * Overrides the default Object::toString.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"     * @return String representation of an Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        return \"[E]\" + super.toString() + \" \" + description + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":24}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":52}},{"path":"src/main/java/duke/OutOfBounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represents an Exception due to incorrect input number for mark, unmark and delete.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class OutOfBounds extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public OutOfBounds(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kalarisng":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":" * Handles user inputs for parsing.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"     * Parses user inputs.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    public String parse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        String[] arrNext \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        String next \u003d arrNext[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"        if (Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"            ui.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"            if (arrNext.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"                if (Objects.equals(next, \"todo\") || Objects.equals(next, \"deadline\") ||","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"                        Objects.equals(next, \"event\") || Objects.equals(next, \"mark\") ||","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                        Objects.equals(next, \"unmark\") || Objects.equals(next, \"delete\") ||","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"                        Objects.equals(next, \"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"                    if (!Objects.equals(next, \"list\") \u0026\u0026 !Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"                        throw new EmptyDescription(\" The description of \" + next + \" cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"            if ((!Objects.equals(next, \"todo\") \u0026\u0026 !Objects.equals(next, \"deadline\") \u0026\u0026 !Objects.equals(next, \"event\"))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"                if (!Objects.equals(next, \"list\") \u0026\u0026 !Objects.equals(next, \"mark\") \u0026\u0026 !Objects.equals(next, \"unmark\") \u0026\u0026 !Objects.equals(next, \"delete\") \u0026\u0026 !Objects.equals(next, \"bye\") \u0026\u0026 !Objects.equals(next, \"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"                    throw new WrongTask(\" I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        } catch (EmptyDescription |","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"                WrongTask e2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"            return e2.getMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"        } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"            if (Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"                ui.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"        String after \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"            after \u003d arrNext[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"        } catch (ArrayIndexOutOfBoundsException exc) {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"            System.out.println(\"I will show your saved tasks.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        Task inputTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"        switch (next) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"        case \"todo\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"            inputTask \u003d new Todo(after);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"            taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"//            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + inputTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"//            System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"            storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"            return ui.showTaskOutput(inputTask, taskList.getNumberOfTasks());","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"            String[] split \u003d after.split(\"/by \");","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"            LocalDate d1 \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"            inputTask \u003d new Deadline(split[0], d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"            taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"            storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"            return ui.showTaskOutput(inputTask, taskList.getNumberOfTasks());","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"        case \"event\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"            String[] split \u003d after.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"            inputTask \u003d new Event(split[0], split[1].substring(5), split[2].substring(3));","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"            taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"            storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"            return ui.showTaskOutput(inputTask, taskList.getNumberOfTasks());","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"        case \"mark\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"            storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"            return taskList.mark(after);","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"        case \"list\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"            return taskList.getTaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"kalarisng"},"content":"        case \"find\": {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"            TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"                String descriptionOfTask \u003d task.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"kalarisng"},"content":"                String[] splitTaskString \u003d descriptionOfTask.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"kalarisng"},"content":"                for (String s : splitTaskString) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"kalarisng"},"content":"                    if (Objects.equals(s, after)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"kalarisng"},"content":"                        matchingTasks.addTask(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"kalarisng"},"content":"            return ui.filter(matchingTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kalarisng"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"kalarisng"},"content":"            storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"            return taskList.unMark(after);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"        case \"delete\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"kalarisng"},"content":"            storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"kalarisng"},"content":"            return taskList.deleteTask(after);","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"kalarisng"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"kalarisng"},"content":"            return \" I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kalarisng"},"content":"     * Checks if a task has an empty description.","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"kalarisng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"kalarisng"},"content":"     * @param checkString User input to be checked.","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"kalarisng"},"content":"     * @return True or false depending on whether description of task is empty.","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"kalarisng"},"content":"     * @throws EmptyDescription If the description of task is empty.","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"kalarisng"},"content":"    public static boolean checkEmptyDescription(String[] checkString) throws EmptyDescription {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"kalarisng"},"content":"        if (checkString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"kalarisng"},"content":"            throw new EmptyDescription(\" The description of \" + checkString[0] + \" cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"kalarisng"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":137}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":" * Handles the loading and saving of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"     * Loads the previous saved file.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"     * @return Array of previous tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        TaskList taskList \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                Task prevTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"                String[] commandInFile \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"                boolean isDoneInFile \u003d commandInFile[1].charAt(0) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"                if (commandInFile[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Todo(data.substring(6));","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"                } else if (commandInFile[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Deadline(commandInFile[2].substring(1),","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"                            commandInFile[3].substring(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"                } else if (commandInFile[0].equals(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"                    String[] splitString \u003d commandInFile[3].substring(1).","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"                            split(\"-\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Event(commandInFile[2].substring(1),","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                            splitString[0],","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"                            splitString[1].substring(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"            System.out.println(\"File not found, created new file for you\");","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"            File newFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"            File folder \u003d new File(\"data/duke.txt\".split(\"/\")[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"                folder.mkdir();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"                newFile.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Handle exception here\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"     * Appends new tasks to the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"     * @param task Task to be appended.","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"    public void appendToFile(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"            String statusOfTask \u003d task.getStatusIcon();","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"            String descriptionOfTask \u003d task.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"            String taskType \u003d task.toString().","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"                    substring(1, 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"                        ((Deadline) task).by + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"                        ((Event) task).from + \"- \" + ((Event) task).to + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"     * Updates the file after mark, unmark or delete.","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"     * @param taskList Array of all tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"    public void updateFile(TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"            for (int j \u003d 0; j \u003c taskList.getNumberOfTasks(); j++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"kalarisng"},"content":"                Task currentTask \u003d taskList.getTask(j);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"kalarisng"},"content":"                String statusOfTask \u003d currentTask.getStatusIcon();","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"kalarisng"},"content":"                String descriptionOfTask \u003d currentTask.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"kalarisng"},"content":"                String taskType \u003d currentTask.toString().","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kalarisng"},"content":"                        substring(1, 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kalarisng"},"content":"                if (currentTask instanceof Todo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"kalarisng"},"content":"                } else if (currentTask instanceof Deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kalarisng"},"content":"                            ((Deadline) currentTask).by + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"kalarisng"},"content":"                } else if (currentTask instanceof Event) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"kalarisng"},"content":"                            ((Event) currentTask).from + \"- \" + ((Event) currentTask).to + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"kalarisng"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"kalarisng"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":121}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represent a Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    protected final String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"     * Retrieves the status of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"     * @return X if the task is done or a whitespace if it is not done.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"     * Unmark the task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"     * Overrides the default Object::toString.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"     * @return String representation of a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        return \"[\" + getStatusIcon() + \"]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":45}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":" * Represents a list of all tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"     * Retrieves the total number of tasks in the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"     * @return Number of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        return taskArray.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"     * Retrieves the task at a specific index of the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"     * @param index Index of the list at which the task to be retrieved is at.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"     * @return Task at the index of the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        return taskArray.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"     * Adds new task to the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"     * @param task Task to be added into the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"        taskArray.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"    public String getTaskList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"            result +\u003d i + 1 + \".\" + taskArray.get(i) + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    public String mark(String taskID) {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        int number \u003d Integer.parseInt(taskID) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        Task toMarkDone \u003d taskArray.get(number);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        toMarkDone.markAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        return ui.showMark(toMarkDone);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"    public String unMark(String taskID) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"        int number \u003d Integer.parseInt(taskID) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"        Task toUnmarkDone \u003d taskArray.get(number);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"        toUnmarkDone.unMarkAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"        return ui.showUnmark(toUnmarkDone);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"    public String deleteTask(String taskID) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"        int number \u003d Integer.parseInt(taskID) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"            Task taskToDelete \u003d taskArray.get(number);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"            taskArray.remove(number);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"            result \u003d ui.showDelete(taskToDelete, taskArray.size());","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"            return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"        } catch (IndexOutOfBoundsException e1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"            if (number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"                return \"There is no such task.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"                return \"There are only \" + taskArray.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":86}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represents a Task to be done.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"     * Overrides the default Object::toString.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"     * @return String representation of a Todo object.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        return \"[T]\" + super.toString() + \" \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":" * Handles interactions with the users.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"        dukeGreeting();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"     * Prints out the initial duke greeting when the program first runs.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"    public String dukeGreeting() {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        String greeting \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"        greeting \u003d \"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"        return greeting;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"    public String showMark(Task taskToMark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskToMark;","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    public String showUnmark(Task taskToUnmark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskToUnmark;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"    public String showTaskOutput(Task task, int size) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"    public String showDelete(Task task, int size) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"    public String filter(TaskList tasklist) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        for (int i \u003d 1; i \u003c tasklist.getNumberOfTasks() + 1; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"            result +\u003d i + \". \" + tasklist.getTask(i - 1) + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"     * Terminates the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"    public String exit() {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":61}},{"path":"src/main/java/duke/WrongTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":" * Represents an Exception due to user inputting a wrong task keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class WrongTask extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public WrongTask(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"kalarisng":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kalarisng":24}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public void deadlineSuccess() throws DateTimeParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2019)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"                Deadline.createDeadline(\"return book /by 2019-10-15\").toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    public void deadlineException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        DateTimeParseException exception \u003d assertThrows(DateTimeParseException.class,","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"                () -\u003e Deadline.createDeadline(\"return book /by 2/12/2019\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        assertEquals(\"java.time.format.DateTimeParseException: \" + exception.getMessage(), exception.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kalarisng":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    public void taskDescriptionSuccess() throws EmptyDescription {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"        boolean isNotEmpty \u003d Parser.checkEmptyDescription(new String[]{\"todo\", \"borrow\", \"book\"});","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        assertTrue(isNotEmpty);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"    public void taskDescriptionException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        EmptyDescription exception \u003d assertThrows(EmptyDescription.class,","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"                () -\u003e Parser.checkEmptyDescription(new String[]{\"todo\"}));","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        assertEquals(\"OOPS!!! The description of todo cannot be empty.\", exception.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kalarisng":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"bye","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"kalarisng":7}}]
