[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kalarisng":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    protected final String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return \"[D]\" + super.toString() + \" \" + description + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    public Duke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        taskList \u003d storage.loadFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        Parser parser \u003d new Parser(taskList, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"        while (ui.hasNextInput()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"            parser.parse(ui.userInput());","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        duke.run();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kalarisng":25,"-":3}},{"path":"src/main/java/duke/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class EmptyDescription extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    public EmptyDescription(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"kalarisng":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    protected final String from;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"    protected final String to;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        return \"[E]\" + super.toString() + \" \" + description + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":17}},{"path":"src/main/java/duke/OutOfBounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class OutOfBounds extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    public OutOfBounds(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kalarisng":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    public void parse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        String[] arrNext \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        String next \u003d arrNext[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        if (Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"            ui.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"            if (arrNext.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"                if (Objects.equals(next, \"todo\") || Objects.equals(next, \"deadline\") || Objects.equals(next, \"event\") || Objects.equals(next, \"mark\") || Objects.equals(next, \"unmark\") || Objects.equals(next, \"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"                    if (!Objects.equals(next, \"list\") \u0026\u0026 !Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                        throw new EmptyDescription(\" The description of \" + next + \" cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"                if ((!Objects.equals(next, \"todo\") \u0026\u0026 !Objects.equals(next, \"deadline\") \u0026\u0026 !Objects.equals(next, \"event\"))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"                    if (!Objects.equals(next, \"list\") \u0026\u0026 !Objects.equals(next, \"mark\") \u0026\u0026 !Objects.equals(next, \"unmark\") \u0026\u0026 !Objects.equals(next, \"delete\") \u0026\u0026 !Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"                        throw new WrongTask(\" I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"         } catch (EmptyDescription | WrongTask e2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"            System.out.println(e2);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"            String nextLine \u003d ui.userInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"            arrNext \u003d nextLine.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"            next \u003d arrNext[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"        } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"            if (Objects.equals(next, \"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"                ui.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"        String after \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"            after \u003d arrNext[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"        } catch (ArrayIndexOutOfBoundsException exc) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"            System.out.println(\"I will show your saved tasks.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"        Task inputTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"        switch (next) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"            case \"todo\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"                inputTask \u003d new Todo(after);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"                taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"                storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"                String[] split \u003d after.split(\"/by \");","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"                LocalDate d1 \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"                inputTask \u003d new Deadline(split[0], d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"                taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"                storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"            case \"event\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"                String[] split \u003d after.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"                inputTask \u003d new Event(split[0], split[1].substring(5), split[2].substring(3));","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"                taskList.addTask(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"  \" + inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"                storage.appendToFile(inputTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"            case \"mark\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"                int number \u003d Integer.parseInt(after);","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"                try {","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"                    if (number \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"                        throw new OutOfBounds(\" There is no such element :-p\");","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"                } catch (OutOfBounds e3) {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"                    System.out.println(e3);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"kalarisng"},"content":"                Task toMarkDone \u003d taskList.getTask(number - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"kalarisng"},"content":"                toMarkDone.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\" \" + toMarkDone);","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"kalarisng"},"content":"                storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"kalarisng"},"content":"            case \"list\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"kalarisng"},"content":"                for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"kalarisng"},"content":"                    System.out.println(i + 1 + \".\" + taskList.getTask(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"kalarisng"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"kalarisng"},"content":"                int number \u003d Integer.parseInt(after);","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"kalarisng"},"content":"                try {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"kalarisng"},"content":"                    if (number \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"kalarisng"},"content":"                        throw new OutOfBounds(\" There is no such element :-p\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"kalarisng"},"content":"                } catch (OutOfBounds e3) {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"kalarisng"},"content":"                    System.out.println(e3);","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"kalarisng"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"kalarisng"},"content":"                Task toUnMarkDone \u003d taskList.getTask(number - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"kalarisng"},"content":"                toUnMarkDone.unMarkAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\" \" + toUnMarkDone);","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"kalarisng"},"content":"                storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"kalarisng"},"content":"            case \"delete\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"kalarisng"},"content":"                int number \u003d Integer.parseInt(after);","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"kalarisng"},"content":"                try {","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"kalarisng"},"content":"                    if (number \u003e taskList.getNumberOfTasks()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"kalarisng"},"content":"                        throw new OutOfBounds(\" There is no such element :-p\");","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"kalarisng"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"kalarisng"},"content":"                } catch (OutOfBounds e3) {","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"kalarisng"},"content":"                    System.out.println(e3);","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"kalarisng"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"kalarisng"},"content":"                Task toDelete \u003d taskList.getTask(number - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"kalarisng"},"content":"                taskList.deleteTask(number - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\" \" + toDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"kalarisng"},"content":"                storage.updateFile(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"kalarisng"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.io.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        TaskList taskList \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"                Task prevTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"                String[] commandInFile \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"                boolean isDoneInFile \u003d commandInFile[1].charAt(0) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"                if (commandInFile[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Todo(data.substring(6));","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"                } else if (commandInFile[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Deadline(commandInFile[2].substring(1), commandInFile[3].substring(1));","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"                } else if (commandInFile[0].equals(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"                    String[] splitString \u003d commandInFile[3].substring(1).split(\"-\");","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"                    prevTask \u003d new Event(commandInFile[2].substring(1), splitString[0], splitString[1].substring(1));","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"                    prevTask.isDone \u003d isDoneInFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"                    taskList.addTask(prevTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"kalarisng"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"kalarisng"},"content":"            System.out.println(\"File not found, created new file for you\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"kalarisng"},"content":"            File newFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kalarisng"},"content":"            File folder \u003d new File(\"data/duke.txt\".split(\"/\")[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kalarisng"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kalarisng"},"content":"                folder.mkdir();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kalarisng"},"content":"                newFile.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"kalarisng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kalarisng"},"content":"                System.out.println(\"Handle exception here\");","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kalarisng"},"content":"        return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kalarisng"},"content":"    public void appendToFile(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kalarisng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"kalarisng"},"content":"            String statusOfTask \u003d task.getStatusIcon();","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kalarisng"},"content":"            String descriptionOfTask \u003d task.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kalarisng"},"content":"            String taskType \u003d task.toString().substring(1,2);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kalarisng"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kalarisng"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" + ((Deadline) task).by + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kalarisng"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kalarisng"},"content":"                fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" + ((Event) task).from + \"- \" + ((Event) task).to + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"kalarisng"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"kalarisng"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kalarisng"},"content":"    public void updateFile(TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kalarisng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kalarisng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kalarisng"},"content":"            for (int j \u003d 0; j \u003c taskList.getNumberOfTasks(); j++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kalarisng"},"content":"                Task currentTask \u003d taskList.getTask(j);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"kalarisng"},"content":"                String statusOfTask \u003d currentTask.getStatusIcon();","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"kalarisng"},"content":"                String descriptionOfTask \u003d currentTask.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"kalarisng"},"content":"                String taskType \u003d currentTask.toString().substring(1,2);","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"kalarisng"},"content":"                if (currentTask instanceof Todo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"kalarisng"},"content":"                } else if (currentTask instanceof Deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" + ((Deadline) currentTask).by + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"kalarisng"},"content":"                } else if (currentTask instanceof Event) {","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"kalarisng"},"content":"                    fw.write(taskType + \"|\" + statusOfTask + \" | \" + descriptionOfTask + \"| \" + ((Event) currentTask).from + \"- \" + ((Event) currentTask).to + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"kalarisng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"kalarisng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"kalarisng"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"kalarisng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kalarisng"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kalarisng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":93}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    protected final String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        return \"[\" + getStatusIcon() + \"]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":27}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"        taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"        return taskArray.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"        return taskArray.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"        taskArray.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"        taskArray.remove(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":27}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        return \"[T]\" + super.toString() + \" \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":12}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"        dukeGreeting();","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"    public void dukeGreeting() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kalarisng"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kalarisng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kalarisng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kalarisng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kalarisng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kalarisng"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kalarisng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kalarisng"},"content":"    public boolean hasNextInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kalarisng"},"content":"        return scanner.hasNext();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kalarisng"},"content":"    public String userInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kalarisng"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kalarisng"},"content":"    public void exit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kalarisng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kalarisng"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kalarisng":36}},{"path":"src/main/java/duke/WrongTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"public class WrongTask extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"    public WrongTask(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"kalarisng"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"kalarisng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"kalarisng"},"content":"        return \"OOPS!!!\" + getMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"kalarisng"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kalarisng"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"kalarisng":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kalarisng"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"kalarisng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"kalarisng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"kalarisng"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"kalarisng"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"kalarisng"},"content":"bye","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"kalarisng"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"kalarisng":7}}]
