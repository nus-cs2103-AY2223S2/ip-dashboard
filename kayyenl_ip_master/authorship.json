[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"# Muse: The cute task manager! \u003cimg src\u003d\"https://pbs.twimg.com/media/Cr1LLRDUEAA2vk8.jpg\" width\u003d4% height\u003d4%\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"Muse is a simple app that organises üìñ your tasks \u0026 life!","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"**Let\u0027s get you started!**","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"Here are some basic things you can do: ","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"- list out tasks  ```list```","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"- add a task üë∑ ```todo mop the floor```","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"- mark/unmark tasks as done ‚úîÔ∏è (or undone) ```mark 6```","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"- Register actual dates (for events) üìÜ ```event fireworks /from 14/01/2023 1600/to 16/01/2023 2000```","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"- set deadlines \u0026 events too! üò≤ ```deadline do assignment /by Monday```","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"- For more **cool instructions**, simply ask muse **FOR MORE**! üó£Ô∏è ```help```","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"## To use the app (JAR file) üò≥","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"1. Go into the CLI (use cmd for Windows üíª or Terminal for Mac üçé), and navicate to the directory this JAR file is in. üîç","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"2. Execute the command ```java -jar duke.jar``` in order to start the app! üî®","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"3. Have fun! *Your organized life starts from here...* ","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"-":4,"kayyenl":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"kayyenl":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"# Muse: The cute task manager! \u003cimg src\u003d\"https://pbs.twimg.com/media/Cr1LLRDUEAA2vk8.jpg\" width\u003d4% height\u003d4%\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"Muse is a simple app that organises üìñ your tasks \u0026 life!","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"\"\"Let\u0027s get you started!\"\"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"Here are some basic things you can do: ","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"- list out tasks  ```list```","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"- add a task üë∑ ```todo mop the floor```","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"- mark/unmark tasks as done ‚úîÔ∏è (or undone) ```mark 6```","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"- set deadlines \u0026 events too! üò≤ ```deadline do assignment /by Monday```","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"- For more **cool instructions**, simply ask muse! üó£Ô∏è ```help```","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"## To use the app (JAR file) üò≥","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"1. Go into the CLI, and navicate to the directory this JAR file is in. üîç","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"2. Execute the command ```java -jar duke.jar``` in order to start the app! üî®","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"3. Have fun! *Your organized life starts from here...* ","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"-":4,"kayyenl":13}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"[D] [ ] pack bags to return SG (by: 24-Jan-2023)","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"[E] [X] fly back to Singapore (by: 25-Jan-2023 to: 26-Jan-2023)","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"[D] [ ] do CS2103 Quiz (by: Week 5 Monday)","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"[E] [ ] attend NUS fair (by: 07-Feb-2023 to: 08-Feb-2023)","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"kayyenl":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.visuals.DialogBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.visuals.GuiCustomiser;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import duke.visuals.GuiHelper;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":" * Duke Class: Serves as entry point of the program, or JAR file.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    private ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    private VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    private TextField userInput \u003d new TextField();","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    private Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    private Image muse \u003d new Image(this.getClass().getResourceAsStream(\"/images/muse.jfif\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"            AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            String textDir \u003d System.getProperty(\"user.dir\") + \"/duke.txt\";","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"            File file \u003d new File(textDir);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"            Storage.loadData(textDir, file, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"            scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"            mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"            scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"            GuiCustomiser.setMuseStage(stage);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"            GuiCustomiser.boxDimensionChange(mainLayout, userInput, sendButton, dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"            GuiCustomiser.setMuseScrollPaneVisuals(scrollPane);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"            GuiCustomiser.setMuseAnchorPaneVisuals(mainLayout, scrollPane, sendButton, userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                    DialogBox.getDukeDialog(new Label(Ui.doGreeting()), new ImageView(muse)));","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"            GuiHelper.addEventListeners","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"                    (sendButton, userInput, dialogContainer, pw, textDir, tasks, stage, user, muse, scrollPane);","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"            Storage.saveData(pw, textDir, tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"            Ui.doFarewell();","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"        catch(IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"-":3,"kayyenl":74}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/exceptions/OutOfIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class OutOfIndexException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public OutOfIndexException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/exceptions/VagueInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class VagueInputException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public VagueInputException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/exceptions/WrongBooleanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class WrongBooleanException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public WrongBooleanException(String errorMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.OutOfIndexException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.VagueInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.WrongBooleanException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import duke.visuals.DialogBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"import duke.visuals.DialogBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":" * Handles input cases by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"     * Handles text inputs, and manages the respective Scene elements according to what ever","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"     * text input from the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"     * @param dialogContainer this is an GUI entry shown on the screen can be showing","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     *                        either user/muse\u0027s side of the conversation.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     * @param tasks Stores the Tasks objects into","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     * @param userInput this contains the text, String info of whatever is being input from the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * @param user contains the image file of the user\u0027s profile.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     * @param muse contains the image file of muse\u0027s profile.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public static void handleInputs(VBox dialogContainer, TaskList tasks, TextField userInput, Image user, Image muse) {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(userText, new ImageView(user)));","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        String outputString \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"        boolean hasHandledInput \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        String[] splitArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"        handleAndOutputString result \u003d new handleAndOutputString(hasHandledInput, outputString);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"            assert (!hasHandledInput) : \"The program thinks it\u0027s done processing the commands!\\n\" +","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"                    \"This is dangerous, please take a look @ Parser.java. :0 \\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"            result \u003d handleOneWordCommands(input, tasks, splitArr, result);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"            result \u003d handleMark(tasks, splitArr, result);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"            result \u003d handleDelete(splitArr, tasks, result);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"            result \u003d handleFind(input, splitArr, tasks, result);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"            result \u003d handleTasks(splitArr, input, tasks, result);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"            if (result.getHasHandled() \u003d\u003d false){","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                throw new VagueInputException(\"Oh no! What do you mean? \\n\" + \"I\u0027m confused. Please specify... @.@\");","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"        catch (VagueInputException ex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        } catch (OutOfIndexException ex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"        } catch (WrongBooleanException ex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"                DialogBox.getDukeDialog(new Label(result.getOutputString()), new ImageView(muse)));","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"    private static boolean setCaseHandled() {","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"        return true;","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"    private static handleAndOutputString handleMark(TaskList tasks, String[] splitArr, handleAndOutputString result)","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"            throws OutOfIndexException, WrongBooleanException {","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"        if ((splitArr[0].equals(\"mark\") || splitArr[0].equals(\"unmark\")) \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"            if ((Integer.parseInt(splitArr[1])) \u003e tasks.getSize()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"                throw new OutOfIndexException(\"Help! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"                        \"The number has to be within range of our task-list!\\n\" + \"try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"            if (splitArr[0].equals(\"mark\") \u0026\u0026","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"                    tasks.getTask(Integer.parseInt(splitArr[1]) - 1).getMark() !\u003d false) {","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"                throw new WrongBooleanException(\"Hey! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"                        \"This is already done. You can\u0027t mark it again. :0 \\n\" + \"try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"            } else if (splitArr[0].equals(\"unmark\") \u0026\u0026","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                    tasks.getTask(Integer.parseInt(splitArr[1]) - 1).getMark() !\u003d true) {","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"                throw new WrongBooleanException(\"Hey! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"                        \"This is undone. You can\u0027t mark it undone again. :0 \\n\" + \"try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(tasks.mark(splitArr[0], (Integer.parseInt(splitArr[1]) - 1)));","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"        } return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"    private static handleAndOutputString handleOneWordCommands(String input, TaskList tasks,","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"            String[] splitArr, handleAndOutputString result) throws VagueInputException {","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"        String outputString \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"        if (input.equals(\"bye\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.doFarewell());","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"        if (input.equals(\"help\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.generateHelpSheet());","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"        if (input.equals(\"list\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(tasks.listThings()));","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"        if (splitArr.length \u003d\u003d 1 \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"            throw new VagueInputException(\"Oh no! What do you mean? \\n\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"kayyenl"},"content":"                    \"I\u0027m confused. Please specify... @.@\");","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"kayyenl"},"content":"    private static handleAndOutputString handleDelete(String[] splitArr,","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"kayyenl"},"content":"            TaskList tasks, handleAndOutputString result) throws OutOfIndexException {","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"kayyenl"},"content":"        if (splitArr[0].equals(\"delete\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"kayyenl"},"content":"            if ((Integer.parseInt(splitArr[1])) \u003e tasks.getSize()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kayyenl"},"content":"                throw new OutOfIndexException(\"Help! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"kayyenl"},"content":"                        \"The number has to be within range of our task-list!\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"kayyenl"},"content":"                        \"Please try again!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"kayyenl"},"content":"            Task newTask \u003d tasks.getTask(Integer.parseInt(splitArr[1]) - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"kayyenl"},"content":"            tasks.removeTask(Integer.parseInt(splitArr[1]) - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(tasks.deleteReport(newTask)));","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"kayyenl"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"kayyenl"},"content":"    private static handleAndOutputString handleFind(String input, String[] splitArr,","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"kayyenl"},"content":"            TaskList tasks, handleAndOutputString result) throws OutOfIndexException {","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"kayyenl"},"content":"        if (splitArr[0].equals(\"find\") \u0026\u0026 ! result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"kayyenl"},"content":"            String searchTerm \u003d input.substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"kayyenl"},"content":"            boolean hasFoundAnyTerms \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"kayyenl"},"content":"            String outputResults \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"kayyenl"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"kayyenl"},"content":"                if (!tasks.getTask(i).getContent().contains(searchTerm)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"kayyenl"},"content":"                    continue;","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"kayyenl"},"content":"                if (outputResults \u003d\u003d \"\") {","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"kayyenl"},"content":"                    outputResults +\u003d (i + 1) + tasks.getTask(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"kayyenl"},"content":"                    hasFoundAnyTerms \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"kayyenl"},"content":"                    continue;","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"kayyenl"},"content":"                outputResults +\u003d \"\\n\" + (i + 1) + tasks.getTask(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"kayyenl"},"content":"                hasFoundAnyTerms \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.outputSearchResults(hasFoundAnyTerms, outputResults));","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"kayyenl"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"kayyenl"},"content":"    private static handleAndOutputString handleTasks(String[] splitArr, String input,","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"kayyenl"},"content":"            TaskList tasks, handleAndOutputString result) {","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"kayyenl"},"content":"        if (splitArr[0].equals(\"todo\") \u0026\u0026 ! result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"kayyenl"},"content":"            Todo newTodo \u003d new Todo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"kayyenl"},"content":"            tasks.addTask(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(tasks.addReport(newTodo)));","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"kayyenl"},"content":"        if (splitArr[0].equals(\"deadline\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"kayyenl"},"content":"            Deadline newDead \u003d new Deadline(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"kayyenl"},"content":"            tasks.addTask(newDead);","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(tasks.addReport(newDead)));","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"kayyenl"},"content":"        if (splitArr[0].equals(\"event\") \u0026\u0026 !result.getHasHandled()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"kayyenl"},"content":"            Event newEvent \u003d new Event(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"kayyenl"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"kayyenl"},"content":"            result.setOutputString(Ui.formatStr(tasks.addReport(newEvent)));","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"kayyenl"},"content":"            result.setTrue();","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":180,"author":{"gitId":"kayyenl"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":183,"author":{"gitId":"kayyenl"},"content":" class handleAndOutputString {","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"kayyenl"},"content":"    private String outputString;","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"kayyenl"},"content":"    private boolean hasHandledInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":187,"author":{"gitId":"kayyenl"},"content":"    public handleAndOutputString(boolean hasHandledInput, String outputString) {","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"kayyenl"},"content":"        this.outputString \u003d outputString;","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"kayyenl"},"content":"        this.hasHandledInput \u003d hasHandledInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":192,"author":{"gitId":"kayyenl"},"content":"    public handleAndOutputString setTrue() {","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"kayyenl"},"content":"        this.hasHandledInput \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"kayyenl"},"content":"        return this;","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":197,"author":{"gitId":"kayyenl"},"content":"    public handleAndOutputString setOutputString(String outputString) {","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"kayyenl"},"content":"        this.outputString \u003d outputString;","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"kayyenl"},"content":"        return this;","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":202,"author":{"gitId":"kayyenl"},"content":"    public String getOutputString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"kayyenl"},"content":"        return this.outputString;","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":206,"author":{"gitId":"kayyenl"},"content":"    public boolean getHasHandled() {","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"kayyenl"},"content":"        return this.hasHandledInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":209,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":209}},{"path":"src/main/java/duke/helpers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":" * Loads existing tasks into TaskList structure and Stores Task data after program termination.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"     * Pulls data out of duke.txt and loads data into TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"     * @param textDir String that stores the filepath.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"     * @param file reference to the file that stores the Task data.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     * @param tasks structure that will store the tasks read from the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public static void loadData(String textDir, File file, TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"            System.out.println(Ui.formatStr(\"Oh dear! There is no save file. Let me create one for you.\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            System.out.println(\"........CREATING.......\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        PrintWriter pw \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        while (br.ready()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"            line \u003d br.readLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"            tasks.addLine(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     * Saves data out of duke.txt and loads data into TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     * @param pw c","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * @param textDir String that stores the filepath.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     * @param tasks structure that stores the tasks read from the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public static void saveData(PrintWriter pw, String textDir, TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        pw.print(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        pw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        PrintWriter clearer \u003d new PrintWriter(textDir);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        clearer.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"        PrintWriter reWriter \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"            reWriter.write(tasks.getTask(i).printRecord());","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        reWriter.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":54}},{"path":"src/main/java/duke/helpers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":" * TaskList class: Structure that stores each task.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"     * TaskList constructor: Structure that stores each task.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"     * Adds task into the TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * Reads in a char (length 1 string), and outputs whether it is checked or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     * @param mark Reads char, could be X or white space.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"    public boolean checkMark(String mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        if (mark.equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        } else return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"     * Reads in a index, which is the index to be removed in the structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"     * @param index Indicates which index of the structure to delete.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"     * Adds a task object from the load storage into this TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"     * @param line Feeds in the line from load storage, interpretes it into a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"    public void addLine(String line) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"T\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"            String todo \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"            Todo newTodo \u003d new Todo(todo, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newTodo);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"D\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"            String deadline \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"            Deadline newDead \u003d new Deadline(deadline, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newDead);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"E\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"            String event \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"            Event newEvent \u003d new Event(event, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newEvent);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"     * Provides the string for Ui to print to the screen, whenever Task added to TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"     * @param task Gives the Task object that will be outputted.","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"    public String addReport(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"        String returnStr \u003d \"gotcha.\\nyou added: \" + task.toString().substring(2) + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                + this.numberOfTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"     * Provides the string for Ui to print to the screen, whenever Task removed to TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"     * @param task Gives the Task object that will be outputted.","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"    public String deleteReport(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"        String returnStr \u003d \"gotcha.\\nyou you have deleted: \" + task.toString().substring(2) + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                + this.numberOfTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"     * Switches the mark attribute of Task object within the TaskList structure by passing index.","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"     * @param marked Redundant input","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"     * @param index Passes in index of Task element for TaskList to change the mark boolean.","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"    public String mark(String marked, int index) {","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"kayyenl"},"content":"        return this.tasks.get(index).setMark();","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"kayyenl"},"content":"     * Provides the size of the TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"    public String numberOfTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"kayyenl"},"content":"        return \"You have \" + this.tasks.size() + \" tasks in this list!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"kayyenl"},"content":"     * Returns a String that details the contents of the TaskList\u0027s Task objects.","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kayyenl"},"content":"    public String listThings() {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"kayyenl"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"kayyenl"},"content":"            return \"Oh... You currently have 0 tasks.... @.@\";","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d \"Alright, here are the things: \\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"kayyenl"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"kayyenl"},"content":"            if (i \u003d\u003d this.tasks.size() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + this.tasks.get(i).toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"kayyenl"},"content":"        } return returnstr;","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kayyenl":138}},{"path":"src/main/java/duke/helpers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"     * @param str String to be formatted, which will be shown in terminal.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    public static String formatStr(String str) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d  \"..................................\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"                + str + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"                + \"..................................\";","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"        return returnstr;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     * Prints greeting message upon startup.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public static String doGreeting() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        String greeting \u003d \"Hello! I\u0027m Muse!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"                + \"What can I do for you?\\n\" +","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"                \"enter \\\"help\\\" to see our help-sheet!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"        return greeting;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"     * Prints farewell message before program terminates.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    public static String doFarewell() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"        String goodbyeMessage \u003d \"Bye. Come back again!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        return goodbyeMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     * Prints the found results, also using formatStr.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     * @param hasFound Indicates whether a search result has been found or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * @param outputResult Contains the entire row by row result of results.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"    public static String outputSearchResults(boolean hasFound, String outputResult) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"        String returnStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        if (hasFound) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"            returnStr \u003d \"Gotcha. We found the following terms: \\n\" + outputResult;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"            returnStr \u003d \"Sorry... we couldn\u0027t find any results matching :(\";","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"    public static String generateHelpSheet() {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"        String helpMessage \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"Welcome to Muse: the Chatbot that organizes your tasks!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"Here are the common instructions we use: \\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"todo xxx - this enters a Todo task, where xxx will be the task name.\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"deadline xxx /by yyy - this enters a deadline task, where xxx will be the task name.\" +","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                \"yyy will be the deadline timing.\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"deadline xxx /by dd/mm/yyyy TTTT (time in 24h)\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                \" - entering deadlines in this style registers the actual date!\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"event xxx /from yyy /to zzz - This enters a event task, with yyy and zzz being the start\" +","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                \"and end times of the event. They can be in dd/mm/yyyy TTTT form too. \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"\\n----------------USEFUL COMMANDS-------------------\\n\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"find xxxx - Muse will find entry/entries with the word xxxx inside!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"delete x - Muse will delete the entry with the entry number x!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"mark x - Muse will mark the entry with the entry number x as DONE!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"unmark x - Muse will mark the entry with the entry number x as UNDONE.\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"list - Muse will give you a comprehensive list of tasks that you have at the moment!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"bye - this ends Muse, as the current list of tasks and their states are saved!\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"        helpMessage +\u003d \"now, go and give Muse a try! make your life easier!! \u003e:D\";","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"        return helpMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":74}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"    private LocalDateTime dateTypeDeadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    private String deadlineDue;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    public Deadline(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(9).split(\"/\")[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        String[] strArr \u003d content.split(\"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        String deadlineTime \u003d strArr[1].substring(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"        if (deadlineTime.contains(\"/\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"            String[] strArrDate \u003d deadlineTime.split(\"/\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"            this.deadlineDue \u003d this.dateFormat(strArrDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"            this.deadlineDue \u003d \"(\" + \"by:\" + strArr[1].substring(0) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public String dateFormat(String[] strArrDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        LocalDateTime dateTypeDeadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        dateTypeDeadline \u003d LocalDateTime.of(Integer.parseInt(strArrDate[2].substring(0,4)),","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[1]), Integer.parseInt(strArrDate[0]),","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(5,7)),","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(7)));","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MMM-YYYY\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        return \"(\" + \"by: \" + dtf.format(dateTypeDeadline) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    public Deadline(String content, boolean mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"        super(content.split(\"\\\\(\")[0], mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        this.deadlineDue \u003d \"(\" + content.split(\"\\\\(\")[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"        String sign \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"        return \". [D][\" +super.markSign(super.isMark) + \"] \" + super.content + deadlineDue;","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        return \"[D]\" + \" [\" + super.markSign(super.isMark) + \"] \" + super.content + this.deadlineDue + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":44}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":" * Subclass of Task, its a Task with a start duration and end duration.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    private String eventSpan;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"     * Event Constructor: Takes in and process event content and deadline, stores it.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"     * @param content Contains the typed input read from user, changes it into Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    public Event(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(6).split(\"/\")[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        String[] strArr \u003d content.split(\"/from\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        String[] eventTime \u003d strArr[1].substring(1).split(\"/to\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        String eventStartTime \u003d eventTime[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        String eventEndTime \u003d eventTime[1].substring(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        if (eventStartTime.contains(\"/\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            String[] strArrStart \u003d eventStartTime.split(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            eventStartTime \u003d dateFormat(strArrStart);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        } if (eventEndTime.contains(\"/\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"            String[] strArrEnd \u003d eventEndTime.split(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"            eventEndTime \u003d dateFormat(strArrEnd);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        this.eventSpan \u003d \"(\" + \"by: \" + eventStartTime + \" to: \" + eventEndTime + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"     * Formats the date input by user neatly.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"     * @param strArrDate Formats the user\u0027s date input into a neat date notation.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"    public String dateFormat(String[] strArrDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        LocalDateTime dateTypeEvent;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"        dateTypeEvent \u003d LocalDateTime.of(Integer.parseInt(strArrDate[2].substring(0,4)),","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[1]), Integer.parseInt(strArrDate[0]),","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(5,7)),","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(7,9)));","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MMM-YYYY\");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        return dtf.format(dateTypeEvent);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"     * Event constructor: Takes in a boolean also, allowing is \"marked\" var to be customized.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"    public Event(String content, boolean mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        super(content.split(\"\\\\(\")[0], mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"        this.eventSpan \u003d \"(\" + content.split(\"\\\\(\")[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"        String sign \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"        return \". [E][\" + super.markSign(super.isMark) + \"] \" + super.content + this.eventSpan;","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"     * Provides the String to be stored in duke.txt when program terminates.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        return \"[E]\" + \" [\" + super.markSign(super.isMark) + \"] \" + super.content + this.eventSpan + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":" * Represents a Task object in TaskList, has 3 subclasses (Todo, Event, Deadline)","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    protected boolean isMark;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    protected String content;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"     * Constructs an object of the Task class. By default, isMark field is false.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        this.isMark \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     * Constructs an object of the Task class.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"     * @param alternative sets the boolean field isMark into true/false to initialize the Task obj.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"    public Task(String content, boolean alternative) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        this.isMark \u003d alternative;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        return this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    public boolean getMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        return this.isMark;","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     * Allows for changing of the \"isMark\" field within the Task class. Inverts the isMark.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    public String setMark() {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"        this.isMark \u003d !this.isMark;","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        String outputStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"        if (isMark \u003d\u003d true) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"            outputStr \u003d \"NICE! You finished this: \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                    + \"[\" + markSign(this.isMark) + \"] \" + this.content;","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"            outputStr \u003d \"Ok, you have undone this: \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"                    + \"[\" + markSign(this.isMark) + \"] \" + this.content;","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"        return Ui.formatStr(outputStr);","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"     * returns true/false depending on the char read in.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"     * @param markBool represents the char read in (could be X or white space)","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"    public String markSign(boolean markBool) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"        if(markBool \u003d\u003d true) return \"X\";","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"        else return \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"        return \". [\" + markSign(this.isMark) + \"] \" + this.content;","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"        return this.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":70}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(5));","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"        return \". [T][\" + super.markSign(super.isMark) + \"] \" + super.content;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    public Todo(String content, boolean isMark) {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"        super(content, isMark);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        return \"[T]\" + \" [\" + super.markSign(super.isMark) + \"] \" + super.content + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":19}},{"path":"src/main/java/duke/visuals/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.visuals;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    private Label text;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"     * Creates the default dialog box that we will see in Muse\u0027s interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"     * This includes text (label l) and an image (imageview iv).","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     * @param l this is a label, and provides the text that will be displayed in an","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"     *                          individual DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"     * @param iv This provides the image (aka the profile pic) that will be viewed","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"     *                          in each individual DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        text.setPadding(new Insets(0, 4, 0, 4));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        text.setMaxWidth(400);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"        displayPicture.setFitHeight(65.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"        displayPicture.setFitWidth(65.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"     * This is a helper function that generates a DialogBox, with the user\u0027s avatar image.","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"     * @param l this provides text for the user\u0027s DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"     * @param iv this provides the image for user\u0027s DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"     * This is a helper function that generates a DialogBox, with muse\u0027s (the bot) avatar image.","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"     * @param l this provides text for the muse\u0027s DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"     * @param iv this provides the image for muse\u0027s DialogBox.","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kayyenl":66}},{"path":"src/main/java/duke/visuals/GuiCustomiser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.visuals;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"public class GuiCustomiser {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    public static void setMuseAnchorPaneVisuals","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"            (AnchorPane mainLayout, ScrollPane scrollPane, Button sendButton, TextField userInput) {","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public static void setMuseScrollPaneVisuals(ScrollPane scrollPane) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        scrollPane.setPrefSize(485, 535);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    public static void setMuseStage(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"        stage.setTitle(\"Muse\");","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        stage.setMinWidth(500.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    public static void boxDimensionChange","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"            (AnchorPane mainLayout, TextField userInput, Button sendButton, VBox dialogContainer) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        mainLayout.setPrefSize(500.0, 600.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"        userInput.setPrefWidth(425.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kayyenl":44}},{"path":"src/main/java/duke/visuals/GuiHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.visuals;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"public class GuiHelper {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    public static void addEventListeners","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"            (Button sendButton, TextField userInput, VBox dialogContainer,","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"             PrintWriter pw, String textDir, TaskList tasks, Stage stage,","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"             Image user, Image muse, ScrollPane scrollPane) {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"                    handleClose(pw, textDir, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"                    stage.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"            Parser.handleInputs(dialogContainer, tasks, userInput, user, muse);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"            if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"                    handleClose(pw, textDir, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"                    stage.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"            Parser.handleInputs(dialogContainer, tasks, userInput, user, muse);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"        }));","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"    private static void handleClose(PrintWriter pw, String textDir, TaskList tasks) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"        Storage.saveData(pw, textDir, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"        Ui.doFarewell();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kayyenl":58}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Deadline testInput \u003d new Deadline(\"deadline do the dishes /by 15/08/2020 2300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][ ] do the dishes (by: 15-Aug-2020)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Deadline testInput \u003d new Deadline(\"deadline come back from japan /by 25/01/2022 1900\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][X] come back from japan (by: 25-Jan-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][ ] come back from japan (by: 25-Jan-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class EventTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Event testInput \u003d new Event(\"event do the dishes /from 15/08/2020 2300 /to 19/10/2022 1500\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][ ] do the dishes (by: 15-Aug-2020 to: 19-Oct-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Event testInput \u003d new Event(\"event come back from japan /from 25/01/2022 1900 /to 11/02/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][X] come back from japan (by: 25-Jan-2022 to: 11-Feb-2023)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][ ] come back from japan (by: 25-Jan-2022 to: 11-Feb-2023)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Todo testInput \u003d new Todo(\"todo do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][ ] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Todo testInput \u003d new Todo(\"todo do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][X] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][ ] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"todo bake cake","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"deadline do homework /by Monday 5pm","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"event fireworks day /from Friday 4pm /to Wednesday 3pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"kayyenl":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\ip\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"kayyenl":1}}]
