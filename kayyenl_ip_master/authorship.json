[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"kayyenl":1}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"[T] [X] work","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"[T] [ ] mop floor","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"[T] [ ] work","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"[T] [ ] work","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"[D] [ ] pack bags to return SG (by: 24-Jan-2023)","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"[E] [ ] fly back to Singapore (by: 25-Jan-2023 to: 26-Jan-2023)","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":" * Duke Class: Serves as entry point of the program, or JAR file.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"            Ui.doGreeting();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"            String textDir \u003d System.getProperty(\"user.dir\")+\"/duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"            File file \u003d new File(textDir);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"            Storage.loadData(textDir, file, tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"            Parser.handleInputs(sc, tasks, pw);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"            Storage.saveData(pw, textDir, tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"            Ui.doFarewell();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"            catch(IOException e){","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        } ","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"-":5,"kayyenl":33}},{"path":"src/main/java/duke/exceptions/OutOfIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class OutOfIndexException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public OutOfIndexException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/exceptions/VagueInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class VagueInputException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public VagueInputException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/exceptions/WrongBooleanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class WrongBooleanException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public WrongBooleanException(String errorMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kayyenl":7}},{"path":"src/main/java/duke/helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.OutOfIndexException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.VagueInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.WrongBooleanException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":" * Handles input cases by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     * Handles inputs, and outputs the according string.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"     * @param sc Scans the inputs of the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"     * @param tasks Stores the Tasks objects into","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"     * @param pw Writes to the screen for the user to comprehend.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    public static void handleInputs(Scanner sc, TaskList tasks, PrintWriter pw) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"            String[] splitArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"                    System.out.println(Ui.formatStr(tasks.listThings()));","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"                    throw new VagueInputException(\"Oh no! What do you mean? \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"                            \"I\u0027m confused. Please specify... @.@\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"                else if (splitArr[0].equals(\"mark\") || splitArr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"                    if ((Integer.parseInt(splitArr[1])) \u003e tasks.getSize()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"                        throw new OutOfIndexException(\"Help! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"                                \"The number has to be within range of our task-list!\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                                \"try again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"                    if (splitArr[0].equals(\"mark\") \u0026\u0026","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"                            tasks.getTask(Integer.parseInt(splitArr[1]) - 1).","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                                    getMark() !\u003d false) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"                        throw new WrongBooleanException(\"Hey! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"                                \"This is already done. You can\u0027t mark it again. :0 \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"                                \"try again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"                    } else if (splitArr[0].equals(\"unmark\") \u0026\u0026","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"                            tasks.getTask(Integer.parseInt(splitArr[1]) - 1).","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"                                    getMark() !\u003d true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"                        throw new WrongBooleanException(\"Hey! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"                                \"This is undone. You can\u0027t mark it undone again. :0 \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"                                \"try again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"                    tasks.mark(splitArr[0], (Integer.parseInt(splitArr[1]) - 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                    if ((Integer.parseInt(splitArr[1])) \u003e tasks.getSize()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"                        throw new OutOfIndexException(\"Help! \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                                \"The number has to be within range of our task-list!\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"                                \"Please try again!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"                    Task newTask \u003d tasks.getTask(Integer.parseInt(splitArr[1]) - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"                    tasks.removeTask(Integer.parseInt(splitArr[1]) - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"                    System.out.println(Ui.formatStr(tasks.deleteReport(newTask)));","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr[0].equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"                    String searchTerm \u003d input.substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"                    boolean hasFoundAnyTerms \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"                    String outputResults \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"                    for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"                        if (tasks.getTask(i).getContent().contains(searchTerm)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"                            if (outputResults \u003d\u003d \"\") {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"                                outputResults +\u003d (i + 1) + tasks.getTask(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"                                hasFoundAnyTerms \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"                            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"                                outputResults +\u003d \"\\n\" + (i + 1) + tasks.getTask(i).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"                                hasFoundAnyTerms \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"                            }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"                    Ui.outputSearchResults(hasFoundAnyTerms, outputResults);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"                    Todo newTodo \u003d new Todo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"                    tasks.addTask(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"                    System.out.println(Ui.formatStr(tasks.addReport(newTodo)));","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"                    pw.write(newTodo.printRecord());","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"                    Deadline newDead \u003d new Deadline(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                    tasks.addTask(newDead);","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"                    System.out.println(Ui.formatStr(tasks.addReport(newDead)));","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"                    pw.write(newDead.printRecord());","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"                } else if (splitArr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"                    Event newEvent \u003d new Event(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"                    tasks.addTask(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"                    System.out.println(Ui.formatStr(tasks.addReport(newEvent)));","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"                    pw.write(newEvent.printRecord());","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"                } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"                    throw new VagueInputException(\"Oh no! What do you mean? \\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"                            \"I\u0027m confused. Please specify... @.@\");","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"            } catch (VagueInputException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"                System.out.println(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"                continue;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"            } catch (OutOfIndexException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"                System.out.println(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"                continue;","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"            } catch (WrongBooleanException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"                System.out.println(Ui.formatStr(ex.getMessage()));","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"kayyenl"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"                continue;","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":117}},{"path":"src/main/java/duke/helpers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":" * Loads existing tasks into TaskList structure and Stores Task data after program termination.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"     * Pulls data out of duke.txt and loads data into TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"     * @param textDir String that stores the filepath.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"     * @param file reference to the file that stores the Task data.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     * @param tasks structure that will store the tasks read from the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public static void loadData(String textDir, File file, TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"            System.out.println(Ui.formatStr(\"Oh dear! There is no save file. Let me create one for you.\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            System.out.println(\"........CREATING.......\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        PrintWriter pw \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        while (br.ready()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"            line \u003d br.readLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"            tasks.addLine(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     * Saves data out of duke.txt and loads data into TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     * @param pw c","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * @param textDir String that stores the filepath.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     * @param tasks structure that stores the tasks read from the txt file.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public static void saveData(PrintWriter pw, String textDir, TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        pw.print(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        pw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        PrintWriter clearer \u003d new PrintWriter(textDir);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        clearer.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"        PrintWriter reWriter \u003d new PrintWriter(new FileWriter(textDir, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"            reWriter.write(tasks.getTask(i).printRecord());","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        reWriter.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":54}},{"path":"src/main/java/duke/helpers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":" * TaskList class: Structure that stores each task.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"     * TaskList constructor: Structure that stores each task.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"     * Adds task into the TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"     * Reads in a char (length 1 string), and outputs whether it is checked or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     * @param mark Reads char, could be X or white space.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"    public boolean checkMark(String mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        if (mark.equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        } else return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"     * Reads in a index, which is the index to be removed in the structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"     * @param index Indicates which index of the structure to delete.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"     * Adds a task object from the load storage into this TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"     * @param line Feeds in the line from load storage, interpretes it into a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"    public void addLine(String line) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"T\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"            String todo \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"            Todo newTodo \u003d new Todo(todo, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newTodo);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"D\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"            String deadline \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"            Deadline newDead \u003d new Deadline(deadline, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newDead);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"        if (line.substring(1,2).equals(\"E\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"            String event \u003d line.substring(8);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"            Event newEvent \u003d new Event(event, this.checkMark(line.substring(5,6)));","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"            this.addTask(newEvent);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"     * Provides the string for Ui to print to the screen, whenever Task added to TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"     * @param task Gives the Task object that will be outputted.","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"    public String addReport(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"        String returnStr \u003d \"gotcha.\\nyou added: \" + task.toString().substring(2) + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                + this.numberOfTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"     * Provides the string for Ui to print to the screen, whenever Task removed to TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"     * @param task Gives the Task object that will be outputted.","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"    public String deleteReport(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"        String returnStr \u003d \"gotcha.\\nyou you have deleted: \" + task.toString().substring(2) + \"\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                + this.numberOfTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"     * Switches the mark attribute of Task object within the TaskList structure by passing index.","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"     * @param marked Redundant input","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"     * @param index Passes in index of Task element for TaskList to change the mark boolean.","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"    public void mark(String marked, int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"kayyenl"},"content":"        this.tasks.get(index).setMark();","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"kayyenl"},"content":"     * Provides the size of the TaskList structure.","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"    public String numberOfTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"kayyenl"},"content":"        return \"You have \" + this.tasks.size() + \" tasks in this list!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"kayyenl"},"content":"     * Returns a String that details the contents of the TaskList\u0027s Task objects.","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kayyenl"},"content":"    public String listThings() {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d \"Alright, here are the things: \\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"kayyenl"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"kayyenl"},"content":"            if (i \u003d\u003d this.tasks.size() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + this.tasks.get(i).toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"kayyenl"},"content":"        } return returnstr;","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kayyenl":135}},{"path":"src/main/java/duke/helpers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.helpers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.OutOfIndexException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.VagueInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import duke.exceptions.WrongBooleanException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"     * @param str String to be formatted, which will be shown in terminal.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    public static String formatStr(String str) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d  \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"                + str + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"                + \"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        return returnstr;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"     * Prints greeting message upon startup.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    public static void doGreeting() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        String greeting \u003d formatStr(\"Hello! I\u0027m Muse!\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"     * Prints farewell message before program terminates.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    public static void doFarewell() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"        String goodbyeMessage \u003d formatStr(\"Bye. Come back again!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"     * Prints the found results, also using formatStr.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"     * @param hasFound Indicates whether a search result has been found or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"     * @param outputResult Contains the entire row by row result of results.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    public static void outputSearchResults(boolean hasFound, String outputResult) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        String returnStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"        if (hasFound) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"            returnStr \u003d \"Gotcha. We found the following terms: \\n\" + outputResult;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"            returnStr \u003d \"Sorry... we couldn\u0027t find any results matching :(\";","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"        } System.out.println(formatStr(returnStr));","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":57}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"    private LocalDateTime dateTypeDeadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    private String deadlineDue;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    public Deadline(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(9).split(\"/\")[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        String[] strArr \u003d content.split(\"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        String deadlineTime \u003d strArr[1].substring(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"        if (deadlineTime.contains(\"/\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"            String[] strArrDate \u003d deadlineTime.split(\"/\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"            this.deadlineDue \u003d this.dateFormat(strArrDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"            this.deadlineDue \u003d \"(\" + \"by:\" + strArr[1].substring(0) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    public String dateFormat(String[] strArrDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        LocalDateTime dateTypeDeadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        dateTypeDeadline \u003d LocalDateTime.of(Integer.parseInt(strArrDate[2].substring(0,4)),","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[1]), Integer.parseInt(strArrDate[0]),","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(5,7)),","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(7)));","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MMM-YYYY\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"        return \"(\" + \"by: \" + dtf.format(dateTypeDeadline) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    public Deadline(String content, boolean mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"        super(content.split(\"\\\\(\")[0], mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"        this.deadlineDue \u003d \"(\" + content.split(\"\\\\(\")[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"        String sign \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"        return \". [D][\" +super.markSign(super.mark) + \"] \" + super.content + deadlineDue;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        return \"[D]\" + \" [\" + super.markSign(super.mark) + \"] \" + super.content + this.deadlineDue + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":44}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":" * Subclass of Task, its a Task with a start duration and end duration.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    private String eventSpan;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"     * Event Contructor: Takes in and process event content and deadline, stores it.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"     * @param content Contains the typed input read from user, changes it into Event object.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    public Event(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(6).split(\"/\")[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        String[] strArr \u003d content.split(\"/from\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        String[] eventTime \u003d strArr[1].substring(1).split(\"/to\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        String eventStartTime \u003d eventTime[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"        String eventEndTime \u003d eventTime[1].substring(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"        if (eventStartTime.contains(\"/\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            String[] strArrStart \u003d eventStartTime.split(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            eventStartTime \u003d dateFormat(strArrStart);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        } if (eventEndTime.contains(\"/\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"            String[] strArrEnd \u003d eventEndTime.split(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"            eventEndTime \u003d dateFormat(strArrEnd);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        this.eventSpan \u003d \"(\" + \"by: \" + eventStartTime + \" to: \" + eventEndTime + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"     * Formats the date input by user neatly.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"     * @param strArrDate Formats the user\u0027s date input into a neat date notation.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"    public String dateFormat(String[] strArrDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        LocalDateTime dateTypeEvent;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"        dateTypeEvent \u003d LocalDateTime.of(Integer.parseInt(strArrDate[2].substring(0,4)),","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[1]), Integer.parseInt(strArrDate[0]),","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(5,7)),","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"                Integer.parseInt(strArrDate[2].substring(7,9)));","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MMM-YYYY\");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        return dtf.format(dateTypeEvent);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"     * Event constructor: Takes in a boolean also, allowing is \"marked\" var to be customized.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"    public Event(String content, boolean mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"        super(content.split(\"\\\\(\")[0], mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"        this.eventSpan \u003d \"(\" + content.split(\"\\\\(\")[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"        String sign \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"        return \". [E][\" + super.markSign(super.mark) + \"] \" + super.content + this.eventSpan;","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"     * Provides the String to be stored in duke.txt when program terminates.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"        return \"[E]\" + \" [\" + super.markSign(super.mark) + \"] \" + super.content + this.eventSpan + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":" * Represents a Task object in TaskList, has 3 subclasses (Todo, Event, Deadline)","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    protected boolean mark;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    protected String content;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"     * Constructs an object of the Task class. By default, mark field is false.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        this.mark \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"     * Constructs an object of the Task class.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"     * @param alternative sets the boolean field mark into true/false to initialize the Task obj.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"    public Task(String content, boolean alternative) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"        this.mark \u003d alternative;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"        return this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    public boolean getMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"        return this.mark;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"     * Allows for changing of the \"mark\" field within the Task class. Inverts the mark.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    public void setMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"        this.mark \u003d !this.mark;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"        String outputStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"        if (mark \u003d\u003d true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"            outputStr \u003d \"NICE! You finished this: \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                    + \"[\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"            outputStr \u003d \"Ok, you have undone this: \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"                    + \"[\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"        System.out.println(Ui.formatStr(outputStr));","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"     * returns true/false depending on the char read in.","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"     * @param markBool represents the char read in (could be X or white space)","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"    public String markSign(boolean markBool) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"        if(markBool \u003d\u003d true) return \"X\";","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"        else return \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"        return \". [\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"        return this.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":70}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        super(content.substring(5));","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"        return \". [T][\" + super.markSign(super.mark) + \"] \" + super.content;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    public Todo(String content, boolean mark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"        super(content, mark);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public String printRecord() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        return \"[T]\" + \" [\" + super.markSign(super.mark) + \"] \" + super.content + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kayyenl":19}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Deadline testInput \u003d new Deadline(\"deadline do the dishes /by 15/08/2020 2300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][ ] do the dishes (by: 15-Aug-2020)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Deadline testInput \u003d new Deadline(\"deadline come back from japan /by 25/01/2022 1900\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][X] come back from japan (by: 25-Jan-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [D][ ] come back from japan (by: 25-Jan-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class EventTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Event testInput \u003d new Event(\"event do the dishes /from 15/08/2020 2300 /to 19/10/2022 1500\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][ ] do the dishes (by: 15-Aug-2020 to: 19-Oct-2022)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Event testInput \u003d new Event(\"event come back from japan /from 25/01/2022 1900 /to 11/02/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][X] come back from japan (by: 25-Jan-2022 to: 11-Feb-2023)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [E][ ] come back from japan (by: 25-Jan-2022 to: 11-Feb-2023)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectToString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        Todo testInput \u003d new Todo(\"todo do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][ ] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public void checkCorrectMarkStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        Todo testInput \u003d new Todo(\"todo do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][X] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"        testInput.setMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"        assertEquals(testInput.toString(), \". [T][ ] do the dishes\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kayyenl":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"todo bake cake","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"deadline do homework /by Monday 5pm","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"event fireworks day /from Friday 4pm /to Wednesday 3pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"kayyenl":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\ip\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"kayyenl":1}}]
