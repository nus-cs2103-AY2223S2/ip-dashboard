[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"import java.util.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"        String greeting \u003d formatStr(\"Hello! I\u0027m Muse\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"            String[] splitArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"                System.out.println(formatStr(listThings(tasks)));","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"            } else if (splitArr[0].equals(\"mark\") || splitArr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"                mark(splitArr[0], Integer.parseInt(splitArr[1]) - 1, tasks);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"            } else if (splitArr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"                Todo newTodo \u003d new Todo(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"                System.out.println(formatStr(addReport(newTodo, tasks)));","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"            }else if (splitArr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"                Deadline newDead \u003d new Deadline(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"                tasks.add(newDead);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"                System.out.println(formatStr(addReport(newDead, tasks)));","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"            }else if (splitArr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"                Event newEvent \u003d new Event(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"                System.out.println(formatStr(addReport(newEvent, tasks)));","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"                Task newTask \u003d new Task(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"                tasks.add(new Task(input));","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"                System.out.println(formatStr(addReport(newTask, tasks)));","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"        String goodbyeMessage \u003d formatStr(\"Bye. Come back again!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public static String formatStr(String str) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d  \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                            + str + \"\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"                            + \"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\";","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"        return returnstr;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"        public Todo(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"            super(content.substring(5));","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"            String sign \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"            if (super.mark \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \"X\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"            return \". [T][\" + sign + \"] \" + super.content;","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"        private String deadlineDue;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"        public Deadline(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"            super(content.substring(9).split(\"/\")[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"            String[] strArr \u003d content.split(\"/\");","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"            this.deadlineDue \u003d \"(\" + \"by:\" + strArr[1].substring(2) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"            String sign \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"            if (super.mark \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \"X\";","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"            return \". [D][\" + sign + \"] \" + super.content + deadlineDue;","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"        private String eventSpan;","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"        public Event(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"            super(content.substring(6).split(\"/\")[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"            String[] strArr \u003d content.split(\"/\");","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"            this.eventSpan \u003d \"(\" + \"by:\" + strArr[1].substring(4) + \"to:\" + strArr[2].substring(2) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"            String sign \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"            if (super.mark \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"                sign \u003d \"X\";","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"            return \". [E][\" + sign + \"] \" + super.content + this.eventSpan;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"    public static class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"        private boolean mark;","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"        private String content;","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"        public Task(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"            this.content \u003d content;","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"            this.mark \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"kayyenl"},"content":"        public void setMark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"            this.mark \u003d !this.mark;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"            String outputStr;","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"            if (mark \u003d\u003d true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"kayyenl"},"content":"                outputStr \u003d \"NICE! You finished this: \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"                + \"[\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"kayyenl"},"content":"                outputStr \u003d \"Ok, you have undone this: \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"kayyenl"},"content":"                + \"[\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"kayyenl"},"content":"            System.out.println(formatStr(outputStr));","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"kayyenl"},"content":"        public String markSign(boolean markBool) {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"kayyenl"},"content":"            if(markBool \u003d\u003d true) return \"X\";","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"kayyenl"},"content":"            else return \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"kayyenl"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"kayyenl"},"content":"            return \". [\" + markSign(this.mark) + \"] \" + this.content;","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"kayyenl"},"content":"    public static void mark(String marked, int index, List\u003cTask\u003e arrTasks) {","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"kayyenl"},"content":"        arrTasks.get(index).setMark();","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"kayyenl"},"content":"    public static String addReport(Task task, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"kayyenl"},"content":"        String returnStr \u003d \"gotcha.\\nyou added: \" + task.toString().substring(2) + \"\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"kayyenl"},"content":"                + numberOfTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"kayyenl"},"content":"        return returnStr;","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"kayyenl"},"content":"    public static String numberOfTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"kayyenl"},"content":"        return \"You have \" + taskList.size() + \" tasks in this list!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"kayyenl"},"content":"    public static String listThings(List\u003cTask\u003e arrList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"kayyenl"},"content":"        String returnstr \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"kayyenl"},"content":"        for (int i \u003d 0; i \u003c arrList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"kayyenl"},"content":"            if (i \u003d\u003d arrList.size() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + arrList.get(i).toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"kayyenl"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"kayyenl"},"content":"                returnstr +\u003d Integer.toString(i+1) + arrList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"kayyenl"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"kayyenl"},"content":"        } return returnstr;","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"-":6,"kayyenl":153}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"todo bake cake","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"deadline do homework /by Monday 5pm","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"event fireworks day /from Friday 4pm /to Wednesday 3pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"kayyenl":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"javac  -cp C:\\Users\\65912\\Desktop\\CS2103\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\65912\\Desktop\\CS2103\\ip\\bin C:\\Users\\65912\\Desktop\\CS2103\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"java -classpath C:\\Users\\65912\\Desktop\\CS2103\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"kayyenl":2}}]
