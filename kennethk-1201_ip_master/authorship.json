[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"checkstyle {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kennethk-1201":21,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":" * Represents the whole Duke program.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * Initialise the Duke backend components.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    public Duke() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"        this.storage \u003d new Storage(\"tasks.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"        this.tasks \u003d this.storage.load();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        this.ui.setContext(this.storage, this.tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * Receives input to send to the UI.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input string send by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * @return Response from the UI.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        return this.ui.send(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":32,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kennethk-1201":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kennethk-1201":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * Bind the scrollPane height to the dialog container\u0027s height.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * Set the current duke application as an attribute for the controller.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     * @param d The duke application used.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then adds them to","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        Response response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"        dialogContainer.getChildren().clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        // Add new tasks to the container.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        for (Task t: response.getTaskList().getTasks()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"            dialogContainer.getChildren().add(new Label(t.toString()));","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kennethk-1201":64}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        super(\".*\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a task to the task list and save it.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @return Response object containing list of tasks and a message.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        // Add and save task","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        Task t \u003d tl.addTask(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        storage.save(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + t","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"                + \"\\nNow you have \" + tl.numberOfTasks()","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"                + (tl.numberOfTasks() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"                + \" in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":50}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private String regex;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Command","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param regex Regex for command argument to match with.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    Command(String regex) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    public abstract Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * Returns the matching regex for the command","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * @return The matching regex for the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    public String stringify() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        return regex;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":45}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidCommandInputException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        super(\"delete \\\\d+\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * Deletes a task from the task list and save the changes.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @return Response containing remaining tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        // Find index of task to delete","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        Integer idx \u003d Integer.valueOf(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        // Verify if task number is invalid:","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tl.numberOfTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidCommandInputException(\"Task number is invalid!\", \"delete\");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        // Delete task and save changes","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        Task t \u003d tl.deleteTask(idx);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        storage.save(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        // Print statement","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + t","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"                + \"\\nNow you have \" + tl.numberOfTasks()","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"                + (tl.numberOfTasks() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"                + \" in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":60}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command to exit from the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for ExitCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        super(\"bye\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * Prints an exit message and exits from the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     * @return Response containing exit message.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        // Print goodbye statement","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        // Exit program","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(\"EXIT\", tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":39}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Represents a command used to find tasks by searching for a keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"        super(\"find .*\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * Executes the find command to display all tasks containing a keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl The task list to search through.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui The UI used to interact with the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage The storage used to persist the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns response containing filtered tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        // Handle find","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        String word \u003d input.substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"Found tasks containing: \" + word;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        TaskList result \u003d tl.findTasksWithWord(word);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, result);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kennethk-1201":43}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command to list all the tasks in the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for ListCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        super(\"list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * Lists all tasks that exist in the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns response containing task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"Here are your tasks!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":37}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidCommandInputException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command to mark a task as completed and save the changes.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for MarkCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        super(\"mark \\\\d+\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Mark a task in the task list and save the changes.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns response containing all tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        // Find index to mark","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        Integer idx \u003d Integer.valueOf(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        // Verify if task number is invalid:","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tl.numberOfTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidCommandInputException(\"Task number is invalid!\", \"mark\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        // Mark task and save changes","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        tl.markTask(idx);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        storage.save(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + tl.getTask(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":55}},{"path":"src/main/java/command/OccursCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command to list all the tasks that occur within the given period.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class OccursCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for OccursCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public OccursCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        super(\"occurs .*\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Lists all tasks that occur within the given period.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns filtered tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        // Handle occurs","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        String dateTime \u003d input.substring(7);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            String message \u003d \"Found the following tasks: \";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"            TaskList tasks \u003d tl.findTasksOnDate(dateTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"            return new Response(message, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"            return new Response(e.getMessage(), tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":51}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidCommandInputException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import sys.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import sys.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents the command to unmark a task and save the changes.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private String input;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for UnmarkCommand","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param input Input to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        super(\"unmark \\\\d+\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * Unmarks a task and save the changes.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param tl the current list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param ui the user interface running.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage the storage location for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns remaining tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @throws DukeException If an invalid input is given.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    public Response execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        // Get index to unmark","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        Integer idx \u003d Integer.valueOf(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        // Verify if task number is invalid:","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tl.numberOfTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidCommandInputException(\"task.Task number is invalid!\", \"unmark\");","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        // Unmark task and save changes","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        tl.unmarkTask(idx);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        storage.save(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        // Print statement","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + tl.getTask(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        return new Response(message, tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":56}},{"path":"src/main/java/exception/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents the exception where the command given is not valid.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class CommandNotFoundException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"    private String command;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for CommandNotFoundException.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"     * @param errorMessage Message for the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"     * @param command The command that could not be found.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    public CommandNotFoundException(String errorMessage, String command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Accessor method to get command.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @return Command that caused the exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        return command;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":26}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents an exception unique to the Duke application.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     * @param errorMessage Message for the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":15}},{"path":"src/main/java/exception/InvalidCommandInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents the exception when a command receives an invalid input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class InvalidCommandInputException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"    private String command;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for InvalidCommandInputException.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"     * @param errorMessage Message for the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"     * @param command The command that triggered the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    public InvalidCommandInputException(String errorMessage, String command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * Accessor method to get command.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @return Command that caused the exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        return command;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":26}},{"path":"src/main/java/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents the exception when a date does not follow the Duke format.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for InvalidDateFormatException.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     * @param errorMessage Message for the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    public InvalidDateFormatException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":15}},{"path":"src/main/java/exception/InvalidTaskStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents an exception when the task string in the storage does not follow the Duke format.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class InvalidTaskStringException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for InvalidTaskStringException","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     * @param errorMessage Message for the error.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    public InvalidTaskStringException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":15}},{"path":"src/main/java/helper/DateTimeHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package helper;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" * Represents the helper class to abstract LocalDateTime logic in Duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"public class DateTimeHelper {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"     * Returns corresponding LocalDateTime object for the given string. This","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * method is used when receiving user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * The string must be in the format DD/MM/YYYY HHMM where the year can","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * be any number of digits \u003e 0 and each time-based unit (eg. day, month)","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * must be valid.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @param dateTimeString A string representing the date.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     * @return The corresponding datetime object for the string.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the string does not follow the specified format.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public static LocalDateTime parse(String dateTimeString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        // Check if string is in the correct format.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"        if (!dateTimeString.matches(\"\\\\d{1,3}/\\\\d{1,3}/\\\\d+ \\\\d{4}\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidDateFormatException(\"Incorrect date format!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        // Parse day, month, year, hour and minute from dateTimeString.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        String[] values \u003d dateTimeString.split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        Integer day \u003d Integer.valueOf(values[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        Integer month \u003d Integer.valueOf(values[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        String[] yearAndTime \u003d values[2].split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"        Integer year \u003d Integer.valueOf(yearAndTime[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        Integer hour \u003d Integer.valueOf(yearAndTime[1].substring(0, 2));","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        Integer minute \u003d Integer.valueOf(yearAndTime[1].substring(2));","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"        // Convert the time units into a LocalDateTime object.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            return LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidDateFormatException(\"Incorrect datetime values!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"     * Returns corresponding LocalDateTime object for the given string. This","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"     * method is used when reading data from storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"     * The string must be in the format MMM DD YYYY HH:MM where the year can","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"     * be any number of digits \u003e 0 and each time-based unit (eg. day, month)","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"     * must be valid.","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"     * @param dateTimeString A string representing the date.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"     * @return The corresponding datetime object for the string.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the string does not follow the specified format.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"    public static LocalDateTime parseFormattedDateTime(String dateTimeString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        // Check if string is in the correct format.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        if (!dateTimeString.matches(\".{3} \\\\d{1,3} \\\\d{4} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidDateFormatException(\"Incorrect date format!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"        // Parse day, month, year, hour and minute from dateTimeString.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"        String[] values \u003d dateTimeString.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"        Integer day \u003d Integer.valueOf(values[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"        Integer month \u003d convertMonth(values[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"        Integer year \u003d Integer.valueOf(values[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"        String[] hoursAndMinutes \u003d values[3].split(\":\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"        Integer hour \u003d Integer.valueOf(hoursAndMinutes[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"        Integer minute \u003d Integer.valueOf(hoursAndMinutes[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"        // Convert the time units into a LocalDateTime object.","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"            return LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidDateFormatException(\"Incorrect datetime values!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"     * Returns corresponding Integer for a given month expressed as an English word.","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"     * @param month A string representing a month as an English word.","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"     * @return Integer value of the given month.","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the string does not follow the specified format.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"    public static Integer convertMonth(String month) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"        // Generate HashMap to map months to their numerical values.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"        HashMap\u003cString, Integer\u003e monthToNumber \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Jan\", 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Feb\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Mar\", 3);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Apr\", 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"May\", 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Jun\", 6);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Jul\", 7);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Aug\", 8);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Sep\", 9);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Oct\", 10);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Nov\", 11);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        monthToNumber.put(\"Dec\", 12);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"        Integer monthValue \u003d monthToNumber.get(month);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"        if (monthValue \u003d\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidDateFormatException(\"Incorrect month value!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"        return monthValue;","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"     * Convert a datetime object to a String in the format MMM d yyyy HH:mm.","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"     * @param dt A datetime object to be converted in string format.","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"     * @return String representing the datetime value in the above format.","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"    public static String stringify(LocalDateTime dt) {","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"        return DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\").format(dt);","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":126}},{"path":"src/main/java/response/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package response;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":" * Represents a response for the application.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"public class Response {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"    private String message;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Response object","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"     * @param message The message stored within the response.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"     * @param tasks The list of tasks returned with the response.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    public Response(String message, TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        return message + \u0027\\n\u0027 + tasks.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * Accessor method for message.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * @return Returns the message stored within the response.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        return message;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     * Accessor method for the returned task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"     * @return The list of tasks returned with the response.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        return tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kennethk-1201":42}},{"path":"src/main/java/sys/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package sys;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import command.AddCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import command.FindCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"import command.ListCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import command.OccursCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents a parser used to decode user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Parser.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    Parser() {};","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     * Converts a user input into a Command object.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * @param input The input line given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     * @return Command object representing the input.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    public Command parse(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"        // Handle control flow","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"        switch (input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"            // Exit Duke","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        case \"list\":","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"            // List tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"            if (input.matches(\"occurs .*\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"                return new OccursCommand(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"            } else if (input.matches(\"find .*\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"                return new FindCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            } else if (input.matches(\"mark \\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"                return new MarkCommand(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"            } else if (input.matches(\"unmark \\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"                return new UnmarkCommand(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"            } else if (input.matches(\"delete \\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"                return new DeleteCommand(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"                return new AddCommand(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":54}},{"path":"src/main/java/sys/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package sys;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidTaskStringException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"import task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":" * Represents the storage area used to contain the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    private String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"     * @param path The filepath to store the task list.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * Loads the TaskList object from the storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * If storage path is corrupted, return a fresh task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @return Task list parsed from the file located in the storage path.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    public TaskList load() {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"            // Read the specified path.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"                String content \u003d s.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"                tasks.addTask(Task.parseTask(content));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(\"tasks.txt not found, generating new task list...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        } catch (InvalidTaskStringException | InvalidDateFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"     * Saves the given task list to the storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"     * @param tasks The task list that is to be stored in the storage path.","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"            // Write to the specified path.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"            // Remove enumeration.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"            String[] lines \u003d tasks.toString().split(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"            StringBuilder newContent \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"            // Only add to storage file if line is not empty.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"            if (!lines[0].equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"                // Add every task as a new line.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"                for (String line: lines) {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"                    newContent.append(line.substring(3));","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"                    newContent.append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"                // Remove last new line.","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"                newContent.deleteCharAt(newContent.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"            // Write to file.","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"            fw.write(newContent.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":89}},{"path":"src/main/java/sys/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package sys;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import response.Response;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":" * Represents the interface system that the user interacts with.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for UI.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public Ui() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * Sets the context for the program.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * @param storage The storage area used by the application.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * @param tasks The task list used by the application.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    public void setContext(Storage storage, TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * Allows the application to accept commands from the user via standard input.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     * @param input The input given by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     * @return The output from the program.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"    public Response send(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        // Accept input from user.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"            this.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"            // Parse input line.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"            // Execute the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"            Response output \u003d c.execute(tasks, this, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"            return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"            return new Response(e.getMessage(), tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"     * Prints a horizontal line on CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"        System.out.println(\"__________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"kennethk-1201":69}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import helper.DateTimeHelper;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":" * Represents a deadline task that should be done by a given time.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * @param content Content to be done for the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * @param deadlineString The time by which the task must be completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the time given for dateline is in the incorrect format.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    Deadline(String content, String deadlineString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"        super(content);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"        this.deadline \u003d DateTimeHelper.parse(deadlineString);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * @param content Content to be done for the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * @param deadlineString The time by which the task must be completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the time given for dateline is in the incorrect format.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    Deadline(String content, boolean done, String deadlineString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        super(content, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"        this.deadline \u003d DateTimeHelper.parseFormattedDateTime(deadlineString);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     * Checks if the deadline is the given datetime object.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"     * @param dt The given datetime object.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"     * @return Whether the deadline is the given datetime object.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"    public boolean occursOn(LocalDateTime dt) {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"        return dt.equals(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                + \" (by: \" + DateTimeHelper.stringify(deadline) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":53}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import helper.DateTimeHelper;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":" * Represents an event task that lasts between two time periods.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * @param content The task to be done.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     * @param startString Start date of event.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"     * @param endString End date of event.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If date field in content is in the incorrect format.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    Event(String content, String startString, String endString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        super(content);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        this.start \u003d DateTimeHelper.parse(startString);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        this.end \u003d DateTimeHelper.parse(endString);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @param content The task to be done.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @param done Whether the task was completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @param startString Start date of event.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * @param endString End date of event.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If date field in content is in the incorrect format.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"    Event(String content, boolean done, String startString, String endString) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        super(content, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"        this.start \u003d DateTimeHelper.parseFormattedDateTime(startString);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"        this.end \u003d DateTimeHelper.parseFormattedDateTime(endString);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"     * Checks if the given datetime occurs within the event period.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"     * @param datetime the given datetime to check.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"     * @return Whether the given datetime occurs within the event period.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"    public boolean occursOn(LocalDateTime datetime) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        return datetime.equals(start)","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"                || (datetime.isAfter(start) \u0026\u0026 datetime.isBefore(end))","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"                || datetime.equals(end);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"                + \" (from: \" + DateTimeHelper.stringify(this.start)","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"                + \" to: \" + DateTimeHelper.stringify(this.end) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":61}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidTaskStringException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":" * Represents a task to be done by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    private String content;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"    private boolean done;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * @param content Content to be done for the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    Task(String content) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"     * @param content Content to be done for the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"     * @param done Whether the task is completed.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    Task(String content, boolean done) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     * Converts a task string from storage into a Task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"     * @param s The string that represents the task to be parsed.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidTaskStringException If the task string is corrupted.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the task input has an invalid date format.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"    public static Task parseTask(String s) throws InvalidTaskStringException, InvalidDateFormatException {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"        // Check if string format is correct.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"        if (!s.matches(\"\\\\[.]\\\\[.] .+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidTaskStringException(\"Incorrect task format: Square brackets not in proper format.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"        // Break string apart.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"        char taskType \u003d s.charAt(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"        boolean isMarked \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"        String content \u003d s.substring(7);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"        // Check if mark is correct","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        if (s.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"        } else if (s.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidTaskStringException(\"Incorrect task format: Checkbox is not in proper format.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"        // Determine the task type.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"            // Return todo object.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"            return new ToDo(content, isMarked);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"            // Check if content is in the deadline format.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"            if (!content.matches(\".+ \\\\(by: .+\\\\)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"                throw new InvalidTaskStringException(\"Incorrect deadline format\");","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"            // Find deadline portion of string.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"            int deadlineStart \u003d content.length() - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"            for (int i \u003d content.length() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"                if (content.substring(i - 5, i).equals(\"(by: \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"                    deadlineStart \u003d i;","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"            String deadline \u003d content.substring(deadlineStart, content.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"            String deadlineContent \u003d content.substring(0, deadlineStart - 6);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"            // Return deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"            return new Deadline(deadlineContent, isMarked, deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"            // Check if content is in the event format.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"            if (!content.matches(\".+ \\\\(from: .+ to: .+\\\\)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"                throw new InvalidTaskStringException(\"Incorrect event format\");","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"            // Find start and end portions of the string.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"            int startIndex \u003d content.length();","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"            int endIndex \u003d content.length();","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"            for (int i \u003d content.length() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"                if (content.substring(i - 4, i).equals(\"to: \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"                    endIndex \u003d i;","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"                } else if (content.substring(i - 7, i).equals(\"(from: \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"                    startIndex \u003d i;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"            String start \u003d content.substring(startIndex, endIndex - 5);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"            String end \u003d content.substring(endIndex, content.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"            String eventContent \u003d content.substring(0, startIndex - 8);","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"            // Return event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"            return new Event(eventContent, isMarked, start, end);","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidTaskStringException(\"Unknown task type!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"        done \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"        done \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"     * Checks if task contains a word.","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"     * @param word The word to check","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"     * @return Whether task contains the word;","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"    public boolean containsWord(String word) {","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"        return content.contains(word);","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"        // Fill square brackets with X if task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"        String checkBox \u003d done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"        return checkBox + content;","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":147}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import exception.CommandNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidCommandInputException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import helper.DateTimeHelper;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":" * Represents the list of tasks used by the UI.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a task to the list using the user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"     * @param input The user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"     * @return The corresponding task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"     * @throws CommandNotFoundException If command is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidCommandInputException If command argument is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    public Task addTask(String input) throws CommandNotFoundException, InvalidCommandInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"        if (input !\u003d null \u0026\u0026 (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\"))) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"kennethk-1201"},"content":"            throw new InvalidCommandInputException(\"Empty argument\", input);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"kennethk-1201"},"content":"        } else if (input.matches(\"deadline .* /by .*\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"kennethk-1201"},"content":"            // Break apart input string.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kennethk-1201"},"content":"            String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"kennethk-1201"},"content":"            String content \u003d arr[0].substring(9, arr[0].length());","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"kennethk-1201"},"content":"            // Check if argument exists.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kennethk-1201"},"content":"            if (content.length() \u003d\u003d 0 || arr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"kennethk-1201"},"content":"                throw new InvalidCommandInputException(\"Empty argument\", \"deadline\");","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"kennethk-1201"},"content":"            // Add new deadline task to the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kennethk-1201"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"kennethk-1201"},"content":"                tasks.add(new Deadline(content, arr[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennethk-1201"},"content":"            } catch (InvalidDateFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"kennethk-1201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"kennethk-1201"},"content":"        } else if (input.matches(\"event .* /from .* /to .*\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"kennethk-1201"},"content":"            // Break apart input string.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kennethk-1201"},"content":"            String[] arr \u003d input.split(\" /from \");","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"kennethk-1201"},"content":"            String content \u003d arr[0].substring(6, arr[0].length());","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"kennethk-1201"},"content":"            String[] startEnd \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"kennethk-1201"},"content":"            // Check if arguments exists.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"kennethk-1201"},"content":"            if (content.length() \u003d\u003d 0 || startEnd[0].length() \u003d\u003d 0 || startEnd[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"kennethk-1201"},"content":"                throw new InvalidCommandInputException(\"Empty argument\", \"event\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"kennethk-1201"},"content":"            // Add new event task to the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"kennethk-1201"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"kennethk-1201"},"content":"                tasks.add(new Event(content, startEnd[0], startEnd[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"kennethk-1201"},"content":"            } catch (InvalidDateFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"kennethk-1201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"kennethk-1201"},"content":"        } else if (input.matches(\"todo .*\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"kennethk-1201"},"content":"            // Check if argument exists.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"kennethk-1201"},"content":"            if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"kennethk-1201"},"content":"                throw new InvalidCommandInputException(\"Empty argument\", \"todo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"kennethk-1201"},"content":"            // Add new todo task to the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"kennethk-1201"},"content":"            tasks.add(new ToDo(input.substring(5, input.length())));","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"kennethk-1201"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"kennethk-1201"},"content":"            throw new CommandNotFoundException(\"Duke command is invalid.\", input);","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"kennethk-1201"},"content":"        // Return the added task.","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"kennethk-1201"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"kennethk-1201"},"content":"     * Adds a variable number of task objects to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"kennethk-1201"},"content":"     * @param t The task object to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"kennethk-1201"},"content":"    public void addTask(Task ... t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"kennethk-1201"},"content":"        for (Task task: t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"kennethk-1201"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"kennethk-1201"},"content":"     * Deletes a task at the given index.","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"kennethk-1201"},"content":"     * @param i Index of the task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"kennethk-1201"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"kennethk-1201"},"content":"        // Find and remove the task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"kennethk-1201"},"content":"        Task res \u003d this.getTask(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"kennethk-1201"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"kennethk-1201"},"content":"        return res;","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"kennethk-1201"},"content":"     * Marks a task at the given index.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"kennethk-1201"},"content":"     * @param i Index of the task to be marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"kennethk-1201"},"content":"    public void markTask(int i) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"kennethk-1201"},"content":"        tasks.get(i).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"kennethk-1201"},"content":"     * Unmarks a task at the given index.","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"kennethk-1201"},"content":"     * @param i Index of the task to be unmarked.","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"kennethk-1201"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"kennethk-1201"},"content":"        tasks.get(i).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"kennethk-1201"},"content":"     * Gets a task at the given index.","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"kennethk-1201"},"content":"     * @param i Index of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"kennethk-1201"},"content":"     * @return The task object to be returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"kennethk-1201"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"kennethk-1201"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"kennethk-1201"},"content":"     * Gets all tasks as a list.","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"kennethk-1201"},"content":"     * @return The task object to be returned.","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"kennethk-1201"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"kennethk-1201"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"kennethk-1201"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"kennethk-1201"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"kennethk-1201"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"kennethk-1201"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"kennethk-1201"},"content":"     * Print the tasks that occurs on a given date. It is used for the occurs command.","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"kennethk-1201"},"content":"     * @param input The date to check.","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"kennethk-1201"},"content":"     * @throws InvalidDateFormatException If the date given does not follow the specified format.","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"kennethk-1201"},"content":"    public TaskList findTasksOnDate(String input) throws InvalidDateFormatException {","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"kennethk-1201"},"content":"        // Convert string to LocalDateTime object.","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"kennethk-1201"},"content":"        LocalDateTime datetime \u003d DateTimeHelper.parse(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"kennethk-1201"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"kennethk-1201"},"content":"        // Find all valid tasks by iterating through them.","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"kennethk-1201"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"kennethk-1201"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"kennethk-1201"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"kennethk-1201"},"content":"                if (d.occursOn(datetime)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"kennethk-1201"},"content":"                    result.addTask(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"kennethk-1201"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"kennethk-1201"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"kennethk-1201"},"content":"                if (e.occursOn(datetime)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"kennethk-1201"},"content":"                    result.addTask(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"kennethk-1201"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"kennethk-1201"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"kennethk-1201"},"content":"     * Prints out the tasks containing a given word.","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"kennethk-1201"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"kennethk-1201"},"content":"     * @param word The word to check.","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"kennethk-1201"},"content":"    public TaskList findTasksWithWord(String word) {","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"kennethk-1201"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"kennethk-1201"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"kennethk-1201"},"content":"            if (t.containsWord(word)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"kennethk-1201"},"content":"                result.addTask(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":199,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"kennethk-1201"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"kennethk-1201"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"kennethk-1201"},"content":"        Integer curr \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"kennethk-1201"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"kennethk-1201"},"content":"            result +\u003d curr.toString() + \". \" + t;","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"kennethk-1201"},"content":"            if (curr !\u003d tasks.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"kennethk-1201"},"content":"                result +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"kennethk-1201"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"kennethk-1201"},"content":"            curr++;","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"kennethk-1201"},"content":"        return result;","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"kennethk-1201":222}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":" * Represents a task that is to be done.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Task","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"     * @param content The task content.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"    ToDo(String content) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"        super(content);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"     * @param content The task content.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"     * @param done Whether the task was completed.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    ToDo(String content, boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"        super(content, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kennethk-1201":19}},{"path":"src/test/java/helper/DateTimeHelperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"package helper;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"public class DateTimeHelperTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kennethk-1201"},"content":"    public void testParse(){","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kennethk-1201"},"content":"            assertEquals(DateTimeHelper.parse(\"2/12/2012 1200\"), LocalDateTime.of(2012, 12, 2, 12, 0));","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennethk-1201"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(\"Cannot parse.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"kennethk-1201"},"content":"    public void testParseFormattedDateTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"kennethk-1201"},"content":"            assertEquals(DateTimeHelper.parseFormattedDateTime(\"Oct 12 2022 13:33\"), LocalDateTime.of(2022, 10, 12, 13, 33));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"kennethk-1201"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(\"Cannot parse.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kennethk-1201"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennethk-1201"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennethk-1201"},"content":"    public void testStringify() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennethk-1201"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennethk-1201"},"content":"            assertEquals(\"Oct 12 2022 13:33\", DateTimeHelper.stringify(LocalDateTime.of(2022, 10, 12, 13, 33)));","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennethk-1201"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennethk-1201"},"content":"            System.out.println(\"Cannot stringify.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennethk-1201"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennethk-1201"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"kennethk-1201"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"kennethk-1201":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kennethk-1201"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"kennethk-1201"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kennethk-1201"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"kennethk-1201"},"content":"event project meeting /from 2/12/2019 1800 /to 10/12/2019 1800","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"kennethk-1201"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"kennethk-1201"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kennethk-1201"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"kennethk-1201"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kennethk-1201"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kennethk-1201"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennethk-1201":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"kennethk-1201"},"content":"REM run the program, feed command from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kennethk-1201":1,"-":20}}]
