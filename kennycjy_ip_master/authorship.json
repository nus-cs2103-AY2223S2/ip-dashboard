[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"kennycjy":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import expense.Expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import expenselist.ExpenseList;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":" * Represents the whole program, containing the main program for the whole bot.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    private Storage expensesStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    private ExpenseList expenses;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a Duke Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"     * Initializes the whole program as well as required objects.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"     * If path leads to a file that does not exist, the file will be created.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"     * @param filePath String of path to stored list from previous sessions.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"     * @return Duke object.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        expensesStorage \u003d new Storage(\"data/expenses.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"            expenses \u003d new ExpenseList(expensesStorage.expensesLoad());","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"        // Supposed to change","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"        if (input.startsWith(\"e \")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"            String expenseInput \u003d input.substring(1).trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"            String response \u003d Parser.parseExpenseCommands(expenseInput, this.expenses);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"            if (!response.isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"                return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"            Expense expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"                expense \u003d Parser.parseExpenseEcho(expenseInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"                return e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"            expenses.addExpense(expense);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"            response +\u003d Ui.showAddedExpenseMessage(expense);","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"        String response \u003d Parser.parseCommands(input, this.tasks, this.ui, this.storage, this.expenses,","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"                this.expensesStorage);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"        if (!response.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"            return response;","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"        Task item;","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"            item \u003d Parser.parseEcho(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"            // TODO: handle exception","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"        assert item !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"        tasks.addTask(item);","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"        response +\u003d ui.showAddedMessage(item);","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"        response +\u003d ui.printListNumber(tasks.getList());","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"        return response;","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kennycjy":82,"-":2}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * Represents a custom runtime exception that occurs during the runtime of Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" * Expected to become an abstract class in the future.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a DukeException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param errorMessage String to be the error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @return DukeException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     * */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":17}},{"path":"src/main/java/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * An exception to be thrown when met with an invalid input.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" * Extends from DukeException.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for an InvalidInputException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param errorMessage String to be used as error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @return InvalidInputException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":17}},{"path":"src/main/java/exception/NoExpenseParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" *  Exception to be thrown when the specific scenario of no expense description given as arguments.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" *  Inherits from DukeException.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"public class NoExpenseParameterException extends DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a NoTaskDescriptionException object.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param errorMessage String to be the error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @return NoExpenseParameterException object.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public NoExpenseParameterException(String errorMessage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":17}},{"path":"src/main/java/exception/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * Exception to be thrown when the specific scenario of no task description given as arguments.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" * Inherits from DukeException.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"public class NoTaskDescriptionException extends DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a NoTaskDescriptionException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param errorMessage String to be the error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @return NoTaskDescriptionException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public NoTaskDescriptionException(String errorMessage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":17}},{"path":"src/main/java/expense/Expense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * Class to encapsulate expenses.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"public class Expense {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"    private String description;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    private double amountSpent;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a new Expense object.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param description description of expense object","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @param amountSpent amount of money spent on the particular expense.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public Expense(String description, double amountSpent) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"        this.amountSpent \u003d amountSpent;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"     * Getter function for amountSpent.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"     * @return","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    public double getAmountSpent() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"        return this.amountSpent;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"        return this.description;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"        return this.description;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        return description + \" $\" + amountSpent;","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":39}},{"path":"src/main/java/expense/FoodExpense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * FoodExpense Object to be modified to track more things in the future.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"public class FoodExpense extends Expense {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"    private String prefix;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a FoodExpense object.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param description Description to describe the type of food bought.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * @param amountSpent Amount of money spent on expense.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    public FoodExpense(String description, double amountSpent) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        super(description, amountSpent);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"        this.prefix \u003d \"Food\";","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"        return \"food \" + super.getDescription() + \" /\" + super.getAmountSpent();","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"        return prefix + \": \" + super.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":26}},{"path":"src/main/java/expense/MiscExpense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * Class of expenses that do not neatly fall into Food or Transport, such as purchases of goods for oneself.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"public class MiscExpense extends Expense {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"    private String prefix;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a MiscExpense object.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     * @param description","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param amount","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    public MiscExpense(String description, double amount) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"        super(description, amount);","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        this.prefix \u003d \"Misc\";","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"        return \"misc \" + super.getDescription() + \" /\" + super.getAmountSpent();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"        return this.prefix + \": \" + super.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":24}},{"path":"src/main/java/expense/TransportExpense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * TransportExpense object that can be modified to be more descriptive about the expense.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"public class TransportExpense extends Expense {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"    private String prefix;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a Transport Expense Object","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"     * @param description","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"     * @param amountSpent","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    public TransportExpense(String description, double amountSpent) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"        super(description, amountSpent);","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        this.prefix \u003d \"Transport\";","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"        return \"transport \" + super.getDescription() + \" /\" + super.getAmountSpent();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"        return this.prefix + \": \" + super.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":25}},{"path":"src/main/java/expenselist/ExpenseList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package expenselist;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import expense.Expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":" * An ExpenseList class to encapsulate the list of expense.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"public class ExpenseList {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"    private ArrayList\u003cExpense\u003e listOfExpenses;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a ExpenseList object.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"    public ExpenseList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"        this.listOfExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a ExpenseList object, given a ArrayList of expenses already.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"     * @param list given ArrayList to be instantiated as listOfExpenses;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    public ExpenseList(ArrayList\u003cExpense\u003e list) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"        this.listOfExpenses \u003d list;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"     * Function to add an Expense object into the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"     * @param expense Expense object to be added to the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"        this.listOfExpenses.add(expense);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"        // call UI","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"     * Function to remove an expense item, given the index of the object.","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"     * @param index index of expense object to be removed.","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"    public void removeExpense(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"        this.listOfExpenses.remove(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"     * Getter function to return the list of expenses.","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"     * @return listOfExpenses.","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"    public ArrayList\u003cExpense\u003e getListOfExpenses() {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"        return this.listOfExpenses;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"     * Function to return the total expenses of the whole list.","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"     * @return","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"    public double getTotal() {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"        for (int i \u003d 0; i \u003c this.listOfExpenses.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"            total +\u003d this.listOfExpenses.get(i).getAmountSpent();","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"        return total;","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    public Expense get(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"        return this.listOfExpenses.get(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"kennycjy":67}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" * A launcher class to work around class path issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import gui.mainwindow.MainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":33}},{"path":"src/main/java/gui/dialogbox/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package gui.dialogbox;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import gui.mainwindow.MainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":62}},{"path":"src/main/java/gui/mainwindow/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package gui.mainwindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import gui.dialogbox.DialogBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.startUpSequence(), dukeImage));","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"            return;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"        if (response.startsWith(\"    Saving:\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"            Platform.exit();;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":65}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import exception.NoExpenseParameterException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import exception.NoTaskDescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import expense.Expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import expense.FoodExpense;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import expense.MiscExpense;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"import expense.TransportExpense;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"import expenselist.ExpenseList;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"import task.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"import task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":" * Class to encapsulate all parser methods, which parse through user inputs.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"     * Returns Task formed from given string.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"     * If input string is not of recognised form, exception is thrown.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"     * @param echo Input string, treated as commands.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"     * @return Task corresponding to given input commands.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"     * @throws NoTaskDescriptionException If command is given for a task without a description.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"     * @throws InvalidInputException If string does not start with recognised command.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"    public static Task parseEcho(String echo) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"        assert echo !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"            if (echo.substring(4).trim().isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"                throw(new NoTaskDescriptionException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"            return new Todo(echo.substring(4).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"            String deadlineArguments \u003d echo.substring(8).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"            if (deadlineArguments.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"                throw(new NoTaskDescriptionException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d deadlineArguments.split(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"            return new Deadline(splitArguments[0], splitArguments[1].substring(2).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"            String eventArguments \u003d echo.substring(5).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"            if (eventArguments.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"                throw(new NoTaskDescriptionException(\"     ☹ OOPS!!! The description of a event cannot be empty.\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d eventArguments.split(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"            return new Event(splitArguments[0], splitArguments[1].substring(4).trim(),","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"                    splitArguments[2].substring(2).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"            throw(new InvalidInputException(\"      ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"     * Returns a Task object corresponding to input String.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"     * Made to be used to read from saved files, hence containing addition argument to check if tasks are done.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"     * @param echo Input string to be parsed","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"     * @param isDone Boolean to check if corresponding created Task is marked as done","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"     * @return Task corresponding to given String","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"    public static Task parseFileReader(String echo, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"            return new Todo(isDone, echo.substring(4).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"            String deadlineArguments \u003d echo.substring(8).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d deadlineArguments.split(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"            return new Deadline(isDone, splitArguments[0], splitArguments[1].substring(2).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"            String eventArguments \u003d echo.substring(5).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d eventArguments.split(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"            return new Event(isDone, splitArguments[0], splitArguments[1].substring(4).trim(),","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"kennycjy"},"content":"                    splitArguments[2].substring(2).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"kennycjy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"kennycjy"},"content":"            throw(new InvalidInputException(\"      ☹ OOPS!!! File format seems weird\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"kennycjy"},"content":"     * Returns boolean based on whether a corresponding input string has a non-task creation command.","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"kennycjy"},"content":"     * Attempts to carry out command if command is recognised, and returns true.","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"kennycjy"},"content":"     * Else returns false.","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"kennycjy"},"content":"     * @param echo Input String to be parsed for commands.","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"kennycjy"},"content":"     * @param tasks TaskList Object which encapsulates the current list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"kennycjy"},"content":"     * @param ui Ui Object to call Ui-related methods.","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"kennycjy"},"content":"     * @return Boolean if any tasks are recognised and carried out.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"kennycjy"},"content":"    public static String parseCommands(String echo, TaskList tasks, Ui ui, Storage storage, ExpenseList expenses,","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"kennycjy"},"content":"                                       Storage expenseStorage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"kennycjy"},"content":"        if (echo.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d ui.showSavingMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d storage.save(tasks.getList());","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d expenseStorage.saveExpense(expenses.getListOfExpenses());","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d ui.showSavedMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d ui.showClosingMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"kennycjy"},"content":"        if (echo.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d \"    OK, Here are the items in your list: \\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d Ui.printArrayList(tasks.getList());","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"kennycjy"},"content":"                int taskToModify \u003d Integer.parseInt(echo.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"kennycjy"},"content":"                tasks.markDone(taskToModify - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d Ui.showMarkedMessage(tasks.get(taskToModify - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"kennycjy"},"content":"                return \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"kennycjy"},"content":"                int taskToModify \u003d Integer.parseInt(echo.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"kennycjy"},"content":"                tasks.markUndone(taskToModify - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"kennycjy"},"content":"                // Call UI unmarked","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d Ui.showUnmarkedMessage(tasks.get(taskToModify - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"kennycjy"},"content":"                return \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"delete\") || echo.startsWith(\"remove\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"kennycjy"},"content":"                int taskToModify \u003d Integer.parseInt(echo.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"kennycjy"},"content":"                Task removed \u003d tasks.get(taskToModify - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"kennycjy"},"content":"                tasks.removeTask(taskToModify - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"kennycjy"},"content":"                // Call ui removed","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d Ui.showRemovedMessage(removed);","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d ui.printListNumber(tasks.getList());","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"kennycjy"},"content":"                return \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"find\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"kennycjy"},"content":"            String taskToFind \u003d echo.substring(4).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"kennycjy"},"content":"            if (taskToFind.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d \"    OPPS!! You can\u0027t find nothing\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"kennycjy"},"content":"                return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"kennycjy"},"content":"            ArrayList\u003cTask\u003e foundList \u003d tasks.findArray(taskToFind);","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d \"    Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d Ui.printArrayList(foundList);","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"kennycjy"},"content":"    public static Expense parseExpenseEcho(String echo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"food\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"kennycjy"},"content":"            String foodArguments \u003d echo.substring(4).trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"kennycjy"},"content":"            if (foodArguments.isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"kennycjy"},"content":"                throw(new NoExpenseParameterException(\"   OOPS!! The parameters of a food expense cannot be empty\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d foodArguments.split(\"/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"kennycjy"},"content":"            double cost \u003d Double.parseDouble(splitArguments[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"kennycjy"},"content":"            return new FoodExpense(splitArguments[0], cost);","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"transport\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"kennycjy"},"content":"            String transportArguments \u003d echo.substring(9).trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"kennycjy"},"content":"            if (transportArguments.isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"kennycjy"},"content":"                throw(new NoExpenseParameterException(\"    OPPS!! The parameters of a transport \"","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"kennycjy"},"content":"                        + \"expense cannot be empty\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d transportArguments.split(\"/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"kennycjy"},"content":"            double cost \u003d Double.parseDouble(splitArguments[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"kennycjy"},"content":"            return new TransportExpense(splitArguments[0], cost);","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"kennycjy"},"content":"        } else if (echo.startsWith(\"misc\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"kennycjy"},"content":"            String miscArguments \u003d echo.substring(4).trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"kennycjy"},"content":"            if (miscArguments.isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"kennycjy"},"content":"                throw(new NoExpenseParameterException(\"    OPPS!! The parameters of a misc expense cannot be empty\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"kennycjy"},"content":"            String[] splitArguments \u003d miscArguments.split(\"/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"kennycjy"},"content":"            double cost \u003d Double.parseDouble(splitArguments[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"kennycjy"},"content":"            return new MiscExpense(splitArguments[0], cost);","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"kennycjy"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"kennycjy"},"content":"            throw(new InvalidInputException(\"      ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"kennycjy"},"content":"    public static String parseExpenseCommands(String echo, ExpenseList list) {","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"kennycjy"},"content":"        if (echo.equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d \"    OK here\u0027s the expenses in your list:\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d Ui.printExpenseArrayList(list.getListOfExpenses());","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"kennycjy"},"content":"        if (echo.startsWith(\"delete\") || echo.startsWith(\"remove\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"kennycjy"},"content":"                int expenseToModify \u003d Integer.parseInt(echo.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"kennycjy"},"content":"                Expense removed \u003d list.get(expenseToModify-1);","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"kennycjy"},"content":"                list.removeExpense(expenseToModify - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"kennycjy"},"content":"                answer +\u003d Ui.showRemovedExpenseMessage(removed);","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"kennycjy"},"content":"                return \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":222}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import expense.Expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":" * Represents a class that encapsulates all methods that works with files, including loading and saving.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"public class Storage {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    private String filepath;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    // filepath should be \"data/duke.txt\"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"     * @param filePath String corresponding to relative path of duke.txt which is the saved list between sessions.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"     * @return Storage Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"        // Checks if the file exists, else creates it","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"            File mySaveFile \u003d new File(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"            if (!mySaveFile.exists()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"                mySaveFile.createNewFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"            // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"     * Returns an Arraylist which corresponds to the list of tasks saved in object filepath.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"     * @return ArrayList object which is a list of Tasks saved from previous session.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"     * @throws DukeException If unable to read/parse the file in object filepath.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"        ArrayList\u003cTask\u003e listToStore \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"            File mySaveFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"            Scanner s \u003d new Scanner(mySaveFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"                Task task;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"                String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"                if (nextLine.charAt(0) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"                    task \u003d Parser.parseFileReader(nextLine.substring(2), true);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"                } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"                    task \u003d Parser.parseFileReader(nextLine.substring(2), false);","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"                listToStore.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"            s.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"            throw e;","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"        return listToStore;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"     * Returns an Arraylist which corresponds to the list of tasks saved in object filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"     * @return ArrayList object which is a list of Expense saved from previous session.","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"     * @throws DukeException If unable to read/parse the file in object filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"    public ArrayList\u003cExpense\u003e expensesLoad() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"        ArrayList\u003cExpense\u003e listToStore \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"kennycjy"},"content":"            File mySaveFile \u003d new File(this.filepath);","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"kennycjy"},"content":"            Scanner s \u003d new Scanner(mySaveFile);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"kennycjy"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"kennycjy"},"content":"                Expense expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"kennycjy"},"content":"                String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"kennycjy"},"content":"                expense \u003d Parser.parseExpenseEcho(nextLine);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"kennycjy"},"content":"                listToStore.add(expense);","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"kennycjy"},"content":"            s.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"kennycjy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"kennycjy"},"content":"            throw e;","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"kennycjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"kennycjy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"kennycjy"},"content":"        return listToStore;","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"kennycjy"},"content":"     * Stores the current Arraylist in current session to hard drive.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"kennycjy"},"content":"     * @param listToStore ArrayList of Tasks to be stored in object filepath.","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"kennycjy"},"content":"    public String save(ArrayList\u003cTask\u003e listToStore) {","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"kennycjy"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"kennycjy"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"kennycjy"},"content":"            fw.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"kennycjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"kennycjy"},"content":"            // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"kennycjy"},"content":"        while (!listToStore.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"kennycjy"},"content":"                FileWriter fw \u003d new FileWriter(\"data/duke.txt\", true);","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"kennycjy"},"content":"                fw.write(listToStore.get(0).getCommand());","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"kennycjy"},"content":"                listToStore.remove(0);","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"kennycjy"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"kennycjy"},"content":"                fw.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"kennycjy"},"content":"                return \"    An Error has occurred\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"kennycjy"},"content":"        return \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"kennycjy"},"content":"    public String saveExpense(ArrayList\u003cExpense\u003e listToStore) {","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"kennycjy"},"content":"        while (!listToStore.isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"kennycjy"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"kennycjy"},"content":"                FileWriter fw \u003d new FileWriter(\"data/expenses.txt\", true);","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"kennycjy"},"content":"                fw.write(listToStore.get(0).getCommand());","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"kennycjy"},"content":"                listToStore.remove(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"kennycjy"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"kennycjy"},"content":"                fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"kennycjy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"kennycjy"},"content":"                // TODO: handle exception","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"kennycjy"},"content":"                return \"    An Error has occurred\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"kennycjy"},"content":"        return \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":146}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":" * Represents a Task that has a Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":" * Extends from Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"    protected DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    protected LocalDateTime byDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    protected String displayBy;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"     * To be used when a new entry is added.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany the task describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"     * @param by String to represent the due date.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"     * @return Deadline Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"        byDate \u003d LocalDateTime.parse(by, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"        displayBy \u003d this.byDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"     * To be used when constructing object from file.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"     * @param isDone boolean to represent if object is marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany the task describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"     * @param by String to represent the due date.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"     * @return Deadline Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"    public Deadline(boolean isDone, String description, String by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"        byDate \u003d LocalDateTime.parse(by, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"        displayBy \u003d this.byDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"     * Returns String representation of deadline Object","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"     * @return String representation of deadline Object","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + displayBy + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"     * Returns String that is a command that can be used to create a similar Deadline Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"     * @return String that is a command that can be used to create a similar Deadline Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"        return this.isDone","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"            ? \"1 deadline \" + this.description + \" /by \" + this.by","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"            : \"0 deadline \" + this.description + \" /by \" + this.by;","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennycjy":70}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":" * Represents a Task that is an event that spans between two times.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":" * Extends from task.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"    protected DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    protected LocalDateTime fromDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"    protected LocalDateTime toDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    protected String displayFrom;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    protected String displayTo;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany the task describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"     * @param from String representing the start time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"     * @param to String representing the end time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"     * @return Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"        fromDate \u003d LocalDateTime.parse(from, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"        toDate \u003d LocalDateTime.parse(to, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"        displayFrom \u003d this.fromDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"        displayTo \u003d this.toDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"     * Construction for an Event object with additional parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"     * Used when loading from file.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"     * @param isDone boolean to represent if the task is marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany the task describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"     * @param from String representing the start time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"     * @param to String representing the end time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"     * @return Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"    public Event(boolean isDone, String description, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"        fromDate \u003d LocalDateTime.parse(from, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"        toDate \u003d LocalDateTime.parse(to, format);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"        displayFrom \u003d this.fromDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"        displayTo \u003d this.toDate.toString().replace(\"T\", \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"     * Returns string representation of event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"     * @return string representing of event object,","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.displayFrom + \" to: \" + this.displayTo + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"     * Returns String that is a command that can be used to create a similar Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"     * @return String that is a command that can be used to create a similar Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"        return this.isDone","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"            ? \"1 event \" + this.description + \" /from \" + this.from + \" /to \" + this.to","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"            : \"0 event \" + this.description + \" /from \" + this.from + \" /to \" + this.to;","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennycjy":80}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" * Represents a Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" * Expected to turn abstract.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"     * Meant for subclasses.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany the task describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"     * @returns Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"     * Returns the String representation of the status icon of this task.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"     * @return String representation of the status icon.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"     * Marks Task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"    public void markDone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"     * Marks Task as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"    public void markUndone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"     * Returns a boolean representing if Task is marked as done","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"     * @return boolean representing if Task is marked as done","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"     * Returns String representation of Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"     * @return String representation of Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"     * Overridden equals method for object.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"     * Check if an object and this object can be treated as equal.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"     * @param o object to be compared to.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"     * @return boolean representing if the object being compared to is equal to this object.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"            return true;","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"            return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"        return ((Task) o).description \u003d\u003d this.description \u0026\u0026 ((Task) o).isDone \u003d\u003d this.isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"kennycjy"},"content":"     * Returns String representation of command that can be used to create a similar task event.","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"kennycjy"},"content":"     * Unused.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"kennycjy"},"content":"     * @return String representation of command that can be used to create a similar task event.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"kennycjy"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"kennycjy":95}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a to do object with additional parameter","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"     * @param isDone Boolean on whether the to do object is done.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"     * @param description String to accompany and describing the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"     * @return a To do object.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"        return this.isDone","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"            ? \"1 todo \" + this.description","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"            : \"0 todo \" + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennycjy":34}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package tasklist;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":" * Class to encapsulate the list of tasks and its corresponding methods.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"public class TaskList {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"     * Constructor that uses given ArrayList to create a TaskList object.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"     * @param list ArrayList to be modelled after.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"     * Constructor for a new TaskList object.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"     * Returns Task corresponding to given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"     * 0-indexed.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"     * @param index index to get the corresponding Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"     * @return","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"     * Returns the whole list that this object encapsulates.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"     * @return ArrayList that is encapsulated by this TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"     * Returns the current size of the ArrayList that this object encapsulates.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"     * Size corresponds to number of objects.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"     * @return Number of Tasks in the ArrayList that this TaskList encapsulates.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"    public int size() {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"     * Adds given Task to the ArrayList that this TaskList encapsulates.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"     * @param task given Task to add to ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"     * Removes Task from the list in the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"     * @param index position of Task to be removed.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"     * Marks Task as done from the list in the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"     * @param index position of Task to be marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"        this.taskList.get(index).markDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"kennycjy"},"content":"     * Marks Task as undone from the list in the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"kennycjy"},"content":"     * @param index position of Task to be marked as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"kennycjy"},"content":"    public void markUndone(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"kennycjy"},"content":"        this.taskList.get(index).markUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"kennycjy"},"content":"     * Given a string, find all tasks in the ArrayList in this, and returns them in an ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"kennycjy"},"content":"     * @param find String to match and find.","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"kennycjy"},"content":"     * @return ArrayList of Tasks that match the find.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"kennycjy"},"content":"    public ArrayList\u003cTask\u003e findArray(String find) {","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"kennycjy"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"kennycjy"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"kennycjy"},"content":"            String temp \u003d this.get(i).getCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"kennycjy"},"content":"            if (temp.contains(find)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"kennycjy"},"content":"                list.add(this.get(i));","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"kennycjy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"kennycjy"},"content":"        return list;","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":111}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import expense.Expense;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":" * Class to encapsulate most outputs to console.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":" * To be modified in order to encapsulate inputes in console.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"public class Ui {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    private boolean isStarted;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"     * Constructor for Ui Object.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    public Ui() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"        isStarted \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"     * Outputs startup sequence to console.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"    public static String startUpSequence() {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"kennycjy"},"content":"        logo +\u003d \"Hello! I\u0027m Duke\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"kennycjy"},"content":"        logo +\u003d \"What can I do for you?\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"kennycjy"},"content":"        return logo;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"kennycjy"},"content":"     * Outputs loading error to console.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"kennycjy"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"kennycjy"},"content":"        System.out.println(\"Error loading file, proceeding to rewrite the file\");","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"kennycjy"},"content":"     * Returns AddedMessage , given task that was added.","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"kennycjy"},"content":"     * @param item Task that was added.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"kennycjy"},"content":"     * @return String to be output as response.","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"kennycjy"},"content":"    public static String showAddedMessage(Task item) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Duke says:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Added\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + item.toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"kennycjy"},"content":"     * Returns AddedExpenseMessage, given expense that was added.","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"kennycjy"},"content":"     * @param expense expense that was added.","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"kennycjy"},"content":"     * @return String to be output as response.","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"kennycjy"},"content":"    public static String showAddedExpenseMessage(Expense expense) {","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Duke says:\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Added\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + expense.toString() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"kennycjy"},"content":"     * Outputs RemovedMessage to console, given Task that was removed.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"kennycjy"},"content":"     * @param item Task that was removed.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"kennycjy"},"content":"    public static String showRemovedMessage(Task item) {","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Noted. I have removed this task:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + item.toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"kennycjy"},"content":"     * Outputs RemovedMessage to console, given Expense that was removed.","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"kennycjy"},"content":"     * @param item","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"kennycjy"},"content":"     * @return","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"kennycjy"},"content":"    public static String showRemovedExpenseMessage(Expense item) {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Noted. I have removed this expense:\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + item.toString() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"kennycjy"},"content":"     * Outputs MarkedMessage to console, given Task that was marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"kennycjy"},"content":"     * @param item Task that was marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"kennycjy"},"content":"    public static String showMarkedMessage(Task item) {","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    OK I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + item.toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"kennycjy"},"content":"     * Outputs UnmarkedMessage to console, given Task that was marked as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"kennycjy"},"content":"     * @param item Task that was marked as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"kennycjy"},"content":"    public static String showUnmarkedMessage(Task item) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    OK I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    \" + item.toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"kennycjy"},"content":"     * Outputs SavedMessage to console, demonstrating completion of save to hard drive.","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"kennycjy"},"content":"     * @return String for Saved Message.","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"kennycjy"},"content":"    public String showSavedMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"kennycjy"},"content":"        return \"    Save complete\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"kennycjy"},"content":"     * Outputs ClosingMessage to console, demonstrating exit of program.","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"kennycjy"},"content":"     * @return String for closing Message.","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"kennycjy"},"content":"    public String showClosingMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Duke says:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"kennycjy"},"content":"        answer +\u003d \"    Bye. Hope you run this program again!\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"kennycjy"},"content":"     * Prints the whole list of tasks given ArrayList of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"kennycjy"},"content":"     * @param list ArrayList of Tasks to be printed.","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"kennycjy"},"content":"    public String printListNumber(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"kennycjy"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"kennycjy"},"content":"        return \"    Now you have \" + list.size() + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"kennycjy"},"content":"     * Outputs SavingMessage, demonstrating the commencement of saving.","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"kennycjy"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"kennycjy"},"content":"     * @return String for Saving Message.","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"kennycjy"},"content":"    public String showSavingMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"kennycjy"},"content":"        return \"    Saving:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"kennycjy"},"content":"     * Given an ArrayList, return strings of all tasks in it.","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"kennycjy"},"content":"     * @param list ArrayList of which contents to be printed.","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"kennycjy"},"content":"     * @return String of all tasks sequentially.","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"kennycjy"},"content":"    public static String printArrayList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"kennycjy"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"kennycjy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d \"    \" + (i + 1) + \". \"","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"kennycjy"},"content":"                    + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"kennycjy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"kennycjy"},"content":"     * Given an ArrayList, return strings of all expenses in it.","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"kennycjy"},"content":"     * @param list","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"kennycjy"},"content":"     * @return String of all tasks sequentially.","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"kennycjy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"kennycjy"},"content":"    public static String printExpenseArrayList(ArrayList\u003cExpense\u003e list) {","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"kennycjy"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"kennycjy"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"kennycjy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"kennycjy"},"content":"            answer +\u003d \"    \" + (i + 1) + \". \"","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"kennycjy"},"content":"                    + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"kennycjy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"kennycjy"},"content":"        return answer;","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":188}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.mainwindow.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"kennycjy":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"import task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    void parseEchoTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"        Todo simpleTask \u003d new Todo(\"Apple\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"        assertEquals(simpleTask.toString(), Parser.parseEcho(\"todo Apple\").toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    void parseFileReaderTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"        Todo simpleTask \u003d new Todo(true, \"Apple\");","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"        Todo task \u003d (Todo) Parser.parseFileReader(\"todo Apple\", true);","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"        assertEquals(simpleTask.toString(), task.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":26}},{"path":"src/test/java/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"package tasklist;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"import task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"import task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"    private Todo simpleTask \u003d new Todo(\"Apple\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"    private ArrayList\u003cTask\u003e emptyList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"    void getListTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"        TaskList taskListTest \u003d new TaskList(emptyList);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"        taskListTest.addTask(new Todo(\"Apple\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"        emptyList.add(simpleTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"        assertEquals(emptyList, taskListTest.getList());","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"    void getIndexTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"        TaskList taskListTest \u003d new TaskList(emptyList);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"        taskListTest.addTask(simpleTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"kennycjy"},"content":"        taskListTest.addTask(new Todo(\"Orange\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"kennycjy"},"content":"        assertEquals(simpleTask, taskListTest.get(0));","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"kennycjy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"kennycjy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"kennycjy":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kennycjy":10}}]
