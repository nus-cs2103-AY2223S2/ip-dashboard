[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    private String deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    private Date dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    Deadline(String description, String deadlineTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    Deadline(String description, Date dueDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateDueFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateDueFormat.format(dueDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"import java.io.*;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    private void Input() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"            loadTodoList();","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        while (!isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d this.scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"            try{","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"                    this.exit();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"                    this.showList();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"                    int taskNum \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"                    this.markTask(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"                    int taskNum \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"                    this.unmarkTask(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"                    String todo \u003d userInput.replace(\"todo\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"                    emptyTodo(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"                    addTodo(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                    String[] event \u003d ErrorEventOrDeadline(userInput, \"event\", \"/from\");","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"                    if (isDate(event[1])) {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"                        Date eventDate \u003d parseDate(event[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"                        addEvent(event[0], eventDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"                    } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"                        addEvent(event[0], event[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"                    String[] deadline \u003d ErrorEventOrDeadline(userInput, \"deadline\", \"/by\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"                    if (isDate(deadline[1])) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"                        Date deadlineDate \u003d parseDate(deadline[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"                        addDeadline(deadline[0], deadlineDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"                    } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"                        addDeadline(deadline[0], deadline[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"                    deleteTask(Integer.parseInt(userInput.substring(7)));","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"                } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"                saveTodoList();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"                printMessage(exception.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"    private void loadTodoList() throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"            String input;","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"                switch (splitInput[0]) {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"                        Todo todo \u003d new Todo(splitInput[2]);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"                        if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"                            todo.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"                        }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"kenzantonius"},"content":"                        list.add(todo);","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"kenzantonius"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"kenzantonius"},"content":"                        Deadline deadline \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"kenzantonius"},"content":"                        if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"kenzantonius"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"kenzantonius"},"content":"                        }","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"kenzantonius"},"content":"                        list.add(deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"kenzantonius"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"kenzantonius"},"content":"                        Event event \u003d new Event(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"kenzantonius"},"content":"                        if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"kenzantonius"},"content":"                            event.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"kenzantonius"},"content":"                        }","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"kenzantonius"},"content":"                        list.add(event);","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"kenzantonius"},"content":"                    default:","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"kenzantonius"},"content":"                        throw new DukeException(\"An error occurred during file parsing, unexpected task type was encountered.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"kenzantonius"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"kenzantonius"},"content":"    private Date parseDate(String date) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"kenzantonius"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"kenzantonius"},"content":"            return dateFormatter.parse(date);","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"kenzantonius"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + e);","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"kenzantonius"},"content":"    private boolean isDate(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 3 || !isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"kenzantonius"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"kenzantonius"},"content":"        if (yearAndTime.length !\u003d 2 || !isNumeric(yearAndTime[0]) || !isNumeric(yearAndTime[1])) {","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"kenzantonius"},"content":"        return true;","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"kenzantonius"},"content":"    private boolean isNumeric(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"kenzantonius"},"content":"        return input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"kenzantonius"},"content":"    private void saveTodoList() throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"kenzantonius"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"kenzantonius"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"kenzantonius"},"content":"            for (Task l : list) {","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"kenzantonius"},"content":"                writer.append(l.getOutputFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"kenzantonius"},"content":"                writer.append(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"kenzantonius"},"content":"            writer.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"kenzantonius"},"content":"    private void emptyTodo(String todo) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"kenzantonius"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"kenzantonius"},"content":"    private String[] ErrorEventOrDeadline(String input, String textToReplace, String textToSplit) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d input.replaceFirst(textToReplace, \"\")","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"kenzantonius"},"content":"                .trim().split(textToSplit);","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"kenzantonius"},"content":"            splitInput[i] \u003d splitInput[i].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! Please make sure the date is not empty\");","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"kenzantonius"},"content":"        return splitInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"kenzantonius"},"content":"    private void addTodo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"kenzantonius"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"kenzantonius"},"content":"        list.add(newTodo);","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + newTodo);","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":175,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"kenzantonius"},"content":"    private void addDeadline(String description, String deadlineTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"kenzantonius"},"content":"        Deadline newDeadline \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":179,"author":{"gitId":"kenzantonius"},"content":"        list.add(newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":183,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"kenzantonius"},"content":"    private void addDeadline(String description, Date dueDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":186,"author":{"gitId":"kenzantonius"},"content":"        Deadline newDeadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":187,"author":{"gitId":"kenzantonius"},"content":"        list.add(newDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":188,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":189,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + newDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":190,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":192,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":193,"author":{"gitId":"kenzantonius"},"content":"    private void addEvent(String description, String eventTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":194,"author":{"gitId":"kenzantonius"},"content":"        Event newEvent \u003d new Event(description, eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"kenzantonius"},"content":"        list.add(newEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + newEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":198,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":199,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"kenzantonius"},"content":"    private void addEvent(String description, Date eventDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":202,"author":{"gitId":"kenzantonius"},"content":"        Event newEvent \u003d new Event(description, eventDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":203,"author":{"gitId":"kenzantonius"},"content":"        list.add(newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":207,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"kenzantonius"},"content":"    private void markTask(int taskNum) {","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"kenzantonius"},"content":"        this.list.get(taskNum - 1).markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + this.list.get(taskNum - 1)+ \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":213,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"kenzantonius"},"content":"    private void unmarkTask(int taskNum) {","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"kenzantonius"},"content":"        this.list.get(taskNum - 1).markAsUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + this.list.get(taskNum - 1) + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":219,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"kenzantonius"},"content":"    private void deleteTask(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":222,"author":{"gitId":"kenzantonius"},"content":"        Task deletedTask \u003d list.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"kenzantonius"},"content":"        list.remove(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + deletedTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":227,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"kenzantonius"},"content":"    private void showList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":230,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":232,"author":{"gitId":"kenzantonius"},"content":"            System.out.println(\"\\t\" + i + \". \" + this.list.get(i - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"kenzantonius"},"content":"        System.out.println();","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"kenzantonius"},"content":"    private void exit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tBye, hope to see you again!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"kenzantonius"},"content":"    private void printMessage(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":242,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"kenzantonius"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"Welcome! I\u0027m Duke.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":249,"author":{"gitId":"kenzantonius"},"content":"        duke.Input();","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kenzantonius":247,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kenzantonius":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    private String eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    private Date eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    Event(String description, String eventTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    Event(String description, Date eventDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        if (eventDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateEventFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), dateEventFormat.format(eventDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":33}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":15}}]
