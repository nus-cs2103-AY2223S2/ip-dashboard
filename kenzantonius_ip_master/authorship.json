[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kenzantonius":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kenzantonius":1,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        new Duke(\"data/tasks.txt\").runDuke();","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    private void runDuke() {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        Ui.showGreeting();","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kenzantonius":39,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kenzantonius":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"public class Parser {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public static Command parse(String Command) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        if (isExitCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        } else if (isListCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        } else if (isMarkCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"mark\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d ErrorMarkIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"            return new MarkCommand(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        } else if (isUnmarkCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"unmark\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d ErrorUnmarkIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"            return new UnmarkCommand(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddTodoCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"            String todo \u003d Command.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"            ErrorTodo(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            return new AddTodoCommand(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddEventCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"            String[] event \u003d ErrorEvent(Command);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            if (isDate(event[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"                Date eventDate \u003d parseDate(event[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"                return new AddEventCommand(event[0], eventDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"                return new AddEventCommand(event[0], event[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddDeadlineCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"            String[] deadline \u003d ErrorDeadline(Command);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"            if (isDate(deadline[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                Date deadlineDate \u003d parseDate(deadline[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"                return new AddDeadlineCommand(deadline[0], deadlineDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"                return new AddDeadlineCommand(deadline[0], deadline[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"        } else if (isDeleteCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"delete\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d ErrorDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"    public static Date parseDate(String date) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            return dateFormatter.parse(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isDate(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 3 || !isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"        if (yearAndTime.length !\u003d 2 || !isNumeric(yearAndTime[0]) || !isNumeric(yearAndTime[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"    private static int ErrorMarkIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"        return ErrorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"    private static int ErrorUnmarkIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kenzantonius"},"content":"        return ErrorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"kenzantonius"},"content":"    private static int ErrorDeleteIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"kenzantonius"},"content":"        return ErrorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"kenzantonius"},"content":"    private static int ErrorMarkOrUnmarkOrDeleteIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"kenzantonius"},"content":"        if (userInput.isEmpty() || isNotNumeric(userInput)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The index to remove cannot be empty or not an integer.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"kenzantonius"},"content":"        return Integer.parseInt(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isNotNumeric(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"kenzantonius"},"content":"        return !input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"kenzantonius"},"content":"    private static void ErrorTodo(String todo) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"kenzantonius"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"kenzantonius"},"content":"    private static String[] ErrorEvent(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"kenzantonius"},"content":"        return ErrorEventOrDeadline(userInput, \"event\", \"/from\");","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"kenzantonius"},"content":"    private static String[] ErrorDeadline(String UserInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"kenzantonius"},"content":"        return ErrorEventOrDeadline(UserInput, \"deadline\", \"/by\");","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"kenzantonius"},"content":"    private static String[] ErrorEventOrDeadline(String UserInput, String textToReplace, String textToSplit) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d UserInput.replaceFirst(textToReplace, \"\")","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"kenzantonius"},"content":"                .trim().split(textToSplit);","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"kenzantonius"},"content":"            splitInput[i] \u003d splitInput[i].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! Please make sure the date is not empty\");","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"kenzantonius"},"content":"        return splitInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isNumeric(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isExitCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"bye\");","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isListCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isMarkCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"mark\");","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isUnmarkCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"unmark\");","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddTodoCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"todo\");","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddDeadlineCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"deadline\");","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddEventCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"event\");","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isDeleteCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"delete\");","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":162}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"import java.io.File;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"public class Storage {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    private String filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"                return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            String input;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"                Task task;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"                switch (splitInput[0]) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Todo(splitInput[2]);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Event(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"                    default:","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"                        throw new DukeException(\"An error occurred during file parsing, unexpected task type was encountered.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred. \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"        return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"            for (Task l : list) {","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"                bw.append(l.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"            bw.close();","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred. \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":80}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"public class Ui {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public static void ShowAddMessage(Task taskNum, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public static void ShowDeleteMessage(Task taskNum, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\t\\t\" + taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public static void ShowList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            System.out.printf(\"\\t%d. %s\\n\", taskNum, tasks.get(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    public void showError(String msg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tCannot load file.\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"    public static void showGreeting() {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"    public static void showExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    public static void showMessage(String msg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":53}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public String deadlineTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public Date dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public AddDeadlineCommand(String description, String deadlineTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public AddDeadlineCommand(String description, Date dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"            deadline \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        Ui.ShowAddMessage(deadline, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":36}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    private String eventAt;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    private Date eventDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    public AddEventCommand(String description, String deadlineBy) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        this.eventAt \u003d deadlineBy;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public AddEventCommand(String description, Date deadlineDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.eventDate \u003d deadlineDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        Event event;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        if (eventDate \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            event \u003d new Event(description, eventAt);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            event \u003d new Event(description, eventDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        Ui.ShowAddMessage(event, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        Ui.ShowAddMessage(todo, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"public class Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":15}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        if (taskNum \u003c 1 || taskNum \u003e\u003d tasks.size() + 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        Task deletedTask \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        tasks.delete(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        Ui.ShowDeleteMessage(deletedTask, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":26}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        Ui.showExit();","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        Ui.ShowList(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        if (taskNum - 1 \u003c 0 || taskNum - 1\u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        tasks.markAsDone(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        Ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":24}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.*;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        if (taskNum - 1 \u003c 0 || taskNum - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        tasks.markAsUndone(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        Ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":24}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private String deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Date dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public Deadline(String description, String deadlineTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public Deadline(String description, Date dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateDueFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateDueFormat.format(dueDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private String eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Date eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public Event(String description, Date eventDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        if (eventDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateEventFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), dateEventFormat.format(eventDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":32}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"public class TaskList {","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public Task markAsDone(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.get(taskNum).markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    public Task markAsUndone(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.get(taskNum).markAsUndone();","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        Task deletedTask \u003d tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        return deletedTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    public Task add(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        return task;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    public Task get(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    public int size() {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":17}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void output() {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Sunday\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"D | 0 | return book | Sunday\", deadline.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void string() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Sunday\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"[D][ ] return book (by: Sunday)\", deadline.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void output() {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"T | 0 | borrow book\", todo.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void string() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kenzantonius":1,"-":20}}]
