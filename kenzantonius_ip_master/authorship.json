[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kenzantonius":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.11\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"javafx {","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"    version \u003d \"17.0.2\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":22,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"    private void flip() {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        db.flip();","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"        return db;","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public Duke(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"        ui \u003d new Ui(stage);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    private void runDuke() {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        Ui.showGreeting();","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"                String Command \u003d ui.readCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"                Command c \u003d Parser.parse(Command);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"        return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kenzantonius":41,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kenzantonius":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"public class Launcher {","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"            duke \u003d new Duke(stage);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            stage.show();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        String welcome \u003d Ui.showGreeting();","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"public class Parser {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public static Command parse(String Command) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        if (isExitCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        } else if (isListCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        } else if (isMarkCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"mark\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d errorMarkIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            return new MarkCommand(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        } else if (isUnmarkCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"unmark\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d errorUnmarkIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"            return new UnmarkCommand(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddTodoCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"            String todo \u003d Command.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"            errorTodo(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"            return new AddTodoCommand(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddEventCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"            String[] event \u003d errorEvent(Command);","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"            if (isDate(event[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"                Date eventDate \u003d parseDate(event[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"                return new AddEventCommand(event[0], eventDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"                return new AddEventCommand(event[0], event[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"        } else if (isAddDeadlineCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"            String[] deadline \u003d errorDeadline(Command);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"            if (isDate(deadline[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"                Date deadlineDate \u003d parseDate(deadline[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"                return new AddDeadlineCommand(deadline[0], deadlineDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"                return new AddDeadlineCommand(deadline[0], deadline[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"        } else if (isDeleteCommand(Command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"delete\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d errorDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        } else if (isFindCommand(Command)){","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"            String userInput \u003d Command.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"            errorFind(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"    public static Date parseDate(String date) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"            return dateFormatter.parse(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isDate(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 3 || !isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kenzantonius"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"kenzantonius"},"content":"        if (yearAndTime.length !\u003d 2 || !isNumeric(yearAndTime[0]) || !isNumeric(yearAndTime[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"kenzantonius"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"kenzantonius"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"kenzantonius"},"content":"    private static int errorMarkIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"kenzantonius"},"content":"        return errorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"kenzantonius"},"content":"    private static int errorUnmarkIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"kenzantonius"},"content":"        return errorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"kenzantonius"},"content":"    private static int errorDeleteIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"kenzantonius"},"content":"        return errorMarkOrUnmarkOrDeleteIndex(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"kenzantonius"},"content":"    private static int errorMarkOrUnmarkOrDeleteIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"kenzantonius"},"content":"        if (userInput.isEmpty() || isNotNumeric(userInput)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The content of find cannot be empty.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"kenzantonius"},"content":"        return Integer.parseInt(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"kenzantonius"},"content":"    private static void errorFind(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"kenzantonius"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The index to remove cannot be empty or not an integer.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isNotNumeric(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"kenzantonius"},"content":"        return !input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"kenzantonius"},"content":"    private static void errorTodo(String todo) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"kenzantonius"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"kenzantonius"},"content":"    private static String[] errorEvent(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"kenzantonius"},"content":"        return errorEventOrDeadline(userInput, \"event\", \"/from\");","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"kenzantonius"},"content":"    private static String[] errorDeadline(String UserInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"kenzantonius"},"content":"        return errorEventOrDeadline(UserInput, \"deadline\", \"/by\");","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"kenzantonius"},"content":"    private static String[] errorEventOrDeadline(String UserInput, String textToReplace, String textToSplit) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"kenzantonius"},"content":"        String[] splitInput \u003d UserInput.replaceFirst(textToReplace, \"\")","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"kenzantonius"},"content":"                .trim().split(textToSplit);","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"kenzantonius"},"content":"            splitInput[i] \u003d splitInput[i].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"kenzantonius"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"☹ OOPS!!! Please make sure the date is not empty\");","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"kenzantonius"},"content":"        return splitInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"kenzantonius"},"content":"    private static boolean isNumeric(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isExitCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"bye\");","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isListCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isMarkCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"mark\");","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isUnmarkCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"unmark\");","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddTodoCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"todo\");","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddDeadlineCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"deadline\");","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isAddEventCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"event\");","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isDeleteCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"delete\");","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"kenzantonius"},"content":"    public static boolean isFindCommand(String UserInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"kenzantonius"},"content":"        return UserInput.startsWith(\"find\");","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":185}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"import java.io.File;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"public class Storage {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    private String filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"                return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            String input;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"                Task task;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"                switch (splitInput[0]) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Todo(splitInput[2]);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"                        task \u003d new Event(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"                        break;","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"                    default:","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"                        throw new DukeException(\"An error occurred during file parsing, unexpected task type was encountered.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred. \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"        return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"            for (Task l : list) {","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"                bw.append(l.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"            bw.close();","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"An IOException occurred. \" + e);","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":80}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"public class Ui {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    static Stage stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public static String showAddMessage(Task taskNum, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d \"\\tGot it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        result +\u003d (\"\\t\\t\" + taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        result +\u003d (\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public static String showDeleteMessage(Task taskNum, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d \"\\tNoted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        result +\u003d (\"\\t\\t\" + taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        result +\u003d (\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    public static String showList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d \"\\tHere are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"            result +\u003d String.format(\"\\t%d. %s\\n\", taskNum, tasks.get(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"    public static String showFind(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d (\"\\tHere are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"            result +\u003d String.format(\"\\t%d. %s\\n\", taskNum, tasks.get(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"    public String showError(String msg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"        return(msg);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d (\"\\tCannot load file.\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kenzantonius"},"content":"    public static String showGreeting() {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d (\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kenzantonius"},"content":"    public static String showExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kenzantonius"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kenzantonius"},"content":"        delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kenzantonius"},"content":"        delay.play();","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kenzantonius"},"content":"        String result \u003d (\"\\tBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kenzantonius"},"content":"        return result;","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kenzantonius"},"content":"    public static String showMessage(String msg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kenzantonius"},"content":"        return(msg);","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":79}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":" * Adds a Deadline type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public String deadlineTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    public Date dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"     * @param deadlineTime string of the due date.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public AddDeadlineCommand(String description, String deadlineTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"     * @param dueDate due date of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"    public AddDeadlineCommand(String description, Date dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"     * Adds a Deadline type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"     * Ask the UI to print the output.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"            deadline \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showAddMessage(deadline, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":61}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":" * Adds an Event type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    private String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    private String eventAt;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"    private Date eventDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"     * @param deadlineBy string of the deadline date.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    public AddEventCommand(String description, String deadlineBy) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"        this.eventAt \u003d deadlineBy;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"     * @param deadlineDate deadline date of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"    public AddEventCommand(String description, Date deadlineDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        this.eventDate \u003d deadlineDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"     * Adds an Event type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"     * Ask the UI to print the output.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"        Event event;","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"        if (eventDate \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"            event \u003d new Event(description, eventAt);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"            event \u003d new Event(description, eventDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showAddMessage(event, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":61}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":" * Adds a Todo type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    private String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     * Adds a Todo type task.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     * Ask UI to print the output.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showAddMessage(todo, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" * Executes the current command.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"public class Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"     * Execute the current command.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     * Determines whether the program should be terminated.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     * @return Boolean value if true then exit, if false then not exit.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":32}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":" * Deletes task from task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     * @param taskNum number of the task to be deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     * Asks UI to print the output.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        boolean isSmallerThanOne \u003d taskNum \u003c 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        boolean isGreaterThanSize \u003d taskNum \u003e tasks.size() + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        if (isSmallerThanOne || isGreaterThanSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"        Task deletedTask \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"        tasks.delete(taskNum - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"        assert (tasks.size() \u003d\u003d taskNum - 1) : \"Tasks size should be equal to previous tasks size - 1\";","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showDeleteMessage(deletedTask, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":" * Terminates the current session.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"     * Terminates the current session.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"     * Ask UI to print output.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showExit();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     * Determines whether the program should be terminated.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @return Boolean value if true then exit, if false then not exit.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":" * Finds the task with a certain keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    private String userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * @param userInput keyword of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"     * Finds the task with a certain keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"     * Asks UI to list the tasks that contain the keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"        TaskList filteredTasks \u003d tasks.find(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showFind(filteredTasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":" * Shows list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"     * Asks UI to list the tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showList(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" * Marks task as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     * @param taskNum number of the task to be marked.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"     * Marks the task as done in the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     * Asks UI to print the marked task.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        boolean isSmallerThanZero \u003d taskNum \u003c 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        boolean isGreaterThanSize \u003d taskNum \u003e tasks.size() + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        if (isSmallerThanZero || isGreaterThanSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"        tasks.markAsDone(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":44}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":" * Marks task as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"     * Main constructor.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"     * @param taskNum number of the task to be marked.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"     * Marks the task as done in the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"     * Asks UI to print the marked task.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"     * @param tasks Task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"     * @param ui UI of the application to interact with users.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"     * @param storage Storage to update when there is an update with the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        boolean isSmallerThanZero \u003d taskNum \u003c 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        boolean isGreaterThanSize \u003d taskNum \u003e tasks.size() + 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        if (isSmallerThanZero || isGreaterThanSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"        tasks.markAsUndone(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"        return Ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private String deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Date dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public Deadline(String description, String deadlineTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public Deadline(String description, Date dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateDueFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dateDueFormat.format(dueDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    private String eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    private Date eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public Event(String description, Date eventDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"        if (eventDate !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"            DateFormat dateEventFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), dateEventFormat.format(eventDate));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        return this.description;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":36}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"public class TaskList {","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        return tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    public Task markAsDone(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.get(taskNum).markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kenzantonius"},"content":"    public Task markAsUndone(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.get(taskNum).markAsUndone();","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kenzantonius"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kenzantonius"},"content":"        Task deletedTask \u003d tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kenzantonius"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kenzantonius"},"content":"        return deletedTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kenzantonius"},"content":"    public Task add(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kenzantonius"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kenzantonius"},"content":"        return task;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kenzantonius"},"content":"    public Task get(int taskNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.get(taskNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kenzantonius"},"content":"    public int size() {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kenzantonius"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kenzantonius"},"content":"    public TaskList find(String userInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kenzantonius"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kenzantonius"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kenzantonius"},"content":"            String currentTask \u003d this.tasks.get(i).getDescription();","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kenzantonius"},"content":"            if (currentTask.contains(userInput)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kenzantonius"},"content":"                filteredTasks.add(this.tasks.get(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kenzantonius"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kenzantonius"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kenzantonius"},"content":"        return filteredTasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":57}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kenzantonius":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void output() {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Sunday\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"D | 0 | return book | Sunday\", deadline.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void string() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Sunday\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"[D][ ] return book (by: Sunday)\", deadline.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kenzantonius"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kenzantonius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kenzantonius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kenzantonius"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kenzantonius"},"content":"    public void output() {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"T | 0 | borrow book\", todo.getOutputFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kenzantonius"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kenzantonius"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kenzantonius"},"content":"    public void string() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kenzantonius"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kenzantonius"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kenzantonius"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kenzantonius":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kenzantonius"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kenzantonius":1,"-":20}}]
