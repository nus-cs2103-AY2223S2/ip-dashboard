[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    mainClassName \u003d \"nook.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    archiveBaseName \u003d \"ip\"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"checkstyle {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"kimberlybp":21,"-":39}},{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"do this","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kimberlybp":1}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that adds a task to the tasklist.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    private Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new AddCommand with the specified CommandType and Task.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * @param type the type of this Command","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * @param task the Task to be added","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public AddCommand(CommandType type, Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        super(type);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * Executes this AddCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * Adds the specified Task to the TaskLis, saves the updated TaskList to","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * the file using the Storage object, informs the Ui to display the added task","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * @param list the TaskList to add the Task to","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of the addition","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage to save the updated TaskList to","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            list.addTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            storage.saveListToFile(list, ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            return \"Got it, that will be 1000 bells- Just kidding!\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                    + \"I\u0027ll add that task for you:\\n\" + task.toString() + \"\\n Now you have \"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                    + list.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            return ui.getSavingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":50}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.BYE;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that ends the conversation with Sirius.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new ByeCommand with the CommandType of BYE.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        super(BYE);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * Executes this ByeCommand with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Informs the Ui to show the bye message.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param list the existing TaskList (not used in this command)","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui object to help display the bye message","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage storing the latest TaskList (not used in this command)","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        return ui.getBye();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":33}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.BYE;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Command is an abstract class that represents a command that Sirius can recognise and execute.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    private CommandType type;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Command with the specified CommandType.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * @param type the type of this Command","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    public Command(CommandType type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * Executes the operation that Sirius can perform based on the type of command","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @param tasks the existing TaskList that the command may need to update","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui object that helps display command execution results to the user","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage object that helps save tasks after the command has been executed","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @return The command execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if the command type is a bye command, false otherwise.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @return check if the Command is a bye command","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        return type.equals(BYE);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    public CommandType getType() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        return type;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":47}},{"path":"src/main/java/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the possible types of commands that Sirius can understand.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public enum CommandType {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    PRIORITISE(\"prioritise\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    DEPRIORITISE(\"deprioritise\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    UNKNOWN(\"unknown\"),","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    BYE(\"bye\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final String value;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new CommandType with the specified value.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param value the value of this CommandType","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    CommandType(String value) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Returns whether this CommandType\u0027s value is equal to the specified input, ignoring case.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param input the input to compare with this CommandType\u0027s value","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @return whether this CommandType\u0027s value is equal to the specified input, ignoring case","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public boolean isEqual(String input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        return this.value.equalsIgnoreCase(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        return value;","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":44}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.DELETE;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that deletes an existing task from the tasklist.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    private static final String UNKNOWN_TASK_MESSAGE \u003d \"Oopsies.. Seems like that task does not exist :(\";","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new DeleteCommand with the specified index of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * @param taskIndex the index of the task to be deleted in the tasklist","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        super(DELETE);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * Executes this DeleteCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Deletes the specified Task in the TaskList using the taskIndex, informs the Ui to display the deleted task,","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * and saves the updated TaskList to the file using the Storage object.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param list the TaskList to delete the Task from","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of the deletion","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage to save the updated TaskList to","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            if (taskIndex \u003e\u003d list.getSize()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                return UNKNOWN_TASK_MESSAGE;","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                assert taskIndex \u003e 0 : \"Task Index cannot be less than 1\";","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                Task toDelete \u003d list.getTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                list.deleteTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                storage.saveListToFile(list, ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                return \"Okay, I\u0027ve removed that task for you. It\u0027s no longer on your to-do list:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                        + toDelete.toString() + \"\\n Now you have \"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"                        + list.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            return ui.getSavingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":58}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.FIND;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that finds tasks using a specified keyword.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    private static final String RESULT_MESSAGE \u003d \"Great, here are the matching tasks in your list.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"           + \"Take a look and let me know if you need help with anything else\\n \";","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    private String keyword;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new FindCommand with the specified keyword to search the tasklist for.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * @param keyword the keyword of the task description to be searched in the tasklist","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        super(FIND);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * Executes this FindCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * Uses the search function of the TaskList to search for tasks with descriptions","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * that match the keyword, then displaying it to the user using the Ui","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @param list the TaskList to search for Tasks with the keyword","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of the results of the search","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage to save the updated TaskList to (not used in this command)","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        TaskList results \u003d list.search(keyword);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        sb.append(RESULT_MESSAGE);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        sb.append(results.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kimberlybp":45}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.LIST;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that lists the existing tasks currently being stored.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    private static final String LIST_LABEL \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new ListCommand with the CommandType of LIST.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public ListCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        super(LIST);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * Executes this ListCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Iterates through the existing TaskList in order to display the existing tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * using the Ui","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param list the existing TaskList","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of all the stored tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage storing the latest TaskList (not used in this command)","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        sb.append(LIST_LABEL + \"\\n \");","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        sb.append(list.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":39}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.MARK;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that toggles the completion status","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * of a specific task in the tasklist.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private static final String UNKNOWN_TASK_MESSAGE \u003d \"Oopsies.. Seems like that task does not exist :(\";","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new MarkCommand with the specified CommandType and taskIndex.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * @param type the type of this Command","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param taskIndex the index of the Task to be updated","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public MarkCommand(CommandType type, int taskIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        super(type);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Executes this MarkCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Toggles the completion status of a specific task as done or not done","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * depending on the CommandType of the current MarkCommand","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param list the TaskList to retrieve the existing task from","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of the update","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage to save the updated TaskList to","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        if (taskIndex \u003e\u003d list.getSize()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            return UNKNOWN_TASK_MESSAGE;","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        assert taskIndex \u003e 0 : \"Task Index cannot be less than 1\";","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        Task currentTask \u003d list.getTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        String resultMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        if (this.getType().equals(MARK)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            resultMessage \u003d \"Great job! I knew you could do it. Keep up the good work!\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                    + \"I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                    + currentTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            currentTask.markAsNotDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            resultMessage \u003d \"Alright, I\u0027ve marked this task as not done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                    + currentTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            storage.saveListToFile(list, ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            return ui.getSavingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        return resultMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":72}},{"path":"src/main/java/commands/ReprioritiseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.PRIORITISE;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import nook.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import nook.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import nook.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import tasks.Priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * Represents the command that updates the priority","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * of a specific task in the tasklist.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class ReprioritiseCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String UNKNOWN_TASK_MESSAGE \u003d \"Oopsies.. Seems like that task does not exist :(\";","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new ReprioritiseCommand with the specified CommandType and taskIndex.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param type      the type of this Command","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param taskIndex the index of the Task to be updated","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public ReprioritiseCommand(CommandType type, int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        super(type);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Executes this ReprioritiseCommand with a specified TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * Updates the priority of a specific task by increasing or decreasing it","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * depending on the CommandType of the current ReprioritiseCommand","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * @param list    the TaskList to retrieve the existing task from","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @param ui      the Ui to help inform the user of the update","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     * @param storage the Storage to save the updated TaskList to","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * @return The execution result string.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        if (taskIndex \u003e\u003d list.getSize()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            return UNKNOWN_TASK_MESSAGE;","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        assert taskIndex \u003e 0 : \"Task Index cannot be less than 1\";","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        Task currentTask \u003d list.getTask(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        Priority currentPriority \u003d currentTask.getPriority();","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        String resultMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        if (this.getType().equals(PRIORITISE)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            currentTask.setPriority(Priority.getHigherPriority(currentPriority));","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"            resultMessage \u003d \"Alright, it looks like this task needs a bit more attention.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                    + \"I\u0027ve prioritised this task for you:\\n\" + currentTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            currentTask.setPriority(Priority.getLowerPriority(currentPriority));","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            resultMessage \u003d \"Alright, it looks like this task doesn\u0027t require as much attention.\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                    + \"I\u0027ve decreased the priority of this task for you:\\n\" + currentTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            storage.saveListToFile(list, ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            return ui.getSavingError();","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        return resultMessage;","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kimberlybp":73}},{"path":"src/main/java/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package controllers;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private VBox box;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private Label name;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private DialogBox(String text, String user, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        name.setText(user);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    private void flip() {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        ObservableList\u003cNode\u003e boxTmp \u003d FXCollections.observableArrayList(box.getChildren());","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        box.getChildren().setAll(boxTmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        box.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        return new DialogBox(text, \"You\", img);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        var db \u003d new DialogBox(text, \"Tom Nook\", img);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        db.flip();","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        return db;","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":70}},{"path":"src/main/java/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package controllers;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import nook.TomNook;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private TomNook tomNook;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaTomNook.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    public void setDuke(TomNook d) {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        tomNook \u003d d;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * Displays the greeting message to the GUI.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public void displayGreeting() {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        String greeting \u003d this.tomNook.getUi().getGreeting();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        String response \u003d tomNook.getResponse(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        );","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":69}},{"path":"src/main/java/exceptions/NookException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package exceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents an exception that is thrown when an error occurs within the application.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public class NookException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"     * @param err the detail message of the exception.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public NookException(String err) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"        super(err);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":17}},{"path":"src/main/java/nook/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"public class Launcher {","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":12}},{"path":"src/main/java/nook/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import controllers.MainWindow;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private TomNook tomNook \u003d new TomNook();","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"            stage.setTitle(\"Nook\");","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(tomNook);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayGreeting();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"            stage.show();","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":34}},{"path":"src/main/java/nook/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.DEADLINE;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.EVENT;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import static commands.CommandType.TODO;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import commands.AddCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import commands.ByeCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import commands.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import commands.CommandType;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import commands.ReprioritiseCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import exceptions.NookException;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import tasks.Priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":" * Represents the Parser that helps to parse input commands","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":" * into recognisable commands that Sirius can execute","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Returns the CommandType based on the String input given","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * by iterating through the existing CommandType values","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @return the CommandType based on the String input given","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    public static CommandType getCommandType(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        for (CommandType c : CommandType.values()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            if (c.isEqual(input)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                return c;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        return CommandType.UNKNOWN;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * Parses the user\u0027s input and returns a command that is recognised and","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * executable by Sirius. It will also handle unknown commands by throwing a","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * DukeException","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     * @param input User\u0027s input from the scanner","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     * @return A command that represents the input","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     * @throws NookException if the input command is not recognised","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    public static Command parse(String input) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        Validator validator \u003d new Validator();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        CommandType commandType \u003d getCommandType(inputArr[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        String taskInput \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        switch (commandType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        case LIST:","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        case MARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            return new MarkCommand(commandType, index);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        case PRIORITISE:","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        case DEPRIORITISE:","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            return new ReprioritiseCommand(commandType, index);","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        case DELETE:","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            validator.validateDescription(inputArr, commandType.getValue());","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"            taskInput \u003d inputArr[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            Todo todo \u003d generateTodo(validator, taskInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            return new AddCommand(TODO, todo);","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            validator.validateDescription(inputArr, commandType.getValue());","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            taskInput \u003d inputArr[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            Deadline deadline \u003d generateDeadline(taskInput);","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"            return new AddCommand(DEADLINE, deadline);","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"            validator.validateDescription(inputArr, commandType.getValue());","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            taskInput \u003d inputArr[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            return new AddCommand(EVENT, generateEvent(taskInput));","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        case FIND:","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            return new FindCommand(inputArr[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            assert commandType \u003d\u003d CommandType.UNKNOWN : \"Command type is not a declared type\";","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            throw new NookException(generateDefaultMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    private static String generateDefaultMessage() {","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        return \"Oh dear, I wasn\u0027t expecting that at all... What do you mean by that?\";","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    private static Todo generateTodo(Validator validator, String taskInput) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        String[] todoInputArr \u003d taskInput.split(\"/priority\", 2);","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        String todoDesc \u003d todoInputArr[0].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        if (todoInputArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            String priorityStr \u003d todoInputArr[1].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            validator.validatePriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"            Priority priority \u003d Priority.getPriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"            return new Todo(todoDesc, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"        return new Todo(todoDesc);","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"    private static Event generateEvent(String taskInput) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"        Validator validator \u003d new Validator();","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        String[] eventInputArr \u003d taskInput.split(\"/\");","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        String eventDesc \u003d eventInputArr[0].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        String from \u003d eventInputArr[1].trim().substring(5);","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        String to \u003d eventInputArr[2].trim().substring(3);","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"        if (eventInputArr.length \u003d\u003d 4) {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"            String priorityStr \u003d eventInputArr[3].trim().substring(9);","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"            validator.validatePriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"            Priority priority \u003d Priority.getPriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"            return new Event(eventDesc, from, to, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"        return new Event(eventDesc, from, to);","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"    private static Deadline generateDeadline(String taskInput) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        Validator validator \u003d new Validator();","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        String[] deadlineInputArr \u003d taskInput.split(\"/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"        String deadlineDesc \u003d deadlineInputArr[0].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"        String byStr \u003d deadlineInputArr[1].trim().substring(3);","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"        validator.validateDate(byStr);","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"        LocalDate byDate \u003d LocalDate.parse(byStr);","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        if (deadlineInputArr.length \u003d\u003d 3) {","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"            String priorityStr \u003d deadlineInputArr[2].trim().substring(9);","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"            validator.validatePriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"            Priority priority \u003d Priority.getPriority(priorityStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"            return new Deadline(deadlineDesc, byDate, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"        return new Deadline(deadlineDesc, byDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":145}},{"path":"src/main/java/nook/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.io.File;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import tasks.Priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import tasks.TaskComparator;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import tasks.TaskType;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" * Represents the Storage that helps to store the tasks entered by the user","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private File file;","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Storage with the specified file path.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @param filePath the file path to the storage file","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * Returns the TaskType based on the String input given","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * by iterating through the existing TaskType values","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * @return the TaskType based on the String input given","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    public TaskType getTaskType(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        for (TaskType t : TaskType.values()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            if (t.isEqual(input)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                return t;","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        return TaskType.DEFAULT;","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * Loads any existing data from the filePath of the Storage (if such a file in the filePath exists),","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     * parses each line into a corresponding task and then adds each task into a","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * newly initialised arraylist of tasks. Returns the arraylist of tasks loaded.","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     * @return the arraylist of tasks loaded from the storage file (if any)","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * @throws Exception","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        Validator validator \u003d new Validator();","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTask\u003e initTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            line \u003d line.trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"            String[] strArr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            TaskType type \u003d getTaskType(strArr[0]);","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            boolean isCompleted;","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"            String taskDesc;","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            Priority priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"                isCompleted \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"                taskDesc \u003d strArr[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                priority \u003d Priority.LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"                isCompleted \u003d Integer.parseInt(strArr[1]) \u003d\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"                taskDesc \u003d strArr[2];","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                priority \u003d Priority.getPriority(strArr[3]);","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"                if (validator.isDateValid(strArr[4])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"                    LocalDate byDate \u003d LocalDate.parse(strArr[4]);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"                    initTasks.add(new Deadline(taskDesc, isCompleted, byDate, priority));","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            case EVENT:","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                initTasks.add(new Event(taskDesc, isCompleted, strArr[4], strArr[5], priority));","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"            default:","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                initTasks.add(new Todo(taskDesc, isCompleted, priority));","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        Collections.sort(initTasks, new TaskComparator());","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        return initTasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"     *  Saves tasks into the Storage file by iterating through the specified TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"     *  Also handles any saving errors by using the Ui to display the error message","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"     * @param taskList the tasklist to save","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"     * @param ui the Ui to help inform the user of the error","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"     * @throws IOException from file operations","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    public void saveListToFile(TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"        FileWriter writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTask\u003e list \u003d taskList.getTaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"            writer.write(t.parseToSave() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        writer.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":122}},{"path":"src/main/java/nook/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import tasks.TaskComparator;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * Represents a list of tasks. It contains methods for adding, retrieving and deleting tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a TaskList from an initial list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param initList The initial list of tasks to use for the TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public TaskList(List\u003cTask\u003e initList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        this.list \u003d initList;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"            int count \u003d i + 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            String res \u003d count + \".\" + getTask(i).toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            if (i !\u003d getSize() - 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                res +\u003d \"\\n \";","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            sb.append(res);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves a task from the TaskList at the specified index.","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        return list.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        list.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"     * Deletes a task from the TaskList at the specified index.","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        list.remove(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        return list.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        Collections.sort(list, new TaskComparator());","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        return list;","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"     * Iterates through the existing TaskList in order to find tasks with descriptions","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * that match the specified keyword, storing them in a new TaskList and then returning","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     * the TaskList containing the results of the search","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"     * @param keyword the keyword of the task description to be searched in the tasklist","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"            Task currTask \u003d list.get(i);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"            if (currTask.toString().contains(keyword)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"                resultList.add(currTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        return new TaskList(resultList);","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":107}},{"path":"src/main/java/nook/TomNook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import exceptions.NookException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * The main class that represents the application.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * The class holds a task list, a storage, and a UI,","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * uses a scanner to receive user inputs and execute the corresponding commands.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"public class TomNook {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private static final String PATH \u003d \"data/Duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a Duke object with the default file path for the storage.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Loads the task list from the file and sets up the UI.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * In case of a loading error, shows an error message and creates an empty task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public TomNook() {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        storage \u003d new Storage(this.PATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a Duke object with a specified file path for the storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Loads the task list from the file and sets up the UI.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * In case of a loading error, shows an error message and creates an empty task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * @param filePath the file path to the storage file","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public TomNook(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            ui.getLoadingError();","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * Runs the Duke application CLI ver.","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     * Continuously receives user inputs, then parses and executes the corresponding commands.","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"     * Exits the program when a bye command is executed.","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        while (!isBye) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"                String commandInput \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                Command c \u003d Parser.parse(commandInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                ui.printOutput(c.execute(tasks, ui, storage));","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"                isBye \u003d c.isBye();","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            } catch (NookException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"                ui.showExceptionError(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                ui.showDateTimeParseError();","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * The main method that creates a Duke object with the default file path and runs the application.","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * @param args command line arguments","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        new TomNook(PATH).run();","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            if (c.isBye()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"                delay.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"                delay.play();","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        } catch (NookException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"            return ui.getExceptionError(e);","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        return this.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kimberlybp":110,"-":2}},{"path":"src/main/java/nook/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the Ui that handles all interactions with the user","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"     * Formats the input string to standard output message format for duke CLI.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"     * @param input The string to be formatted.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    public static String formatOutput(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        return line + input + \"\\n\" + line;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * Prints the given output to the console.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * @param output The output to be printed.","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        System.out.println(formatOutput(output));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves the greeting message.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * @return The greeting message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        return \"Hello there, yes yes! I\u0027m Tom Nook\\nHow can I assist you today? :)\";","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     * Prints the farewell message.","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * @return The farewell message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public String getBye() {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        return \"Have a great day, don\u0027t forget to stay on top of those tasks!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves the error message of the given exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     * @param e The exception that was thrown.","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     * @return The exception message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    public String getExceptionError(Exception e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        return e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves the error message for when there is an error parsing a date-time string.","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * @return The exception message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    public String getDateTimeParseError() {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        return \"Woah.. Error parsing date time for deadline task. \"","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"              + \"Please enter the by datetime in this format yyyy-mm-dd (e.g., 2023-10-15).\";","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves the error message for when there is an error loading data.","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     * @return The exception message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    public String getLoadingError() {","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        return \"No initial data found. I\u0027ll be generating a new task list for you..\";","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     * Retrieves the error message for when there is an error saving data.","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"     * @return The exception message string.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    public String getSavingError() {","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        return \"Uh oh... An error occurred while I was trying to save your latest task list :0\";","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     * Shows the greeting message to the console.","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        printOutput(getGreeting());","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     * Prints the error message of the given exception to the console.","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"     * @param e The exception that was thrown.","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    public void showExceptionError(Exception e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        printOutput(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"     * Prints the error message for when there is an error parsing a date-time string.","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"    public void showDateTimeParseError() {","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        printOutput(\"Woah.. Error parsing date time for deadline task. \"","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                + \"Please enter the by datetime in this format yyyy-mm-dd (e.g., 2023-10-15).\");","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kimberlybp":108}},{"path":"src/main/java/nook/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package nook;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import exceptions.NookException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import tasks.Priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Represents the Validator which acts as a utility class","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * and handles all input validations","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public class Validator {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    private static final String DATE_ERROR_MESSAGE \u003d \"Woah.. Error parsing date time for deadline task. \"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"            + \"Please enter the by datetime in this format yyyy-mm-dd (e.g., 2023-10-15).\";","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * Returns a boolean indicating if the description is empty or not","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * @param arr an array representation of the user\u0027s input line","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * @return if the description given by the user is empty","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    public boolean isDescriptionEmpty(String[] arr) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        return arr.length \u003d\u003d 1 || arr[1].trim().isEmpty();","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * Returns a boolean indicating if the date is in the correct format to parse into a LocalDate","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * @param input string that represents the date the user entered","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @return if the date is in the correct format to parse into date","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public boolean isDateValid(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            LocalDate.parse(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        return true;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Returns a boolean indicating if the priority string parsed is a","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * valid and recognised priority","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * @param input string that represents the priority the user entered","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * @return if the priority string parsed is a valid and recognised priority","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    public boolean isPriorityValid(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        Priority priority \u003d Priority.getPriority(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        return priority !\u003d Priority.UNKNOWN;","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * Generates the error message if task description is empty for a specified task","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * @param task string of the task type derived from commandType","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     * @return error message","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    private static String generateDescriptionErrorMessage(String task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        return \"Hey now.. The description of a \" + task + \" cannot be empty. \u003e:(\";","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * Validates the description string if it is empty","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     * and throws a DukeException if it is empty","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * @param inputArr an array representation of the user\u0027s input line","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     * @param task     string of the task type derived from commandType","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     * @throws NookException","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    public void validateDescription(String[] inputArr, String task) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        if (isDescriptionEmpty(inputArr)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            throw new NookException(generateDescriptionErrorMessage(task));","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"     * Validates the date string if it can be parsed into LocalDate","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"     * and throws a DukeException if it is unable to be parsed into LocalDate","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"     * @param input string of the date to be parsed","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * @throws NookException","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public void validateDate(String input) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        if (!isDateValid(input)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            throw new NookException(DATE_ERROR_MESSAGE);","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * Validates the priority string if it can be parsed into recognisable Priority","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     * and throws a DukeException if it is unable to be parsed into recognisable Priority","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"     * @param input string of the priority to be parsed","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"     * @throws NookException","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    public void validatePriority(String input) throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        if (!isPriorityValid(input)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"            throw new NookException(\"Oops! If you want to set a priority, \"","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"                    + \"please enter values such as: low, medium, high\");","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":104}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static tasks.Priority.LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static tasks.TaskType.DEADLINE;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" * Represents a task with a deadline","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Deadline task with the given description,","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * priority and deadline datetime.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * @param by The deadline datetime of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        super(description, DEADLINE, LOW);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Deadline task with the given description and deadline datetime.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @param by The deadline datetime of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public Deadline(String description, LocalDate by, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        super(description, DEADLINE, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Deadline task with the given description, completion status, and deadline datetime.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * @param by The deadline datetime of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    public Deadline(String description, boolean isDone, LocalDate by, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        super(description, isDone, DEADLINE, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     * Formats the given date string \"by\" into the specified date format.","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"     * @return A string representation of the date in format \"MMM d yyyy\".","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private String formatDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        return \"[\" + type.getValue() + \"]\"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                + super.toString() + \" (by: \" + formatDate() + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    public String parseToSave() {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        return type.getValue() + \" | \" + super.parseToSave() + \" | \" + by;","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":70}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static tasks.Priority.LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static tasks.TaskType.EVENT;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":" * Represents a scheduled event","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    protected String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    protected String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Creates a new Event object with the given description, starting time and end time","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * with a default priority of LOW","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * @param from the starting time of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        super(description, EVENT, LOW);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * Creates a new Event object with the given description, priority, starting time and end time.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @param from the starting time of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    public Event(String description, String from, String to, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        super(description, EVENT, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * Creates a new Event object with the given description, completion status,","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * priority and starting time and end time.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * @param isDone whether the event is completed.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * @param from the starting time of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    public Event(String description, boolean isDone, String from, String to, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        super(description, isDone, EVENT, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        return \"[\" + type.getValue() + \"]\"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    public String parseToSave() {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        return type.getValue() + \" | \" + super.parseToSave() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":67}},{"path":"src/main/java/tasks/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the priority of a specific task.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public enum Priority {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    LOW(\"low\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    MEDIUM(\"medium\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    HIGH(\"high\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    UNKNOWN(\"unknown\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    private final String value;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Priority with the specified value.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * @param value the value of this Priority","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    Priority(String value) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Returns whether this Priority\u0027s value is equal to the specified input, ignoring case.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param input the input to compare with this Priority\u0027s value","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @return whether this Priority\u0027s value is equal to the specified input, ignoring case","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public boolean isEqual(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        return this.value.equalsIgnoreCase(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        return value;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * Returns the Priority based on the String input given","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     * by iterating through the existing Priority values","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * @return the Priority based on the String input given","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public static Priority getPriority(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        for (Priority p : Priority.values()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            if (p.isEqual(input)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                return p;","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        return Priority.UNKNOWN;","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    public static int getPriorityLevel(Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        switch (priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        case LOW:","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            return 3;","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        case MEDIUM:","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            return 2;","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        case HIGH:","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            return 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"            return 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    public static Priority getHigherPriority(Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        switch (priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        case LOW:","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            return MEDIUM;","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        case MEDIUM:","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        case HIGH:","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            return HIGH;","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            return LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    public static Priority getLowerPriority(Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        switch (priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        case HIGH:","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            return MEDIUM;","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            return LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kimberlybp":85}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents a task that a user can do/plans to do.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" * It has a description and a status (done or not done) of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    protected TaskType type;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    protected Priority priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Task instance with the given description and task type.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * @param type the type of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    public Task(String description, TaskType type, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new Task instance with the given description, status, type.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * @param isDone the status of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * @param type the type of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public Task(String description, boolean isDone, TaskType type, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * Returns a string representation of the status of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * @return the string representation of the status of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     * Returns a string label of the priority of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     * @return the string label of the priority of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    public String getPriorityLabel() {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        return priority.getValue().toUpperCase();","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        return \"[\" + getStatusIcon() + \"] (\" + getPriorityLabel() + \") \" + this.description;","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     * Returns a string representation of the task suitable for saving in a text file.","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     * @return the string representation of the task suitable for saving in a text file.","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    public String parseToSave() {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        return (isDone ? 1 : 0) + \" | \" + description + \" | \" + getPriorityLabel();","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"        return this.priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":98}},{"path":"src/main/java/tasks/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":" * Represents a comparator for comparing tasks based on their priority levels.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":" * Tasks are compared based on the priority level of their {@link Task#getPriority() priority} field.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"     * Compares two tasks based on their priority levels.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"     * @param t1 the first task to compare","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * @param t2 the second task to compare","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * @return a negative integer, zero, or a positive integer if the first task has a lower, equal,","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     *         or higher priority level than the second task, respectively","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        int t1Level \u003d Priority.getPriorityLevel(t1.priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        int t2Level \u003d Priority.getPriorityLevel(t2.priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        return t1Level - t2Level;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"kimberlybp":24}},{"path":"src/main/java/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the possible types of tasks that Sirius can add to the tasklist.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public enum TaskType {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    DEFAULT(\"default\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    private final String value;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new TaskType with the specified value.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * @param value the value of this CommandType","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    TaskType(String value) {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Returns whether this TaskType\u0027s value is equal to the specified input, ignoring case.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param input the input to compare with this TaskType\u0027s value","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @return whether this TaskType\u0027s value is equal to the specified input, ignoring case","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public boolean isEqual(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        return this.value.equalsIgnoreCase(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        return value;","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":36}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static tasks.Priority.LOW;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static tasks.TaskType.TODO;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":" * Represents a simple to-do task","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a Todo with the given description with","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"     * a default priority of LOW","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"        super(description, TODO, LOW);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a Todo with the given description and priority.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the todo task","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public Todo(String description, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        super(description, TODO, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a Todo with the given description, status and priority.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param isDone the status of the to-do task (completed or not)","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param priority the priority of the to-do task","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public Todo(String description, boolean isDone, Priority priority) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        super(description, isDone, TODO, priority);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        return \"[\" + type.getValue() + \"]\" + super.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    public String parseToSave() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        return type.getValue() + \" | \" + super.parseToSave();","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-radius: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"box\" alignment\u003d\"TOP_RIGHT\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"99.0\" prefWidth\u003d\"421.0\" style\u003d\"-fx-background-color: #FEFAE9; -fx-background-radius: 20; -fx-border-radius: 20;\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"              \u003cLabel fx:id\u003d\"name\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #BF8D54; -fx-background-radius: 10;\" text\u003d\"Label\" textFill\u003d\"#5e2c18\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"                  \u003cFont name\u003d\"Avenir Heavy\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"              \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#7a715f\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"                  \u003cFont name\u003d\"Avenir Medium\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003cAnchorPane fx:id\u003d\"parentPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #ECA9B0;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controllers.MainWindow\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"315.0\" translateX\u003d\"6.0\" translateY\u003d\"-5.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"            \u003cFont name\u003d\"Avenir Roman\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"70.0\" style\u003d\"-fx-background-color: #F3F8E3; -fx-background-radius: 20;\" text\u003d\"Send\" textFill\u003d\"#79725d\" translateX\u003d\"3.0\" translateY\u003d\"5.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"            \u003cFont name\u003d\"Avenir Next Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #a2dede;\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":26}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import commands.Command;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import commands.CommandType;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import exceptions.NookException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import nook.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    public void addTodoCommand() throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"        Command command \u003d Parser.parse(\"todo read book 1\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(command.getType(), CommandType.TODO);","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public void addDeadlineCommand() throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        Command command \u003d Parser.parse(\"deadline read book 2 /by 2023-02-02\");","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(command.getType(), CommandType.DEADLINE);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    public void addEventCommand() throws NookException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        Command command \u003d Parser.parse(\"event read book 3 /from 10 Feb 2pm /to 3pm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(command.getType(), CommandType.EVENT);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kimberlybp":28}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public void initTodoTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"        Todo todo \u003d new Todo(\"write essay\");","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"        String expectedOutput \u003d \"[T][ ] write essay\";","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(expectedOutput, todo.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    public void initDeadlineTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        LocalDate date \u003d LocalDate.parse(\"2023-03-03\");","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        Deadline deadline \u003d new Deadline(\"do that\", date);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        String expectedOutput \u003d \"[D][ ] do that (by: Mar 3 2023)\";","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(expectedOutput, deadline.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public void initEventTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        Event event \u003d new Event(\"event A\", \"23 March 4pm\", \"5pm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        String expectedOutput \u003d \"[E][ ] event A (from: 23 March 4pm to: 5pm)\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(expectedOutput, event.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kimberlybp":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"todo join sports club","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":9}}]
