[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"    protected String by;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"        System.out.println(formatOutput(\"Hey there! I\u0027m Sirius\\n\\t What can I do for you today? :D\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"        while (!isBye(input)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"            String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"            String firstWord \u003d inputArr[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"            String taskInput \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"                switch (firstWord) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"                        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"                        sb.append(\"Here are the tasks in your list:\\n\\t \");","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"                        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"                            int count \u003d i + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"                            String res \u003d count + \".\" + taskList.get(i).toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"                            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"                                res +\u003d \"\\n\\t \";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"                            sb.append(res);","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"                        System.out.println(formatOutput(sb.toString()));","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"                    case \"mark\":","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"                        index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"                            System.out.println(\"Oopsies.. Seems like that task does not exist :(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"                        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"                            Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                            currentTask.markAsDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"                            System.out.println(formatOutput(\"Great :D I knew you could do it! I\u0027ve marked this task as done:\\n\\t\\t\" + currentTask.toString()));","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                        index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                            System.out.println(\"Oopsies.. Seems like that task does not exist :(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                            Task currentTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                            currentTask.markAsNotDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                            System.out.println(formatOutput(\"Ok, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + currentTask.toString()));","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                    case \"delete\":","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                        index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"                        Task toDelete \u003d taskList.get(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                        taskList.remove(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                        System.out.println(formatOutput(\"Ok. I\u0027ve removed this task:\\n\\t\\t\" + toDelete.toString() + \"\\n\\t Now you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                    case \"todo\":","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                        if (isDescriptionEmpty(inputArr)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                            throw new DukeException(formatOutput(\"Hey now.. The description of a todo cannot be empty. \u003e:(\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                        taskInput \u003d inputArr[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"                        Todo todo \u003d new Todo(taskInput);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"                        taskList.add(todo);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"                        System.out.println(formatOutput(\"Got it. I\u0027ve added this task:\\n\\t\\t\" + todo.toString() + \"\\n\\t Now you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"                        if (isDescriptionEmpty(inputArr)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"                            throw new DukeException(formatOutput(\"Hey now.. The description of a deadline cannot be empty. \u003e:(\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                        taskInput \u003d inputArr[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"                        String[] dArr \u003d taskInput.split(\"/by\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"                        String deadlineDesc \u003d dArr[0].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"                        String by \u003d dArr[1].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"                        Deadline deadline \u003d new Deadline(deadlineDesc, by);","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"                        System.out.println(formatOutput(\"Got it. I\u0027ve added this task:\\n\\t\\t\" + deadline.toString() + \"\\n\\t Now you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"                    case \"event\":","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                        if (isDescriptionEmpty(inputArr)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"                            throw new DukeException(formatOutput(\"Hey now.. The description of an event cannot be empty. \u003e:(\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"                        taskInput \u003d inputArr[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"                        String[] eArr \u003d taskInput.split(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"                        String eventDesc \u003d eArr[0].trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"                        String from \u003d eArr[1].trim().substring(5);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"                        String to \u003d eArr[2].trim().substring(3);","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                        Event event \u003d new Event(eventDesc, from, to);","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"                        taskList.add(event);","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                        System.out.println(formatOutput(\"Got it. I\u0027ve added this task:\\n\\t\\t\" + event.toString() + \"\\n\\t Now you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                    default:","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                        throw new DukeException(formatOutput(\"Huh? What do you mean? :o\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        System.out.println(formatOutput(\"Well, I\u0027m off! Hope to see you again soon :)\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    public static String formatOutput(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        return line + \"\\t \" + input + \"\\n\" + line;","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    public static boolean isBye(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"    public static boolean isList(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        return input.equalsIgnoreCase(\"list\");","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"    public static boolean isDescriptionEmpty(String[] arr) {","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        return arr.length \u003d\u003d 1 || arr[1].trim().isEmpty();","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kimberlybp":116,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"    public DukeException (String err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"        super(err);","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"    protected String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"    protected String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"todo join sports club","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kimberlybp":9}}]
