[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kohkaixun":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kohkaixun":1,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * The ChatBot Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"     * The Duke object\u0027s constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"     * @param filePath Relative filepath to load past data and save new data.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"     * Starts running Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"                this.ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"                this.ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"            } catch (RuntimeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"            } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"                this.ui.showLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"     * The main method.","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kohkaixun":55,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":" * A custom checked exception Duke objects can throw when user commands do not make sense or conform to formats and standards.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"    private String message;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"     * The constructor for DukeException.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"     * @param message The error message describing the source of error.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"     * Used to get the error message describing the problem.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"     * @return The error message.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        return this.message;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * Makes sense of the user\u0027s commands.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"     * Returns corresponding command objects from user commands given in strings.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"     * @param str User command","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"     * @return Command object corresponding to the user command.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"     * @throws RuntimeException If user commands don\u0027t make sense or conform to the various command formats and standards.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    public static Command parse(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"        Command command;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        boolean todoCheck, deadlineCheck, eventCheck, deleteCheck, markCheck, unMarkCheck, listCheck, findCheck, exitCheck, nothingCheck;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        todoCheck \u003d str.startsWith(\"todo \");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        deadlineCheck \u003d str.startsWith(\"deadline \");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        eventCheck \u003d str.startsWith(\"event \");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"        deleteCheck \u003d str.startsWith(\"delete \");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        markCheck \u003d str.startsWith(\"mark \");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        unMarkCheck \u003d str.startsWith(\"unmark \");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"        listCheck \u003d str.equals(\"list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        findCheck \u003d str.startsWith(\"find \");","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"        exitCheck \u003d str.equals(\"bye\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"        nothingCheck \u003d str.equals(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        if (str.equals(\"todo\") || str.equals(\"deadline\") || str.equals(\"event\") || str.equals(\"delete\")","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"                || str.equals(\"mark\") || str.equals(\"unmark\") || str.equals(\"find\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"This command\u0027s field cannot be left blank!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        } else if (todoCheck || deadlineCheck || eventCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"            if (deadlineCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"                String target \u003d \" /by \";","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"                if (!str.contains(target)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Deadline! Deadline commands need a /by field!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"                int index \u003d str.indexOf(target);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"                String description \u003d str.substring(0, index);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Deadline! Description for deadline cannot be left blank!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"                String deadline \u003d str.substring(index + 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"                int dateTimeLength \u003d deadline.length();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"                if (!(dateTimeLength \u003e 12 \u0026\u0026 dateTimeLength \u003c 16)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Deadline! \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"                            \"Check your date and time. They have to be in the format of dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"                int firstSlash \u003d deadline.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"                int secondSlash \u003d deadline.indexOf(\"/\", firstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"                if (firstSlash \u003d\u003d -1 || secondSlash \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Deadline! \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"                            \"Check your date format. Use / to separate day, month and year.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"            } else if (eventCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"                String target1 \u003d \" /from \";","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"                String target2 \u003d \" /to \";","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"                if (!(str.contains(target1) \u0026\u0026 str.contains(target2))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Event! Event commands need a /from and /to field!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"                int index1 \u003d str.indexOf(target1);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"                int index2 \u003d str.indexOf(target2);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"                if (index2 - index1 \u003c 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create event! \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"                            \"The /from field has to be before the /to field.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"                } else if (index2 - index1 \u003c 20) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create event! Please enter a valid /from field.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"                String description \u003d str.substring(0, index1);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create event! Description for event cannot be left blank\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"kohkaixun"},"content":"                String start \u003d str.substring(index1 + 7, index2);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"kohkaixun"},"content":"                String end \u003d str.substring(index2 + 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"kohkaixun"},"content":"                int startFirstSlash \u003d start.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"kohkaixun"},"content":"                int startSecondSlash \u003d start.indexOf(\"/\", startFirstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"kohkaixun"},"content":"                int endFirstSlash \u003d end.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"kohkaixun"},"content":"                int endSecondSlash \u003d end.indexOf(\"/\", endFirstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"kohkaixun"},"content":"                if (startFirstSlash \u003d\u003d -1 || startSecondSlash \u003d\u003d -1 || endFirstSlash \u003d\u003d -1 || endSecondSlash \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"kohkaixun"},"content":"                    throw new RuntimeException(\"Unable to create Deadline! Check your date and time format!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"kohkaixun"},"content":"            command \u003d new AddCommand(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"kohkaixun"},"content":"        } else if (deleteCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"kohkaixun"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"kohkaixun"},"content":"                String deleted_index \u003d str.substring(7);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"kohkaixun"},"content":"                int index \u003d Integer.parseInt(deleted_index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"kohkaixun"},"content":"                command \u003d new DeleteCommand(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"kohkaixun"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"kohkaixun"},"content":"                throw new RuntimeException(\"Target was not a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"kohkaixun"},"content":"        } else if (markCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"kohkaixun"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"kohkaixun"},"content":"                String marked_index \u003d str.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"kohkaixun"},"content":"                int index \u003d Integer.parseInt(marked_index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"kohkaixun"},"content":"                command \u003d new MarkCommand(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"kohkaixun"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"kohkaixun"},"content":"                throw new RuntimeException(\"Target was not a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"kohkaixun"},"content":"        } else if (unMarkCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"kohkaixun"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"kohkaixun"},"content":"                String unmarked_index \u003d str.substring(7);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"kohkaixun"},"content":"                int index \u003d Integer.parseInt(unmarked_index) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"kohkaixun"},"content":"                command \u003d new UnMarkCommand(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"kohkaixun"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"kohkaixun"},"content":"                throw new RuntimeException(\"Target was not a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"kohkaixun"},"content":"        } else if (listCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"kohkaixun"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"kohkaixun"},"content":"        } else if (findCheck) {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"kohkaixun"},"content":"            String keyword \u003d str.substring(5);","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"kohkaixun"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"kohkaixun"},"content":"                throw new RuntimeException(\"What would you like me to find?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"kohkaixun"},"content":"            command \u003d new FindCommand(keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"kohkaixun"},"content":"        } else if (exitCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"kohkaixun"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"kohkaixun"},"content":"        } else if (nothingCheck) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Please enter a command!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"kohkaixun"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Huh? I don\u0027t know what that means :(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"kohkaixun"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":124}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":" * Used to store data from past lists and save new data inputted by user.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    private String filepath;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    private String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    private File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"     * @param filepath Relative filepath to load past data and save new data.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"     * @throws DukeException The custom exception when user commands don\u0027t make sense or conform to formats and standards.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    public Storage(String filepath) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"        int ptr \u003d this.filepath.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        while (ptr !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"            index \u003d ptr;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"            ptr \u003d this.filepath.indexOf(\"/\", index + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"            this.path \u003d this.filepath.substring(0, index);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"            File path \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"            path.mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"            this.file \u003d new File(this.filepath);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"            throw new DukeException(null);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"     * Load past data inputted by user.","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"     * @return An array of tasks containing the list of tasks still in the list after user previously exited.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"     * @throws DukeException When filepath of file that is supposed to store past data cannot be created or found.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"    public Task[] load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"            String data;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"            for (int i \u003d 0; scanner.hasNextLine(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"                data \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"                int len \u003d data.length();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"                String command \u003d data.substring(0, len - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"                String marked \u003d data.substring(len - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"                Task task \u003d Task.makeTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"                if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"                    task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"                tasks[i] \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"            throw new DukeException(null);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kohkaixun"},"content":"     * Save new data inputted by user.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kohkaixun"},"content":"     * @param taskList The TaskList object storing the list of Task objects.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kohkaixun"},"content":"     * @throws DukeException When filepath of file that is supposed to store new data cannot be created or found.","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"kohkaixun"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"kohkaixun"},"content":"            FileWriter writer \u003d new FileWriter(this.filepath);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"kohkaixun"},"content":"            writer.write(taskList.taskListToSavedForm());","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"kohkaixun"},"content":"            writer.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"kohkaixun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"kohkaixun"},"content":"            throw new DukeException(\"There was a problem saving this task and changes made to it. Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":86}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * Stores the list of Task objects.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    private Task[] tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"     * The TaskList constructor used when there are past Task objects to be inputted.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"     * @param tasks The array of past Task objects","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    public TaskList(Task[] tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"            if (tasks[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"                this.index \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"     * The TaskList constructor used to create an empty TaskList object.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        this.tasks \u003d new Task[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"     * Add task to task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"     * @return The Duke chatbot\u0027s reply after adding a task.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"        this.tasks[this.index] \u003d task;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"Got it! This task has been added:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d this.printTask(index) + \"\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"        this.index++;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"        String sp \u003d this.index \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d \"You now have \" + this.index + \" \" + sp + \" in the list.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"     * Delete task from task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"     * @param index Index of task in task list to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"     * @return The Duke chatbot\u0027s reply after deleting a task.","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"        if (index \u003c 0 || index \u003e 99 || tasks[index] \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"Got it! This task has been removed:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d this.printTask(index) + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"        this.index--;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"        String sp \u003d this.index \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d \"You now have \" + this.index + \" \" + sp + \" in the list.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"        for (int i \u003d index ; i \u003c 99 ; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"            this.tasks[i] \u003d this.tasks[i + 1];","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"        this.tasks[99] \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kohkaixun"},"content":"     * Mark a task in task list as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kohkaixun"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kohkaixun"},"content":"     * @return The Duke chatbot\u0027s reply after marking a task as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kohkaixun"},"content":"    public String markTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"kohkaixun"},"content":"        if (index \u003c 0 || index \u003e 99 || tasks[index] \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"kohkaixun"},"content":"        this.tasks[index].mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"Great job! This task has been marked as done:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d this.printTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"kohkaixun"},"content":"     * Marking a task as undone.","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"kohkaixun"},"content":"     * @param index Index of task to be marked as undone.","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"kohkaixun"},"content":"     * @return The Duke chatbot\u0027s reply after marking a task as undone.","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kohkaixun"},"content":"    public String unMarkTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"kohkaixun"},"content":"        if (index \u003c 0 || index \u003e 99 || tasks[index] \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"kohkaixun"},"content":"        this.tasks[index].unMark();","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"Noted! This task has been marked as undone:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d this.printTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"kohkaixun"},"content":"     * Find tasks that have descriptions matching keyword","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"kohkaixun"},"content":"     * @param keyword Keyword that is being searched for.","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"kohkaixun"},"content":"     * @return String representation of the matching tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"kohkaixun"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"kohkaixun"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"kohkaixun"},"content":"        for (int i \u003d 0; i \u003c this.index; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"kohkaixun"},"content":"            Task task \u003d this.tasks[i];","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"kohkaixun"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"kohkaixun"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"kohkaixun"},"content":"                if (result.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"kohkaixun"},"content":"                    result +\u003d (i + 1) + \". \" + task;","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"kohkaixun"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"kohkaixun"},"content":"                    result +\u003d \"\\n\" + (i + 1) + \". \" + task;","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"kohkaixun"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"kohkaixun"},"content":"        return result;","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"kohkaixun"},"content":"    public String printTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"kohkaixun"},"content":"        return tasks[index].toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"kohkaixun"},"content":"     * Create a string to represent all the tasks in task list to be saved in file.","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing all the tasks in task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"kohkaixun"},"content":"    public String taskListToSavedForm() {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"kohkaixun"},"content":"        for (int i \u003d 0; i \u003c this.index; i ++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"kohkaixun"},"content":"            str +\u003d tasks[i].taskToSavedForm() + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"kohkaixun"},"content":"     * Lists out all the tasks in task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"kohkaixun"},"content":"     * @return List of all tasks in task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"kohkaixun"},"content":"        for (int i \u003d 0; i \u003c this.index; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"kohkaixun"},"content":"            if (i \u003d\u003d this.index - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"kohkaixun"},"content":"                str +\u003d (i + 1) + \". \" + this.printTask(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"kohkaixun"},"content":"            else {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"kohkaixun"},"content":"                str +\u003d (i + 1) + \". \" + this.printTask(i) + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"kohkaixun"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":155}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":" * The three types of tasks todo, deadline and event.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"     * Takes first letter of todo, deadline and event to represent the corresponding task type.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"     * @return The first letter of the corresponding task type.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"        switch (this) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"            case TODO:","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"                return \"T\";","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"                return \"D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"            case EVENT:","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"                return \"E\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        return \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * Interacts with user.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"     * Prints custom Duke chatbot logo and welcome message.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"     * Reads user\u0027s commands and returns it as a string to be read by Parser object.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"     * @return User\u0027s command in string.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"     * Prints divider line to separate user commands and Duke\u0027s replies.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"__________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"     * Prints error message when Duke chatbot runs into errors while loading past data.","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"Oops!! There was a problem loading past data. Try rebooting me again!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"     * Prepends Duke chatbot\u0027s custom reply to errors to the error message.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"     * @param message Error message from error encountered by Duke chatbot.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"     * @return Error message in string.","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"        return \"Oops!! There was an error\" + message;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":55}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    private String command;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    public AddCommand(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        Task task \u003d Task.makeTask(this.command);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(taskList.addTask(task));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(taskList.deleteTask(this.index));","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":25}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(\"Goodbye! It\u0027s been a pleasure talking to you!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"    private String keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"        String result \u003d taskList.find(this.keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        if (result.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"            System.out.println(\"Sorry, I didn\u0027t find any matching tasks...\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"            result \u003d \"Here, these are the tasks I found that match your search:\\n\" + result;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"            System.out.println(result);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kohkaixun":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(taskList.markTask(this.index));","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":25}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        System.out.println(taskList.unMarkTask(this.index));","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"kohkaixun":25}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskType;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":" * Tasks that have to be done by a certain deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    private String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    private Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        super(TaskType.DEADLINE, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"     * Factory method of Deadline objects.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"     * @param str String containing deadline description and date and time of deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"     * @return Deadline object.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"    public static Deadline to(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        String target \u003d \" /by \";","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        String description, deadline, day, month;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        int index \u003d str.indexOf(target);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        description \u003d str.substring(0, index);","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"        deadline \u003d str.substring(index + 5);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"        int firstSlash \u003d deadline.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"        int secondSlash \u003d deadline.indexOf(\"/\", firstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        day \u003d firstSlash \u003d\u003d 1 ? \"d\" : \"dd\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        month \u003d secondSlash - firstSlash \u003d\u003d 2 ? \"M\" : \"MM\";","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter inFormatter \u003d DateTimeFormatter.ofPattern(day + \"/\" + month + \"/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"            dateTime \u003d LocalDateTime.parse(deadline, inFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Invalid date and time! Please try again!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"        return new Deadline(description, dateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"     * Creates a string representing the deadline object so that it can be saved by Storage object.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing the deadline object.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"    public String taskToSavedForm() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter outFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"        String marked \u003d super.getStatusIcon() \u003d\u003d \"X\" ? \"1\" : \"0\";","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"        return \"deadline \" + this.description + \" /by \" + this.deadline.format(outFormatter) + marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"     * Creates custom string containing Deadline object\u0027s description and date and time of deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing Deadline object.","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter outFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d \" \" + \"(by: \" + this.deadline.format(outFormatter) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskType;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":" * Tasks that place from a certain date and time to another date and time.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    private String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"    private Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"     * Factory method of Event objects.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"     * @param str String containing description of event and start and end dates and times.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"     * @return Event object.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"    public static Event to(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        String target1 \u003d \" /from \";","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        String target2 \u003d \" /to \";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        LocalDateTime startDateTime, endDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"        String description, start, end, startDay, startMonth, endDay, endMonth;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"        int index1 \u003d str.indexOf(target1);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"        int index2 \u003d str.indexOf(target2);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        description \u003d str.substring(0, index1);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        start \u003d str.substring(index1 + 7, index2);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"        end \u003d str.substring(index2 + 5);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"        int startFirstSlash \u003d start.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"        int startSecondSlash \u003d start.indexOf(\"/\", startFirstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"        int endFirstSlash \u003d end.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"        int endSecondSlash \u003d end.indexOf(\"/\", endFirstSlash + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"        startDay \u003d startFirstSlash \u003d\u003d 1 ? \"d\" : \"dd\";","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"        startMonth \u003d startSecondSlash - startFirstSlash \u003d\u003d 2 ? \"M\" : \"MM\";","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"        endDay \u003d endFirstSlash \u003d\u003d 1 ? \"d\" : \"dd\";","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"        endMonth \u003d endSecondSlash - endFirstSlash \u003d\u003d 2 ? \"M\" : \"MM\";","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter startInFormatter \u003d DateTimeFormatter.ofPattern(startDay + \"/\" + startMonth + \"/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter endInFormatter \u003d DateTimeFormatter.ofPattern(endDay + \"/\" + endMonth + \"/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"            startDateTime \u003d LocalDateTime.parse(start, startInFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"            endDateTime \u003d LocalDateTime.parse(end, endInFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Invalid date and time! Please try again!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"        if (startDateTime.isAfter(endDateTime)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"            throw new RuntimeException(\"Unable to create duke.task.Event! Starting date and time cannot be after ending date and time!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"        return new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"     * Creates a string representing the event object so that it can be saved by Storage object.","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing the event object.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"    public String taskToSavedForm() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter outFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"        String marked \u003d super.getStatusIcon() \u003d\u003d \"X\" ? \"1\" : \"0\";","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"        return \"event \" + this.description + \" /from \" + this.start.format(outFormatter) + \" /to \" + this.end.format(outFormatter) + marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kohkaixun"},"content":"     * Creates custom string containing Event object\u0027s description and start and end dates and times.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing Event object.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"kohkaixun"},"content":"        DateTimeFormatter outFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d \" (from: \" + this.start.format(outFormatter) + \" to: \" + this.end.format(outFormatter) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":83}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskType;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * Abstract Task class that is extended by ToDo, Deadline and Event class.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"     * Task class constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"    public Task(TaskType taskType, String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    public abstract String taskToSavedForm();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"     * Static method that creates ToDo, Deadline or Event object depending on command in string.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"     * @param str Command inputted by user.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"     * @return Task object that could be a ToDo, Deadline or Event object.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"    public static Task makeTask(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"            return ToDo.to(str.substring(5));","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"        } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"            return Deadline.to(str.substring(9));","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"            return Event.to(str.substring(6));","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"     /** Get description of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"     * @return Description of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"        return this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"     * Get status icon to mark whether a task is done or not for string representation of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"     * @return X if task is done or just a blank space if task is not.","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"     * Mark Task object as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kohkaixun"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"kohkaixun"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"kohkaixun"},"content":"     * Mark task as undone.","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"kohkaixun"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"kohkaixun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"kohkaixun"},"content":"     * String representation of Task object.","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"kohkaixun"},"content":"     * @return String representation of Task object.","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d \"[\" + this.taskType + \"]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d \"[\" + this.getStatusIcon() + \"] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"kohkaixun"},"content":"        str +\u003d this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":81}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.TaskType;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":" * Tasks without deadlines or start and end times.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    private String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"     * Factory method of ToDo objects.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"     * @param str String containing description of task that needs to be done.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"     * @return ToDo object.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    public static ToDo to(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        return new ToDo(str);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"     * Creates a string representing the ToDo object so that it can be saved by Storage object.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing the ToDo object.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"    public String taskToSavedForm() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        String marked \u003d super.getStatusIcon() \u003d\u003d \"X\" ? \"1\" : \"0\";","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"        return \"todo \" + this.description + marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"     * Creates custom string containing ToDo object\u0027s description.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"     * @return String representing ToDo object.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"        String str \u003d super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"        return str;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":44}},{"path":"src/test/java/duke/EventStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"public class EventStub extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"    public EventStub(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    public String taskToSavedForm() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"        return \"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"    public void mark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kohkaixun":37}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"1. [E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"        expected +\u003d \"\\n2. [E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"1. [E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"        expected +\u003d \"2. [E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"        taskList.markTask(1);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        expected \u003d expected.replace(\"[ ]\", \"[X]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"1. [E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(\"\", taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"    public void testUnMarkTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"        taskList.addTask(new EventStub(\"event competition /from 22/10/2022 0800 /to 22/10/2022 1700\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"1. [E][X] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"        taskList.unMarkTask(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"        expected \u003d expected.replace(\"[X]\", \"[ ]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kohkaixun":57}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"    public void testTo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"        Event event \u003d Event.to(\"competition /from 22/10/2022 0800 /to 22/10/2022 1700\");","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"[E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"    public void testMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"        Event event \u003d Event.to(\"competition /from 22/10/2022 0800 /to 22/10/2022 1700\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"[E][X] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"    public void testUnMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"        Event event \u003d Event.to(\"competition /from 22/10/2022 0800 /to 22/10/2022 1700\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"        String expected1 \u003d \"[E][X] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"        String expected2 \u003d \"[E][ ] competition (from: Oct 22 2022 0800 to: Oct 22 2022 1700)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected1, event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"        event.unMark();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected2, event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"        Event event \u003d Event.to(\"competition /from 22/10/2022 0800 /to 22/10/2022 1700\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(event.getStatusIcon(), \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(event.getStatusIcon(), \"X\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"kohkaixun"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"kohkaixun"},"content":"    public void testTaskToSavedForm() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"kohkaixun"},"content":"        String expected \u003d \"competition /from 22/10/2022 0800 /to 22/10/2022 1700\";","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"kohkaixun"},"content":"        Event event \u003d Event.to(expected);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"kohkaixun"},"content":"        String expected1 \u003d \"event \" + expected + \"0\";","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected1, event.taskToSavedForm());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"kohkaixun"},"content":"        event.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"kohkaixun"},"content":"        String expected2 \u003d \"event \" + expected + \"1\";","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"kohkaixun"},"content":"        assertEquals(expected2, event.taskToSavedForm());","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"kohkaixun"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"kohkaixun"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kohkaixun":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"unmark 100","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"deadline return book/by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"mark 10","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"delete 10","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kohkaixun":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kohkaixun":1,"-":20}}]
