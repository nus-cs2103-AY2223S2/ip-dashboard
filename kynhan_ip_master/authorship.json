[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kynhan":2,"-":22}},{"path":"list_storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"D | 0 | return book | 10/02/2001 12:30","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"T | 0 | homework","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"T | 1 | homework2 ","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"D | 1 | homework3 | 2/10/2023 6:30","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"E | 0 | birthday event | 2/04/2023 5:00 | 2/04/2023 6:00","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kynhan":5}},{"path":"src/main/java/Duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"public class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"    private String type;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"    private String[] data;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"    public Command(String type, String[] data) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"        switch(type) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"                ui.showBye();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"                ui.showList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"                int markIndex \u003d Integer.parseInt(data[0]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"                taskList.getTask(markIndex).setDone(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"                ui.showMark(markIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"                int unmarkIndex \u003d Integer.parseInt(data[0]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"                taskList.getTask(unmarkIndex).setDone(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"                ui.showUnmark(unmarkIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"            case \"addTodo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"                String todoDescrip \u003d data[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"                Task newTodo \u003d taskList.addTodo(todoDescrip);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"                ui.showAddTask(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"            case \"addDeadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"                String deadlineDescrip \u003d data[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"                String by \u003d data[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"                Deadline newDeadline \u003d taskList.addDeadline(deadlineDescrip, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"                ui.showAddTask(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kynhan"},"content":"            case \"addEvent\":","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kynhan"},"content":"                String eventDescrip \u003d data[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kynhan"},"content":"                String from \u003d data[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kynhan"},"content":"                String to \u003d data[2];","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kynhan"},"content":"                Event newEvent \u003d taskList.addEvent(eventDescrip, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kynhan"},"content":"                ui.showAddTask(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kynhan"},"content":"            case \"deleteTask\":","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kynhan"},"content":"                int index \u003d Integer.parseInt(data[0]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kynhan"},"content":"                taskList.removeTask(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kynhan"},"content":"                ui.showDeleteTask(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kynhan"},"content":"                taskList.saveList();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kynhan"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kynhan"},"content":"    public boolean getExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kynhan"},"content":"        return isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kynhan":71}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy H:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"        byDate \u003d LocalDateTime.parse(by, FORMATTER);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"    public String getIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"        return \"D\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"        return description + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"    public String getByDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"        return byDate.format(FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kynhan":30}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    private String horizontalLine \u003d \"************************\";","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"    public Duke() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"        storage \u003d new Storage(\"list_storage.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"        ui \u003d new Ui(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"        duke.run();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"        // Show intro","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"        ui.showIntro();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"                String rawInput \u003d ui.readInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"                Command c \u003d parser.parseInput(rawInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"                c.execute(taskList, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"                isExit \u003d c.getExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"                ui.showUnknown(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kynhan":43,"-":3}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"        super(msg);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"kynhan":9}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy H:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"        fromDate \u003d LocalDateTime.parse(from, FORMATTER);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"        toDate \u003d LocalDateTime.parse(to, FORMATTER);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"    public String getIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"        return \"E\";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"        return description + \" (from: \" + formatDate(fromDate) + \" to: \" + formatDate(toDate) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"    private String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"    public String getFromDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"        return fromDate.format(FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"    public String getToDate() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"        return toDate.format(FORMATTER);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"kynhan":40}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"    public Parser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"            return new Command(\"bye\", null);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"            return new Command(\"list\", null);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"            String index \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"            String[] markData \u003d { index };","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"            return new Command(\"mark\", markData);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"            String index \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"            String[] markData \u003d { index };","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"            return new Command(\"unmark\", markData);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"            return createTodo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"            return createDeadline(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"            return createEvent(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"            return deleteTask(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kynhan"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"I DON\u0027T UNDERSTAND THAT!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kynhan"},"content":"    private Command createTodo(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kynhan"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"TODO NEEDS A DESCRIPTION!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kynhan"},"content":"        // Get to-do name","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kynhan"},"content":"        String descrip \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kynhan"},"content":"        if (descrip.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"TODO DESCRIPTION CANNOT BE EMPTY!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kynhan"},"content":"        String[] todoData \u003d { descrip };","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kynhan"},"content":"        return new Command(\"addTodo\", todoData);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kynhan"},"content":"    private Command createDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"kynhan"},"content":"        if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"DEADLINE NEEDS A DESCRIPTION!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"kynhan"},"content":"        // Get by String","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"kynhan"},"content":"        String inputInfo \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"kynhan"},"content":"        String[] deadlineData \u003d inputInfo.split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"kynhan"},"content":"        // Error handling (description or by date cannot be empty)","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"kynhan"},"content":"        if (deadlineData[0].length() \u003d\u003d 0 || deadlineData[1].length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"DEADLINE DESCRIPTION AND BY DATE CANNOT BE EMPTY!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kynhan"},"content":"        return new Command(\"addDeadline\", deadlineData);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"kynhan"},"content":"    private Command createEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"kynhan"},"content":"        if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"EVENT NEEDS A DESCRIPTION!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kynhan"},"content":"        // Get from and to Strings","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kynhan"},"content":"        String inputInfo \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kynhan"},"content":"        String[] inputs1 \u003d inputInfo.split(\" /from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kynhan"},"content":"        String taskName \u003d inputs1[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kynhan"},"content":"        String[] inputs2 \u003d inputs1[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kynhan"},"content":"        String from \u003d inputs2[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"kynhan"},"content":"        String to \u003d inputs2[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"kynhan"},"content":"        if (taskName.length() \u003d\u003d 0 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"EVENT DESCRIPTION AND FROM/TO DATE CANNOT BE EMPTY!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"kynhan"},"content":"        String[] eventData \u003d { taskName, from, to };","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"kynhan"},"content":"        return new Command(\"addEvent\", eventData);","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"kynhan"},"content":"    private Command deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"kynhan"},"content":"        // Error handling","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"kynhan"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"kynhan"},"content":"            throw new DukeException(\"DELETE NEEDS A TASK NUMBER!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"kynhan"},"content":"        // Get delete task number","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"kynhan"},"content":"        String index \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"kynhan"},"content":"        String[] deleteData \u003d { index };","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"kynhan"},"content":"        return new Command(\"deleteTask\", deleteData);","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kynhan":125}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"    private String filename;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"            File f \u003d new File(filename);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"            System.out.println(\"IOException error: \" + e);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"    public void storeList(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filename, false));","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"            for (Task task : taskArr) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"                // Format descriptions of todo, deadline, event","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"                String descrip \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"                switch (task.getIcon()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"                case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"                    descrip \u003d task.getDescription();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"                case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"                    descrip \u003d task.getDescription() + \" | \" + ((Deadline)task).getByDate();","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"                case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"                    descrip \u003d task.getDescription() + \" | \" + ((Event)task).getFromDate()","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"                            + \" | \" + ((Event)task).getToDate();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"                    descrip \u003d \"error\";","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"                // Format status of marked or unmarked, 1 or 0","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"kynhan"},"content":"                int status \u003d task.getStatusIcon() \u003d\u003d \"X\" ? 1 : 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"kynhan"},"content":"                writer.write(task.getIcon() + \" | \" + status + \" | \" + descrip);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"kynhan"},"content":"                writer.newLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"kynhan"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"kynhan"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"kynhan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"kynhan"},"content":"            System.out.println(\"File not found error\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"kynhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"kynhan"},"content":"            System.out.println(\"IOException\");","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"kynhan"},"content":"    public ArrayList\u003cTask\u003e loadList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"kynhan"},"content":"        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"kynhan"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"kynhan"},"content":"            File f \u003d new File(filename);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kynhan"},"content":"            Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"kynhan"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"kynhan"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"kynhan"},"content":"                String[] dataArr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"kynhan"},"content":"                boolean marked \u003d dataArr[1] \u003d\u003d \"1\" ? true : false;","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"kynhan"},"content":"                String descrip \u003d dataArr[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"kynhan"},"content":"                switch (dataArr[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"kynhan"},"content":"                case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"kynhan"},"content":"                    Task t \u003d new Task(descrip);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"kynhan"},"content":"                    t.setDone(marked);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"kynhan"},"content":"                    taskArr.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"kynhan"},"content":"                case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"kynhan"},"content":"                    String by \u003d dataArr[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"kynhan"},"content":"                    Deadline d \u003d new Deadline(descrip, by);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"kynhan"},"content":"                    d.setDone(marked);","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"kynhan"},"content":"                    taskArr.add(d);","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"kynhan"},"content":"                case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"kynhan"},"content":"                    String from \u003d dataArr[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"kynhan"},"content":"                    String to \u003d dataArr[4];","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"kynhan"},"content":"                    Event e \u003d new Event(descrip, from, to);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"kynhan"},"content":"                    e.setDone(marked);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"kynhan"},"content":"                    taskArr.add(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"kynhan"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"kynhan"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"kynhan"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"kynhan"},"content":"            scanner.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"kynhan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"kynhan"},"content":"            System.out.println(\"File not found error\");","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"kynhan"},"content":"        return taskArr;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"kynhan":96}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"    protected boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"        return (done ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"    public String getIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"        return \"T\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"        return description;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"    public void setDone(boolean val) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"        done \u003d val;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"kynhan":34}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    private ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"        // Load list from storage","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"        taskArr \u003d storage.loadList();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"    public void saveList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"        storage.storeList(taskArr);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"        return taskArr.get(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"    public int getCount() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"        return taskArr.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"    public Task addTodo(String descrip) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"        Task newTodo \u003d new Task(descrip);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"        taskArr.add(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"        return newTodo;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"    public Deadline addDeadline(String descrip, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"        Deadline newDeadline \u003d new Deadline(descrip, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"        taskArr.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"        return newDeadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"    public Event addEvent(String descrip, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"        Event newEvent \u003d new Event(descrip, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"        taskArr.add(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"        return newEvent;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kynhan"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kynhan"},"content":"        taskArr.remove(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kynhan":51}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"kynhan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"kynhan"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"kynhan"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"kynhan"},"content":"    private String horizontalLine \u003d \"************************\";","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kynhan"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"kynhan"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"kynhan"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kynhan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kynhan"},"content":"    public void showIntro() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kynhan"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kynhan"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"kynhan"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"kynhan"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"kynhan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"HELLO! I\u0027M DUKE!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"HOW CAN I HELP?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"NOTE! USE THIS FORMAT FOR DATES: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kynhan"},"content":"    public String readInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"kynhan"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kynhan"},"content":"        return input;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"kynhan"},"content":"    public void showAddTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"OK. I\u0027VE ADDED THIS TASK:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"[\" + task.getIcon() + \"][ ] \" + task);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"kynhan"},"content":"        showCount();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"kynhan"},"content":"    public void showDeleteTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"OK! I\u0027VE DELETED THIS TASK: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"\" + (index + 1) + \". \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"kynhan"},"content":"                \"[\" + taskList.getTask(index).getIcon() + \"]\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"kynhan"},"content":"                \"[\" + taskList.getTask(index).getStatusIcon() + \"] \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"kynhan"},"content":"                taskList.getTask(index));","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"kynhan"},"content":"    public void showMark(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"I\u0027VE MARKED THIS TASK AS DONE: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"[X] \" + taskList.getTask(index));","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"kynhan"},"content":"    public void showUnmark(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"I\u0027VE MARKED THIS TASK AS UNDONE: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"[] \" + taskList.getTask(index));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"kynhan"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"HERE ARE YOUR TASKS!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"kynhan"},"content":"        for (int i \u003d 0; i \u003c taskList.getCount(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"kynhan"},"content":"            System.out.println(\"\" + (i+1) + \". \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"kynhan"},"content":"                    \"[\" + taskList.getTask(i).getIcon() + \"]\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"kynhan"},"content":"                    \"[\" + taskList.getTask(i).getStatusIcon() + \"] \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"kynhan"},"content":"                    taskList.getTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"kynhan"},"content":"    public void showCount() {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"kynhan"},"content":"        String plural \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"kynhan"},"content":"        int n \u003d taskList.getCount();","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"kynhan"},"content":"        if (n \u003e 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"kynhan"},"content":"            plural \u003d \"S\";","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"kynhan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"NOW YOU HAVE \" + n + \" TASK\" + plural + \" IN THE LIST!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"kynhan"},"content":"    public void showUnknown(String errorMsg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"kynhan"},"content":"        System.out.println(\":( SORRY! \" + errorMsg);","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"kynhan"},"content":"    public void showBye() {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kynhan"},"content":"        System.out.println(\"BYE!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"kynhan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"kynhan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"kynhan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"kynhan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"kynhan":101}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kynhan"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"kynhan"},"content":"list","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"kynhan":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"kynhan"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kynhan":1,"-":33}}]
