[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    mainClassName \u003d \"chattime.Chattime\"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    archiveBaseName \u003d \"chattime\"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laihuiqi":8,"-":39}},{"path":"data/chattimeTask.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"T @ 1 @ read book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"D @ 1 @ return book @ 2022-06-06 @ 0","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"E @ 0 @ project meeting @ 2022-02-02 @ 02:00 @ 2022-08-08 @ 20:00","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"T @ 0 @ borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"T @ 1 @ cycling ","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":5}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"goto fail","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"goto fail","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":":execute","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":":end","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":":fail","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"exit /b 1","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":":mainEnd","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":":omega","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":86,"-":18}},{"path":"src/main/java/chattime/Chattime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * A chatbot that receives user\u0027s input on various predetermined command types and performs relevant functions.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class Chattime {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Initializes a bot with uiobjects a nd a storage space with provided path to store list.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @param filePath Path to storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public Chattime(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Runs the bot and handles user\u0027s input.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        String userInput;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        while (ui.getExecuteStatus()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"                Command cmd \u003d Parser.parse(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"                if (cmd !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"                    cmd.execute(ui, tasks, storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"            } catch (ChattimeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Initiates the whole bot program.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * @param args Supplied command-line arguments.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        new Chattime(\"\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":63}},{"path":"src/main/java/chattime/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents a list object to store user\u0027s tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     * Constructs a taskList object with ArrayList as data structure.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param initialTasks Stored data loaded from storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public TaskList(ArrayList\u003cTask\u003e initialTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        tasks \u003d initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * Adds a new task to current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * @param task New task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Removes index-th task object from current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * @param index Input index from user, index-th task in task list to be removed.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public void removeListMember(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"     * Gets the index-th task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * @param index Input index from user.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     * @return The index-th task in task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     * Gets the current entire task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     * @return Current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":58}},{"path":"src/main/java/chattime/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents AddCommand object that handles main logic of adding task ,including todo, deadline and event tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private Task task;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     * Creates AddCommand object to execute the task adding logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param addedTask Task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public AddCommand(Task addedTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        task \u003d addedTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of AddCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * Adds task to task list and storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * Returns UI message to notify successful task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        storage.saveToFile(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        ui.printAddTask(task, Task.printTotalTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":39}},{"path":"src/main/java/chattime/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents ByeCommand object that handles exit of the bot program.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     * Exits the bot program with ending message.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        ui.exit();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        ui.endChat();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":25}},{"path":"src/main/java/chattime/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents Command object to handle user input\u0027s command.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * To be implemented by AddCommand, ByeCommand, DeleteCommand, ListCommand and MarkCommand classes.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of Command object.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":22}},{"path":"src/main/java/chattime/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents DeleteCommand object that handles main logic of deleting task from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * Creates DeleteCommand object to execute the task deleting logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        taskIndex \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of DeleteCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * Gets specified task object from task list, reduces total object count and removes it from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * Deletes the task from storage file record.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Returns successful delete message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        task.removeTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        taskList.removeListMember(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        storage.deleteFromFile(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        ui.replyRemoveTaskMsg(task, Task.printTotalTask());","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":44}},{"path":"src/main/java/chattime/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents FindCommand object that handles main logic of matching keyword with current tasks and return result list.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private String keyword;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * Creates FindCommand object to filter and display task list according to the keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param input Specific keyword to find relevant tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        keyword \u003d input;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying task list by filtering task objects on given keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"            ui.warnEmptyList();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"            int total \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            int pending \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            String message \u003d \"I\u0027ve matched the task(s) with your search keyword for you:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"                if (task.isMatchDescription(keyword)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"                    message \u003d message.concat(String.format(\"\\n     %d. %s\", i, task));","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"                    i++;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"                    total++;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"                    if (!task.getTaskStatus()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"                        pending++;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"            message +\u003d \"\\n     Here have \" + total + \" result(s) with keyword \"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"                    + keyword + \". \" + pending + \" task(s) to go.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"            ui.replyUser(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":59}},{"path":"src/main/java/chattime/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * Represents ListCommand object that handles main logic of returning current task list items.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate requestedDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * Creates ListCommand object to execute display list logic, with date search or without.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param date Specific date when relevant tasks take place, null if not specified.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public ListCommand(LocalDate date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        requestedDate \u003d date;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Assign cases into displayList and listTime.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        if (requestedDate \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"            displayList(ui, taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            listTime(ui, taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    };","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying basic task list, without time search.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    private void displayList(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            ui.warnEmptyList();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"            String message \u003d \"chattime.task.Task(s) waiting to be completed:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"                message \u003d message.concat(String.format(\"\\n     %d. %s\", i, task));","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"                i++;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"            ui.replyUser(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying task list, filters task objects with time search.","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    private void listTime(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"            ui.warnEmptyList();","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"            int total \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"            int pending \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"            String message \u003d \"I\u0027ve sorted the task(s) that have deadlines / take place on \"","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"                    + requestedDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \")) + \"for you:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"            for (Task task : taskList.getList()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"                if (task.isOnDate(requestedDate)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"                    message \u003d message.concat(String.format(\"\\n     %d. %s\", i, task));","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"                    i++;","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"                    total++;","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"                    if (!task.getTaskStatus()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"                        pending++;","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"            message +\u003d \"\\n     You have \" + total + \" task(s) on this day. With \" + pending + \" task(s) to go.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"            ui.replyUser(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":100}},{"path":"src/main/java/chattime/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents MarkCommand object that handles main logic of marking a task as done or not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * Creates MarkCommand object to execute the task marking logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of the task in task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param taskIsDone true if mark as done, false if mark as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public MarkCommand(int index, boolean taskIsDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d taskIsDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of MarkCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Gets task from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Executes task status marking and returns UI message respectively to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * Updates data in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        Task target \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            target.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"            ui.replyDoneMessage(target);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"            target.unmarkDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            ui.replyNotDoneMessage(target);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        storage.updateFile(taskIndex, taskList.getTask(taskIndex));","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":50}},{"path":"src/main/java/chattime/exception/ChattimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Represents customized exceptions to be thrown due to an invalid input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"public class ChattimeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    private String errMsg;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"     * Creates ChattimeException object with specified error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * @param message Error message to be displayed to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public ChattimeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        errMsg \u003d message;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Returns the customized error message to be displayed.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @return Error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        return errMsg;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"laihuiqi":30}},{"path":"src/main/java/chattime/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.AddCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.ByeCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.FindCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" * Represents parser for bot, processes raw user input and creates appropriate Command object.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    private static final String NO_DESCRIPTION \u003d \"OOPS!!! The description of %s cannot be empty.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    private static final String MISSED_PARAM \u003d \"OOPS!!! %s should be in form of %s.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private static final String NO_INDEX \u003d \"OOPS!!! The index to %1$s cannot be empty.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private static final String NEED_INT \u003d \"OOPS!!! The index to %1$s must be positive integer.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private static final String IDX_OUT_OF_BOUND \u003d \"OOPS!!! The index is too large! We currently have %d task(s).\";","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    private static final String UNRECOGNISED_COMMAND \u003d \"Sorry... but I don\u0027t understand what you said \u003e,\u003c\";","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    private static String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    private static String[] splitCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    private static String command;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    private static String description \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     * Returns suitable Command object for further execution.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     * @param input Command and description entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * @return Command object to execute user request.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Exception thrown when command is not recognisable.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    public static Command parse(String input) throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        parseInput(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        checkCleanCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        switch (command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            return parseBye();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"            return parseList();","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        case \"listTime\":","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"        case \"find\":","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"            switch (command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"                checkAddCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"                return parseTodo();","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"                checkAddCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"                return parseDeadline();","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"                checkAddCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"                return parseEvent();","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"            case \"listTime\":","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"                return parseListTime();","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"            case \"find\":","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"                return parseFind();","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"                throw new ChattimeException(UNRECOGNISED_COMMAND);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"            int index \u003d checkIndexCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"                return new MarkCommand(index, true);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"                return new MarkCommand(index, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(UNRECOGNISED_COMMAND);","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     * Process user input into command and description.","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     * @param input Command and description entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    private static void parseInput(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"        userInput \u003d input;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"        splitCommand \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"        command \u003d splitCommand[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"            description \u003d splitCommand[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"     * Checks user\u0027s command clashes with data storage format.","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to require new input with problem statement.","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"    private static void checkCleanCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"        if (userInput.contains(\"@\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"@^@ I\u0027m sorry but your message should not contain any \\\"@\\\" .\");","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     * Checks required task description input by user.","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to require new input with description provided.","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"    private static void checkAddCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NO_DESCRIPTION, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"     * Parses string description into int and checks true int type of inputted description.","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"     * @return Index parsed if the type check passed.","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to request an integer input for the description.","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"    private static int checkIndexCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NO_INDEX, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"        } else if (Pattern.matches(\"^[0-9]*$\", description)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"            if (index \u003e Task.getCount() || index \u003c 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"                throw new ChattimeException(String.format(IDX_OUT_OF_BOUND, Task.getCount()));","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"            return index;","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NEED_INT, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"     * Processes list command and generate a ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"     * @return ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If description detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"    private static ListCommand parseList() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"OOPS!!! list does not take any description.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"        return new ListCommand(null);","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"     * Processes bye command and generate a ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"     * @return ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If ambiguous command detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"    private static ByeCommand parseBye() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Type \\\"bye\\\" if you really want to say goodbye to me.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"     * Processes todo command and generate a TodoCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"     * @return TodoCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseTodo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"        return new AddCommand(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"     * Processes deadline command and generate a DeadlineCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"     * @return DeadlineCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseDeadline() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"        String[] splitBy \u003d description.split(\" /by \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"        if (splitBy.length \u003c 2 || splitBy[1].equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MISSED_PARAM, command, \"deadline (task) /by (yyyy-mm-dd hh:mm)\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"        String task \u003d splitBy[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"        Deadline deadlineTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"            String[] time \u003d splitBy[1].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"            LocalDate byDate \u003d LocalDate.parse(time[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"            if (time.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"                deadlineTask \u003d new Deadline(task, byDate, null);","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"                LocalTime byTime \u003d LocalTime.parse(time[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"                deadlineTask \u003d new Deadline(task, byDate, byTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"            return new AddCommand(deadlineTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"OOPS!!! Please enter date and time in format yyyy-mm-dd or yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"     * Processes event command and generate an EventCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"     * @return EventCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseEvent() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"laihuiqi"},"content":"        String[] splitTask \u003d description.split(\" /from \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":248,"author":{"gitId":"laihuiqi"},"content":"        String task \u003d splitTask[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":250,"author":{"gitId":"laihuiqi"},"content":"        if (splitTask.length \u003c 2 || splitTask[1].equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"laihuiqi"},"content":"                    MISSED_PARAM, command, \"event (task) /from (yyyy-mm-dd hh:mm) /to (yyyy-mm-dd hh:mm)\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":253,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":254,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":255,"author":{"gitId":"laihuiqi"},"content":"        String[] splitFrom \u003d splitTask[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"laihuiqi"},"content":"        if (splitFrom.length \u003c 2 || splitFrom[1].equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"laihuiqi"},"content":"                    MISSED_PARAM, command, \"event (task) /from (yyyy-mm-dd hh:mm) /to (yyyy-mm-dd hh:mm)\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":261,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":262,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":263,"author":{"gitId":"laihuiqi"},"content":"            String[] from \u003d splitFrom[0].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":264,"author":{"gitId":"laihuiqi"},"content":"            String[] to \u003d splitFrom[1].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":265,"author":{"gitId":"laihuiqi"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"laihuiqi"},"content":"            LocalTime fromTime \u003d LocalTime.parse(from[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":267,"author":{"gitId":"laihuiqi"},"content":"            LocalDate toDate \u003d LocalDate.parse(to[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"laihuiqi"},"content":"            LocalTime toTime \u003d LocalTime.parse(to[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":269,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":270,"author":{"gitId":"laihuiqi"},"content":"            Event eventTask \u003d new Event(task, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":271,"author":{"gitId":"laihuiqi"},"content":"            return new AddCommand(eventTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":272,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":273,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":274,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"OOPS!!! Please enter both date and time in format yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":275,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":276,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":277,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":278,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":279,"author":{"gitId":"laihuiqi"},"content":"     * Processes listTime command, parses description to LocalDate type and generate a ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":280,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":281,"author":{"gitId":"laihuiqi"},"content":"     * @return ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":282,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":283,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":284,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":285,"author":{"gitId":"laihuiqi"},"content":"    private static ListCommand parseListTime() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":286,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":287,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":288,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MISSED_PARAM, command, \"listTime yyyy-mm-dd\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":289,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":290,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":291,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":292,"author":{"gitId":"laihuiqi"},"content":"            LocalDate date \u003d LocalDate.parse(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":293,"author":{"gitId":"laihuiqi"},"content":"            return new ListCommand(date);","lastModifiedDate":"2023-01-25"},{"lineNumber":294,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":295,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":296,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"OOPS!!! Please enter date and time in format yyyy-mm-dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":297,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":298,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":299,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":300,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":301,"author":{"gitId":"laihuiqi"},"content":"     * Processes find command, ensure keyword is inputted and generate a FindCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":302,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":303,"author":{"gitId":"laihuiqi"},"content":"     * @return FindCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":304,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If no description detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":305,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":306,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":307,"author":{"gitId":"laihuiqi"},"content":"    public static FindCommand parseFind() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":308,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":309,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":310,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MISSED_PARAM, command, \"find keyword\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":311,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":312,"author":{"gitId":"laihuiqi"},"content":"        return new FindCommand(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":313,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":314,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":315,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":315}},{"path":"src/main/java/chattime/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * Represents Storage object to execute the services of loading, storing and updating data.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/chattimeTask.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    private ArrayList\u003cTask\u003e initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Creates a Storage object with UI object to handle UI requirements and path of storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * @param passedUi UI object from bot to handle UI command.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @param path Storage path specified.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public Storage(Ui passedUi, String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        ui \u003d passedUi;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        filePath \u003d (path.equals(\"\") ? DEFAULT_FILE_PATH : path);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        openFile(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        initialTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * Opens file at storage path, creates one at the given path if the file is not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     * @param filePath Specified storage path.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    public void openFile(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"            file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"                if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"                    if (!file.getParentFile().mkdirs()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"                        throw new IOException(\"New directory cannot be created!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"                if (!file.createNewFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"                    throw new IOException(\"New file cannot be created!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     * Prepares loading data into current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"     * @return An arraylist of stored data to be imported into current TaskList object.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"        BufferedReader loader;","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"            loader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"            String task \u003d loader.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"            while (task !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"                String[] taskSplit \u003d task.split(\" @ \", 7);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"                Task inputTask \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"                switch (taskSplit[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"                case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"                    inputTask \u003d new Todo(taskSplit[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"                case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"                    try {","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"                        LocalDate byDate \u003d LocalDate.parse(taskSplit[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"                        LocalTime byTime \u003d (taskSplit[4].equals(\"0\") ? null : LocalTime.parse(taskSplit[4]));","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"                        inputTask \u003d new Deadline(taskSplit[2], byDate, byTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"                        ui.printError(\"OOPS!!! Datetime error in storage!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"                case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"                    try {","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"                        LocalDate fromDate \u003d LocalDate.parse(taskSplit[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"                        LocalTime fromTime \u003d LocalTime.parse(taskSplit[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"                        LocalDate toDate \u003d LocalDate.parse(taskSplit[5]);","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"                        LocalTime toTime \u003d LocalTime.parse(taskSplit[6]);","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"                        inputTask \u003d new Event(taskSplit[2], fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"                        ui.printError(\"OOPS!!! Datetime error in storage!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"                    throw new ChattimeException(\"chattime.task.Task type error : \" + taskSplit[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"                if (inputTask !\u003d null \u0026\u0026 taskSplit[1].equals(\"1\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"                    inputTask.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"                initialTasks.add(inputTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"                task \u003d loader.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"            return initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException | ChattimeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"        return initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"     * Saves recently added task into storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task recently added.","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"    public void saveToFile(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"        String writeString \u003d task.toDataString();","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"        writeToFile(writeString + System.lineSeparator(), true);","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"     * Updates storage file once a variable attribute of a task changed.","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"     * @param index The index number of changed task.","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"     * @param task The modified task.","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"    public void updateFile(int index, Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"        BufferedReader lineSearch;","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"            lineSearch \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"            String content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"            int lineCount \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"            StringBuilder updateString \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"            while (content !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"                if (lineCount \u003d\u003d index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"                    content \u003d task.toDataString();","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"                updateString.append(content).append(System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"                lineCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"                content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"            if (lineCount \u003c index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"                throw new IndexOutOfBoundsException(\"chattime.task.Task not saved in storage!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"                writeToFile(updateString.toString(), false);","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"     * Removes deleted task from storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of the removed task.","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"    public void deleteFromFile(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"        BufferedReader lineSearch;","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"            lineSearch \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"            String content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"            int lineCount \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"            StringBuilder updateString \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"            while (content !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"                if (lineCount \u003d\u003d index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"                    lineCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"                    content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"                    continue;","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"                updateString.append(content).append(System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"                lineCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"                content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"            if (lineCount \u003c index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"                throw new IndexOutOfBoundsException(\"chattime.task.Task not saved in storage!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"                writeToFile(updateString.toString(), false);","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"     * Common method to write in the storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"     * @param content Data to be written in.","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"     * @param append Flag that determines whether the content should append or replace the entire storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"    private void writeToFile(String content, boolean append) {","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, append));","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"            writer.write(content);","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":239}},{"path":"src/main/java/chattime/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027deadline\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private final LocalDate byDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private final LocalTime byTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * Creates Deadline object with parent constructor and parsed description.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param description Deadline task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param bDate Deadline date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @param bTime Deadline time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public Deadline(String description, LocalDate bDate, LocalTime bTime) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        byDate \u003d bDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        byTime \u003d bTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of deadline task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        return \"D\" + super.toDataString() + \" @ \" + byDate + \" @ \" + (byTime \u003d\u003d null ? \"0\" : byTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input time and task deadline are the same, otherwise false.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate time) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        return byDate.isEqual(time);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \"))","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"                + (byTime \u003d\u003d null ? \"\" : byTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":60}},{"path":"src/main/java/chattime/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027event\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime fromTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime toTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Creates Event object with parent constructor and parsed description.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @param description Event task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param frDate Start date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     * @param frTime Start time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @param tDate Deadline date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * @param tTime Deadline time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public Event(String description, LocalDate frDate, LocalTime frTime, LocalDate tDate, LocalTime tTime) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        fromDate \u003d frDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        toDate \u003d tDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        fromTime \u003d frTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        toTime \u003d tTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of event task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        return \"E\" + super.toDataString() + \" @ \" + fromDate + \" @ \" + fromTime","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"                + \" @ \" + toDate + \" @ \" + toTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input time is between the task start time and the task deadline, otherwise false.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate time) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        return fromDate.isEqual(time)","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"                || toDate.isEqual(time)","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"                || (fromDate.isBefore(time) \u0026\u0026 toDate.isAfter(time));","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"                + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \"))","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"                + (fromTime \u003d\u003d null ? \"\" : fromTime.format(DateTimeFormatter.ofPattern(\"hh:mm a \")))","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"                + \"to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \"))","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"                + (toTime \u003d\u003d null ? \"\" : toTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":72}},{"path":"src/main/java/chattime/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":" * Represents task objects created by user\u0027s command.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" * Extended by Todo, Deadline and Event classes.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"    private static int tasksCount \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Creates Task object with corresponding description.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param content Describes the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        description \u003d content;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        tasksCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Returns the symbol relevant to current task\u0027s done status.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @return Symbol depends on done status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * Returns current task\u0027s done status.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     * @return Done status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        return isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * Compares current task\u0027s description with the given keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @return Result of comparison, true if matched, false otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public boolean isMatchDescription(String keyword) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Sets done status of current task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     * Sets done status of current task as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"     * Gets total available tasks number.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * @return Total number of undeleted task.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    public static int getCount() {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        return tasksCount;","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * Reduces the total task number once a task is deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    public void removeTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        tasksCount--;","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"     * Returns conclusion message of current total number of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"     * @return Conclusion message indicates total number of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"    public static String printTotalTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"        return \"Now you have \" + tasksCount + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\" @ %d @ %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     * @return false as default.","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate time) {","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":122}},{"path":"src/main/java/chattime/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027todo\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"     * Creates Todo object with description given and parent constructor.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"     * @param description Todo task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of todo task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        return \"T\" + super.toDataString();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":36}},{"path":"src/main/java/chattime/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":" * Represents UI for the bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    private static final String GREET \u003d \"Hey! I\u0027m your friend, chattime.Chattime!  (# v #) /\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"            + \"     How can I help you *^*\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private static final String LINE \u003d \"---------------------------------------------------------------------\"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"            + \"******************CHATTIME\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private static final String ERR_LINE \u003d \"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"            + \"******************CHATTIME\";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private static final String BYE \u003d \"Bye bye \u003e^\u003c! Visit me again when you need me ~\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    private static final String LOGO \u003d \"      ___\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"                        + \"     /*  \\\\    \\\\(*.*)/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"                        + \"    /::\\\\  \\\\     ___\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"                        + \"   /:/::\\\\  \\\\   /*  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"                        + \"  /:/  \\\\:\\\\  \\\\  \\\\:\\\\  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"                        + \" /:/__/ \\\\:\\\\__\\\\  \\\\:\\\\  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"                        + \" \\\\:\\\\ \\\\   \\\\/__/  /::\\\\  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"                        + \"  \\\\:\\\\ \\\\        /:/::\\\\__\\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"                        + \"   \\\\:\\\\ \\\\*H*A*T/:/  \\\\/__/*I*M*E\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"                        + \"    \\\\:\\\\_\\\\    /:/  /\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"                        + \"     \\\\/__/   \\\\/__/\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Creates UI objects, sets bot running status to true.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        isRunning \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        initUi();","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     * Returns initial UI message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    public void initUi() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"Welcome to\\n\" + LOGO);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        replyUser(GREET);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * Returns bot response message to user with specific format.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * @param message Bot response message.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    public void replyUser(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"    \" + LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"     \" + message);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"    \" + LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"     * Returns task added recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task added recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     * @param totalTask Message about total number of available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    public void printAddTask(Task task, String totalTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        replyUser(String.format(\"Got it! I\u0027ve added this task:\\n       %s\\n     %s\", task, totalTask));","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"     * Returns unmarke task message.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task unmarked recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    public void replyNotDoneMessage(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        replyUser(String.format(\"Arghh! This job is not done yet:\\n       %s\", task));","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * Returns marke task message.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task marked recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    public void replyDoneMessage(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"        replyUser(String.format(\"Congrats! You\u0027ve done this job:\\n       %s\", task));","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"     * Returns remove task message.","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task removed recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"     * @param totalTask Message about total number of available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"    public void replyRemoveTaskMsg(Task task, String totalTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        replyUser(","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"                String.format(\"Okay!!! I\u0027ve removed this task for you:\\n       %s\\n     %s\", task, totalTask));","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * Returns bot detected error message to user with specific format.","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"     * @param errMsg Bot error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    public void printError(String errMsg) {","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"    \" + ERR_LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"     \" + errMsg);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"        System.out.println(\"    \" + ERR_LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     * Returns error message to user when operation on empty task list is requested.","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    public void warnEmptyList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"        printError(\"Can\u0027t find anything in the list @~@\");","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     * Gets the running status of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"     * @return true if bot still running, false if bye command encountered.","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    public boolean getExecuteStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"        return isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"     * Sets running status to false.","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"    public void endChat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"        isRunning \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     * Returns exit message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    public void exit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"        replyUser(BYE);","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":137}},{"path":"src/test/java/chattime/exception/ChattimeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class ChattimeExceptionTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"        } catch (ChattimeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"            assertEquals(\"Test\", e.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":16}},{"path":"src/test/java/chattime/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"        Deadline testTask \u003d new Deadline(\"Test\", LocalDate.now(), null);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(String.format(\"D @ 0 @ Test @ %s @ 0\", LocalDate.now()), testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    public void isOnDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"        Deadline testTask \u003d new Deadline(\"Test\", LocalDate.now(), null);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(true, testTask.isOnDate(LocalDate.now()));","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        Deadline testTask \u003d new Deadline(\"Test\",","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"                LocalDate.of(2023, 1, 1), null);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[D][ ] Test (by: Jan 01 2023 )\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":28}},{"path":"src/test/java/chattime/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class EventTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        LocalDate from \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"        LocalDate to \u003d LocalDate.of(2023, 2, 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        LocalTime time \u003d LocalTime.of(10, 0);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        Event testTask \u003d new Event(\"Test\", from, time, to, time);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"E @ 0 @ Test @ 2023-01-01 @ 10:00 @ 2023-02-02 @ 10:00\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public void isOnDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        LocalDate from \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        LocalDate to \u003d LocalDate.of(2023, 2, 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        LocalTime time \u003d LocalTime.of(10, 0);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        Event testTask \u003d new Event(\"Test\", from, time, to, time);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(testTask.isOnDate(LocalDate.of(2023, 3, 3)));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        LocalDate from \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        LocalDate to \u003d LocalDate.of(2023, 2, 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        Event testTask \u003d new Event(\"Test\", from, null, to, null);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[E][ ] Test (from: Jan 01 2023 to: Feb 02 2023 )\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":37}},{"path":"src/test/java/chattime/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public void getStatusIconTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\" \", testTask.getStatusIcon());","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public void markAsDone_getTaskStatusTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        testTask.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(testTask.getTaskStatus());","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public void isMatchDescriptionTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(testTask.isMatchDescription(\"Test\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\" @ 0 @ Test\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    public void onDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(testTask.isOnDate(LocalDate.of(2023, 1, 1)));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[ ] Test\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":48}},{"path":"src/test/java/chattime/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"        Todo testTask \u003d new Todo(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"T @ 0 @ Test\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        Todo testTask \u003d new Todo(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[T][ ] Test\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":19}},{"path":"src/test/java/chattime/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class UiTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    public void getExecuteStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"        Ui test \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(test.getExecuteStatus());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"deadline return book /by 6th June","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"casual","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"todo 1 proposal","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"outlier","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"event 1119 /from ^\u0026^ /to (((*`v`*","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"list test","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"event/","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"mark","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"unmark mark 18","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"unmark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"unmark 12344r","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"unmark 12345","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"mark cat","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"deadline /by","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"deadline task /by","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"event task /from t1 /to","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"event task /from /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"event task t1 /from /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"event task t1 /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"even task /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"event /from t1 /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"event task /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":44}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/chattime/*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"java -classpath ../bin Chattime \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laihuiqi":2,"-":36}}]
