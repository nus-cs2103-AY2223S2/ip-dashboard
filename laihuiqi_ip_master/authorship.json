[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"# Chattime","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"   Welcome to","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"         __","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        /* \\ \\(*.*)/","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"       /::\\ \\    __","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"      /:/::\\ \\  /*  \\ ","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     /:/ \\:\\  \\ \\ :\\ \\","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"   /:/__/\\:\\\\__\\ \\ :\\ \\","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"   \\:\\ \\   \\/__/ / ::\\ \\","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    \\:\\ \\      /: /\\  \\__\\","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     \\:\\ \\ *H*A*T/ / \\/__/*I*M*E","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"      \\:\\_\\  / :/ /","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"       \\/_/  \\/_/","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"   ","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"   Hey! I\u0027m your friend, Chattime!(# v #) /","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"   How can I help you today *^*","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"   Type `help` and I will come to you %v%\"","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laihuiqi":21,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    mainClassName \u003d \"chattime.Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    archiveBaseName \u003d \"chattime\"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"javafx {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laihuiqi":14,"-":39}},{"path":"data/chattimeTask.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"T @ 0 @ store book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"D @ 0 @ return book @ 2022-06-06 @ 0","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"E @ 0 @ project meeting @ 2022-02-02 @ 02:00 @ 2022-08-08 @ 20:00","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"T @ 0 @ borrow books","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"D @ 1 @ return book @ 2023-03-23 @ 0","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"E @ 0 @ say good morning @ 2021-12-23 @ 00:00 @ 2030-11-01 @ 23:59","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"D @ 0 @ boorow book @ 2023-04-03 @ 23:12","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"E @ 0 @ gogogo @ 2022-04-03 @ 11:23 @ 2045-12-11 @ 12:34","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"T @ 0 @ borrow book","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"E @ 0 @ project meeting @ 2022-02-02 @ 00:00 @ 2022-03-03 @ 23:59","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"laihuiqi":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"# Chattime User Guide","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"\u003e It\u0027s Chattime! Welcome to the chat world :smiley:","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"## Introduction","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"Have a nice organized day start with an easy chat with our bot! Chattime is a command-line interface (CLI) bot that aims","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"to keep track of user\u0027s to-do list. Chattime provides various functions that help user to manage daily tasks. ","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":":star2: New update : Chattime is now available with Graphic User Interface(GUI).","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"## Features Menu","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"  - [Viewing bot guide : `help`](#viewing-bot-guide)","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"  - [Adding tasks](#adding-tasks)","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    - [Plain task : `todo`](#todo---adds-plain-task)","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    - [Task with deadline : `deadline`](#deadline---adds-task-with-deadline)","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    - [Task with time period : `event`](#event---adds-task-takes-place-over-a-certain-period)","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"  - [List current available tasks](#list-current-available-tasks)","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    - [All task : `list`](#list---list-all-tasks)","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    - [One-day schedule : `schedule`](#schedule---lists-one-day-schedule)","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"  - [Edit task progress](#edit-task-progress)","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    - [Set task done : `mark`](#mark---set-task-done)","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    - [Set task not done : `unmark`](#unmark---reverts-task-done)","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"  - [Delete a task : `delete`](#delete-a-task-from-the-task-list)","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"  - [Search tasks](#search-tasks)","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    - [By keyword : `find`](#find---by-keyword)","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    - [By time : `listTime`](#listtime---by-time)","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"  - [Exit the bot : `bye`](#exiting-the-program)","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"## Quick start","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"1. Have Java 11 or above installed in local laptop or computer.","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"2. Download the latest version (chattime v1.0) of chattime.jar from [here](https://github.com/laihuiqi/ip/releases).","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"3. Double-click on the downloaded chattime.jar file.","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"4. You should see the bot is running now. The GUI should show a greeting screen.","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"![Start screen of chattime.](image/start.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"5. Type the command in text box, press enter or Send button to execute it. You can type `help` first to view the user ","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"   guide.","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"6. For more detail explanation, please refer to the [Features](#features) section below.","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"\u003e **Warning**","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"\u003e Chat data is stored in /data/chattimeTask.txt  ","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"### Viewing bot guide","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"Displays help message containing a compact list of commands and their input formats that are accepted by Chattime.","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"#### `help` - Displays help message","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"Displays help message with available commands and their respective input formats.","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"Format : `help`","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"`help`","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"![Help command of chattime.](image/help.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"### Adding tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"Adds task with type To-do, Deadline or Event to the task list. A confirmation message will be displayed by Chattime if ","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"the task is added successfully. ","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"\u003eDefault : All task is not done.","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"\u003eSame tasks can be added only once.","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"#### `todo` - Adds plain task","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"Adds a To-do task to the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"Format : `todo \u003ctaskname\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"`todo jogging` ","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"![Todo command of chattime.](image/todo.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"#### `deadline` - Adds task with deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"Adds a Deadline task to the task list. A Deadline task should be completed `/by` some time.","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"Format : `deadline \u003ctaskname\u003e /by \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"`deadline hw1 /by 2023-03-23`","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"`deadline hw2 /by 2023-03-25 17:00`","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"![Deadline command of chattime.](image/deadline.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"#### `event` - Adds task takes place over a certain period","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"Adds an Event task to the task list. An Event task should start `/from` start time `/to` end time.","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"Format : `event \u003ctask\u003e /from \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e /to \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"Default : If not inputted, start time is 00:00, end time is 23:59, both dates are required fields.","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"`event student life fair /from 2023-08-08 /to 2023-08-10`","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"`event cs2103 lecture /from 2023-02-10 14:00 /to 2023-02-10 16:00`","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"![Event command of chattime.](image/event.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"### List current available tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"Lists the tasks currently stored in the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"#### `list` - List all tasks ","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"Lists all the tasks in the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"Format : `list`","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"`list`","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"![List command of chattime.](image/list.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"#### `schedule` - Lists one-day schedule ","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"Lists all the `unmarked` tasks in a specific day in an hourly manner.","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"Format : `schedule \u003cdate in yyyy-mm-dd\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"`schedule 2045-01-01`","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"![Schedule command of chattime.](image/schedule1.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"![Schedule command of chattime.](image/schedule2.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"### Edit task progress","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"`mark` when task is done, `unmark` when it is no done.","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"#### `mark` - Set task done ","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"Marks a specific task as done.","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"Format : `mark \u003cindex\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"`\u003cindex\u003e` is the sequential index of the task in the list, the index number can be revised using `list`.","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"`mark 17`","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"![Mark command of chattime.](image/mark.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"#### `unmark` - Reverts task done","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"Reverts the `done mark` on the task. Marks task as not done.","lastModifiedDate":"2023-02-10"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"Format : `unmark \u003cindex\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"\u003e `\u003cindex\u003e` is the sequential index of the task in the list, the index number can be revised using `list`.","lastModifiedDate":"2023-02-10"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"`unmark 171`","lastModifiedDate":"2023-02-10"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"![Unmark command of chattime.](image/unmark.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"### Delete a task from the task list","lastModifiedDate":"2023-02-10"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"Delete an unwanted or wrongly input task from the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"#### `delete` - Delete a task ","lastModifiedDate":"2023-02-10"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"Delete a task from task list with its index in the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"Format : `delete \u003cindex\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"\u003e `\u003cindex\u003e` is the sequential index of the task in the list, the index number can be revised using `list`.","lastModifiedDate":"2023-02-10"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"`delete 17`","lastModifiedDate":"2023-02-10"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"![Delete command of chattime.](image/delete.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"### Search tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"Filter tasks from task list according to condition(s).","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"laihuiqi"},"content":"#### `find` - By keyword ","lastModifiedDate":"2023-02-10"},{"lineNumber":249,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":250,"author":{"gitId":"laihuiqi"},"content":"Filters and displayed the filtered list of tasks with task name relevant, even one-letter-match, to the given keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":251,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":252,"author":{"gitId":"laihuiqi"},"content":"Format : `find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":253,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":254,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":255,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":256,"author":{"gitId":"laihuiqi"},"content":"`find book`","lastModifiedDate":"2023-02-10"},{"lineNumber":257,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":258,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":259,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":260,"author":{"gitId":"laihuiqi"},"content":"![Mark command of chattime.](image/find.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":261,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":262,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":263,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":264,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":265,"author":{"gitId":"laihuiqi"},"content":"#### `listTime` - By time ","lastModifiedDate":"2023-02-10"},{"lineNumber":266,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":267,"author":{"gitId":"laihuiqi"},"content":"Filters and displayed the filtered list of tasks with date(s) relevant to the given date.","lastModifiedDate":"2023-02-10"},{"lineNumber":268,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":269,"author":{"gitId":"laihuiqi"},"content":"Format : `listTime \u003cdate in yyyy-mm-dd\u003e`","lastModifiedDate":"2023-02-10"},{"lineNumber":270,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":271,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":272,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":273,"author":{"gitId":"laihuiqi"},"content":"`listTime 2023-02-10`","lastModifiedDate":"2023-02-10"},{"lineNumber":274,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":275,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":276,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":277,"author":{"gitId":"laihuiqi"},"content":"![ListTime command of chattime.](image/listTime.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":278,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":279,"author":{"gitId":"laihuiqi"},"content":"### Exiting the program","lastModifiedDate":"2023-02-10"},{"lineNumber":280,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":281,"author":{"gitId":"laihuiqi"},"content":"End a Chattime service session.","lastModifiedDate":"2023-02-10"},{"lineNumber":282,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":283,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":284,"author":{"gitId":"laihuiqi"},"content":"#### Usage","lastModifiedDate":"2023-02-10"},{"lineNumber":285,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":286,"author":{"gitId":"laihuiqi"},"content":"#### `bye` - Exit the bot ","lastModifiedDate":"2023-02-10"},{"lineNumber":287,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-10"},{"lineNumber":288,"author":{"gitId":"laihuiqi"},"content":"Displays an exit message and quit the program immediately.","lastModifiedDate":"2023-02-10"},{"lineNumber":289,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":290,"author":{"gitId":"laihuiqi"},"content":"Format : `bye`","lastModifiedDate":"2023-02-10"},{"lineNumber":291,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":292,"author":{"gitId":"laihuiqi"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":293,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":294,"author":{"gitId":"laihuiqi"},"content":"`bye`","lastModifiedDate":"2023-02-10"},{"lineNumber":295,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":296,"author":{"gitId":"laihuiqi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":297,"author":{"gitId":"laihuiqi"},"content":"Program window shuts immediately.","lastModifiedDate":"2023-02-10"},{"lineNumber":298,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":299,"author":{"gitId":"laihuiqi"},"content":"-Very rare chance, user can see-","lastModifiedDate":"2023-02-10"},{"lineNumber":300,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":301,"author":{"gitId":"laihuiqi"},"content":"![Bye command of chattime.](image/bye.png)","lastModifiedDate":"2023-02-10"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":303,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":304,"author":{"gitId":"laihuiqi"},"content":"## Command Summary","lastModifiedDate":"2023-02-10"},{"lineNumber":305,"author":{"gitId":"laihuiqi"},"content":"`help` : help","lastModifiedDate":"2023-02-10"},{"lineNumber":306,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":307,"author":{"gitId":"laihuiqi"},"content":"`todo` : todo \u003ctaskname\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":308,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":309,"author":{"gitId":"laihuiqi"},"content":"`deadline` : deadline \u003ctaskname\u003e /by \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":310,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":311,"author":{"gitId":"laihuiqi"},"content":"`event` : event \u003ctask\u003e /from \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e /to \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":312,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":313,"author":{"gitId":"laihuiqi"},"content":"`list` : list","lastModifiedDate":"2023-02-10"},{"lineNumber":314,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":315,"author":{"gitId":"laihuiqi"},"content":"`schedule` : schedule \u003cdate in yyyy-mm-dd\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":316,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":317,"author":{"gitId":"laihuiqi"},"content":"`mark` : mark \u003cindex\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":318,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":319,"author":{"gitId":"laihuiqi"},"content":"`unmark` : unmark \u003cindex\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":320,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":321,"author":{"gitId":"laihuiqi"},"content":"`delete` : delete \u003cindex\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":322,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":323,"author":{"gitId":"laihuiqi"},"content":"`find` : find \u003ckeyword\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":324,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":325,"author":{"gitId":"laihuiqi"},"content":"`listTime` : listTime \u003cdate in yyyy-mm-dd\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":326,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-10"},{"lineNumber":327,"author":{"gitId":"laihuiqi"},"content":"`bye` : bye","lastModifiedDate":"2023-02-10"},{"lineNumber":328,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"laihuiqi":299,"-":29}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"@rem","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"goto fail","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"echo.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"goto fail","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":":execute","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":":end","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":":fail","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"exit /b 1","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":":mainEnd","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":":omega","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":86,"-":18}},{"path":"src/main/java/chattime/Chattime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * A chatbot that receives user\u0027s input on various predetermined command types and performs relevant functions.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class Chattime {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * Initializes a bot with ui objects a nd a storage space with provided path to store list.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     * @param filePath Path to storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    public Chattime(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException | ChattimeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            ui.reportSystemError(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * Runs the bot and handles user\u0027s input.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @return Respond message to user based on the input.","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        if (!ui.getInitStatus()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"            return ui.reportStorageError();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"            assert cmd !\u003d null : \"Parsing process went wrong unexpectedly!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"            return cmd.execute(ui, tasks, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        } catch (ChattimeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"            return ui.printError(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     * Replies gretting message to user.","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * @return Greeting words.","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    String greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return ui.initUi();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     * Determines if the \u0027bye\u0027 command is given to a bot instance.","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"     * @return The running status of current bot.","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    boolean checkRunningStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        return ui.getExecuteStatus();","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":70}},{"path":"src/main/java/chattime/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// Reused from Guides for SE Student Project- Java FX Tutorial part 4","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// with minor modification","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label username;","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private VBox userid;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates dialog box object to show box or user\u0027s reply messages.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param text Text output.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param img Profile picture of the content owner.","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public DialogBox(String text, Image img, String name) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        username.setText(name);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        username.getStyleClass().add(\"user\");","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        username.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Create dialog box for user message.","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param text User\u0027s input.","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param img User\u0027s profile.","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return A dialog box with user\u0027s message and user\u0027s profile.","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DialogBox userDialogBox \u003d new DialogBox(text, img, \"User\");","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userDialogBox.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userDialogBox.dialog.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userDialogBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Create dialog box for bot message.","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param text Bot input.","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param img Bot profile.","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return A dialog box with bot message and bot profile.","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img, \"Chattime\");","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        db.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        db.dialog.getStyleClass().add(\"bot-dialog\");","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"laihuiqi":17,"-":84}},{"path":"src/main/java/chattime/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// Reused from Guides for SE Student Project- Java FX Tutorial part 4","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// with minor modification","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Launcher to start the application.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Launcher {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"laihuiqi":4,"-":14}},{"path":"src/main/java/chattime/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Reused from Guides for SE Student Project- Java FX Tutorial part 4","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// with minor modification","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Class for GUI of bot.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Chattime chattime \u003d new Chattime(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Image iconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            this.getClass().getResourceAsStream(\"/image/chattime.png\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            ap.getStyleClass().add(\"anchor-pane\");","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBot(chattime);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            stage.setResizable(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            stage.getIcons().add(iconImage);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            stage.setTitle(\"CHATTIME\");","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"laihuiqi":12,"-":33}},{"path":"src/main/java/chattime/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// Reused from Guides for SE Student Project- Java FX Tutorial part 4","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// with minor modification","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MainWindow {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private AnchorPane anchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Chattime chattime;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            this.getClass().getResourceAsStream(\"/image/userProfile.png\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Image botImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            this.getClass().getResourceAsStream(\"/image/botProfile.png\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initialize the GUI vision by binding the scrollPane properties to VBox.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        dialogContainer.getStyleClass().add(\"vbox-dialog\");","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        dialogContainer.prefHeightProperty().bind(scrollPane.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initialize bot first dialog.","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setBot(Chattime c) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        chattime \u003d c;","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DialogBox.getBotDialog(chattime.greet(), botImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String response \u003d chattime.getResponse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!chattime.checkRunningStatus()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"// @@author Jeffry Lum-reused","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"laihuiqi":13,"-":70}},{"path":"src/main/java/chattime/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" * Represents a list object to store user\u0027s tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Constructs a taskList object with ArrayList as data structure.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param initialTasks Stored data loaded from storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public TaskList(ArrayList\u003cTask\u003e initialTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        tasks \u003d initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * Adds a new task to current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * @param task New task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Removes index-th task object from current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * @param index Input index from user, index-th task in task list to be removed.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * Gets the index-th task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     * @param index Input index from user.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * @return The index-th task in task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     * Gets the current entire task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * @return Current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     * Gets the current entire task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"     * @param taskType Task type code.","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"     * @return Current task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"    public boolean isDuplicates(Task testTask, Class\u003c?\u003e taskType) {","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"        List\u003cTask\u003e filteredList \u003d tasks.stream()","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"                .filter(task -\u003e task.getClass().equals(taskType)).collect(Collectors.toList());","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        for (Task task : filteredList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"            if (testTask.isDuplicate(task)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"                return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"        return false;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":78}},{"path":"src/main/java/chattime/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" * Represents AddCommand object that handles main logic of adding task ,including todo, deadline and event tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private Task task;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Creates AddCommand object to execute the task adding logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param addedTask Task to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public AddCommand(Task addedTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        task \u003d addedTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of AddCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * Adds task to task list and storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Returns UI message to notify successful task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s add task command.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.isDuplicates(task, task.getClass())) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"            Task.removeDuplicate();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            return ui.alertDuplicate();","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        return replyDeleteProgress(ui, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    private String replyDeleteProgress(Ui ui, Storage storage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"            storage.saveToFile(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"            return ui.printError(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return ui.printAddTask(task, Task.printTotalTask());","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":53}},{"path":"src/main/java/chattime/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents ByeCommand object that handles exit of the bot program.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     * Exits the bot program with ending message.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s end chat command.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        ui.endChat();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        return ui.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":26}},{"path":"src/main/java/chattime/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents Command object to handle user input\u0027s command.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * To be implemented by AddCommand, ByeCommand, DeleteCommand, ListCommand and MarkCommand classes.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of Command object.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s command.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public abstract String execute(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":22}},{"path":"src/main/java/chattime/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" * Represents DeleteCommand object that handles main logic of deleting task from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Creates DeleteCommand object to execute the task deleting logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        taskIndex \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of DeleteCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Gets specified task object from task list, reduces total object count and removes it from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Deletes the task from storage file record.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * Returns successful delete message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s delete task command.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        task.removeTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        taskList.removeTask(taskIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        return replyDeleteProgress(task, ui, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    private String replyDeleteProgress(Task task, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"            storage.rewriteFile(taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"            return ui.printError(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        return ui.replyRemoveTaskMsg(task, Task.printTotalTask());","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":55}},{"path":"src/main/java/chattime/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * Represents FindCommand object that handles main logic of matching keyword with current tasks and return result list.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private String keyword;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * Creates FindCommand object to filter and display task list according to the keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param input Specific keyword to find relevant tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        keyword \u003d input;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying task list by filtering task objects on given keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s find task command.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"            return ui.warnEmptyList();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            return findIn(taskList);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     * Find tasks in tasklist relevant to the given keyword.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @return The find result of given keyword.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    private String findIn(TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        String message \u003d \"Are you looking for this:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        Supplier\u003cStream\u003cTask\u003e\u003e filteredTask \u003d () -\u003e taskList.getList().stream()","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"                .filter(task -\u003e task.isMatchDescription(keyword));","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        message +\u003d filteredTask.get().map(Task::toString)","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"                .reduce(\"\\n\", (prevMsg, task) -\u003e prevMsg + \"\\n     \u003e \" + task);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        int pending \u003d (int) filteredTask.get().filter(task -\u003e !task.getTaskStatus()).count();","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        int totalResult \u003d (int) filteredTask.get().count();","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        message +\u003d \"\\n\\nHere have \" + totalResult + \" result(s) with keyword \\\"\" + keyword + \"\\\".\";","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        message +\u003d (pending \u003d\u003d 0","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"                ? \"\\n**Congrats on finishing all the tasks!**\"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"                : \"\\nStill have \" + pending + \" task(s) to go. @*@\");","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        if (totalResult \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"            message \u003d \"Yay holidayy! Seems that you don\u0027t have any task related to \\\"\" + keyword + \"\\\" currently.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        return message;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":73}},{"path":"src/main/java/chattime/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Represents HelpCommand object that reply user guide.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of HelpCommand object.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     * Reply user with user guide.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot replies user guide.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        return ui.printGuide();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"laihuiqi":25}},{"path":"src/main/java/chattime/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * Represents ListCommand object that handles main logic of returning current task list items.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate requestedDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * Creates ListCommand object to execute display list logic, with date search or without.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param date Specific date when relevant tasks take place, null if not specified.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public ListCommand(LocalDate date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        requestedDate \u003d date;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Assign cases into displayList and listTime according to the availability of requestedDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s request list command.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        if (requestedDate \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            return displayList(ui, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"            return listTime(ui, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying basic task list, without time search.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    private String displayList(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"            return ui.warnEmptyList();","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"            return createListReply(taskList);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    private String createListReply(TaskList taskList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        String message \u003d \"Task(s) waiting to be completed:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        for (Task task : taskList.getList()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            message \u003d message.concat(String.format(\"\\n     %d. %s\", i, task));","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            i++;","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"        return message;","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying task list, filters task objects with time search.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * @return List of tasks in queried time.","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    private String listTime(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"            return ui.warnEmptyList();","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"            return createTimeListReply(taskList);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"    private String createTimeListReply(TaskList taskList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"        int total \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"        int pending \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        String requestDate \u003d requestedDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \"));","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"        String message \u003d \"SEE ~ I\u0027ve found the task(s) that have deadlines / take place on \"","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"                + requestDate + \"for you:\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"        for (Task task : taskList.getList()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"            if (!task.getTaskStatus() \u0026\u0026 task.isOnDate(requestedDate)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"                pending++;","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"            if (task.isOnDate(requestedDate)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"                message \u003d message.concat(String.format(\"\\n     %d. %s\", i, task));","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"                i++;","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"                total++;","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"        message +\u003d \"\\n\\nYou have \" + total + \" task(s) on this day. With \" + pending + \" task(s) to go.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"        return message;","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":112}},{"path":"src/main/java/chattime/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" * Represents MarkCommand object that handles main logic of marking a task as done or not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Creates MarkCommand object to execute the task marking logic.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of the task in task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param taskIsDone true if mark as done, false if mark as undone.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public MarkCommand(int index, boolean taskIsDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        taskIndex \u003d index;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d taskIsDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * Implements and executes main logic of MarkCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * Gets task from task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * Executes task status marking and returns UI message respectively to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Updates data in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s task mark or unmark done command.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        Task target \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"            return markDone(target, ui, taskList, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"            return unmarkDone(target, ui, taskList, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    private String markDone(Task target, Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        target.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            storage.rewriteFile(taskIndex, taskList.getTask(taskIndex));","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"            return ui.printError(ex.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        return ui.replyDoneMessage(target);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    private String unmarkDone(Task target, Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        target.unmarkDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"            storage.rewriteFile(taskIndex, taskList.getTask(taskIndex));","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"            return ui.printError(ex.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        return ui.replyNotDoneMessage(target);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":69}},{"path":"src/main/java/chattime/command/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.command;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import chattime.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" * Represents ScheduleCommand object that handles main logic of matching date with current tasks and return","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":" * sorted one-day-tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate date;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * Creates ScheduleCommand object to filter and sort task list according to the date.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * @param input Specific date to sort relevant tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public ScheduleCommand(LocalDate input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        date \u003d input;","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Executes logic of displaying sorted task list by filtering task objects on given date.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * Only event and deadline tasks are scheduled.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Event is scheduled to time span, deadline is scheduled before its end.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * @param ui UI instance of bot.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @param taskList Current task list storing tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     * @param storage Storage file to store current state items of task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     * @return Bot\u0027s reply to user\u0027s view schedules command.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            return ui.warnEmptyList();","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"            StringBuilder message \u003d new StringBuilder(\"Look! These things are happening on  \"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"                    + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \")) + \":\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"            Supplier\u003cStream\u003cTask\u003e\u003e filteredTask \u003d () -\u003e taskList.getList().stream()","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                    .filter(task -\u003e task.isOnDate(date) \u0026\u0026 !task.getTaskStatus());","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            message.append(scheduleContent(filteredTask));","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"            int total \u003d (int) filteredTask.get().count();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"            message.append(\"\\n\\nYou have \").append(total).append(\" unmarked task(s) on this day\");","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"            return message.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"    private StringBuilder scheduleContent(Supplier\u003cStream\u003cTask\u003e\u003e filteredTask) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        LocalTime time \u003d LocalTime.MIN;","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"        StringBuilder scheduledTasks \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        for (int i \u003d 0; i \u003c 24; i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            LocalTime currTime \u003d time;","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            time \u003d time.plusHours(1);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"            String taskSchedule \u003d filteredTask.get()","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"                    .filter(task -\u003e task.isOnTime(date, currTime)).map(Task::taskWithCode)","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"                    .reduce(\"\", (prevTask, task) -\u003e prevTask + \"\\n           \" + task);","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"            scheduledTasks.append(currTime.format(DateTimeFormatter.ofPattern(\"\\nhh:mm a :\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"            scheduledTasks.append(taskSchedule);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"        return scheduledTasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"laihuiqi":79}},{"path":"src/main/java/chattime/exception/ChattimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Represents customized exceptions to be thrown due to an invalid input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"public class ChattimeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    private String errMsg;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"     * Creates ChattimeException object with specified error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"     * @param message Error message to be displayed to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public ChattimeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        errMsg \u003d message;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Returns the customized error message to be displayed.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @return Error message.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        return toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * Returns the customized error message to be displayed.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * @return Error message.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        return \"OOPS!!! \" + errMsg;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"laihuiqi":39}},{"path":"src/main/java/chattime/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.AddCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.ByeCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.DeleteCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.HelpCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.ListCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.MarkCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import chattime.command.ScheduleCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":" * Represents parser for bot, processes raw user input and creates appropriate Command object.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private static final String NO_DESCRIPTION \u003d \"The description of %s cannot be empty.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private static final String MISSED_PARAM \u003d \"%s should be in the form of\\n%s.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    private static final String NO_INDEX \u003d \"The index to %1$s cannot be empty.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    private static final String NEED_INT \u003d \"The index to %1$s must be positive integer.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    private static final String IDX_OUT_OF_BOUND \u003d \"The index is invalid! We currently have %d task(s).\";","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    private static final String UNRECOGNISED_COMMAND \u003d \"Sorry... but I don\u0027t understand what you said \u003e,\u003c\\n\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"            + \"Type `help` if you need me!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    private static final String CLEAN_COMMAND_ALERT \u003d \"@^@ I\u0027m sorry but your message should not contain any \\\"@\\\" .\";","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    private static final String DEADLINE_FORMAT \u003d \"deadline (task) /by (yyyy-mm-dd hh:mm)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    private static final String EVENT_FORMAT \u003d \"event (task) /from (yyyy-mm-dd hh:mm) /to (yyyy-mm-dd hh:mm)\";","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    private static final String DATETIME_FORMAT \u003d \"Please enter both date and time in format yyyy-mm-dd hh:mm\"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"            + \" or yyyy-mm-dd\";","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    private static String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    private static String[] splitCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    private static String command;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    private static String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * Returns suitable Command object for further execution.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * @param input Command and description entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     * @return Command object to execute user request.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Exception thrown when command is not recognisable.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    public static Command parse(String input) throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        parseInput(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        checkCleanCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        switch (command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"            return parseBye();","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        case \"help\":","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"            return parseHelp();","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"            return parseList();","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"        case \"listTime\":","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"            return parseTime(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        case \"schedule\":","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            return parseTime(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"        case \"find\":","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"            return parseFind();","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"        case \"event\":","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"            return parseAddCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"            return parseIndexCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(UNRECOGNISED_COMMAND);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"     * Process user input into command and description.","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"     * @param input Command and description entered by user.","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    private static void parseInput(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"        userInput \u003d input.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"        splitCommand \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"        command \u003d splitCommand[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"            description \u003d splitCommand[1].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"            description \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"     * Checks user\u0027s command clashes with data storage format.","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to require new input with problem statement.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"    private static void checkCleanCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"        if (userInput.contains(\"@\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(CLEAN_COMMAND_ALERT);","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"     * Checks required task description input by user.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to require new input with description provided.","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"    private static void checkAddCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NO_DESCRIPTION, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"     * Process user command for type \u0027add task\u0027 e.g. todo, deadline and event.","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"     * @return Add type command due to user input.","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message.","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"    private static Command parseAddCommand() throws ChattimeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"        checkAddCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"            return parseTodo();","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"            return parseDeadline();","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"            return parseEvent();","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"     * Process user command relating to index input e.g. mark, unmark and delete.","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"     * @return Index type commands due to user input.","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message.","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"    private static Command parseIndexCommand() throws ChattimeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"        int index \u003d checkIndexCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"            return new MarkCommand(index, true);","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"            return new MarkCommand(index, false);","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"     * Parses string description into int and checks true int type of inputted description.","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"     * @return Index parsed if the type check passed.","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message to request an integer input for the description.","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"    private static int checkIndexCommand() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NO_INDEX, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"        } else if (Pattern.matches(\"^[0-9]*$\", description)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"            if (index \u003e Task.getCount() || index \u003c 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"                throw new ChattimeException(String.format(IDX_OUT_OF_BOUND, Task.getCount()));","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"            return index;","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(NEED_INT, command));","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"     * Processes list command and generate a ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"     * @return ListCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If description detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"    private static ListCommand parseList() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"list does not take any description.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"        return new ListCommand(null);","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"     * Processes help command and generate a HelpCommand object.","lastModifiedDate":"2023-01-30"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"     * Do not throw any exception as long as the command is \u0027help\u0027.","lastModifiedDate":"2023-01-30"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"     * @return HelpCommand object.","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"    private static HelpCommand parseHelp() {","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"        return new HelpCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"     * Processes bye command and generate a ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"     * @return ByeCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If ambiguous command detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"    private static ByeCommand parseBye() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Type \\\"bye\\\" if you really want to say goodbye to me :(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"     * Processes todo command and generate a TodoCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"     * @return TodoCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseTodo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"        return new AddCommand(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"     * Processes deadline command and generate a DeadlineCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"     * @return DeadlineCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseDeadline() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"        String[] splitBy \u003d description.split(\" /by \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"        checkDescriptionFormat(splitBy, DEADLINE_FORMAT);","lastModifiedDate":"2023-02-09"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":244,"author":{"gitId":"laihuiqi"},"content":"        return createAddDeadlineCmd(splitBy);","lastModifiedDate":"2023-02-09"},{"lineNumber":245,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":247,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand createAddDeadlineCmd(String[] splitBy) throws ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":248,"author":{"gitId":"laihuiqi"},"content":"        String task \u003d splitBy[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":249,"author":{"gitId":"laihuiqi"},"content":"        Deadline deadlineTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":250,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"laihuiqi"},"content":"            String[] time \u003d splitBy[1].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":253,"author":{"gitId":"laihuiqi"},"content":"            LocalDate byDate \u003d LocalDate.parse(time[0].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":254,"author":{"gitId":"laihuiqi"},"content":"            if (time.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":255,"author":{"gitId":"laihuiqi"},"content":"                deadlineTask \u003d new Deadline(task, byDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":256,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"laihuiqi"},"content":"                LocalTime byTime \u003d LocalTime.parse(time[1].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":258,"author":{"gitId":"laihuiqi"},"content":"                deadlineTask \u003d new Deadline(task, byDate, byTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":261,"author":{"gitId":"laihuiqi"},"content":"            return new AddCommand(deadlineTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":262,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":263,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":264,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(DATETIME_FORMAT);","lastModifiedDate":"2023-01-30"},{"lineNumber":265,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":267,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":269,"author":{"gitId":"laihuiqi"},"content":"     * Processes event command and generate an EventCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":270,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":271,"author":{"gitId":"laihuiqi"},"content":"     * @return EventCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":272,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":273,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":274,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand parseEvent() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"laihuiqi"},"content":"        String[] splitTask \u003d description.split(\" /from \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":276,"author":{"gitId":"laihuiqi"},"content":"        String task \u003d splitTask[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":277,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":278,"author":{"gitId":"laihuiqi"},"content":"        checkDescriptionFormat(splitTask, EVENT_FORMAT);","lastModifiedDate":"2023-02-09"},{"lineNumber":279,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":280,"author":{"gitId":"laihuiqi"},"content":"        String[] splitFrom \u003d splitTask[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":281,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":282,"author":{"gitId":"laihuiqi"},"content":"        checkDescriptionFormat(splitFrom, EVENT_FORMAT);","lastModifiedDate":"2023-02-09"},{"lineNumber":283,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":284,"author":{"gitId":"laihuiqi"},"content":"        return createAddEventCmd(task, splitFrom);","lastModifiedDate":"2023-02-09"},{"lineNumber":285,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":286,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":287,"author":{"gitId":"laihuiqi"},"content":"    private static AddCommand createAddEventCmd(String task, String[] splitFrom) throws ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":288,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":289,"author":{"gitId":"laihuiqi"},"content":"            String[] from \u003d splitFrom[0].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":290,"author":{"gitId":"laihuiqi"},"content":"            String[] to \u003d splitFrom[1].split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":291,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":292,"author":{"gitId":"laihuiqi"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from[0].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":293,"author":{"gitId":"laihuiqi"},"content":"            LocalTime fromTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":294,"author":{"gitId":"laihuiqi"},"content":"            if (from.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":295,"author":{"gitId":"laihuiqi"},"content":"                fromTime \u003d LocalTime.of(0, 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":296,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":297,"author":{"gitId":"laihuiqi"},"content":"                fromTime \u003d LocalTime.parse(from[1].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":298,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":299,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":300,"author":{"gitId":"laihuiqi"},"content":"            LocalDate toDate \u003d LocalDate.parse(to[0].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":301,"author":{"gitId":"laihuiqi"},"content":"            LocalTime toTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":302,"author":{"gitId":"laihuiqi"},"content":"            if (to.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":303,"author":{"gitId":"laihuiqi"},"content":"                toTime \u003d LocalTime.of(23, 59);","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"laihuiqi"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":305,"author":{"gitId":"laihuiqi"},"content":"                toTime \u003d LocalTime.parse(to[1].trim());","lastModifiedDate":"2023-02-09"},{"lineNumber":306,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":307,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":308,"author":{"gitId":"laihuiqi"},"content":"            checkDateValidity(fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":309,"author":{"gitId":"laihuiqi"},"content":"            Event eventTask \u003d new Event(task, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":310,"author":{"gitId":"laihuiqi"},"content":"            return new AddCommand(eventTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":311,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":312,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":313,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(DATETIME_FORMAT);","lastModifiedDate":"2023-01-30"},{"lineNumber":314,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":315,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":316,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":317,"author":{"gitId":"laihuiqi"},"content":"    private static void checkDateValidity(LocalDate fromDate, LocalTime fromTime, LocalDate toDate, LocalTime toTime)","lastModifiedDate":"2023-02-09"},{"lineNumber":318,"author":{"gitId":"laihuiqi"},"content":"            throws ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":319,"author":{"gitId":"laihuiqi"},"content":"        LocalDateTime start \u003d LocalDateTime.of(fromDate, fromTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":320,"author":{"gitId":"laihuiqi"},"content":"        LocalDateTime end \u003d LocalDateTime.of(toDate, toTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":321,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":322,"author":{"gitId":"laihuiqi"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":323,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"The event can\u0027t start after it was ended!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":324,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":325,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":326,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":327,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":328,"author":{"gitId":"laihuiqi"},"content":"     * Checks parsed command is of the right format.","lastModifiedDate":"2023-01-30"},{"lineNumber":329,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":330,"author":{"gitId":"laihuiqi"},"content":"     * @param split Processed command.","lastModifiedDate":"2023-01-30"},{"lineNumber":331,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Alert user to input the right command format.","lastModifiedDate":"2023-01-30"},{"lineNumber":332,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":333,"author":{"gitId":"laihuiqi"},"content":"    private static void checkDescriptionFormat(String[] split, String format) throws ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":334,"author":{"gitId":"laihuiqi"},"content":"        if (split.length \u003c 2 || split[1].equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":335,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(String.format(MISSED_PARAM, command, format));","lastModifiedDate":"2023-02-09"},{"lineNumber":336,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":337,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":338,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":339,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":340,"author":{"gitId":"laihuiqi"},"content":"     * Processes listTime command, parses description to LocalDate type and generate a ListCommand object","lastModifiedDate":"2023-02-08"},{"lineNumber":341,"author":{"gitId":"laihuiqi"},"content":"     * or a View Schedules object.","lastModifiedDate":"2023-02-08"},{"lineNumber":342,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":343,"author":{"gitId":"laihuiqi"},"content":"     * @return ListCommand object or ViewSchedules object.","lastModifiedDate":"2023-02-08"},{"lineNumber":344,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If wrong-formatted input detected, returns error message with instructions to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":345,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":346,"author":{"gitId":"laihuiqi"},"content":"    private static Command parseTime(boolean isScheduleRequired) throws ChattimeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":347,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":348,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":349,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MISSED_PARAM, command, \"date yyyy-mm-dd\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":350,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":351,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":352,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":353,"author":{"gitId":"laihuiqi"},"content":"            LocalDate date \u003d LocalDate.parse(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":354,"author":{"gitId":"laihuiqi"},"content":"            return (isScheduleRequired ? new ScheduleCommand(date) : new ListCommand(date));","lastModifiedDate":"2023-02-08"},{"lineNumber":355,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":356,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":357,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(DATETIME_FORMAT);","lastModifiedDate":"2023-01-30"},{"lineNumber":358,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":359,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":360,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":361,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":362,"author":{"gitId":"laihuiqi"},"content":"     * Processes find command, ensure keyword is inputted and generate a FindCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":363,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":364,"author":{"gitId":"laihuiqi"},"content":"     * @return FindCommand object.","lastModifiedDate":"2023-01-25"},{"lineNumber":365,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException If no description detected, returns error message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":366,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":367,"author":{"gitId":"laihuiqi"},"content":"    public static FindCommand parseFind() throws ChattimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":368,"author":{"gitId":"laihuiqi"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":369,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":370,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MISSED_PARAM, command, \"find keyword\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":371,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":372,"author":{"gitId":"laihuiqi"},"content":"        return new FindCommand(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":373,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":374,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":375,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":375}},{"path":"src/main/java/chattime/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import chattime.exception.ChattimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import chattime.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * Represents Storage object to execute the services of loading, storing and updating data.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/chattimeTask.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    private ArrayList\u003cTask\u003e initialTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Creates a Storage object with UI object to handle UI requirements and path of storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * @param passedUi UI object from bot to handle UI command.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @param path Storage path specified.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When memory initialization error.","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    public Storage(Ui passedUi, String path) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        ui \u003d passedUi;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        filePath \u003d (path.equals(\"\") ? DEFAULT_FILE_PATH : path);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        openFile(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        initialTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * Opens file at storage path, creates one at the given path if the file is not found.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"     * @param filePath Specified storage path.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When file cannot be opened.","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    public void openFile(String filePath) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"            checkAndCreateDirectory(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"            checkAndCreateFile(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"     * Checks whether directory in path exists, creates one if not.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"     * @param file File instance of the specified file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When directory cannot be created.","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    private void checkAndCreateDirectory(File file) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        if (!file.getParentFile().exists() \u0026\u0026 !file.getParentFile().mkdirs()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"            throw new IOException(\"New directory cannot be created!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     * Checks whether file in path exists, creates one if not.","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"     * @param file File instance of the specified file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When file cannot be created.","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    private void checkAndCreateFile(File file) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        if (!file.createNewFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"            throw new IOException(\"New file cannot be created!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"     * Prepares loading data into current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"     * @return An arraylist of stored data to be imported into current TaskList object.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message.","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException, ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        BufferedReader loader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"        String task \u003d loader.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"        while (task !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"            importData(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"            task \u003d loader.readLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"        return initialTasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"    private void importData(String task) throws ChattimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"        String[] taskSplit \u003d task.split(\" @ \", 7);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"        Task inputTask \u003d createTaskFromStorage(taskSplit[0], taskSplit);","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"        if (taskSplit[1].equals(\"1\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"            inputTask.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        initialTasks.add(inputTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     * Create task of different types from data storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"     * @param taskCode Code of task types.","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"     * @param taskSplit Processed storage data by splitting separation.","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"     * @return An arraylist of stored data to be imported into current TaskList object.","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Returns error message.","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    private Task createTaskFromStorage(String taskCode, String[] taskSplit) throws ChattimeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"        switch (taskCode) {","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"        case \"T\":","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"            return new Todo(taskSplit[2]);","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"        case \"D\":","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"            return createDeadlineObject(taskSplit);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"        case \"E\":","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"            return createEventObject(taskSplit);","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"        default:","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Task type error : \" + taskSplit[0]);","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"     * Creates deadline object from storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"     * @param taskSplit Processed storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"     * @return New deadline object respective to the storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Handle datetime format mismatch error.","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"    private Deadline createDeadlineObject(String[] taskSplit) throws ChattimeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"            LocalDate byDate \u003d LocalDate.parse(taskSplit[3]);","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"            LocalTime byTime \u003d (taskSplit[4].equals(\"0\") ? null : LocalTime.parse(taskSplit[4]));","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"            return new Deadline(taskSplit[2], byDate, byTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Datetime error in storage!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"     * Created event object from storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"     * @param taskSplit Processed storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"     * @return New event object respective to the storage string.","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"     * @throws ChattimeException Handle datetime format mismatch error.","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"    private Event createEventObject(String[] taskSplit) throws ChattimeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"            LocalDate fromDate \u003d LocalDate.parse(taskSplit[3]);","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"            LocalTime fromTime \u003d LocalTime.parse(taskSplit[4]);","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"            LocalDate toDate \u003d LocalDate.parse(taskSplit[5]);","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"            LocalTime toTime \u003d LocalTime.parse(taskSplit[6]);","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"            return new Event(taskSplit[2], fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Datetime error in storage!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"     * Saves recently added task into storage file.","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task recently added.","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"    public void saveToFile(Task task) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"        String writeString \u003d task.toDataString();","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"        writeToFile(writeString + System.lineSeparator(), true);","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"     * Updates storage file by delete or update task of specified index.","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"     * @param index Index of the removed or updated task.","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"     * @param task Updated task, takes no parameter in delete condition.","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When error taking input or saving file.","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"    public void rewriteFile(int index, Task... task) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"        StringBuilder updateString \u003d checkWriteContent(index, task);","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"        writeToFile(updateString.toString(), false);","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"    private StringBuilder checkWriteContent(int index, Task... task) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"        BufferedReader lineSearch \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"        String content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"        int lineCount \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"        StringBuilder updateString \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"        while (content !\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"            if (lineCount \u003d\u003d index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"                try {","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"                    content \u003d task[0].toDataString();","lastModifiedDate":"2023-01-30"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"                    lineCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"                    content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"                    continue;","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"            updateString.append(content).append(System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"            lineCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"            content \u003d lineSearch.readLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"        checkEmptyTask(lineCount, index);","lastModifiedDate":"2023-02-09"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"        return updateString;","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"    private void checkEmptyTask(int lineCount, int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"        if (lineCount \u003c index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"            throw new IndexOutOfBoundsException(\"Task not saved in storage!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"     * Common method to write in the storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"     * @param content Data to be written in.","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"     * @param append Flag that determines whether the content should append or replace the entire storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"     * @throws IOException When error taking input or saving file.","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"    private void writeToFile(String content, boolean append) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, append));","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"        assert !content.equals(\"\") : \"Storing empty data!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"        writer.write(content);","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"        writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":245}},{"path":"src/main/java/chattime/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027deadline\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime byTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Creates Deadline object with parent constructor and parsed description.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @param description Deadline task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @param bDate Deadline date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param bTime Deadline time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public Deadline(String description, LocalDate bDate, LocalTime... bTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        byDate \u003d bDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"            byTime \u003d bTime[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            byTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * Getter for byDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * @return Field byDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        return byDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     * Getter for byTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * @return Field byTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    public LocalTime getByTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        return byTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     * Checks whether the new task is already existed.","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * @return Is duplicate exist.","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        Deadline testTask \u003d (Deadline) task;","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"        boolean isSameContent \u003d testTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        boolean isSameDate \u003d testTask.getByDate().isEqual(byDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        boolean isSameTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        if (byTime !\u003d null \u0026\u0026 testTask.getByTime() !\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            isSameTime \u003d testTask.getByTime().equals(byTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"            isSameTime \u003d byTime \u003d\u003d null \u0026\u0026 testTask.getByTime() \u003d\u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        return isSameContent \u0026\u0026 isSameDate \u0026\u0026 isSameTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input time and task deadline are the same, otherwise false.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"        if (byTime \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"            LocalDateTime deadline \u003d LocalDateTime.of(byDate, byTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"            LocalDateTime testTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"            return testTime.isBefore(deadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of deadline task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"        return TaskType.DEADLINE + super.toDataString() + \" @ \" + byDate + \" @ \" + (byTime \u003d\u003d null ? \"0\" : byTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input date with task relevant date.","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * @param date User\u0027s input date.","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input date and task deadline are the same, otherwise false.","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"        return byDate.isEqual(date);","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"     * Returns code and task name in a string.","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     * @return A string of code and task name for schedule use.","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"    public String taskWithCode() {","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.DEADLINE + \"] \" + getDescription();","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"        String dateString \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"        String timeString \u003d (byTime \u003d\u003d null ? \"\" : byTime.format(DateTimeFormatter.ofPattern(\" hh:mm a\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.DEADLINE + \"]\" + super.toString() + \" (by: \" + dateString + timeString + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":135}},{"path":"src/main/java/chattime/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027event\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime fromTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime toTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * Creates Event object with parent constructor and parsed description.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @param description Event task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     * @param frDate Start date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @param frTime Start time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * @param tDate Deadline date description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * @param tTime Deadline time description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public Event(String description, LocalDate frDate, LocalTime frTime, LocalDate tDate, LocalTime tTime) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        fromDate \u003d frDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        toDate \u003d tDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        fromTime \u003d frTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        toTime \u003d tTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * Getter for fromDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     * @return Field fromDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        return fromDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * Getter for fromTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @return Field fromTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public LocalTime getFromTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return fromTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Getter for toDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * @return Field toDate.","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        return toDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"     * Getter for toTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"     * @return Field toTime.","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    public LocalTime getToTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        return toTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"     * Checks whether the new task is already existed.","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     * @return Is duplicate exist.","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"        Event testTask \u003d (Event) task;","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        boolean checkFrom \u003d testTask.getFromDate().isEqual(fromDate) \u0026\u0026 testTask.getFromTime().equals(fromTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"        boolean checkTo \u003d testTask.getToDate().isEqual(toDate) \u0026\u0026 testTask.getToTime().equals(toTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"        boolean isSameContent \u003d task.getDescription().equals(getDescription());","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"        return isSameContent \u0026\u0026 checkFrom \u0026\u0026 checkTo;","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input time and task deadline are the same, otherwise false.","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"        LocalDateTime start \u003d LocalDateTime.of(fromDate, fromTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"        LocalDateTime end \u003d LocalDateTime.of(toDate, toTime);","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"        LocalDateTime test \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"        boolean isInRange \u003d test.isBefore(end) \u0026\u0026 test.isAfter(start);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        boolean isStart \u003d test.isEqual(start);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        return isInRange || isStart;","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of event task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"        return TaskType.EVENT + super.toDataString() + \" @ \" + fromDate + \" @ \" + fromTime","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"                + \" @ \" + toDate + \" @ \" + toTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input date with task relevant date.","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"     * @param date User\u0027s input date.","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input date is in task time, otherwise false.","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"        Boolean isOnSameDate \u003d fromDate.isEqual(date) || toDate.isEqual(date);","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"        Boolean isInDateRange \u003d (fromDate.isBefore(date) \u0026\u0026 toDate.isAfter(date));","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"        return isOnSameDate || isInDateRange;","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     * Returns code and task name in a string.","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"     * @return A string of code and task name for schedule use.","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"    public String taskWithCode() {","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.EVENT + \"] \" + getDescription();","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"        String fromDateString \u003d fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"        String fromTimeString \u003d (fromTime \u003d\u003d null ? \"\" : fromTime.format(DateTimeFormatter.ofPattern(\" hh:mma\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"        String toDateString \u003d toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"        String toTimeString \u003d (toTime \u003d\u003d null ? \"\" : toTime.format(DateTimeFormatter.ofPattern(\" hh:mma\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.EVENT + \"]\" + super.toString()","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"                + \" (from: \" + fromDateString + fromTimeString + \" to: \" + toDateString + toTimeString + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":156}},{"path":"src/main/java/chattime/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" * Represents task objects created by user\u0027s command.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Extended by Todo, Deadline and Event classes.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private static int tasksCount \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private String description;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Available types of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    enum TaskType {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        TODO(\"T\"), DEADLINE(\"D\"), EVENT(\"E\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        private String taskCode;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        TaskType(String code) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            taskCode \u003d code;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"            return taskCode;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     * Creates Task object with corresponding description.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     * @param content Describes the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        description \u003d content;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        tasksCount++;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * Getter for task description.","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * @return Task description.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return description;","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Returns the symbol relevant to current task\u0027s done status.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * @return Symbol depends on done status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"     * Returns current task\u0027s done status.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"     * @return Done status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        return isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"     * Compares current task\u0027s description with the given keyword.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     * @return Result of comparison, true if matched, false otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    public boolean isMatchDescription(String keyword) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"     * Sets done status of current task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"     * Sets done status of current task as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"     * Gets total available tasks number.","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * @return Total number of undeleted task.","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    public static int getCount() {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        return tasksCount;","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * Reduces the total task number once a task is deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"    public void removeTask() {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"        tasksCount--;","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"     * Returns conclusion message of current total number of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"     * @return Conclusion message indicates total number of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"    public static String printTotalTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"        return \"Now you have \" + tasksCount + \" tasks in the list.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\" @ %d @ %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     * @param date User\u0027s input date.","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     * @return false as default.","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"     * Returns comparison result of input time with task relevant time.","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"     * @param time User\u0027s input time.","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"     * @return true if the input time and task deadline are the same, otherwise false.","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"    public boolean isOnTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"        return false;","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"     * Returns code and task name in a string.","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"     * @return A string of code and task name for schedule use.","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"    public String taskWithCode() {","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"        return toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"     * Checks whether the new task is already existed.","lastModifiedDate":"2023-02-08"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"     * @return Is duplicate exist.","lastModifiedDate":"2023-02-08"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"        return task.getDescription().equals(getDescription());","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"     * Removes duplicated items.","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"    public static void removeDuplicate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"        tasksCount--;","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":185}},{"path":"src/main/java/chattime/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Represents task object of \u0027todo\u0027 type.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"     * Creates Todo object with description given and parent constructor.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"     * @param description Todo task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * Generates a data string of todo task to be stored in storage file.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * @return Data string of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public String toDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        return TaskType.TODO + super.toDataString();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * Returns code and task name in a string.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * @return A string of code and task name for schedule use.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public String taskWithCode() {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.TODO + \"] \" + getDescription();","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     * Returns current data of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"     * @return Current situation of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        return \"[\" + TaskType.TODO + \"]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":46}},{"path":"src/main/java/chattime/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import chattime.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":" * Represents UI for the bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    private static final String LOGO \u003d \"      ___\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"                        + \"     /*  \\\\    \\\\(*.*)/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"                        + \"    /::\\\\   \\\\           __\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"                        + \"   /:/::\\\\   \\\\      /*   \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"                        + \"  /:/  \\\\:\\\\   \\\\    \\\\ : \\\\  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"                        + \" /:/__/\\\\:\\\\__\\\\  \\\\  : \\\\  \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"                        + \" \\\\:\\\\ \\\\    \\\\/__/  / ::  \\\\   \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"                        + \"  \\\\:\\\\ \\\\             /: /\\\\    \\\\__\\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"                        + \"   \\\\:\\\\ \\\\*H*A*T/ /  \\\\/__/*I*M*E\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"                        + \"    \\\\:\\\\_\\\\     / :/  /\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"                        + \"      \\\\/_/    \\\\/_/\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    private static final String GUIDE \u003d \"If you need my help, call me with these! ^*^\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            + \"todo \u003ctask\u003e \\n-- to add todo stuff\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + \"deadline \u003ctask\u003e /by \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e \\n-- to add todo stuff with deadline\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + \"event \u003ctask\u003e /from \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e /to \u003cdate in yyyy-mm-dd or yyyy-mm-dd hh:mm\u003e\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"            + \"\\n-- to add event with start datetime to end datetime\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            + \"list \\n-- to list all current stored tasks\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            + \"listTime \u003cdate in yyyy-mm-dd\u003e \\n-- to list all current tasks within the specified date\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"            + \"schedule \u003cdate in yyyy-mm-dd\u003e \\n-- to list all sorted unmarked tasks in the specified date\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            + \"mark \u003cindex of task\u003e \\n-- to mark the specified task as done\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            + \"unmark \u003cindex of task\u003e \\n-- to unmark the specified task\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"            + \"delete \u003cindex of task\u003e \\n-- to delete the specified task from list\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            + \"bye \\n-- to say goodbye to me and end our chat :(\\n\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"            + \"help \\n-- to view this guide\";","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    private static final String GREET \u003d \"Hey! I\u0027m your friend, Chattime!(# v #) /\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"            + \"How can I help you today *^*\\n\\nType `help` and I will come to you %v%\";","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    private static final String BYE \u003d \"\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003cBye\u003e^\u003c\";","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    private static final String SYSTEM_ERR_MSG \u003d \"Sorry I\u0027m currently offline :,: \\nI\u0027m sick due to :\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    private static final String STORAGE_ERR_MSG \u003d \"My memory messed up @^@ I think I need to leave now #.#\";","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    private boolean isNormalInit;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    private String errorMsg;","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * Creates UI objects, sets bot running status to true.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        isRunning \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        isNormalInit \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Returns initial UI message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * @return Greeting message, if storage error, return error alert.","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    public String initUi() {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        if (isNormalInit) {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"            return \"Welcome to\\n\" + LOGO + \"\\n\" + GREET;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"            return SYSTEM_ERR_MSG + errorMsg;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"     * Reports storage error.","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    public void reportSystemError(String errorMessage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        isNormalInit \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"        errorMsg \u003d errorMessage;","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     * Getter for isNormalInit.","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"     * @return Initiation status of storage.","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    public boolean getInitStatus() {","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        return isNormalInit;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"     * Alerts user storage error.","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"     * @return Storage error message.","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"    public String reportStorageError() {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"        return STORAGE_ERR_MSG;","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"     * Returns task added recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task added recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     * @param totalTask Message about total number of available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * @return Add task message.","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    public String printAddTask(Task task, String totalTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n   %s\\n%s\", task, totalTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * Returns unmarked task message.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task unmarked recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"     * @return Confirmation of cancelling done state.","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"    public String replyNotDoneMessage(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"Arghh! This job is not done yet:\\n       %s\", task);","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     * Returns marked task message.","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task marked recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"     * @return Confirmation on done tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    public String replyDoneMessage(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"Congrats! You\u0027ve done this job:\\n       %s\", task);","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"     * Returns remove task message.","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"     * @param task Task removed recently.","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"     * @param totalTask Message about total number of available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"     * @return Confirmation of task removal.","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    public String replyRemoveTaskMsg(Task task, String totalTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"        return String.format(\"Okay!!! I\u0027ve removed this task for you:\\n       %s\\n     %s\", task, totalTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"     * Returns error message to user when operation on empty task list is requested.","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"     * @return Alert of empty task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"    public String warnEmptyList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"        return \"Can\u0027t find anything in the list @~@\";","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"     * Alerts duplicate input.","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"     * @return Reminder of duplicated tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"    public String alertDuplicate() {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"        return \"AHH?! Seems that this job is added before \u003e\u003c\";","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"     * Gets the running status of bot.","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"     * @return true if bot still running, false if bye command encountered.","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"    public boolean getExecuteStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"        return isRunning;","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"     * Sets running status to false.","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"    public void endChat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"        isRunning \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"     * Returns bot detected error message to user with specific format.","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"     * @param errMsg Bot error message.","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"     * @return Error message to user.","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"    public String printError(String errMsg) {","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"        return errMsg;","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"     * Returns exit message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"     * @return Goodbye message to user.","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"    public String exit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"        return BYE;","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"laihuiqi"},"content":"     * Returns user guide.","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"     * @return Help guide to use this bot.","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"    public String printGuide() {","lastModifiedDate":"2023-01-30"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"        return GUIDE;","lastModifiedDate":"2023-01-30"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":196}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"/stylesheet/dialogBoxStyle.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" stylesheets\u003d\"@../stylesheet/dialogBoxStyle.css\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"      \u003cVBox fx:id\u003d\"userid\" prefHeight\u003d\"0.0\" prefWidth\u003d\"55.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"55.0\" fitWidth\u003d\"55.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"            \u003cLabel fx:id\u003d\"username\" prefHeight\u003d\"27.0\" prefWidth\u003d\"55.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"laihuiqi":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../stylesheet/mainStyle.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chattime.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"41.0\" maxWidth\u003d\"400.0\" prefHeight\u003d\"41.0\" onAction\u003d\"#handleUserInput\" stylesheets\u003d\"@../stylesheet/mainStyle.css\" AnchorPane.bottomAnchor\u003d\"1.5\" AnchorPane.leftAnchor\u003d\"1.5\" AnchorPane.rightAnchor\u003d\"77.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" maxHeight\u003d\"41.0\" stylesheets\u003d\"@../stylesheet/mainStyle.css\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"1.5\" AnchorPane.rightAnchor\u003d\"1.5\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"            \u003cFont name\u003d\"Broadway\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" stylesheets\u003d\"@../stylesheet/mainStyle.css\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"42.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" stylesheets\u003d\"@../stylesheet/mainStyle.css\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"42.0\"/\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"laihuiqi":23}},{"path":"src/test/java/chattime/exception/ChattimeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class ChattimeExceptionTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    public void getMessageTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Test\");","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"        } catch (ChattimeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"            assertEquals(\"OOPS!!! Test\", e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"            throw new ChattimeException(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        } catch (ChattimeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            assertEquals(\"OOPS!!! Test\", e.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":25}},{"path":"src/test/java/chattime/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    private Deadline testTask \u003d new Deadline(\"Test\", LocalDate.now());","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(String.format(\"D @ 0 @ Test @ %s @ 0\", LocalDate.now()), testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public void taskWithCodeTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[D] Test\", testTask.taskWithCode());","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public void isOnDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(true, testTask.isOnDate(LocalDate.now()));","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        Deadline testTask \u003d new Deadline(\"Test\",","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"                LocalDate.of(2023, 1, 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[D][ ] Test (by: Jan 01 2023)\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":33}},{"path":"src/test/java/chattime/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class EventTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate from \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private LocalDate to \u003d LocalDate.of(2023, 2, 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    private LocalTime time \u003d LocalTime.of(10, 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    private Event testTask \u003d new Event(\"Test\", from, time, to, time);","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public void taskWithCodeTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[E] Test\", testTask.taskWithCode());","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"E @ 0 @ Test @ 2023-01-01 @ 10:00 @ 2023-02-02 @ 10:00\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public void isOnDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(testTask.isOnDate(LocalDate.of(2023, 3, 3)));","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        LocalDate from \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        LocalDate to \u003d LocalDate.of(2023, 2, 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        Event testTask \u003d new Event(\"Test\", from, null, to, null);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[E][ ] Test (from: Jan 01 2023 to: Feb 02 2023)\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":39}},{"path":"src/test/java/chattime/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public void getStatusIconTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\" \", testTask.getStatusIcon());","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public void markAsDone_getTaskStatusTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        testTask.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(testTask.getTaskStatus());","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public void isMatchDescriptionTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(testTask.isMatchDescription(\"Test\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    public void taskWithCodeTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(testTask.toString(), testTask.taskWithCode());","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\" @ 0 @ Test\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    public void onDateTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(testTask.isOnDate(LocalDate.of(2023, 1, 1)));","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        Task testTask \u003d new Task(\"Test\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[ ] Test\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":54}},{"path":"src/test/java/chattime/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    private Todo testTask \u003d new Todo(\"Test\");","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    public void toDataStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"T @ 0 @ Test\", testTask.toDataString());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public void taskWithCode() {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[T] Test\", testTask.taskWithCode());","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"[T][ ] Test\", testTask.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":23}},{"path":"src/test/java/chattime/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package chattime.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"public class UiTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    public void getExecuteStatusTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"        Ui test \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(test.getExecuteStatus());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    public void printErrorStatusTest() {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        Ui test \u003d new Ui();","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"        assertEquals(\"Test Error\", test.printError(\"Test Error\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"laihuiqi":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"deadline return book /by 6th June","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"casual","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"todo 1 proposal","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"outlier","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"event 1119 /from ^\u0026^ /to (((*`v`*","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"list test","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"event/","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"mark","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"unmark mark 18","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"unmark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"unmark 12344r","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"unmark 12345","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"mark cat","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"deadline /by","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"deadline task /by","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"event task /from t1 /to","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"event task /from /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"event task t1 /from /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"event task t1 /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"even task /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"event /from t1 /to t2","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"event task /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"laihuiqi":44}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/chattime/*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"java -classpath ../bin Chattime \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"laihuiqi":2,"-":36}}]
