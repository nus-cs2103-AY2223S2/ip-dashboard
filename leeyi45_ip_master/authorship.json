[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"compileJava {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    compileJava.options.fork \u003d true","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    compileJava.options.forkOptions.executable \u003d \"../jdk-11.0.2/bin/javac\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    testImplementation \u0027org.mockito:mockito-inline:4.0.0\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:4.0.0\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    mainClassName \u003d \"duke.Program\"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"sourceSets {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"  test {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    resources {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"      srcDir \"test\"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"leeyi45":32}},{"path":"src/main/java/duke/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"public class App extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private Duke instance;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public void start(Stage primaryStage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            instance \u003d new Duke(Storage.loadFromDisk(\"data.dat\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            new Alert(AlertType.ERROR, \"Your data file was corrupted, so we were unable to read your tasks from there\").show();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            instance \u003d new Duke();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        MainWindow controller \u003d new MainWindow();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        VBox box \u003d Utils.loadFxmlFile(getClass().getResource(\"/view/MainWindow.fxml\"), controller);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        controller.setDuke(instance);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        Scene scene \u003d new Scene(box);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        primaryStage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        scene.getWindow()","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            .addEventFilter(WindowEvent.WINDOW_CLOSE_REQUEST, (e) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"                while (true) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"                    try {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                        Storage.saveToDisk(\"data.dat\", instance.getTaskList());","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"                        ButtonType res \u003d UI.showRetryDialog(AlertType.ERROR, \"Failed to save your tasks! Try again?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"                        if (res \u003d\u003d ButtonType.NO) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                    } catch (IOException ex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            });","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":51}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import duke.commands.SaveCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedCommand.DeleteCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedCommand.MarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedCommand.UnmarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskCommand.DeadlineCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskCommand.EventCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskCommand.TodoCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"public class Duke {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    private final Parser commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    public Duke(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        this.tasks \u003d TaskList.fromIterable(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        this.commands \u003d new Parser(Stream.\u003cSupplier\u003cCommand\u003e\u003eof(","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            ListCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            MarkCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            UnmarkCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            TodoCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            DeadlineCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            EventCommand::new,","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            DeleteCommand::new,","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            SaveCommand::new","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        ).map(Supplier::get));","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    public Duke() {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    public final TaskList getTaskList() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":47}},{"path":"src/main/java/duke/Program.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public final class Program {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public final static void main(String[] vargs) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        // JavaFX gets very sad if our application class is also our main class","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        // so this is a workaround","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"        Application.launch(App.class);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":12}},{"path":"src/main/java/duke/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"public final class Utils {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"     * Recombine an array of strings into a singular string, starting from the provided","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"     * start index to the end index exclusive.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"     * @param args Array containing strings to join","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"     * @param from From index, inclusive","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"     * @param to To index, exclusive","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * @return Recombined string","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public final static String stringJoiner(String[] args, int from, int to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        return String.join(\" \", Arrays.copyOfRange(args, from, to));","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    public final static String stringJoiner(String[] args, int from) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        return stringJoiner(args, from, args.length);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    private final static \u003cT extends TemporalAccessor\u003e Function\u003cString, Optional\u003cT\u003e\u003e createParser(","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        Iterable\u003cString\u003e patterns, ","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        BiFunction\u003cString, DateTimeFormatter, T\u003e parser","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        return str -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            for (String pattern : patterns) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                    return Optional.of(parser.apply(str, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH)));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                } catch (DateTimeParseException r) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                //   System.out.format(\"Couldn\u0027t match %s with %s\\n\", str, pattern);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            return Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"     * Parse the strings for date and time information. Passing null for one of the arguments indicates","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"     * that only either date or time information was available. Passing both will create a LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"     * with both time and date information. If there is a missing component, it will be filled with LocalDateTime.now().","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"     * @param str0 Null or string to parse for either date or time","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"     * @param str1 Null or string to parse for either date or time","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"     * @return LocalDateTime containing either the parsed date and time or the parsed arguments","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"     * combined with the current time.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    public final static LocalDateTime parseDateTime(String str0, String str1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"        List\u003cString\u003e dateFormats \u003d List.of(","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            \"dd/MM\" ","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        List\u003cString\u003e timeFormats \u003d List.of(","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            \"hh:mma\",","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"            \"kk:mm\",","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            \"kkmm\"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        Function\u003cString, Optional\u003cMonthDay\u003e\u003e dateParser \u003d createParser(dateFormats, MonthDay::parse);","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        Function\u003cString, Optional\u003cLocalTime\u003e\u003e timeParser \u003d createParser(timeFormats, LocalTime::parse);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        if (str0 \u003d\u003d null \u0026\u0026 str1 \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"            throw new IllegalArgumentException(\"Both str0 and str1 cannot be null!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"        } else if (str0 \u003d\u003d null \u0026\u0026 str1 !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"            return parseDateTime(str1, null);","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        } ","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"        if (str0 !\u003d null \u0026\u0026 str1 \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cMonthDay\u003e dateValue \u003d dateParser.apply(str0);","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"            if (dateValue.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"                Optional\u003cLocalTime\u003e timeValue \u003d timeParser.apply(str0.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"                if (timeValue.isEmpty()) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"                    throw new DateTimeParseException(\"Invalid date/time string!\", str0, 0);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"                return LocalDateTime.of(currentTime.toLocalDate(), timeValue.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"            return LocalDateTime.of(dateValue.get().atYear(currentTime.getYear()), currentTime.toLocalTime());","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cMonthDay\u003e date \u003d dateParser.apply(str0);","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cLocalTime\u003e time \u003d timeParser.apply(str1.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"            if (date.isEmpty() || time.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"                date \u003d dateParser.apply(str1);","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"                time \u003d timeParser.apply(str0.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"            if (date.isEmpty() || time.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"                throw new DateTimeParseException(\"Invalid date/time string!\", str1, 0);","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"            LocalDate dateValue \u003d date.get().atYear(currentTime.getYear());","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"            return LocalDateTime.of(dateValue, time.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"    public static String flattenIterableWithIndex(Iterable\u003c?\u003e it, int start) {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"        int count \u003d start - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"        for (Object each : it) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"            count++;","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"            joiner.add(String.format(\"%d. %s\", count, each.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        return joiner.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"    public static \u003cT, U\u003e T loadFxmlFile(URL path, U controller) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"        FXMLLoader loader \u003d new FXMLLoader(path);","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"        loader.setController(controller);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"        T loaded \u003d loader.\u003cT\u003eload();","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"        return loaded;","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":132}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":" * Class representing a command that Duke can execute. Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":" * the execute method to provide the functionality of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"public abstract class Command implements BiConsumer\u003cString[], Duke\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"     * Represents errors in the user\u0027s input. Throw this exception within {@link #execute() execute}","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"     * with the given message to indicate that the user has entered invalid arguments for ","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"     * the given command.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    protected static class ValidationException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        public ValidationException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        public ValidationException(String format, Object ...args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            this(String.format(format, args));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * Throw {@link #ValidationException ValidationException} if the provided condition is false. ","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     * @param condition Condition to check","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"     * @param errMsg Error message to return to the user","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    protected static void validate(boolean condition, String errMsg) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        if (!condition) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"     * The label used to identify the command, i.e. deadline in \u0027deadline book /by 2pm\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    private final String label;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    public Command(String label) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        this.label \u003d label;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"     * Output the given string to the desired location","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"     * @param str String to output","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    protected void output(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        Ui.print(str);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"    } ","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"     * Format the given string using the given arguments, and then send it to the output function","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"     * @param formatStr Format string to use","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"     * @param args Format string arguments","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    protected void output(String formatStr, Object ...args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        output(String.format(formatStr, args));","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"     * The label of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    public String getLabel() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"        return label;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"     * Run the command with the given arguments and Duke instance","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"     * @param tokens Array of parsed tokens, including the command label","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"    protected abstract void execute(String[] tokens, final Duke instance) throws ValidationException;","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"    public final void accept(String[] tokens, final Duke instance) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"            execute(tokens, instance);","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"        } catch (ValidationException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"            output(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":89}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public FindCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        super(\"find\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    protected void execute(String[] tokens, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        validate(tokens.length \u003e 1, \"Need a string to search for!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        TaskList tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        String searchStr \u003d Utils.stringJoiner(tokens, 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream().filter(t -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            String desc \u003d t.getDescription();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            return desc.contains(searchStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        })","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            .collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            output(\"Could not find any tasks that matched \u0027%s\u0027\", searchStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            output(\"%d tasks matched \u0027%s\u0027:\\n%s\",","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"                filteredTasks.size(),","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"                searchStr,","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"                Utils.flattenIterableWithIndex(filteredTasks, 1)","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":39}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":" * Command to print the current list of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        super(\"list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    protected void execute(String[] tokens, Duke instance) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            output(\"No stored tasks!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            output(\"You have a total of %d tasks:\\n%s\", ","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"                tasks.size(),","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                Utils.flattenIterableWithIndex(tasks, 1)","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":30}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" * Class for parsing the input from a user into tokens that commands can use.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"public class Parser implements BiConsumer\u003cString, Duke\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private final Map\u003cString, Command\u003e store;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    public Parser(Map\u003cString, Command\u003e store) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        this.store \u003d store;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public Parser(Stream\u003cCommand\u003e cmds) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        this(cmds.collect(","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            Collectors.toUnmodifiableMap(Command::getLabel, Function.identity())","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        ));","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * This method is called every time the user enters an invalid command string","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     * @param input Raw string as entered by the user","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    public void onUnknownCommand(String input, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        Ui.print(\"Unknown command \u0027%s\u0027 :(\", input);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"     * Try to execute the command as specified by the input string","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"     * @param input Raw string as entered by the user","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    public void executeCommand(String input, final Duke instance) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        Command cmd \u003d this.store.getOrDefault(tokens[0].toLowerCase(), null);","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        if (cmd !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            cmd.accept(tokens, instance);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            onUnknownCommand(input, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    public void accept(String input, final Duke instance) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        executeCommand(input, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"leeyi45":57}},{"path":"src/main/java/duke/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    public SaveCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"        super(\"save\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    protected void execute(String[] tokens, Duke instance) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"            Storage.saveToDisk(\"data.dat\", instance.getTaskList());","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"            output(\"Saved your tasks to disk!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"            output(\"Failed to save your data: %s\", e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":22}},{"path":"src/main/java/duke/commands/indexedCommand/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class DeleteCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"delete\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        instance.getTaskList().remove(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Removed this from your task list:\\n%s\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/indexedCommand/IndexedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public abstract class IndexedCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public IndexedCommand(String label) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        super(label);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    protected void execute(String[] args, final Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"            validate(args.length \u003e 1, String.format(\"Needed an index for %s\", getLabel()));","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            int index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Invalid index!\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    protected abstract void runWithTask(Task task, Duke instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":30}},{"path":"src/main/java/duke/commands/indexedCommand/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class MarkCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public MarkCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"mark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        task.setDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Marked this as done!\\n%s\\n\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/indexedCommand/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class UnmarkCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public UnmarkCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"unmark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        task.setDone(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Marked this as not done!\\n%s\\n\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/taskCommand/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class DeadlineCommand extends TaskCommand\u003cDeadline\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        super(\"deadline\");","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    protected Deadline getTask(String[] args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"            if (args[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"                index \u003d i;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        validate(index !\u003d -1, \"Expected a /by directive!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        validate(index !\u003d 1, \"Expected a task!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        validate(index !\u003d args.length - 1, \"Expected a time after /by!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime deadline \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"                args[index + 1],","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"                index + 2 \u003e\u003d args.length ? null : args[index + 2]","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            validate(deadline.isAfter(LocalDateTime.now()), \"I can\u0027t create something\u0027s that\u0027s due in the past!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d Utils.stringJoiner(args, 1, index);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            return new Deadline(taskStr, deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(String.format(\"Error parsing deadline: %s\\n\", e.getMessage()));","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":42}},{"path":"src/main/java/duke/commands/taskCommand/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class EventCommand extends TaskCommand\u003cEvent\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    public EventCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        super(\"event\");","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    protected Event getTask(String[] args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        int fromIndex \u003d -1, toIndex \u003d -1;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"            if (args[i].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            } else if (args[i].equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                toIndex \u003d i;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        validate(fromIndex !\u003d -1, \"Expected a /from directive!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        validate(toIndex !\u003d -1, \"Expected a /to directive!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        int fromLength, toLength;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            fromLength \u003d args.length - fromIndex - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            toLength \u003d fromIndex - toIndex  - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            toLength \u003d args.length - toIndex - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            fromLength \u003d toIndex - fromIndex  - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        validate(Math.min(fromIndex, toIndex) \u003e 1, \"Expected a task!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        validate(toLength \u003e 0, \"Expected a time after /to!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        validate(fromLength \u003e 0, \"Expected a time after /from!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime fromTime \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                args[fromIndex + 1],","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                fromLength \u003c 2 ? null : args[fromIndex + 2]","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime toTime \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                args[toIndex + 1], ","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"                toLength \u003c 2 ? null : args[toIndex + 2]","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            validate(fromTime.isBefore(toTime), \" I can\u0027t create an event that ends before it starts!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d Utils.stringJoiner(args, 1, Math.min(fromIndex, toIndex));","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"            return new Event(taskStr, fromTime, toTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Failed to parse the date you\u0027ve given: %s\\n\", e.getParsedString());","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":63}},{"path":"src/main/java/duke/commands/taskCommand/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":" * A subclass of {@link Command Commands} that return tasks to be added to the TaskList. ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * Override the {@link #getTask(String[], Duke) getTask()} function","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" * to supply a task at the end of command execution.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"public abstract class TaskCommand\u003cT extends Task\u003e extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    public TaskCommand(String label) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        super(label);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    protected void execute(String[] tokens, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        T task \u003d getTask(tokens, instance);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        output(\"Added %s to the list!\\nYou now have %d tasks\\n\", task.toString(), tasks.size());","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * Called when the command is executed to return a {@link Task task} to be added to the Duke instance. ","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     * Follows the calling conventions of {@link #execute(String[], Duke) execute}.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    protected abstract T getTask(String[] tokens, Duke instance) throws ValidationException;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":34}},{"path":"src/main/java/duke/commands/taskCommand/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"public class TodoCommand extends TaskCommand\u003cToDo\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"    public TodoCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        super(\"todo\");","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    protected ToDo getTask(String[] args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        validate(args.length \u003d\u003d 1, \"Expected a task!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        String taskStr \u003d Utils.stringJoiner(args, 1, args.length);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        return new ToDo(taskStr);","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":19}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.main;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":" * Class containing methods related to loading and saving tasks to and from the disk","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    public static List\u003cTask\u003e loadFromDisk(String path) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        if (Files.exists(Paths.get(path)))  {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            try (","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                final FileInputStream ifstream \u003d new FileInputStream(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"                final ObjectInputStream objStream \u003d new ObjectInputStream(ifstream);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"                @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                List\u003cTask\u003e tasks \u003d (List\u003cTask\u003e) objStream.readObject();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"                return tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    public static void saveToDisk(String path, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        try (","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            final FileOutputStream ofstream \u003d new FileOutputStream(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            final ObjectOutputStream objStream \u003d new ObjectOutputStream(ofstream);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            objStream.writeObject(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":42}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"    public static void printLogo() {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"        System.out.println(\"Hello from\\n\" + logo);    ","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    public static void print(String args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        System.out.println(args);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    public static void print(String format, Object ...args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        print(String.format(format, args));","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"leeyi45":20}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" * A task with an associated deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"D\")","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"     * String representation of the deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    public Deadline(String task, LocalDateTime time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        this.deadline \u003d time;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"%s (by: %s)\", ","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            deadline.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\"))","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" * A task with an associated start and end time","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"E\")","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"     * String representation of the start time","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     * String representation of the end time","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public Event(String task, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            start.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            end.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\"))","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":" * Abstract class from which all other tasks are derived","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"     * String label for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    private final String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final String typeString;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     * Boolean indicating if the task is completed or otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        this.description \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        TaskInfo anno \u003d getClass().getAnnotation(TaskInfo.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        this.typeString \u003d anno.type();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"     * Set whether the task is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * @param value True if it is done, false otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public void setDone(boolean value) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        this.done \u003d value;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"     * Get the type string for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"     * @return String","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    public String getType() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        return typeString;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"[%s][%s] %s\", getType(), this.done ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"leeyi45":51}},{"path":"src/main/java/duke/task/TaskCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"public interface TaskCreator {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"    public Task createTask(String desc, LocalDateTime start, LocalDateTime end);","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":7}},{"path":"src/main/java/duke/task/TaskInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"@Target(ElementType.TYPE)","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public @interface TaskInfo {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    String type();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"leeyi45":12}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Collection;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * Represents a List of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"public class TaskList implements List\u003cTask\u003e, Serializable {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    public static TaskList fromIterable(Iterable\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        tasks.forEach(lst::add);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        return new TaskList(lst);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"  ","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    public void add(int index, Task element) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        tasks.add(index, element);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public boolean add(Task e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        return tasks.add(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    public boolean addAll(Collection\u003c? extends Task\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        return tasks.addAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    public boolean addAll(int index, Collection\u003c? extends Task\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        return tasks.addAll(index, c);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    public void clear() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    public boolean contains(Object o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return tasks.contains(o); ","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    public boolean containsAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        return tasks.containsAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    public Task get(int index) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        return tasks.isEmpty(); ","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"    public int indexOf(Object o) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        return tasks.indexOf(o);","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"    public Iterator\u003cTask\u003e iterator() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        return tasks.iterator();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"    public int lastIndexOf(Object o) {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        return tasks.lastIndexOf(o);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"    public ListIterator\u003cTask\u003e listIterator() {","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"        return tasks.listIterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    public ListIterator\u003cTask\u003e listIterator(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"        return tasks.listIterator(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"    public boolean remove(Object o) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"        return tasks.remove(o);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    public Task set(int index, Task t) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        return tasks.set(index, t); ","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"    public boolean removeAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"        return tasks.removeAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"    public boolean retainAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"        return tasks.retainAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"    public int size() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        return tasks.size(); ","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"    public List\u003cTask\u003e subList(int fromIndex, int toIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"        return tasks.subList(fromIndex, toIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"    public Object[] toArray() {","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"        return tasks.toArray();","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"    public \u003cT\u003e T[] toArray(T[] a) {","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"        return tasks.toArray(a);","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":140}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":" * A task without any associated times","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"T\")","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":11}},{"path":"src/main/java/duke/ui/AddTaskWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.util.ResourceBundle;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.Initializable;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ComboBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.DatePicker;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.DialogPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"import duke.task.TaskCreator;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"public class AddTaskWindow extends ControllerBase implements Initializable {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    private static Map\u003cString, TaskCreator\u003e taskCreators \u003d Map.of(","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        \"ToDo\", (desc, a, b) -\u003e new ToDo(desc),","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        \"Deadline\", (desc, a, due) -\u003e new Deadline(desc, due),","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        \"Event\", (desc, start, end) -\u003e new Event(desc, start, end)","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    );","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    public static Dialog\u003cOptional\u003cTask\u003e\u003e getAddTaskDialog() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        AddTaskWindow controller \u003d new AddTaskWindow();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        DialogPane pane \u003d Utils.loadFxmlFile(AddTaskWindow.class.getResource(\"/view/AddTaskWindow.fxml\"), controller);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        Dialog\u003cOptional\u003cTask\u003e\u003e diag \u003d new Dialog\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        diag.setDialogPane(pane);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        diag.setResultConverter((buttonType) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            if (buttonType \u003d\u003d ButtonType.OK) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                Task newTask \u003d controller.createTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                return Optional.of(newTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"                return Optional.empty();","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        pane.getButtonTypes().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            ButtonType.OK,","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            ButtonType.CANCEL","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        pane.lookupButton(ButtonType.OK).addEventFilter(ActionEvent.ACTION, event -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"            String error \u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            String typeToAdd \u003d controller.taskTypeComboBox.getValue();","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            if (typeToAdd \u003d\u003d null || typeToAdd.isBlank()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                error \u003d \"Select a type for the task!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"            String taskDesc \u003d controller.taskDescField.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            if (taskDesc \u003d\u003d null || taskDesc.isBlank()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                error \u003d \"A valid description for the task must be provided!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            if (typeToAdd.equals(\"Deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                if (controller.endDatePicker.getValue() \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"                    error \u003d \"Need a deadline!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            } else if (typeToAdd.equals(\"Event\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"                if (controller.startDatePicker.getValue() \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"                    error \u003d \"Need a start time for event!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"                } else if (controller.endDatePicker.getValue() \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"                    error \u003d \"Need an end time for event!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"            if (error !\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                Alert alert \u003d new Alert(AlertType.ERROR, error, new ButtonType[] { ButtonType.OK });","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"                alert.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"                event.consume();","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"            } ","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"        return diag;","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    private Task createTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"        String typeToAdd \u003d taskTypeComboBox.getValue();","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"        String taskDesc \u003d taskDescField.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"        LocalDate startDate \u003d startDatePicker.getValue();","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"        LocalDate endDate \u003d endDatePicker.getValue();","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        LocalTime time \u003d LocalTime.now();","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime start \u003d startDate \u003d\u003d null ? null : LocalDateTime.of(startDate, time);","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime end \u003d endDate \u003d\u003d null ? null : LocalDateTime.of(endDate, time);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"        return taskCreators.get(typeToAdd).createTask(taskDesc, start, end);","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"    private ComboBox\u003cString\u003e taskTypeComboBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"    private TextField taskDescField;","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    private DatePicker startDatePicker;","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"    private DatePicker endDatePicker;","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"    private DatePicker startTimePicker;","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"    private DatePicker endTimePicker;","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"    private void onTaskTypeChanged() {","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        String type \u003d taskTypeComboBox.getValue();","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"        if (type \u003d\u003d null || type.equals(\"ToDo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"            startDatePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"            startTimePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"            endDatePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"            endTimePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"        } else if (type.equals(\"Deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"            startDatePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"            startTimePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"            endDatePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"            endTimePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"        } else if (type.equals(\"Event\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"            startDatePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"            startTimePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"            endDatePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"leeyi45"},"content":"            endTimePicker.setDisable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(\"Should not get here\");","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"leeyi45"},"content":"    public void initialize(URL location, ResourceBundle resources) {","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"leeyi45"},"content":"        ObservableList\u003cString\u003e taskTypesList \u003d FXCollections.observableArrayList(taskCreators.keySet());","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"leeyi45"},"content":"        taskTypeComboBox.setItems(taskTypesList);","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"leeyi45"},"content":"        taskTypeComboBox","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"            .getSelectionModel()","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"leeyi45"},"content":"            .selectedItemProperty()","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"            .addListener((option, oldValue, newValue) -\u003e onTaskTypeChanged());","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"leeyi45"},"content":"        startDatePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"leeyi45"},"content":"        endDatePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"leeyi45"},"content":"        startTimePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"leeyi45"},"content":"        endTimePicker.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":160}},{"path":"src/main/java/duke/ui/ControllerBase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"public class ControllerBase {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"   private Duke instance; ","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"   public void setDuke(Duke instance) {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        this.instance \u003d instance;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"   }","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"   ","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"   public Duke getDuke() {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        return this.instance;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"   }","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":15}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.MenuBar;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"public class MainWindow extends ControllerBase {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    private MenuBar mainMenuBar;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        super.setDuke(duke);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        taskListView.setCellFactory((task) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            return new ListCell\u003c\u003e() {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"                @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"                public void updateItem(Task t, boolean empty) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"                    super.updateItem(t, empty);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"                    if (empty || t \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"                        setText(null);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"                    } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"                        setText(t.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            };","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    private void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        taskListView.setItems(FXCollections.observableList(tasks));","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    private void quit() {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        // Run cleanup tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    private void onOpenTaskWindow() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        Dialog\u003cOptional\u003cTask\u003e\u003e diag \u003d AddTaskWindow.getAddTaskDialog();","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        diag.showAndWait().ifPresent((taskOptional) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"            taskOptional.ifPresent((task) -\u003e  { ","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"                getDuke().getTaskList().add(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"                taskListView.itemsProperty().get().add(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            });","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"    private void saveTasksToDisk() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"        Storage.saveToDisk(\"data.dat\", getDuke().getTaskList());","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"    private void loadTasksFromDisk() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e savedTasks \u003d Storage.loadFromDisk(\"data.dat\");","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"        setTasks(savedTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":75}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public class UI {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public static ButtonType showRetryDialog(AlertType alertType, String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        Alert alert \u003d new Alert(alertType, message, new ButtonType[] { ButtonType.YES, ButtonType.NO });","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        Optional\u003cButtonType\u003e result \u003d alert.showAndWait();","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        ButtonType buttonRes \u003d result.orElseThrow(() -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(\"Alert dialog should not have returned Optional.empty\");","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        return buttonRes;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":19}},{"path":"src/main/resources/view/AddTaskWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.ComboBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.DatePicker?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.DialogPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"\u003cDialogPane xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"   \u003cheader\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"      \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Add a new task!\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"348.251953125\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"   \u003c/header\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"      \u003cGridPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"Description\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            \u003cTextField fx:id\u003d\"taskDescField\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"Task Type\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            \u003cComboBox fx:id\u003d\"taskTypeComboBox\" prefWidth\u003d\"150.0\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"Start Date\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            \u003cDatePicker fx:id\u003d\"startDatePicker\" prefHeight\u003d\"26.0\" prefWidth\u003d\"150.0\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"End Date\" GridPane.rowIndex\u003d\"6\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            \u003cDatePicker fx:id\u003d\"endDatePicker\" prefHeight\u003d\"26.0\" prefWidth\u003d\"150.0\" GridPane.rowIndex\u003d\"7\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"Start Time\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            \u003cDatePicker fx:id\u003d\"startTimePicker\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            \u003cLabel text\u003d\"End Time\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"6\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            \u003cDatePicker fx:id\u003d\"endTimePicker\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"7\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"\u003c/DialogPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"\u003c!--","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"  Copyright (c) 2015, 2019, Gluon and/or its affiliates.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"  All rights reserved. Use is subject to license terms.","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"  This file is available and licensed under the following license:","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"  Redistribution and use in source and binary forms, with or without","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"  modification, are permitted provided that the following conditions","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"  are met:","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"  - Redistributions of source code must retain the above copyright","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    notice, this list of conditions and the following disclaimer.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"  - Redistributions in binary form must reproduce the above copyright","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    notice, this list of conditions and the following disclaimer in","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    the documentation and/or other materials provided with the distribution.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"  - Neither the name of Oracle Corporation nor the names of its","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    contributors may be used to endorse or promote products derived","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    from this software without specific prior written permission.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"--\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.SeparatorMenuItem?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"\u003cVBox prefHeight\u003d\"400.0\" prefWidth\u003d\"640.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    \u003cMenuBar fx:id\u003d\"mainMenuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"      \u003cmenus\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            \u003cMenu fx:id\u003d\"dukeMenu\" mnemonicParsing\u003d\"false\" text\u003d\"Duke\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"               \u003citems\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#loadTasksFromDisk\" text\u003d\"Load from disk\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save to disk\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"            \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#quit\" text\u003d\"Quit\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"               \u003c/items\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Tasks\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"               \u003citems\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"                  \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#onOpenTaskWindow\" text\u003d\"Add New\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"               \u003c/items\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"      \u003c/menus\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    \u003c/MenuBar\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"      \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Your Current Tasks!\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"639.2021484375\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"            \u003cFont size\u003d\"26.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"      \u003c/Text\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"      \u003cListView fx:id\u003d\"taskListView\" prefHeight\u003d\"346.0\" prefWidth\u003d\"646.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":70}},{"path":"src/test/java/duke/UtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.DisplayNameGeneration;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.DisplayNameGenerator;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import org.mockito.MockedStatic;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import static duke.Utils.parseDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"public class UtilsTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    private static MockedStatic\u003cLocalDateTime\u003e dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    public static final LocalDateTime DEFAULT_TIME \u003d LocalDateTime.of(2022, 01, 01, 12, 30);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    @BeforeAll","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    public static void setup() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        dateTime \u003d Mockito.mockStatic(LocalDateTime.class);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        dateTime.when(LocalDateTime::now)","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            .thenReturn(DEFAULT_TIME);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    @AfterAll","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    public static void teardown() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        dateTime.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    // @IndicativeSentencesGeneration(","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    //   separator \u003d \" \",","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    //   generator \u003d DisplayNameGenerator.ReplaceUnderscores.class","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    // )","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @DisplayNameGeneration(DisplayNameGenerator.ReplaceUnderscores.class)","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    @Nested","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    class ParseDateTime_should {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        public void parse_12_hour_times_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"12:05am\", null), LocalDateTime.of(2022, 1, 1, 0, 5));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"09:10pm\", null), LocalDateTime.of(2022, 1, 1, 21, 10));","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(null, \"11:34am\"), LocalDateTime.of(2022, 1, 1, 11, 34));","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        public void parse_24_hour_times_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"23:00\", null), LocalDateTime.of(2022, 1, 1, 23, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"2300\", null), LocalDateTime.of(2022, 1, 1, 23, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"17:00\", null), LocalDateTime.of(2022, 1, 1, 17, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"1233\", null), LocalDateTime.of(2022, 1, 1, 12, 33));","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"2500\", null));","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"1269\", null));","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"17:00am\"), ","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering a 24 hour time with am or pm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"23:00pm\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering a 24 hour time with am or pm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        public void parse_dates_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"03/05\", null), LocalDateTime.of(2022, 3, 5, 12, 30));","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(null, \"31/12\"), LocalDateTime.of(2022, 12, 31, 12, 30));","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"12/31\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering the wrong date format\");","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        public void parse_both_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"07/11\", \"12:00am\"), LocalDateTime.of(2022, 11, 7, 0, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"1639\", \"04/07\"), LocalDateTime.of(2022, 7, 4, 16, 39));","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"1400\", \"1231\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when there\u0027s no valid date\");","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"03/02\", \"01/01\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when there\u0027s no valid time\");","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":86}},{"path":"src/test/java/duke/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    public void checkValidation() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        Command test \u003d new Command(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"            public void execute(String[] tokens, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"                validate(false, \"Error Message\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"            } ","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        assertThrows(","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            Command.ValidationException.class, ","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            () -\u003e test.execute(null, null), ","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            \"validate() should throw Validation exception when called with a false boolean condition\"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":25}},{"path":"src/test/java/duke/commands/taskCommand/TaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public class TaskCommandTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    public void testRegularGetTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        Duke instance \u003d new Duke();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        TaskCommand\u003cTask\u003e test \u003d new TaskCommand\u003cTask\u003e(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"            public Task getTask(String[] tokens, Duke instance) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"                return new Task(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"                    public String getType() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"                        return \"X\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                };","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            test.accept(null, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            fail(String.format(\"Should not throw exceptions: %s\\n\", e.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        assertEquals(1, instance.getTaskList().size(), \"Task list should have only one task\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        assertEquals(\"X\", instance.getTaskList().get(0).getType(), \"Only task in list should have type \u0027X\u0027\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    public void testFailGetTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        TaskCommand\u003cTask\u003e test \u003d new TaskCommand\u003cTask\u003e(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            public Task getTask(String[] tokens, Duke instance) throws ValidationException {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                validate(false, \"test message\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"                return new Task(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"                    public String getType() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                        return \"X\"; ","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                };","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        Duke instance \u003d new Duke();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"            test.accept(null, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            fail(String.format(\"Should not throw exceptions: %s\\n\", e.getMessage()));","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        assertEquals(0, instance.getTaskList().size(), \"Tasks are not added when validate fails\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"event project /from 4pm /to 6pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"mark 3","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"if ! ~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"leeyi45":2}}]
