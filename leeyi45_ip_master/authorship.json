[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":" * A task with an associated deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"   * String representation of the deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"  private final String time;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"  public Deadline(String task, String time) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    this.time \u003d time;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"  public String getType() { return \"D\"; }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"  public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    return String.format(\"%s (by: %s)\", super.toString(), time);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public final class Duke {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    private final static String joiner(String[] args, int from, int to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        return String.join(\" \", Arrays.copyOfRange(args, from, to));","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    public final static void main(String[] vargs) throws IOException {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        final BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        final Consumer\u003cTask\u003e addTask \u003d (task) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            tasks.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            System.out.format(\"Added %s to the list!\\nYou now have %d tasks\\n\", task.toString(), tasks.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        final Function\u003cString, Integer\u003e intParser \u003d (value) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            int index \u003d Integer.parseInt(value);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            return index;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        final Map\u003cString, Consumer\u003cString[]\u003e\u003e funcMap \u003d Map.of(","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        \"bye\", (args) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            System.out.println(\"Ok bye bye!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        \"list\", (args) -\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"No stored tasks!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                System.out.format(\"A total of %d tasks\\n\", tasks.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"                    System.out.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        \"mark\", (args) -\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"                if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"                    System.out.println(\"Needed an index for mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"                    return;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"                int index \u003d intParser.apply(args[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                tasks.get(index - 1).setDone(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"                System.out.format(\"Marked this as done!\\n%s\\n\", tasks.get(index - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Invalid index!\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        \"unmark\", (args) -\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Needed an index for unmark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"                int index \u003d intParser.apply(args[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"                tasks.get(index - 1).setDone(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"                System.out.format(\"Marked this as not done!\\n%s\\n\", tasks.get(index - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Invalid index!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"        \"todo\", (args) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a task!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d joiner(args, 1, args.length);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"            Task task \u003d new ToDo(taskStr);","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"            addTask.accept(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"        \"deadline\", (args) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"            int index \u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"            for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"                if (args[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"                    index \u003d i;","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a /by directive!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"            } else if (index \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a task!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"            } else if (index \u003d\u003d args.length - 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a time after /by!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d joiner(args, 1, index);","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"            String time \u003d joiner(args, index + 1, args.length);","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"            Task task \u003d new Deadline(taskStr, time);","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"            addTask.accept(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"        \"event\", (args) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"            int fromIndex \u003d -1, toIndex \u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"            for(int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"                if (args[i].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"                    fromIndex \u003d i;","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"                } else if (args[i].equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"                    toIndex \u003d i;","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"                if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) break;","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"            if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"                // No /from provided","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a /from directive!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"            } else if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"                // No /to provided","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a /to directive!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"            } else if (fromIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"                // From was the first keyword after event","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a task!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"            } else if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected /from to come before /to!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"leeyi45"},"content":"            } else if (toIndex \u003d\u003d args.length - 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a time after /to!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"leeyi45"},"content":"            } else if (toIndex - fromIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Expected a time after /from!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d joiner(args, 1, fromIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"            String fromStr \u003d joiner(args, fromIndex + 1, toIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"leeyi45"},"content":"            String toStr \u003d joiner(args, toIndex + 1, args.length);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"leeyi45"},"content":"            Task task \u003d new Event(taskStr, fromStr, toStr);","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"leeyi45"},"content":"            addTask.accept(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"leeyi45"},"content":"        },","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"leeyi45"},"content":"        \"delete\", (args) -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"leeyi45"},"content":"          try {","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"leeyi45"},"content":"                if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"leeyi45"},"content":"                    System.out.println(\"Needed an index for delete\");","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"leeyi45"},"content":"                    return;","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"leeyi45"},"content":"                int index \u003d intParser.apply(args[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"leeyi45"},"content":"                Task removed \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"leeyi45"},"content":"                System.out.format(\"Removed this task!\\n%s\\n\", removed.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"leeyi45"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"leeyi45"},"content":"                System.out.println(\"Invalid index!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"leeyi45"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"leeyi45"},"content":"            String input \u003d reader.readLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"leeyi45"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"leeyi45"},"content":"            if (funcMap.containsKey(tokens[0])) {","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"leeyi45"},"content":"                funcMap.get(tokens[0]).accept(tokens);","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"leeyi45"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"leeyi45"},"content":"                System.out.format(\"Unknown command \u0027%s\u0027\\n\", input);","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"leeyi45"},"content":"            ","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"-":9,"leeyi45":176}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":" * A task with an associated start and end time","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"   * String representation of the start time","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"  private final String start;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"   * String representation of the end time","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"  private final String end;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"  public Event(String task, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"  public String getType() { return \"E\"; }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"  public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    return String.format(\"%s (from: %s to: %s)\", super.toString(), start, end);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":" * Abstract class from which all other tasks are derived","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"   * String label for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"  private final String task;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"   * Boolean indicating if the task is completed or otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"  private boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"  public Task(String task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    this.task \u003d task;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"   * Set whether the task is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"   * @param value True if it is done, false otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"  public void setDone(boolean value) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    this.done \u003d value;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"   * Get the type string for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"   * @return String","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"  public abstract String getType();","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    return String.format(\"[%s][%s] %s\", getType(),this.done ? \"X\" : \" \", this.task);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"leeyi45":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":" * A task without any associated times","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"  public ToDo(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"    super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"  @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"  public String getType() { return \"T\"; }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"event project /from 4pm /to 6pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"mark 3","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"if ! ~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"leeyi45":2}}]
