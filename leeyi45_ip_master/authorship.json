[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"compileJava {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    compileJava.options.fork \u003d true","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    compileJava.options.forkOptions.executable \u003d \"../jdk-11.0.2/bin/javac\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    testImplementation \u0027org.mockito:mockito-inline:4.0.0\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:4.0.0\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    mainClassName \u003d \"duke.Program\"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"sourceSets {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"  test {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    resources {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"      srcDir \"test\"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"  }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"leeyi45":32}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"There are several commands that Duke supports. To run a command, simply type your command into the textbox and press enter or click \"submit\". The output of the command will be displayed in the textbox.","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"Pressing the up and down arrow keys will let you see previous commands you have entered.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"-":2,"leeyi45":2}},{"path":"src/main/java/duke/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"public class App extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    private static App singleton;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    public static void sendCloseRequest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        singleton.primaryStage.fireEvent(new WindowEvent(","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            singleton.primaryStage, ","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            WindowEvent.WINDOW_CLOSE_REQUEST","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        ));","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    public void start(Stage primaryStage) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        while (true) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"                tasks \u003d Storage.loadFromDisk(\"data.dat\");","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"                ButtonType res \u003d UI.showRetryDialog(AlertType.ERROR, \"Failed to load your saved tasks! Try again?\");","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                if (res \u003d\u003d ButtonType.NO) {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"                    tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"                    break;","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        Duke instance \u003d new Duke(tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        MainWindow controller \u003d new MainWindow();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        AnchorPane windowPane \u003d Utils.loadFxmlFile(getClass().getResource(\"/view/MainWindow.fxml\"), controller);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        controller.setDuke(instance);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        Scene scene \u003d new Scene(windowPane);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        primaryStage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        scene.getWindow()","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            .addEventFilter(WindowEvent.WINDOW_CLOSE_REQUEST, e -\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"                while (true) {","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"                    try {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                        Storage.saveToDisk(\"data.dat\", instance.getTaskList());","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"                        return;","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"                    } catch (IOException ex) {","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                        ButtonType res \u003d UI.showRetryDialog(","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                            AlertType.ERROR, ","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                            String.format(\"Failed to save your tasks: %s Try again?\", ex.getMessage()","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"                        ));","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"                        if (res \u003d\u003d ButtonType.NO) {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            });","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        singleton \u003d this;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":78}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import duke.commands.SaveCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedcommand.DeleteCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedcommand.MarkCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import duke.commands.indexedcommand.UnmarkCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskcommand.DeadlineCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskcommand.EventCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskcommand.TodoCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"public class Duke {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    private final Map\u003cString, Command\u003e store;","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    private Consumer\u003cString\u003e outputter;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    public Duke(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        this.tasks \u003d TaskList.fromIterable(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        this.store \u003d Stream.\u003cSupplier\u003cCommand\u003e\u003eof(","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            DeleteCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            MarkCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            UnmarkCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            DeadlineCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            EventCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            TodoCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            ByeCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            FindCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            ListCommand::new,","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            SaveCommand::new","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        ).map(Supplier::get)","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        .collect(Collectors.toUnmodifiableMap(","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            cmd -\u003e cmd.getLabel(), ","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"            cmd -\u003e cmd","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        ));","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    public Duke() {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    public final TaskList getTaskList() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"     * Try to execute the command as specified by the input string","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"     * @param input Raw string as entered by the user","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    public void executeCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"        Command cmd \u003d this.store.getOrDefault(tokens[0].toLowerCase(), null);","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        if (cmd !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            Arguments parsed \u003d Parser.parseIntoArguments(tokens);","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"            cmd.setOutputFunc(outputter);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"            cmd.accept(parsed, this);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"            onUnknownCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    public void setOutput(Consumer\u003cString\u003e outputter) {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        this.outputter \u003d outputter;","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"     * This method is called every time the user enters an invalid command string","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"     * @param input Raw string as entered by the user","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    public void onUnknownCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"        output(\"Unknown command \u0027%s\u0027 :(\", input);","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"    public void output(String string) {","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"        if (outputter !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"            outputter.accept(string);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"    public void output(String string, Object ...args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"        output(String.format(string, args));","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":103}},{"path":"src/main/java/duke/Program.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"public final class Program {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"    public final static void main(String[] vargs) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        // JavaFX gets very sad if our application class is also our main class","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"        // so this is a workaround","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        Application.launch(App.class);","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":13}},{"path":"src/main/java/duke/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"public final class Utils {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"     * Recombine an array of strings into a singular string, starting from the provided","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"     * start index to the end index exclusive.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"     * @param args Array containing strings to join","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"     * @param from From index, inclusive","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"     * @param to To index, exclusive","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * @return Recombined string","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public final static String stringJoiner(String[] args, int from, int to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        return String.join(\" \", Arrays.copyOfRange(args, from, to));","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    public final static String stringJoiner(String[] args, int from) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        return stringJoiner(args, from, args.length);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    private final static \u003cT extends TemporalAccessor\u003e Function\u003cString, Optional\u003cT\u003e\u003e createParser(","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        Iterable\u003cString\u003e patterns, ","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        BiFunction\u003cString, DateTimeFormatter, T\u003e parser","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        return str -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            for (String pattern : patterns) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                    return Optional.of(parser.apply(str, DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH)));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                } catch (DateTimeParseException r) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                //   System.out.format(\"Couldn\u0027t match %s with %s\\n\", str, pattern);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            return Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"     * Parse the strings for date and time information. Passing null for one of the arguments indicates","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"     * that only either date or time information was available. Passing both will create a LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"     * with both time and date information. If there is a missing component, it will be filled with LocalDateTime.now().","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"     * @param str0 Null or string to parse for either date or time","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"     * @param str1 Null or string to parse for either date or time","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"     * @return LocalDateTime containing either the parsed date and time or the parsed arguments","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"     * combined with the current time.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    public final static LocalDateTime parseDateTime(String str0, String str1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"        List\u003cString\u003e dateFormats \u003d List.of(","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            \"dd/MM\" ","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        List\u003cString\u003e timeFormats \u003d List.of(","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            \"hh:mma\",","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"            \"kk:mm\",","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            \"kkmm\"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        Function\u003cString, Optional\u003cMonthDay\u003e\u003e dateParser \u003d createParser(dateFormats, MonthDay::parse);","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        Function\u003cString, Optional\u003cLocalTime\u003e\u003e timeParser \u003d createParser(timeFormats, LocalTime::parse);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        if (str0 \u003d\u003d null \u0026\u0026 str1 \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"            throw new IllegalArgumentException(\"Both str0 and str1 cannot be null!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"        } else if (str0 \u003d\u003d null \u0026\u0026 str1 !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"            return parseDateTime(str1, null);","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        } ","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"        if (str0 !\u003d null \u0026\u0026 str1 \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cMonthDay\u003e dateValue \u003d dateParser.apply(str0);","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"            if (dateValue.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"                Optional\u003cLocalTime\u003e timeValue \u003d timeParser.apply(str0.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"                if (timeValue.isEmpty()) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"                    throw new DateTimeParseException(\"Invalid date/time string!\", str0, 0);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"                return LocalDateTime.of(currentTime.toLocalDate(), timeValue.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"            return LocalDateTime.of(dateValue.get().atYear(currentTime.getYear()), currentTime.toLocalTime());","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cMonthDay\u003e date \u003d dateParser.apply(str0);","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"            Optional\u003cLocalTime\u003e time \u003d timeParser.apply(str1.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"            if (date.isEmpty() || time.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"                date \u003d dateParser.apply(str1);","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"                time \u003d timeParser.apply(str0.toUpperCase());","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"            if (date.isEmpty() || time.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"                throw new DateTimeParseException(\"Invalid date/time string!\", str1, 0);","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"            LocalDate dateValue \u003d date.get().atYear(currentTime.getYear());","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"            return LocalDateTime.of(dateValue, time.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"    public static String flattenIterableWithIndex(Iterable\u003c?\u003e it, int start) {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"        int count \u003d start - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"        for (Object each : it) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"            count++;","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"            joiner.add(String.format(\"%d. %s\", count, each.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        return joiner.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"    public static \u003cT, U\u003e T loadFxmlFile(URL path, U controller) throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"        FXMLLoader loader \u003d new FXMLLoader(path);","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"        loader.setController(controller);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"        T loaded \u003d loader.\u003cT\u003eload();","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"        return loaded;","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":132}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.App;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        super(\"bye\");","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    protected void executeInternal(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        output(\"Okay then bye bye!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"            TimeUnit.MILLISECONDS.sleep(500);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            // Just quit even if the sleep call gets interrupted","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        App.sendCloseRequest();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"leeyi45":26}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":" * Class representing a command that Duke can execute. Override","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * the execute method to provide the functionality of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"public abstract class Command implements BiConsumer\u003cArguments, Duke\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"     * Represents errors in the user\u0027s input. Throw this exception within {@link #execute() execute}","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"     * with the given message to indicate that the user has entered invalid arguments for ","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     * the given command.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    protected static class ValidationException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        public ValidationException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        public ValidationException(String format, Object ...args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            this(String.format(format, args));","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     * Throw {@link #ValidationException ValidationException} if the provided condition is false. ","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"     * @param condition Condition to check","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"     * @param errMsg Error message to return to the user","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    protected static void validate(boolean condition, String errMsg) throws ValidationException {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        if (!condition) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(errMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"     * The label used to identify the command, i.e. deadline in \u0027deadline book /by 2pm\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    private final String label;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    private Consumer\u003cString\u003e outputFunc;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public Command setOutputFunc(Consumer\u003cString\u003e outputFunc) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        this.outputFunc \u003d outputFunc;","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    public Command(String label, Consumer\u003cString\u003e outputFunc) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        this.label \u003d label;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        this.outputFunc \u003d outputFunc;","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    public Command(String label) {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        this(label, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"     * Output the given string to the desired location","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"     * @param str String to output","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    protected void output(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        if (outputFunc !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            outputFunc.accept(str);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"     * Format the given string using the given arguments, and then send it to the output function","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"     * @param formatStr Format string to use","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"     * @param args Format string arguments","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"    protected void output(String formatStr, Object ...args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        output(String.format(formatStr, args));","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"     * The label of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    public String getLabel() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"        return label;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"     * Run the command with the given arguments and Duke instance. Override this function","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"     * to provide implementations for commands","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"     * @param tokens Array of parsed tokens, including the command label","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"     * @param instance Instance of Duke to run the command with","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"    protected abstract void executeInternal(Arguments args, final Duke instance) throws ValidationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"     * Execute the command using the given arguments and Duke instance","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"     * @param args Parsed arguments object","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"     * @param instance Duke instance to use","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    public void execute(Arguments args, final Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"            executeInternal(args, instance);","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"        } catch (ValidationException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"            output(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    public final void accept(Arguments args, final Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"        execute(args, instance);","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":114}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    public FindCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        super(\"find\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    protected void executeInternal(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        validate(args.getNumOfArgs() \u003e 1, \"Need a string to search for!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        TaskList tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        String searchStr \u003d Utils.stringJoiner(args.getOriginalArgs(), 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream().filter(t -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            String desc \u003d t.getDescription();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            return desc.contains(searchStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        })","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            .collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            output(\"Could not find any tasks that matched \u0027%s\u0027\", searchStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            output(\"%d tasks matched \u0027%s\u0027:\\n%s\",","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"                filteredTasks.size(),","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"                searchStr,","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"                Utils.flattenIterableWithIndex(filteredTasks, 1)","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":40}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * Command to print the current list of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        super(\"list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    protected void executeInternal(Arguments args, Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            output(\"No stored tasks!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            output(\"You have a total of %d tasks:\\n%s\", ","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                tasks.size(),","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"                Utils.flattenIterableWithIndex(tasks, 1)","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":31}},{"path":"src/main/java/duke/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public SaveCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        super(\"save\");","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    protected void executeInternal(Arguments args, Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"            Storage.saveToDisk(\"data.dat\", instance.getTaskList());","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"            output(\"Saved your tasks to disk!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            output(\"Failed to save your data: %s\", e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":23}},{"path":"src/main/java/duke/commands/indexedCommand/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class DeleteCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"delete\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        instance.getTaskList().remove(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Removed this from your task list:\\n%s\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/indexedCommand/IndexedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * Indexed Commands only take in 1 index parameter. The command","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" * will then execute using the task with that index in the Duke","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" * instance\u0027s task list","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"public abstract class IndexedCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    public IndexedCommand(String label) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        super(label);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    protected final void executeInternal(Arguments argObj, final Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        String[] args \u003d argObj.getOriginalArgs();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            validate(args.length \u003e 1, String.format(\"Needed an index for %s\", getLabel()));","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            int index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"                throw new ValidationException(\"Invalid index!\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            runWithTask(task, instance);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Invalid index!\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    protected abstract void runWithTask(Task task, Duke instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":40}},{"path":"src/main/java/duke/commands/indexedCommand/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class MarkCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public MarkCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"mark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        task.setDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Marked this as done!\\n%s\\n\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/indexedCommand/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.indexedcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"public class UnmarkCommand extends IndexedCommand {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    public UnmarkCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"        super(\"unmark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    protected void runWithTask(Task task, final Duke instance) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        task.setDone(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        output(\"Marked this as not done!\\n%s\\n\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"leeyi45":16}},{"path":"src/main/java/duke/commands/taskCommand/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public class DeadlineCommand extends TaskCommand\u003cDeadline\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        super(\"deadline\");","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    protected Deadline getTask(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        int priority \u003d getPriorityFromArgs(args);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        validate(args.hasLabelledArgument(\"by\"), \"Expected a /by directive!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        String[] byArgs \u003d args.getLabelledArgument(\"by\");","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        validate(byArgs.length \u003e 0, \"Expected a time after /by!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        String[] taskArgs \u003d args.getExcessArguments();","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        if (taskArgs \u003d\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Expected a task!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime deadline \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"                byArgs[0],","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"                byArgs.length \u003e 1 ? byArgs[1] : null","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"            validate(deadline.isAfter(LocalDateTime.now()), \"I can\u0027t create something\u0027s that\u0027s due in the past!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d Utils.stringJoiner(taskArgs, 0);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            return new Deadline(taskStr, priority, deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(String.format(\"Error parsing deadline: %s\\n\", e.getMessage()));","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":43}},{"path":"src/main/java/duke/commands/taskCommand/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public class EventCommand extends TaskCommand\u003cEvent\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public EventCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        super(\"event\");","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    protected Event getTask(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        int priority \u003d getPriorityFromArgs(args);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        if (!args.hasLabelledArgument(\"to\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Expected a /to directive!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        String[] toArgs \u003d args.getLabelledArgument(\"to\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        validate(toArgs.length \u003e 0, \"Expected a time after /to!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        if (!args.hasLabelledArgument(\"from\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Expected a /from directive!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        String[] fromArgs \u003d args.getLabelledArgument(\"from\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        validate(fromArgs.length \u003e 0, \"Expected a time after /from!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        if (args.getExcessArguments() \u003d\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Expected a task!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        String[] taskArgs \u003d args.getExcessArguments();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime fromTime \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"                fromArgs[0],","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                fromArgs.length \u003c 2 ? null : fromArgs[1]","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            LocalDateTime toTime \u003d Utils.parseDateTime(","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                toArgs[0], ","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                toArgs.length \u003c 2 ? null : toArgs[1]","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            validate(fromTime.isBefore(toTime), \" I can\u0027t create an event that ends before it starts!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            String taskStr \u003d Utils.stringJoiner(taskArgs, 0);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            return new Event(taskStr, priority, fromTime, toTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Failed to parse the date you\u0027ve given: %s\\n\", e.getParsedString());","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":56}},{"path":"src/main/java/duke/commands/taskCommand/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * A subclass of {@link Command Commands} that return tasks to be added to the TaskList. ","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" * Override the {@link #getTask(String[], Duke) getTask()} function","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" * to supply a task at the end of command execution.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"public abstract class TaskCommand\u003cT extends Task\u003e extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    public TaskCommand(String label) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        super(label);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    protected int getPriorityFromArgs(Arguments args) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        String[] priorityArgs \u003d args.getLabelledArgument(\"priority\");","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        if (priorityArgs \u003d\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            return Task.DEFAULT_PRIORITY;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        if (priorityArgs.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Expected a value for /priority!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        String priorityStr \u003d String.join(\" \", priorityArgs);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            return Integer.parseInt(priorityStr);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            throw new ValidationException(\"Invalid value for priority: \u0027%s\u0027\", priorityStr);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    protected final void executeInternal(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        T task \u003d getTask(args, instance);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e tasks \u003d instance.getTaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        output(\"Added %s to the list!\\nYou now have %d tasks\\n\", task.toString(), tasks.size());","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"     * Called when the command is executed to return a {@link Task task} to be added to the Duke instance. ","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"     * Follows the calling conventions of {@link #executeInternal(String[], Duke) execute}.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"     * @throws ValidationException","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    protected abstract T getTask(Arguments args, Duke instance) throws ValidationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":53}},{"path":"src/main/java/duke/commands/taskCommand/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskcommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import duke.Utils;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"public class TodoCommand extends TaskCommand\u003cToDo\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    public TodoCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"        super(\"todo\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    protected ToDo getTask(Arguments args, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        validate(args.getNumOfArgs() \u003e 0, \"Expected a task!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        int priority \u003d getPriorityFromArgs(args);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        String[] strArgs \u003d args.getExcessArguments();","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        String taskStr \u003d Utils.stringJoiner(strArgs, 0, strArgs.length);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        return new ToDo(taskStr, priority);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":22}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.main;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":" * Class containing methods related to loading and saving tasks to and from the disk","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    public static List\u003cTask\u003e loadFromDisk(String path) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        if (Files.exists(Paths.get(path)))  {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            try (","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                final FileInputStream ifstream \u003d new FileInputStream(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"                final ObjectInputStream objStream \u003d new ObjectInputStream(ifstream);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"                @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                List\u003cTask\u003e tasks \u003d (List\u003cTask\u003e) objStream.readObject();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"                return tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    public static void saveToDisk(String path, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        try (","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            final FileOutputStream ofstream \u003d new FileOutputStream(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            final ObjectOutputStream objStream \u003d new ObjectOutputStream(ofstream);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            objStream.writeObject(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":42}},{"path":"src/main/java/duke/parser/Arguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Map.Entry;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":" * Arguments container. Each option is stored in a map with its respective ","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * tokens, e.g /priority 5 will return a string array of { \"5\" } when retrieved","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" * with getLabelledArgument()","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"public class Arguments implements Iterable\u003cMap.Entry\u003cString, String[]\u003e\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    private final Map\u003cString, String[]\u003e arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    private final String[] excess;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private final String[] original;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public Arguments(Map\u003cString, String[]\u003e arguments, String[] excess, String[] original) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        this.excess \u003d excess;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        this.original \u003d original;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    public String[] getLabelledArgument(String label) {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        return arguments.get(label);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public Arguments addLabelledArgument(String label, String[] contents) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        arguments.putIfAbsent(label, contents);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    public boolean hasLabelledArgument(String label) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        return arguments.containsKey(label);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    public String[] getExcessArguments() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        return excess;","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    public String[] getOriginalArgs() {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        return original;","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public int getNumOfArgs() {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        return arguments.size() + (excess \u003d\u003d null ? 0 : 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    private class ArgumentsIterator implements Iterator\u003cMap.Entry\u003cString, String[]\u003e\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        private final Iterator\u003cMap.Entry\u003cString, String[]\u003e\u003e argsIterator \u003d arguments.entrySet().iterator();","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        private boolean shouldReturnExcess \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        public boolean hasNext() {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            return argsIterator.hasNext() || shouldReturnExcess;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        } ","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"        @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        public Entry\u003cString, String[]\u003e next() {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            if (argsIterator.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                return argsIterator.next();","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            } else if (shouldReturnExcess \u0026\u0026 excess !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                shouldReturnExcess \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"                return Map.entry(\"excess\", excess);","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"            } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                throw new NoSuchElementException();","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"    public Iterator\u003cEntry\u003cString, String[]\u003e\u003e iterator() {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        return new ArgumentsIterator();","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        String str0 \u003d arguments.entrySet()","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"            .stream()","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"            .map(entry -\u003e String.format(\"%s: [%s]\", entry.getKey(), String.join(\", \", entry.getValue())))","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"            .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        if (excess !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"            str0 +\u003d String.format(\"\\nexcess: [%s]\", String.join(\", \", excess));","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"        return str0;","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"leeyi45":93}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" * Class for parsing the input from a user into tokens that commands can use.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class Parser {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    public static Arguments parseIntoArguments(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        Map\u003cString, String[]\u003e output \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"        int start \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        while (start \u003c args.length \u0026\u0026 !args[start].startsWith(\"/\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"            start++;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        String[] excess;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        if (start \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            excess \u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        } else if (start \u003d\u003d args.length) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            excess \u003d Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            return new Arguments(output, excess, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            excess \u003d Arrays.copyOfRange(args, 1, start);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        int index \u003d start;","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        while (index \u003c args.length) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            while (index \u003c args.length \u0026\u0026 !args[index].startsWith(\"/\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"                index++;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            String optionName \u003d args[index].substring(1).toLowerCase();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            start \u003d index;","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            index++;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            while (index \u003c args.length \u0026\u0026 !args[index].startsWith(\"/\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                index++;","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            String[] options \u003d Arrays.copyOfRange(args, start + 1, index);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            output.put(optionName, options);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        if (start \u003c args.length - 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            String optionName \u003d args[start].substring(1).toLowerCase();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            String[] options \u003d Arrays.copyOfRange(args, start + 1, args.length);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            output.put(optionName, options);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return new Arguments(output, excess, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"leeyi45":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" * A task with an associated deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"D\")","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"     * String representation of the deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    public Deadline(String task, int priority, LocalDateTime time) {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        super(task, priority);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        this.deadline \u003d time;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public Deadline(String task, LocalDateTime time) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        this(task, DEFAULT_PRIORITY, time);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"%s (by: %s)\", ","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            deadline.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\"))","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" * A task with an associated start and end time","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"E\")","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"     * String representation of the start time","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     * String representation of the end time","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public Event(","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        String task,","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        int priority,","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime start,","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime end","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        super(task, priority);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public Event(","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        String task,","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime start,","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        LocalDateTime end","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        this(task, DEFAULT_PRIORITY, start, end);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            super.toString(), ","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            start.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            end.format(DateTimeFormatter.ofPattern(\"dd/MM kk:hh\"))","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":" * Abstract class from which all other tasks are derived","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"public abstract class Task implements Serializable, Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"    public static int DEFAULT_PRIORITY \u003d 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"     * String label for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private final String typeString;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"     * Boolean indicating if the task is completed or otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    private final int priority;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    public Task(String task, int priority) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        this.description \u003d task;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        TaskInfo anno \u003d getClass().getAnnotation(TaskInfo.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        this.typeString \u003d anno.type();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public Task(String task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        this(task, DEFAULT_PRIORITY);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"     * Set whether the task is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"     * @param value True if it is done, false otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    public void setDone(boolean value) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        this.isDone \u003d value;","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"     * Get the type string for the task","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"     * @return String","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    public String getType() {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return typeString;","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"[%s][%s][%d] %s\", ","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            getType(), ","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            this.isDone ? \"X\" : \" \", ","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            this.priority,","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"            this.description","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        return this.priority - t.priority;","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"leeyi45":70}},{"path":"src/main/java/duke/task/TaskCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"public interface TaskCreator {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"    public Task createTask(String desc, LocalDateTime start, LocalDateTime end);","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":7}},{"path":"src/main/java/duke/task/TaskInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.ElementType;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.Retention;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.RetentionPolicy;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.lang.annotation.Target;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"@Target(ElementType.TYPE)","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"@Retention(RetentionPolicy.RUNTIME)","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public @interface TaskInfo {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    String type();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"leeyi45":12}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Collection;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":" * Represents a List of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"public class TaskList implements List\u003cTask\u003e, Serializable {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    public static TaskList fromIterable(Iterable\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        tasks.forEach(lst::add);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        return new TaskList(lst);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"  ","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    public void add(int index, Task element) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        tasks.add(index, element);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public boolean add(Task e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        return tasks.add(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    public boolean addAll(Collection\u003c? extends Task\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        return tasks.addAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    public boolean addAll(int index, Collection\u003c? extends Task\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        return tasks.addAll(index, c);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    public void clear() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    public boolean contains(Object o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return tasks.contains(o); ","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    public boolean containsAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        return tasks.containsAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    public Task get(int index) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        return tasks.isEmpty(); ","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"    public int indexOf(Object o) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        return tasks.indexOf(o);","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"    public Iterator\u003cTask\u003e iterator() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        return tasks.iterator();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"    public int lastIndexOf(Object o) {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        return tasks.lastIndexOf(o);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"    public ListIterator\u003cTask\u003e listIterator() {","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"        return tasks.listIterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    public ListIterator\u003cTask\u003e listIterator(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"        return tasks.listIterator(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"    public boolean remove(Object o) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"        return tasks.remove(o);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    public Task set(int index, Task t) { ","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        return tasks.set(index, t); ","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"    public boolean removeAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"        return tasks.removeAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"    public boolean retainAll(Collection\u003c?\u003e c) {","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"        return tasks.retainAll(c);","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"    public int size() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        return tasks.size(); ","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"    public List\u003cTask\u003e subList(int fromIndex, int toIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"        return tasks.subList(fromIndex, toIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"    public Object[] toArray() {","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"        return tasks.toArray();","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"    public \u003cT\u003e T[] toArray(T[] a) {","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"        return tasks.toArray(a);","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leeyi45":140}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":" * A task without any associated times","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"@TaskInfo(type \u003d \"T\")","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"    public ToDo(String task, int priority) {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"        super(task, priority);","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        this(task, DEFAULT_PRIORITY);","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":15}},{"path":"src/main/java/duke/ui/ListCellWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"public class ListCellWrapper extends ListCell\u003cMap.Entry\u003cBoolean, String\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private final Image userImage;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    private final Image dukeImage;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    private final ImageView imageView;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    private final VBox vBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    private final Label label;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public ListCellWrapper(Image userImage, Image dukeImage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        this.userImage \u003d userImage;        ","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        this.dukeImage \u003d dukeImage;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        this.imageView \u003d new ImageView();","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        this.imageView.setPreserveRatio(true);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        imageView.setFitHeight(120);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        this.label \u003d new Label();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        this.vBox \u003d new VBox(label, imageView);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        this.vBox.maxWidthProperty().bind(imageView.fitWidthProperty());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        this.setFont(new Font(this.getFont().getName(), 18));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        this.setGraphicTextGap(20);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        this.setWrapText(true);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        label.setFont(new Font(this.getFont().getName(), 25));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        label.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    protected void updateItem(Map.Entry\u003cBoolean, String\u003e item, boolean empty) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        super.updateItem(item, empty);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        if (item !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            imageView.setImage(item.getKey() ? userImage : dukeImage);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            label.setText(String.format(\"%s said:\", item.getKey() ? \"You\" : \"Duke\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            setAlignment(item.getKey() ? Pos.CENTER_LEFT : Pos.CENTER_RIGHT);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            setContentDisplay(item.getKey() ? ContentDisplay.LEFT : ContentDisplay.RIGHT);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            setGraphic(vBox);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"            setText(item.getValue());","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"leeyi45":54}},{"path":"src/main/java/duke/ui/ListViewWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public class ListViewWrapper {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    private final static Image DUKE_IMAGE \u003d new Image(ListCellWrapper.class.getResource(\"/dukeImage.jpg\").toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"    private final static Image USER_IMAGE \u003d new Image(ListCellWrapper.class.getResource(\"/userImage.jpg\").toString());;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    private final ListView\u003cMap.Entry\u003cBoolean, String\u003e\u003e listView;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    private final ObservableList\u003cMap.Entry\u003cBoolean, String\u003e\u003e text \u003d FXCollections.observableList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    public ListViewWrapper(ListView\u003cMap.Entry\u003cBoolean, String\u003e\u003e listView) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        this.listView \u003d listView;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        this.listView.setItems(text);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        this.listView.setCellFactory(lst -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            ListCellWrapper cell \u003d new ListCellWrapper(DUKE_IMAGE, USER_IMAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            cell.prefWidthProperty().bind(listView.widthProperty().subtract(2));","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            return cell;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    public void writeAsDuke(String value) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        text.add(Map.entry(false, value));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        this.listView.scrollTo(text.size() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public void writeAsUser(String value) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        text.add(Map.entry(true, value));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        this.listView.scrollTo(text.size() - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"leeyi45":36}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.ResourceBundle;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.App;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import javafx.fxml.Initializable;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"public class MainWindow implements Initializable {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"    private Duke instance;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    public void setDuke(Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        this.instance \u003d instance;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        this.instance.setOutput(output::writeAsDuke);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    private LinkedList\u003cString\u003e prevCommands \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    private int prevCommandIndex \u003d -1;","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    private ListViewWrapper output;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    private ListView\u003cMap.Entry\u003cBoolean, String\u003e\u003e outputListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    private TextField inputTextBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    private void closeDuke() {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        App.sendCloseRequest();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    private void onSubmit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        String inputValue \u003d inputTextBox.getText();","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        if (inputValue \u003d\u003d null || inputValue.isEmpty()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            // Ignore blank lines","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            return;","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        output.writeAsUser(inputValue);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        inputTextBox.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        this.instance.executeCommand(inputValue);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        prevCommands.push(inputValue);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        prevCommandIndex \u003d -1;","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    public void initialize(URL location, ResourceBundle resources) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        inputTextBox.setOnKeyPressed(ke -\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            switch (ke.getCode()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            case ENTER: {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"                onSubmit();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            case ESCAPE: {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                inputTextBox.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                prevCommandIndex \u003d -1;","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"            case UP: {","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                if (prevCommands.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                    break;","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"                prevCommandIndex++;","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"                if (prevCommandIndex \u003d\u003d prevCommands.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"                    prevCommandIndex \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"                inputTextBox.setText(prevCommands.get(prevCommandIndex));","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"            } case DOWN: {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"                if (prevCommands.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                    break;","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"                prevCommandIndex--;","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"                if (prevCommandIndex \u003c 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"                    prevCommandIndex \u003d prevCommands.size() - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"                inputTextBox.setText(prevCommands.get(prevCommandIndex));","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"            default: {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"                return;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"            ke.consume();","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"        output \u003d new ListViewWrapper(outputListView);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        output.writeAsDuke(\"Hello and welcome to your personal task manager, Duke! Enter some commands and tell me what to do!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"leeyi45":105}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public class UI {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public static ButtonType showRetryDialog(AlertType alertType, String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"        Alert alert \u003d new Alert(alertType, message, new ButtonType[] { ButtonType.YES, ButtonType.NO });","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"        Optional\u003cButtonType\u003e result \u003d alert.showAndWait();","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        ButtonType buttonRes \u003d result.orElseThrow(() -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(\"Alert dialog should not have returned Optional.empty\");","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        ","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        return buttonRes;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"leeyi45":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"\u003cAnchorPane prefHeight\u003d\"500.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"      \u003cMenuBar prefHeight\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        \u003cmenus\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Duke\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"            \u003citems\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#closeDuke\" text\u003d\"Close\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"            \u003c/items\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        \u003c/menus\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"      \u003c/MenuBar\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"      \u003cListView fx:id\u003d\"outputListView\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" AnchorPane.bottomAnchor\u003d\"30.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"35.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"      \u003cHBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"30.0\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            \u003cTextField fx:id\u003d\"inputTextBox\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"25.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"            \u003cButton alignment\u003d\"CENTER_RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#onSubmit\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"leeyi45":32}},{"path":"src/test/java/duke/UtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.DisplayNameGeneration;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.DisplayNameGenerator;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import org.mockito.MockedStatic;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import static duke.Utils.parseDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"public class UtilsTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    private static MockedStatic\u003cLocalDateTime\u003e dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    public static final LocalDateTime DEFAULT_TIME \u003d LocalDateTime.of(2022, 01, 01, 12, 30);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    @BeforeAll","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    public static void setup() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        dateTime \u003d Mockito.mockStatic(LocalDateTime.class);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        dateTime.when(LocalDateTime::now)","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            .thenReturn(DEFAULT_TIME);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    @AfterAll","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    public static void teardown() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        dateTime.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    // @IndicativeSentencesGeneration(","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    //   separator \u003d \" \",","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    //   generator \u003d DisplayNameGenerator.ReplaceUnderscores.class","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    // )","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @DisplayNameGeneration(DisplayNameGenerator.ReplaceUnderscores.class)","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    @Nested","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    class ParseDateTime_should {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        public void parse_12_hour_times_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"12:05am\", null), LocalDateTime.of(2022, 1, 1, 0, 5));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"09:10pm\", null), LocalDateTime.of(2022, 1, 1, 21, 10));","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(null, \"11:34am\"), LocalDateTime.of(2022, 1, 1, 11, 34));","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        public void parse_24_hour_times_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"23:00\", null), LocalDateTime.of(2022, 1, 1, 23, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"2300\", null), LocalDateTime.of(2022, 1, 1, 23, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"17:00\", null), LocalDateTime.of(2022, 1, 1, 17, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"1233\", null), LocalDateTime.of(2022, 1, 1, 12, 33));","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"2500\", null));","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"1269\", null));","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"17:00am\"), ","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering a 24 hour time with am or pm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"23:00pm\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering a 24 hour time with am or pm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        public void parse_dates_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"03/05\", null), LocalDateTime.of(2022, 3, 5, 12, 30));","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(null, \"31/12\"), LocalDateTime.of(2022, 12, 31, 12, 30));","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(null, \"12/31\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when encountering the wrong date format\");","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        public void parse_both_correctly() {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"07/11\", \"12:00am\"), LocalDateTime.of(2022, 11, 7, 0, 0));","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"            assertEquals(parseDateTime(\"1639\", \"04/07\"), LocalDateTime.of(2022, 7, 4, 16, 39));","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"1400\", \"1231\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when there\u0027s no valid date\");","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e parseDateTime(\"03/02\", \"01/01\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                \"Should throw DateTimeParseException when there\u0027s no valid time\");","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":86}},{"path":"src/test/java/duke/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public void checkValidation() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"        Command test \u003d new Command(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"            public void executeInternal(Arguments tokens, final Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"                validate(false, \"Error Message\");","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"            } ","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"        assertThrows(","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"            Command.ValidationException.class, ","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            () -\u003e test.executeInternal(null, null), ","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"            \"validate() should throw Validation exception when called with a false boolean condition\"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":26}},{"path":"src/test/java/duke/commands/taskCommand/TaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package duke.commands.taskCommand;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import duke.commands.taskcommand.TaskCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import duke.parser.Arguments;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"public class TaskCommandTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    public void testRegularGetTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        Duke instance \u003d new Duke();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        TaskCommand\u003cTask\u003e test \u003d new TaskCommand\u003cTask\u003e(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"            public Task getTask(Arguments tokens, Duke instance) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"                return new Task(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"                    public String getType() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                        return \"X\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"                };","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"            test.accept(null, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            fail(String.format(\"Should not throw exceptions: %s\\n\", e.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        assertEquals(1, instance.getTaskList().size(), \"Task list should have only one task\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        assertEquals(\"X\", instance.getTaskList().get(0).getType(), \"Only task in list should have type \u0027X\u0027\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    public void testFailGetTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        TaskCommand\u003cTask\u003e test \u003d new TaskCommand\u003cTask\u003e(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            public Task getTask(Arguments tokens, Duke instance) throws ValidationException {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"                validate(false, \"test message\");","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                return new Task(\"\") {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                    public String getType() { ","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                        return \"X\"; ","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                };","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        Duke instance \u003d new Duke();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            test.accept(null, instance);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            fail(String.format(\"Should not throw exceptions: %s\\n\", e.getMessage()));","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        assertEquals(0, instance.getTaskList().size(), \"Tasks are not added when validate fails\");","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"leeyi45":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"event project /from 4pm /to 6pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"mark 3","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"leeyi45":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"if ! ~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"~/source/cs2103/jdk-11.0.2.jdk/Contents/Home/bin/java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"leeyi45":2}}]
